(window["webpackJsonp"] = window["webpackJsonp"] || []).push([
  ["static/development/pages/_app.js"],
  {
    /***/ "./animations/menu--grey-white.json":
      /*!******************************************!*\
  !*** ./animations/menu--grey-white.json ***!
  \******************************************/
      /*! exports provided: v, fr, ip, op, w, h, nm, ddd, assets, layers, markers, default */
      /***/ function(module) {
        module.exports = {
          v: "5.1.1",
          fr: 29.9700012207031,
          ip: 15.0000006109625,
          op: 34.0000013848484,
          w: 600,
          h: 512,
          nm: "3 Line Color Change",
          ddd: 0,
          assets: [],
          layers: [
            {
              ddd: 0,
              ind: 1,
              ty: 4,
              nm: "Icon",
              sr: 1,
              ks: {
                o: { a: 0, k: 100, ix: 11 },
                r: { a: 0, k: 0, ix: 10 },
                p: { a: 0, k: [315.062, 263.462, 0], ix: 2 },
                a: { a: 0, k: [-118, -117, 0], ix: 1 },
                s: { a: 0, k: [882.353, 882.353, 100], ix: 6 },
              },
              ao: 0,
              shapes: [
                {
                  ty: "gr",
                  it: [
                    {
                      ty: "rc",
                      d: 1,
                      s: { a: 0, k: [68, 8], ix: 2 },
                      p: { a: 0, k: [0, -15], ix: 3 },
                      r: { a: 0, k: 0, ix: 4 },
                      nm: "Rectangle Path 1",
                      mn: "ADBE Vector Shape - Rect",
                      hd: false,
                    },
                    {
                      ty: "fl",
                      c: {
                        a: 1,
                        k: [
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 15,
                            s: [
                              0.592156887054,
                              0.592156887054,
                              0.592156887054,
                              1,
                            ],
                            e: [1, 1, 1, 1],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 24,
                            s: [1, 1, 1, 1],
                            e: [1, 1, 1, 1],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 80,
                            s: [1, 1, 1, 1],
                            e: [0.254901975393, 0.250980407, 0.258823543787, 1],
                          },
                          { t: 89.0000036250443 },
                        ],
                        ix: 4,
                      },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      nm: "Fill 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [-119.707, -117.727], ix: 2 },
                      a: { a: 0, k: [0, -14.881], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: { a: 0, k: 0, ix: 6 },
                      o: {
                        a: 1,
                        k: [
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 24,
                            s: [100],
                            e: [0],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 25,
                            s: [0],
                            e: [0],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 80,
                            s: [0],
                            e: [100],
                          },
                          { t: 81.0000032991976 },
                        ],
                        ix: 7,
                      },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transform",
                    },
                  ],
                  nm: "Rectangle 3",
                  np: 3,
                  cix: 2,
                  ix: 1,
                  mn: "ADBE Vector Group",
                  hd: false,
                },
                {
                  ty: "gr",
                  it: [
                    {
                      ty: "rc",
                      d: 1,
                      s: { a: 0, k: [68, 8], ix: 2 },
                      p: {
                        a: 1,
                        k: [
                          {
                            i: { x: 0, y: 1 },
                            o: { x: 0.167, y: 0.167 },
                            n: "0_1_0p167_0p167",
                            t: 15,
                            s: [0, 10],
                            e: [0, -15],
                            to: [0, -4.16666650772095],
                            ti: [0, 4.16666650772095],
                          },
                          {
                            i: { x: 0.833, y: 0.833 },
                            o: { x: 0.167, y: 0.167 },
                            n: "0p833_0p833_0p167_0p167",
                            t: 25,
                            s: [0, -15],
                            e: [0, -15],
                            to: [0, 0],
                            ti: [0, 0],
                          },
                          {
                            i: { x: 0, y: 1 },
                            o: { x: 0.167, y: 0.167 },
                            n: "0_1_0p167_0p167",
                            t: 80,
                            s: [0, -15],
                            e: [0, 10],
                            to: [0, 4.16666650772095],
                            ti: [0, -4.16666650772095],
                          },
                          { t: 90.0000036657751 },
                        ],
                        ix: 3,
                      },
                      r: { a: 0, k: 0, ix: 4 },
                      nm: "Rectangle Path 1",
                      mn: "ADBE Vector Shape - Rect",
                      hd: false,
                    },
                    {
                      ty: "fl",
                      c: {
                        a: 1,
                        k: [
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 15,
                            s: [
                              0.592156887054,
                              0.592156887054,
                              0.592156887054,
                              1,
                            ],
                            e: [1, 1, 1, 1],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 24,
                            s: [1, 1, 1, 1],
                            e: [1, 1, 1, 1],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 80,
                            s: [1, 1, 1, 1],
                            e: [0.254901975393, 0.250980407, 0.258823543787, 1],
                          },
                          { t: 89.0000036250443 },
                        ],
                        ix: 4,
                      },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      nm: "Fill 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [-119.707, -117.727], ix: 2 },
                      a: { a: 0, k: [0, -14.881], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: {
                        a: 1,
                        k: [
                          {
                            i: { x: [0], y: [1] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0_1_0p167_0p167"],
                            t: 24,
                            s: [0],
                            e: [45],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 34,
                            s: [45],
                            e: [45],
                          },
                          {
                            i: { x: [0], y: [1] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0_1_0p167_0p167"],
                            t: 73,
                            s: [45],
                            e: [0],
                          },
                          { t: 81.0000032991976 },
                        ],
                        ix: 6,
                      },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transform",
                    },
                  ],
                  nm: "Rectangle 2",
                  np: 3,
                  cix: 2,
                  ix: 2,
                  mn: "ADBE Vector Group",
                  hd: false,
                },
                {
                  ty: "gr",
                  it: [
                    {
                      ty: "rc",
                      d: 1,
                      s: { a: 0, k: [68, 8], ix: 2 },
                      p: {
                        a: 1,
                        k: [
                          {
                            i: { x: 0, y: 1 },
                            o: { x: 0.167, y: 0.167 },
                            n: "0_1_0p167_0p167",
                            t: 15,
                            s: [0, -10],
                            e: [0, 15],
                            to: [0, 4.16666650772095],
                            ti: [0, -4.16666650772095],
                          },
                          {
                            i: { x: 0.833, y: 0.833 },
                            o: { x: 0.167, y: 0.167 },
                            n: "0p833_0p833_0p167_0p167",
                            t: 25,
                            s: [0, 15],
                            e: [0, 15],
                            to: [0, 0],
                            ti: [0, 0],
                          },
                          {
                            i: { x: 0, y: 1 },
                            o: { x: 0.167, y: 0.167 },
                            n: "0_1_0p167_0p167",
                            t: 80,
                            s: [0, 15],
                            e: [0, -10],
                            to: [0, -4.16666650772095],
                            ti: [0, 4.16666650772095],
                          },
                          { t: 90.0000036657751 },
                        ],
                        ix: 3,
                      },
                      r: { a: 0, k: 0, ix: 4 },
                      nm: "Rectangle Path 1",
                      mn: "ADBE Vector Shape - Rect",
                      hd: false,
                    },
                    {
                      ty: "fl",
                      c: {
                        a: 1,
                        k: [
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 15,
                            s: [
                              0.592156887054,
                              0.592156887054,
                              0.592156887054,
                              1,
                            ],
                            e: [1, 1, 1, 1],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 24,
                            s: [1, 1, 1, 1],
                            e: [1, 1, 1, 1],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 80,
                            s: [1, 1, 1, 1],
                            e: [0.254901975393, 0.250980407, 0.258823543787, 1],
                          },
                          { t: 89.0000036250443 },
                        ],
                        ix: 4,
                      },
                      o: { a: 0, k: 100, ix: 5 },
                      r: 1,
                      nm: "Fill 1",
                      mn: "ADBE Vector Graphic - Fill",
                      hd: false,
                    },
                    {
                      ty: "tr",
                      p: { a: 0, k: [-119.707, -117.724], ix: 2 },
                      a: { a: 0, k: [0, 15.122], ix: 1 },
                      s: { a: 0, k: [100, 100], ix: 3 },
                      r: {
                        a: 1,
                        k: [
                          {
                            i: { x: [0], y: [1] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0_1_0p167_0p167"],
                            t: 24,
                            s: [0],
                            e: [-45],
                          },
                          {
                            i: { x: [0.833], y: [0.833] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0p833_0p833_0p167_0p167"],
                            t: 34,
                            s: [-45],
                            e: [-45],
                          },
                          {
                            i: { x: [0], y: [1] },
                            o: { x: [0.167], y: [0.167] },
                            n: ["0_1_0p167_0p167"],
                            t: 73,
                            s: [-45],
                            e: [0],
                          },
                          { t: 81.0000032991976 },
                        ],
                        ix: 6,
                      },
                      o: { a: 0, k: 100, ix: 7 },
                      sk: { a: 0, k: 0, ix: 4 },
                      sa: { a: 0, k: 0, ix: 5 },
                      nm: "Transform",
                    },
                  ],
                  nm: "Rectangle 1",
                  np: 3,
                  cix: 2,
                  ix: 3,
                  mn: "ADBE Vector Group",
                  hd: false,
                },
              ],
              ip: 0,
              op: 300.00001221925,
              st: 0,
              bm: 0,
            },
          ],
          markers: [],
        };

        /***/
      },

    /***/ "./components/Button.tsx":
      /*!*******************************!*\
  !*** ./components/Button.tsx ***!
  \*******************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return Button;
          },
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/objectWithoutProperties */ "./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js",
        );
        /* harmony import */ var chroma_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! chroma-js */ "./node_modules/chroma-js/chroma.js",
        );
        /* harmony import */ var chroma_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          chroma_js__WEBPACK_IMPORTED_MODULE_7__,
        );
        /* harmony import */ var glamorous__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! glamorous */ "./node_modules/glamorous/dist/glamorous.esm.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_9__,
        );
        /* harmony import */ var _design_system__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../design-system */ "./design-system/index.ts",
        );
        /* harmony import */ var _utils_Scale__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../utils/Scale */ "./utils/Scale.tsx",
        );
        /* harmony import */ var _Link__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! ./Link */ "./components/Link.tsx",
        );

        var _jsxFileName =
          "/Users/jklb/dev/givecrypto/website/components/Button.tsx";

        var buttonStyles = {
          boxSizing: "border-box",
          transition: "all 200ms",
          cursor: "pointer",
          color: "white",
          border: "1px solid ".concat(
            _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
          ),
          borderRadius: Object(
            _utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"],
          )(2),
          background:
            _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
          textDecoration: "none",
          display: "inline-block",
          fontSize: Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(
            3.75,
          ),
          boxShadow: "0 8px 16px rgba(0,0,0,0.075)",
          fontFamily: "Apercu",
          fontWeight: 200,
          textTransform: "uppercase",
          letterSpacing: "0.1rem",
          "&:hover": {
            background: chroma_js__WEBPACK_IMPORTED_MODULE_7___default()(
              _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
            )
              .brighten(0.25)
              .css(),
          },
          "&:active": {
            padding: "".concat(
              Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(4),
              " !important",
            ),
            height: "auto",
            background: chroma_js__WEBPACK_IMPORTED_MODULE_7___default()(
              _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
            )
              .brighten(0.125)
              .css(),
            boxShadow: "0 4px 12px rgba(0,0,0,0.1)",
          },
          "&.theme-ghost": {
            color: _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
            background:
              _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].white,
            boxShadow: "0 8px 16px rgba(0,0,0,0.075)",
            transition: "all 200ms",
            "&:hover": {
              color: "white",
              background: chroma_js__WEBPACK_IMPORTED_MODULE_7___default()(
                _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
              )
                .brighten(0.25)
                .css(),
            },
          },
          "&.theme-submit": {
            transition: "all 300ms",
            color: _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].white,
            background: chroma_js__WEBPACK_IMPORTED_MODULE_7___default()(
              _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
            )
              .brighten(0.25)
              .css(),
            borderColor:
              _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
            textTransform: "none",
            fontWeight: 400,
            letterSpacing: "0.075rem",
            boxShadow: "none",
            borderRadius: "0 "
              .concat(
                Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(2),
                " ",
              )
              .concat(
                Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(2),
                " 0",
              ),
            "&:hover": {
              color:
                _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].white,
              background: chroma_js__WEBPACK_IMPORTED_MODULE_7___default()(
                _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].green,
              )
                .brighten(0.25)
                .css(),
            },
            "&.disable-true, &[disabled]": {
              pointerEvents: "none",
              color:
                _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].black,
              background:
                _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].white,
            },
            "&.loading-true": {
              padding: "0 ".concat(
                Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(4),
              ),
              backgroundColor: "".concat(
                _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"]
                  .yellowLight,
                " !important",
              ),
              borderColor:
                _design_system__WEBPACK_IMPORTED_MODULE_10__["colors"].yellow,
            },
          },
          padding: Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(
            4,
          ),
          "&.size-big": {
            fontSize: Object(
              _utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"],
            )(5),
            fontWeight: 500,
            textTransform: "none",
            padding: ""
              .concat(
                Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(4),
                " ",
              )
              .concat(
                Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_11__["Step"])(5),
              ),
          },
        };

        var Button =
          /*#__PURE__*/
          (function(_React$Component) {
            Object(
              _babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__[
                "default"
              ],
            )(Button, _React$Component);

            function Button() {
              Object(
                _babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__[
                  "default"
                ],
              )(this, Button);

              return Object(
                _babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__[
                  "default"
                ],
              )(
                this,
                Object(
                  _babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__[
                    "default"
                  ],
                )(Button).apply(this, arguments),
              );
            }

            Object(
              _babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__[
                "default"
              ],
            )(Button, [
              {
                key: "render",
                value: function render() {
                  var _this$props = this.props,
                    tabindex = _this$props.tabindex,
                    href = _this$props.href,
                    className = _this$props.className,
                    _this$props$theme = _this$props.theme,
                    theme =
                      _this$props$theme === void 0
                        ? "default"
                        : _this$props$theme,
                    _this$props$size = _this$props.size,
                    size =
                      _this$props$size === void 0
                        ? "default"
                        : _this$props$size,
                    children = _this$props.children,
                    rest = Object(
                      _babel_runtime_corejs2_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[
                        "default"
                      ],
                    )(_this$props, [
                      "tabindex",
                      "href",
                      "className",
                      "theme",
                      "size",
                      "children",
                    ]);

                  var el = href
                    ? glamorous__WEBPACK_IMPORTED_MODULE_8__["default"].span
                    : glamorous__WEBPACK_IMPORTED_MODULE_8__["default"].button;
                  var Link = el(buttonStyles);

                  if (href) {
                    return react__WEBPACK_IMPORTED_MODULE_9__["createElement"](
                      _Link__WEBPACK_IMPORTED_MODULE_12__["default"],
                      {
                        href: href,
                        className: className,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 112,
                        },
                        __self: this,
                      },
                      react__WEBPACK_IMPORTED_MODULE_9__["createElement"](
                        Link,
                        Object(
                          _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                            "default"
                          ],
                        )(
                          {
                            tabIndex: tabindex,
                            className: "Link-with-crypto theme-"
                              .concat(theme, " size-")
                              .concat(size),
                            href: href,
                          },
                          rest,
                          {
                            __source: {
                              fileName: _jsxFileName,
                              lineNumber: 113,
                            },
                            __self: this,
                          },
                        ),
                        react__WEBPACK_IMPORTED_MODULE_9__["createElement"](
                          "span",
                          {
                            __source: {
                              fileName: _jsxFileName,
                              lineNumber: 119,
                            },
                            __self: this,
                          },
                          children,
                        ),
                      ),
                    );
                  } else {
                    return react__WEBPACK_IMPORTED_MODULE_9__["createElement"](
                      Link,
                      Object(
                        _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                          "default"
                        ],
                      )(
                        {
                          tabIndex: tabindex,
                          className: "Link-with-crypto theme-".concat(theme),
                        },
                        rest,
                        {
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 125,
                          },
                          __self: this,
                        },
                      ),
                      react__WEBPACK_IMPORTED_MODULE_9__["createElement"](
                        "span",
                        {
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 130,
                          },
                          __self: this,
                        },
                        children,
                      ),
                    );
                  }
                },
              },
            ]);

            return Button;
          })(react__WEBPACK_IMPORTED_MODULE_9__["Component"]);

        /***/
      },

    /***/ "./components/Copyright.tsx":
      /*!**********************************!*\
  !*** ./components/Copyright.tsx ***!
  \**********************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_0__,
        );
        var _jsxFileName =
          "/Users/jklb/dev/givecrypto/website/components/Copyright.tsx";

        var year = new Date().getFullYear();

        var Copyright = function Copyright() {
          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
            "span",
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 4,
              },
              __self: this,
            },
            "\xA9 ",
            year,
            " GiveCrypto. All rights reserved.",
          );
        };

        /* harmony default export */ __webpack_exports__["default"] = Copyright;

        /***/
      },

    /***/ "./components/Footer.tsx":
      /*!*******************************!*\
  !*** ./components/Footer.tsx ***!
  \*******************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/defineProperty */ "./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js",
        );
        /* harmony import */ var glamorous__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! glamorous */ "./node_modules/glamorous/dist/glamorous.esm.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_3__,
        );
        /* harmony import */ var _components_Link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../components/Link */ "./components/Link.tsx",
        );
        /* harmony import */ var _components_Share__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../components/Share */ "./components/Share.tsx",
        );
        /* harmony import */ var _design_system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../design-system */ "./design-system/index.ts",
        );
        /* harmony import */ var _utils_Scale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! ../utils/Scale */ "./utils/Scale.tsx",
        );
        /* harmony import */ var _Copyright__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ./Copyright */ "./components/Copyright.tsx",
        );

        var _jsxFileName =
          "/Users/jklb/dev/givecrypto/website/components/Footer.tsx";

        var Logo = function Logo(props) {
          return react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
            "svg",
            Object(
              _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                "default"
              ],
            )({}, props, {
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
              "g",
              {
                style: {
                  isolation: "isolate",
                },
                fill: "#323232",
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_3__["createElement"]("path", {
                d:
                  "M13.3 13.7h7.6V25h-2.4l-.3-3.1a7 7 0 0 1-6.3 3.3c-5.1 0-10-3.7-10-11.5s4.8-11.5 10-11.5A8.51 8.51 0 0 1 20.7 9l-2.7.9C17 6.8 14.9 5 11.9 5c-4.1 0-7.2 3-7.2 8.8s3.1 8.8 7.2 8.8c3.9 0 5.9-2.6 6.2-6.2h-4.9v-2.7zM27.1 2.2a2 2 0 0 1 2 2.1 2 2 0 0 1-2 2 1.94 1.94 0 0 1-2-2 1.92 1.92 0 0 1 2-2.1zm1.3 6.6V25h-2.7V8.8zM45.8 8.8L40.4 25h-2.8L32.3 8.8h2.8l4 12.8 4-12.8zM62.5 17.5H50.6c.2 3 1.6 5.3 4.6 5.3 2.4 0 3.6-1.1 4.5-3.1l2.4 1c-1.5 3.1-3.5 4.5-6.9 4.5-4.9 0-7.3-4-7.3-8.4s2.4-8.4 7.3-8.4 7.3 3.7 7.3 7.7zM50.8 15h8.9c-.5-2.3-1.9-4-4.5-4s-3.9 1.7-4.4 4z",
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_3__["createElement"]("path", {
              d:
                "M167.7 21.1a2 2 0 0 1 2 2 2 2 0 0 1-4 0 2 2 0 0 1 2-2zM179.9 8.2c4.9 0 7.8 4 7.8 8.4s-2.9 8.4-7.8 8.4-7.8-4-7.8-8.4 3-8.4 7.8-8.4zm0 14.3c3.3 0 5-2.9 5-5.9s-1.7-5.9-5-5.9-5 2.9-5 5.9 1.7 5.9 5 5.9z",
              fill: "#323232",
              style: {
                isolation: "isolate",
              },
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
              "g",
              {
                style: {
                  isolation: "isolate",
                },
                fill: "#323232",
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_3__["createElement"]("path", {
                d:
                  "M200.6 11.1a4.14 4.14 0 0 0-1.9-.5c-2.2 0-4.5 2.6-4.5 7.9v6.1h-2.7V8.5h2.7v2.8a5.84 5.84 0 0 1 4.8-3 4.47 4.47 0 0 1 2.2.5zM209.2 8.2a6.53 6.53 0 0 1 2.9.7l2.9-1.6 1.2 2.2-2.2 1.2a5.47 5.47 0 0 1 .8 2.9c0 3.4-2.5 5.4-5.7 5.4a6.39 6.39 0 0 1-2.8-.6 1.82 1.82 0 0 0-1.1 1.6c0 .9.6 1.3 1.8 1.3h3.8c3 0 5.1 1.5 5.1 4.5 0 4-3.1 5.6-6.8 5.6-4.1 0-6.9-2-6.9-5.3a4.36 4.36 0 0 1 1.5-3.4 3.17 3.17 0 0 1-1.1-2.6 3.28 3.28 0 0 1 2-3 5.68 5.68 0 0 1-1.2-3.5 5.47 5.47 0 0 1 5.8-5.4zm-1.9 15.5a4.87 4.87 0 0 1-1.2-.1A2.77 2.77 0 0 0 205 26c0 1.8 1.4 3.1 4.2 3.1s4.1-1.3 4.1-3-1.2-2.4-2.7-2.4zm1.9-6.9a2.91 2.91 0 0 0 3-3.1 3 3 0 1 0-6 0 2.91 2.91 0 0 0 3 3.1z",
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_3__["createElement"]("path", {
              d:
                "M81 10a5.43 5.43 0 0 0-5.6-3.9c-3.5 0-6.4 2.4-6.4 7.6s2.9 7.6 6.4 7.6a5.51 5.51 0 0 0 5.6-3.9l3.8 1c-1.1 4.3-4.4 6.8-9.3 6.8-5.6 0-10.6-4-10.6-11.5s5-11.5 10.6-11.5c4.9 0 8.3 2.5 9.3 6.8z",
              fill: "#323232",
              style: {
                isolation: "isolate",
              },
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
              "g",
              {
                style: {
                  isolation: "isolate",
                },
                fill: "#323232",
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_3__["createElement"]("path", {
                d:
                  "M88.3 25V8.8h4v2.6a5.76 5.76 0 0 1 4.8-2.9 6.93 6.93 0 0 1 2 .3l-.7 3.7a3.06 3.06 0 0 0-1.7-.4c-2.3 0-4.3 1.9-4.3 7.1V25zM104.7 8.8l3.8 10.2L112 8.8h4l-8.4 22.8h-3.9l2.8-7.6-5.9-15.2z",
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_3__["createElement"]("path", {
              d:
                "M125.5 25.3a5.28 5.28 0 0 1-3.9-1.7v8h-4V8.8h4v1.7a4.7 4.7 0 0 1 3.9-1.9c4.9 0 7.4 3.4 7.4 8.4s-2.5 8.3-7.4 8.3zm-.6-13.3c-2.1 0-3.7 1.7-3.7 4.9s1.6 4.9 3.7 4.9 3.8-1.7 3.8-4.9-1.7-4.9-3.8-4.9zM145.7 24.7a6.51 6.51 0 0 1-2.6.6c-3.7 0-5.9-2-5.9-6v-7.1h-2.5V8.8h2.5v-4l4-2.5v6.6h4.3v3.4h-4.3v7c0 2 .8 2.6 2.1 2.6a2.82 2.82 0 0 0 1.5-.4zM155.7 8.5c5.2 0 8.2 3.7 8.2 8.4s-3 8.4-8.2 8.4-8.2-3.7-8.2-8.4 3-8.4 8.2-8.4zm0 13.4c2.6 0 4-2.3 4-4.9s-1.5-4.9-4-4.9-4 2.3-4 4.9 1.5 4.9 4 4.9z",
              fill: "#323232",
              style: {
                isolation: "isolate",
              },
              __self: this,
            }),
          );
        };

        Logo.defaultProps = {
          xmlns: "http://www.w3.org/2000/svg",
          width: "217",
          height: "33",
          viewBox: "0 0 217 33",
        };

        var Legal = glamorous__WEBPACK_IMPORTED_MODULE_2__["default"].p({
          display: "flex",
          margin: 0,
          padding: 0,
          fontWeight: 400,
          fontSize: Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_7__["Step"])(
            3.75,
          ),
        });
        var LogoContainer = glamorous__WEBPACK_IMPORTED_MODULE_2__[
          "default"
        ].div(
          Object(
            _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[
              "default"
            ],
          )(
            {
              maxWidth: 150,
            },
            _design_system__WEBPACK_IMPORTED_MODULE_6__["breakpoints"].ns,
            {
              maxWidth: 170,
            },
          ),
        );

        var Footer = function Footer() {
          return react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
            glamorous__WEBPACK_IMPORTED_MODULE_2__["Section"],
            {
              flexShrink: 0,
              role: "footer",
              __source: {
                fileName: _jsxFileName,
                lineNumber: 26,
              },
              __self: this,
            },
            react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
              glamorous__WEBPACK_IMPORTED_MODULE_2__["Div"],
              {
                padding: Object(
                  _utils_Scale__WEBPACK_IMPORTED_MODULE_7__["Step"],
                )(5),
                className:
                  "h4 flex flex-wrap justify-between items-center items-top-ns",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 27,
                },
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                glamorous__WEBPACK_IMPORTED_MODULE_2__["Div"],
                {
                  className: "order-0",
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 31,
                  },
                  __self: this,
                },
                react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                  _components_Link__WEBPACK_IMPORTED_MODULE_4__["default"],
                  {
                    href: "/",
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 32,
                    },
                    __self: this,
                  },
                  react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                    LogoContainer,
                    {
                      className: "responsive",
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 33,
                      },
                      __self: this,
                    },
                    react__WEBPACK_IMPORTED_MODULE_3__["createElement"](Logo, {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 34,
                      },
                      __self: this,
                    }),
                  ),
                ),
              ),
              react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                glamorous__WEBPACK_IMPORTED_MODULE_2__["Div"],
                {
                  className: "o-30 order-2 order-1-ns",
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 38,
                  },
                  __self: this,
                },
                react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                  Legal,
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 39,
                    },
                    __self: this,
                  },
                  react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                    _Copyright__WEBPACK_IMPORTED_MODULE_8__["default"],
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 40,
                      },
                      __self: this,
                    },
                  ),
                  react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                    "span",
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 41,
                      },
                      __self: this,
                    },
                    "\xA0\xA0|\xA0\xA0",
                  ),
                  react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                    _components_Link__WEBPACK_IMPORTED_MODULE_4__["default"],
                    {
                      href: "/terms",
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 42,
                      },
                      __self: this,
                    },
                    "Terms",
                  ),
                ),
              ),
              react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                glamorous__WEBPACK_IMPORTED_MODULE_2__["Div"],
                {
                  className: "order-1 order-2-ns tc",
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 45,
                  },
                  __self: this,
                },
                react__WEBPACK_IMPORTED_MODULE_3__["createElement"](
                  _components_Share__WEBPACK_IMPORTED_MODULE_5__["default"],
                  {
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 46,
                    },
                    __self: this,
                  },
                ),
              ),
            ),
          );
        };

        /* harmony default export */ __webpack_exports__["default"] = Footer;

        /***/
      },

    /***/ "./components/Link.tsx":
      /*!*****************************!*\
  !*** ./components/Link.tsx ***!
  \*****************************/
      /*! exports provided: linkStyles, default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "linkStyles",
          function() {
            return linkStyles;
          },
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/objectWithoutProperties */ "./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_2__,
        );
        /* harmony import */ var glamorous__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! glamorous */ "./node_modules/glamorous/dist/glamorous.esm.js",
        );
        /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! next/router */ "./node_modules/next/dist/client/router.js",
        );
        /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          next_router__WEBPACK_IMPORTED_MODULE_4__,
        );
        /* harmony import */ var _components_NextLink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! ../components/NextLink */ "./components/NextLink.tsx",
        );
        /* harmony import */ var _design_system__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! ../design-system */ "./design-system/index.ts",
        );

        var _jsxFileName =
          "/Users/jklb/dev/givecrypto/website/components/Link.tsx";

        var onClickHandler = function onClickHandler(href) {
          var router = Object(
            next_router__WEBPACK_IMPORTED_MODULE_4__["useRouter"],
          )();
          return function(e) {
            e.preventDefault();
            router.push(href).then(function() {
              return window.scrollTo(0, 0);
            });
          };
        };

        var linkStyles = {
          cursor: "pointer",
          color: _design_system__WEBPACK_IMPORTED_MODULE_6__["colors"].greyDark,
          textDecoration: "none",
          "> svg": {
            transition: "all 200ms",
            fill: _design_system__WEBPACK_IMPORTED_MODULE_6__["colors"].grey,
          },
          "&:hover, &:active": {
            color: _design_system__WEBPACK_IMPORTED_MODULE_6__["colors"].grey,
            "> svg": {
              fill: _design_system__WEBPACK_IMPORTED_MODULE_6__["colors"].black,
            },
          },
          "&.active": {
            pointerEvents: "none",
            "&-style": {
              color:
                _design_system__WEBPACK_IMPORTED_MODULE_6__["colors"].black,
              borderBottom: "1px solid ".concat(
                _design_system__WEBPACK_IMPORTED_MODULE_6__["colors"].black,
              ),
            },
          },
        };
        var A = glamorous__WEBPACK_IMPORTED_MODULE_3__["default"].a(linkStyles);

        var Link = function Link(_ref) {
          var children = _ref.children,
            href = _ref.href,
            activeClass = _ref.activeClass,
            className = _ref.className,
            rest = Object(
              _babel_runtime_corejs2_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[
                "default"
              ],
            )(_ref, ["children", "href", "activeClass", "className"]);

          return react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
            "span",
            {
              onClick: onClickHandler(href),
              className: className,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 60,
              },
              __self: this,
            },
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
              _components_NextLink__WEBPACK_IMPORTED_MODULE_5__["default"],
              {
                activeClassName: activeClass,
                href: href,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 61,
                },
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
                A,
                Object(
                  _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                    "default"
                  ],
                )({}, rest, {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 62,
                  },
                  __self: this,
                }),
                children,
              ),
            ),
          );
        };

        /* harmony default export */ __webpack_exports__["default"] = Link;

        /***/
      },

    /***/ "./components/Navigation/Links.tsx":
      /*!*****************************************!*\
  !*** ./components/Navigation/Links.tsx ***!
  \*****************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__["default"] = [
          {
            title: "How It Works",
            to: "how-it-works",
          },
          {
            title: "About",
            to: "about",
          },
          {
            title: "FAQ",
            to: "faq",
          },
          {
            title: "Donors",
            href: "/donors",
            activeClass: "active active-style", // Leave this alone :)
          },
          {
            title: "Blog",
            href: "https://medium.com/givecrypto",
          },
        ];

        /***/
      },

    /***/ "./components/Navigation/Navigation.tsx":
      /*!**********************************************!*\
  !*** ./components/Navigation/Navigation.tsx ***!
  \**********************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return Navigation;
          },
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/assertThisInitialized */ "./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/defineProperty */ "./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js",
        );
        /* harmony import */ var glamorous__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! glamorous */ "./node_modules/glamorous/dist/glamorous.esm.js",
        );
        /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! next/router */ "./node_modules/next/dist/client/router.js",
        );
        /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/ __webpack_require__.n(
          next_router__WEBPACK_IMPORTED_MODULE_9__,
        );
        /* harmony import */ var nprogress__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! nprogress */ "./node_modules/nprogress/nprogress.js",
        );
        /* harmony import */ var nprogress__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/ __webpack_require__.n(
          nprogress__WEBPACK_IMPORTED_MODULE_10__,
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_11__,
        );
        /* harmony import */ var react_headroom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
          /*! react-headroom */ "./node_modules/react-headroom/dist/index.js",
        );
        /* harmony import */ var react_headroom__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/ __webpack_require__.n(
          react_headroom__WEBPACK_IMPORTED_MODULE_12__,
        );
        /* harmony import */ var react_lottie__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
          /*! react-lottie */ "./node_modules/react-lottie/dist/index.js",
        );
        /* harmony import */ var react_lottie__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/ __webpack_require__.n(
          react_lottie__WEBPACK_IMPORTED_MODULE_13__,
        );
        /* harmony import */ var react_responsive_modal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
          /*! react-responsive-modal */ "./node_modules/react-responsive-modal/lib/index.es.js",
        );
        /* harmony import */ var react_scroll__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
          /*! react-scroll */ "./node_modules/react-scroll/modules/index.js",
        );
        /* harmony import */ var react_scroll__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/ __webpack_require__.n(
          react_scroll__WEBPACK_IMPORTED_MODULE_15__,
        );
        /* harmony import */ var _animations_menu_grey_white_json__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
          /*! ../../animations/menu--grey-white.json */ "./animations/menu--grey-white.json",
        );
        var _animations_menu_grey_white_json__WEBPACK_IMPORTED_MODULE_16___namespace = /*#__PURE__*/ __webpack_require__.t(
          /*! ../../animations/menu--grey-white.json */ "./animations/menu--grey-white.json",
          1,
        );
        /* harmony import */ var _components_Button__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
          /*! ../../components/Button */ "./components/Button.tsx",
        );
        /* harmony import */ var _components_Link__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
          /*! ../../components/Link */ "./components/Link.tsx",
        );
        /* harmony import */ var _design_system__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
          /*! ../../design-system */ "./design-system/index.ts",
        );
        /* harmony import */ var _utils_Scale__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
          /*! ../../utils/Scale */ "./utils/Scale.tsx",
        );
        /* harmony import */ var _Links__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
          /*! ./Links */ "./components/Navigation/Links.tsx",
        );

        var _jsxFileName =
          "/Users/jklb/dev/givecrypto/website/components/Navigation/Navigation.tsx";

        var Logo = function Logo(props) {
          return react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
            "svg",
            Object(
              _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                "default"
              ],
            )({}, props, {
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
              "g",
              {
                style: {
                  isolation: "isolate",
                },
                fill: "#323232",
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_11__["createElement"]("path", {
                d:
                  "M13.3 13.7h7.6V25h-2.4l-.3-3.1a7 7 0 0 1-6.3 3.3c-5.1 0-10-3.7-10-11.5s4.8-11.5 10-11.5A8.51 8.51 0 0 1 20.7 9l-2.7.9C17 6.8 14.9 5 11.9 5c-4.1 0-7.2 3-7.2 8.8s3.1 8.8 7.2 8.8c3.9 0 5.9-2.6 6.2-6.2h-4.9v-2.7zM27.1 2.2a2 2 0 0 1 2 2.1 2 2 0 0 1-2 2 1.94 1.94 0 0 1-2-2 1.92 1.92 0 0 1 2-2.1zm1.3 6.6V25h-2.7V8.8zM45.8 8.8L40.4 25h-2.8L32.3 8.8h2.8l4 12.8 4-12.8zM62.5 17.5H50.6c.2 3 1.6 5.3 4.6 5.3 2.4 0 3.6-1.1 4.5-3.1l2.4 1c-1.5 3.1-3.5 4.5-6.9 4.5-4.9 0-7.3-4-7.3-8.4s2.4-8.4 7.3-8.4 7.3 3.7 7.3 7.7zM50.8 15h8.9c-.5-2.3-1.9-4-4.5-4s-3.9 1.7-4.4 4z",
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_11__["createElement"]("path", {
              d:
                "M167.7 21.1a2 2 0 0 1 2 2 2 2 0 0 1-4 0 2 2 0 0 1 2-2zM179.9 8.2c4.9 0 7.8 4 7.8 8.4s-2.9 8.4-7.8 8.4-7.8-4-7.8-8.4 3-8.4 7.8-8.4zm0 14.3c3.3 0 5-2.9 5-5.9s-1.7-5.9-5-5.9-5 2.9-5 5.9 1.7 5.9 5 5.9z",
              fill: "#323232",
              style: {
                isolation: "isolate",
              },
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
              "g",
              {
                style: {
                  isolation: "isolate",
                },
                fill: "#323232",
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_11__["createElement"]("path", {
                d:
                  "M200.6 11.1a4.14 4.14 0 0 0-1.9-.5c-2.2 0-4.5 2.6-4.5 7.9v6.1h-2.7V8.5h2.7v2.8a5.84 5.84 0 0 1 4.8-3 4.47 4.47 0 0 1 2.2.5zM209.2 8.2a6.53 6.53 0 0 1 2.9.7l2.9-1.6 1.2 2.2-2.2 1.2a5.47 5.47 0 0 1 .8 2.9c0 3.4-2.5 5.4-5.7 5.4a6.39 6.39 0 0 1-2.8-.6 1.82 1.82 0 0 0-1.1 1.6c0 .9.6 1.3 1.8 1.3h3.8c3 0 5.1 1.5 5.1 4.5 0 4-3.1 5.6-6.8 5.6-4.1 0-6.9-2-6.9-5.3a4.36 4.36 0 0 1 1.5-3.4 3.17 3.17 0 0 1-1.1-2.6 3.28 3.28 0 0 1 2-3 5.68 5.68 0 0 1-1.2-3.5 5.47 5.47 0 0 1 5.8-5.4zm-1.9 15.5a4.87 4.87 0 0 1-1.2-.1A2.77 2.77 0 0 0 205 26c0 1.8 1.4 3.1 4.2 3.1s4.1-1.3 4.1-3-1.2-2.4-2.7-2.4zm1.9-6.9a2.91 2.91 0 0 0 3-3.1 3 3 0 1 0-6 0 2.91 2.91 0 0 0 3 3.1z",
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_11__["createElement"]("path", {
              d:
                "M81 10a5.43 5.43 0 0 0-5.6-3.9c-3.5 0-6.4 2.4-6.4 7.6s2.9 7.6 6.4 7.6a5.51 5.51 0 0 0 5.6-3.9l3.8 1c-1.1 4.3-4.4 6.8-9.3 6.8-5.6 0-10.6-4-10.6-11.5s5-11.5 10.6-11.5c4.9 0 8.3 2.5 9.3 6.8z",
              fill: "#323232",
              style: {
                isolation: "isolate",
              },
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
              "g",
              {
                style: {
                  isolation: "isolate",
                },
                fill: "#323232",
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_11__["createElement"]("path", {
                d:
                  "M88.3 25V8.8h4v2.6a5.76 5.76 0 0 1 4.8-2.9 6.93 6.93 0 0 1 2 .3l-.7 3.7a3.06 3.06 0 0 0-1.7-.4c-2.3 0-4.3 1.9-4.3 7.1V25zM104.7 8.8l3.8 10.2L112 8.8h4l-8.4 22.8h-3.9l2.8-7.6-5.9-15.2z",
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_11__["createElement"]("path", {
              d:
                "M125.5 25.3a5.28 5.28 0 0 1-3.9-1.7v8h-4V8.8h4v1.7a4.7 4.7 0 0 1 3.9-1.9c4.9 0 7.4 3.4 7.4 8.4s-2.5 8.3-7.4 8.3zm-.6-13.3c-2.1 0-3.7 1.7-3.7 4.9s1.6 4.9 3.7 4.9 3.8-1.7 3.8-4.9-1.7-4.9-3.8-4.9zM145.7 24.7a6.51 6.51 0 0 1-2.6.6c-3.7 0-5.9-2-5.9-6v-7.1h-2.5V8.8h2.5v-4l4-2.5v6.6h4.3v3.4h-4.3v7c0 2 .8 2.6 2.1 2.6a2.82 2.82 0 0 0 1.5-.4zM155.7 8.5c5.2 0 8.2 3.7 8.2 8.4s-3 8.4-8.2 8.4-8.2-3.7-8.2-8.4 3-8.4 8.2-8.4zm0 13.4c2.6 0 4-2.3 4-4.9s-1.5-4.9-4-4.9-4 2.3-4 4.9 1.5 4.9 4 4.9z",
              fill: "#323232",
              style: {
                isolation: "isolate",
              },
              __self: this,
            }),
          );
        };

        Logo.defaultProps = {
          xmlns: "http://www.w3.org/2000/svg",
          width: "217",
          height: "33",
          viewBox: "0 0 217 33",
        };

        var Nav = glamorous__WEBPACK_IMPORTED_MODULE_8__["default"].nav(
          Object(
            _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[
              "default"
            ],
          )(
            {
              padding: ""
                .concat(
                  Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_20__["Step"])(4),
                  " ",
                )
                .concat(
                  Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_20__["Step"])(4),
                ),
              background:
                _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].white,
            },
            _design_system__WEBPACK_IMPORTED_MODULE_19__["breakpoints"].ns,
            {
              padding: Object(
                _utils_Scale__WEBPACK_IMPORTED_MODULE_20__["Step"],
              )(5),
            },
          ),
        );
        var LogoContainer = glamorous__WEBPACK_IMPORTED_MODULE_8__[
          "default"
        ].div(
          Object(
            _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[
              "default"
            ],
          )(
            {
              maxWidth: 170,
            },
            _design_system__WEBPACK_IMPORTED_MODULE_19__["breakpoints"].ns,
            {
              maxWidth: 170,
            },
          ),
        );
        var AnimationContainer = glamorous__WEBPACK_IMPORTED_MODULE_8__[
          "default"
        ].div({
          display: "inline-block",
          width: 24,
          height: 24,
          "> *": {
            "&:focus": {
              outline: "none",
            },
          },
        });

        var Navigation =
          /*#__PURE__*/
          (function(_React$Component) {
            Object(
              _babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__[
                "default"
              ],
            )(Navigation, _React$Component);

            function Navigation(props) {
              var _this;

              Object(
                _babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[
                  "default"
                ],
              )(this, Navigation);

              _this = Object(
                _babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__[
                  "default"
                ],
              )(
                this,
                Object(
                  _babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[
                    "default"
                  ],
                )(Navigation).call(this, props),
              );

              Object(
                _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[
                  "default"
                ],
              )(
                Object(
                  _babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__[
                    "default"
                  ],
                )(_this),
                "toggleMenu",
                function() {
                  var _this$state = _this.state,
                    direction = _this$state.direction,
                    menuModalState = _this$state.menuModalState; // Reverse things

                  direction = direction * -1;
                  menuModalState = !menuModalState; // Set things

                  _this.setState({
                    direction: direction,
                    isStopped: false,
                    menuModalState: menuModalState,
                  });
                },
              );

              Object(
                _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[
                  "default"
                ],
              )(
                Object(
                  _babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__[
                    "default"
                  ],
                )(_this),
                "closeMenu",
                function() {
                  document.querySelector("html").removeAttribute("style");

                  _this.setState({
                    direction: -1,
                    isStopped: false,
                    menuModalState: false,
                  });
                },
              );

              Object(
                _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[
                  "default"
                ],
              )(
                Object(
                  _babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__[
                    "default"
                  ],
                )(_this),
                "onOpenModal",
                function() {
                  _this.setState({
                    menuModalState: true,
                  });
                },
              );

              Object(
                _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[
                  "default"
                ],
              )(
                Object(
                  _babel_runtime_corejs2_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__[
                    "default"
                  ],
                )(_this),
                "onCloseModal",
                function() {
                  _this.toggleMenu();

                  _this.setState({
                    menuModalState: false,
                  });
                },
              );

              _this.state = {
                menuModalState: false,
                currentRoute: "/",
                isStopped: false,
                direction: -1,
              };

              next_router__WEBPACK_IMPORTED_MODULE_9___default.a.onRouteChangeStart = function() {
                nprogress__WEBPACK_IMPORTED_MODULE_10___default.a.start();

                _this.setState({
                  menuModalState: false,
                  direction: -1,
                  isStopped: false,
                });
              };

              next_router__WEBPACK_IMPORTED_MODULE_9___default.a.onRouteChangeComplete = function() {
                nprogress__WEBPACK_IMPORTED_MODULE_10___default.a.done();

                _this.setState({
                  currentRoute:
                    next_router__WEBPACK_IMPORTED_MODULE_9___default.a.pathname,
                });
              };

              next_router__WEBPACK_IMPORTED_MODULE_9___default.a.onRouteChangeError = function() {
                return nprogress__WEBPACK_IMPORTED_MODULE_10___default.a.done();
              };

              return _this;
            }

            Object(
              _babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__[
                "default"
              ],
            )(Navigation, [
              {
                key: "componentDidMount",
                value: function componentDidMount() {
                  this.setState({
                    currentRoute:
                      next_router__WEBPACK_IMPORTED_MODULE_9___default.a
                        .pathname,
                  });
                },
              },
              {
                key: "mapLinks",
                value: function mapLinks() {
                  var _this2 = this;

                  var currentRoute = this.state.currentRoute;
                  return _Links__WEBPACK_IMPORTED_MODULE_21__["default"].map(
                    function(_ref) {
                      var href = _ref.href,
                        title = _ref.title,
                        to = _ref.to,
                        activeClass = _ref.activeClass;

                      var defaultLink = function defaultLink() {
                        var url =
                          arguments.length > 0 && arguments[0] !== undefined
                            ? arguments[0]
                            : href;
                        return react__WEBPACK_IMPORTED_MODULE_11__[
                          "createElement"
                        ](
                          NavItem,
                          {
                            key: title,
                            __source: {
                              fileName: _jsxFileName,
                              lineNumber: 85,
                            },
                            __self: this,
                          },
                          react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                            _components_Link__WEBPACK_IMPORTED_MODULE_18__[
                              "default"
                            ],
                            {
                              activeClass: activeClass,
                              href: url,
                              __source: {
                                fileName: _jsxFileName,
                                lineNumber: 86,
                              },
                              __self: this,
                            },
                            title,
                          ),
                        );
                      };

                      if (to) {
                        var Span = glamorous__WEBPACK_IMPORTED_MODULE_8__[
                          "default"
                        ].span(
                          _components_Link__WEBPACK_IMPORTED_MODULE_18__[
                            "linkStyles"
                          ],
                        );

                        if (currentRoute === "/") {
                          return react__WEBPACK_IMPORTED_MODULE_11__[
                            "createElement"
                          ](
                            NavItem,
                            {
                              key: title,
                              __source: {
                                fileName: _jsxFileName,
                                lineNumber: 97,
                              },
                              __self: this,
                            },
                            react__WEBPACK_IMPORTED_MODULE_11__[
                              "createElement"
                            ](
                              react_scroll__WEBPACK_IMPORTED_MODULE_15__[
                                "Link"
                              ],
                              {
                                activeClass: "active",
                                to: to,
                                spy: true,
                                hashSpy: true,
                                smooth: true,
                                offset: -50,
                                duration: 550,
                                __source: {
                                  fileName: _jsxFileName,
                                  lineNumber: 98,
                                },
                                __self: this,
                              },
                              react__WEBPACK_IMPORTED_MODULE_11__[
                                "createElement"
                              ](
                                Span,
                                {
                                  onClick: _this2.closeMenu,
                                  __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 107,
                                  },
                                  __self: this,
                                },
                                title,
                              ),
                            ),
                          );
                        } else {
                          return defaultLink("/#".concat(to));
                        }
                      }

                      return defaultLink();
                    },
                  );
                },
              },
              {
                key: "render",
                value: function render() {
                  var theme = this.props.theme;
                  var menuModalState = this.state.menuModalState;
                  var donateTheme = theme === "light" ? "ghost" : "default";
                  var defaultOptions = {
                    loop: false,
                    autoplay: false,
                    animationData: _animations_menu_grey_white_json__WEBPACK_IMPORTED_MODULE_16__,
                    rendererSettings: {
                      preserveAspectRatio: "xMidYMid slice",
                    },
                  };
                  return react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                    react__WEBPACK_IMPORTED_MODULE_11__["Fragment"],
                    null,
                    react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                      react_headroom__WEBPACK_IMPORTED_MODULE_12___default.a,
                      {
                        className: "relative z-999 open-".concat(
                          menuModalState,
                        ),
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 162,
                        },
                        __self: this,
                      },
                      react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                        Nav,
                        {
                          className: "flex items-center justify-between",
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 163,
                          },
                          __self: this,
                        },
                        react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                          glamorous__WEBPACK_IMPORTED_MODULE_8__["Div"],
                          {
                            lineHeight: "0",
                            __source: {
                              fileName: _jsxFileName,
                              lineNumber: 164,
                            },
                            __self: this,
                          },
                          react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                            _components_Link__WEBPACK_IMPORTED_MODULE_18__[
                              "default"
                            ],
                            {
                              href: "/",
                              __source: {
                                fileName: _jsxFileName,
                                lineNumber: 165,
                              },
                              __self: this,
                            },
                            react__WEBPACK_IMPORTED_MODULE_11__[
                              "createElement"
                            ](
                              LogoContainer,
                              {
                                className: "responsive",
                                __source: {
                                  fileName: _jsxFileName,
                                  lineNumber: 166,
                                },
                                __self: this,
                              },
                              react__WEBPACK_IMPORTED_MODULE_11__[
                                "createElement"
                              ](Logo, {
                                __source: {
                                  fileName: _jsxFileName,
                                  lineNumber: 167,
                                },
                                __self: this,
                              }),
                            ),
                          ),
                        ),
                        react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                          glamorous__WEBPACK_IMPORTED_MODULE_8__["Div"],
                          {
                            alignSelf: "end",
                            className: "dn db-l",
                            __source: {
                              fileName: _jsxFileName,
                              lineNumber: 171,
                            },
                            __self: this,
                          },
                          react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                            glamorous__WEBPACK_IMPORTED_MODULE_8__["Ul"],
                            {
                              role: "navigation",
                              display: "flex",
                              alignItems: "center",
                              listStyle: "none",
                              margin: 0,
                              __source: {
                                fileName: _jsxFileName,
                                lineNumber: 172,
                              },
                              __self: this,
                            },
                            this.mapLinks(),
                            react__WEBPACK_IMPORTED_MODULE_11__[
                              "createElement"
                            ](
                              glamorous__WEBPACK_IMPORTED_MODULE_8__["Li"],
                              {
                                display: "inline-block",
                                __source: {
                                  fileName: _jsxFileName,
                                  lineNumber: 180,
                                },
                                __self: this,
                              },
                              react__WEBPACK_IMPORTED_MODULE_11__[
                                "createElement"
                              ](
                                _components_Button__WEBPACK_IMPORTED_MODULE_17__[
                                  "default"
                                ],
                                {
                                  href: "/donate",
                                  theme: donateTheme,
                                  __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 181,
                                  },
                                  __self: this,
                                },
                                "Donate Crypto",
                              ),
                            ),
                          ),
                        ),
                        react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                          glamorous__WEBPACK_IMPORTED_MODULE_8__["Div"],
                          {
                            lineHeight: "0",
                            className: "flex items-center dn-l",
                            __source: {
                              fileName: _jsxFileName,
                              lineNumber: 187,
                            },
                            __self: this,
                          },
                          react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                            _components_Button__WEBPACK_IMPORTED_MODULE_17__[
                              "default"
                            ],
                            {
                              className: "mr3 button-donate",
                              href: "/donate",
                              theme: donateTheme,
                              __source: {
                                fileName: _jsxFileName,
                                lineNumber: 188,
                              },
                              __self: this,
                            },
                            "Donate",
                          ),
                          react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                            AnimationContainer,
                            {
                              onClick: this.toggleMenu,
                              className: "pointer responisive center",
                              __source: {
                                fileName: _jsxFileName,
                                lineNumber: 195,
                              },
                              __self: this,
                            },
                            react__WEBPACK_IMPORTED_MODULE_11__[
                              "createElement"
                            ](
                              react_lottie__WEBPACK_IMPORTED_MODULE_13___default.a,
                              {
                                options: defaultOptions,
                                isPaused: this.state.isStopped,
                                direction: this.state.direction,
                                __source: {
                                  fileName: _jsxFileName,
                                  lineNumber: 199,
                                },
                                __self: this,
                              },
                            ),
                          ),
                        ),
                      ),
                    ),
                    react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                      react_responsive_modal__WEBPACK_IMPORTED_MODULE_14__[
                        "default"
                      ],
                      {
                        open: menuModalState,
                        showCloseIcon: false,
                        onClose: this.onCloseModal,
                        center: true,
                        classNames: {
                          overlay: "green-overlay",
                          modal: "flat-modal",
                        },
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 208,
                        },
                        __self: this,
                      },
                      react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                        glamorous__WEBPACK_IMPORTED_MODULE_8__["Ul"],
                        {
                          role: "navigation",
                          display: "flex",
                          textAlign: "center",
                          flexDirection: "column",
                          alignItems: "center",
                          listStyle: "none",
                          margin: 0,
                          padding: 0,
                          __source: {
                            fileName: _jsxFileName,
                            lineNumber: 218,
                          },
                          __self: this,
                        },
                        this.mapLinks(),
                        react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                          "li",
                          {
                            __source: {
                              fileName: _jsxFileName,
                              lineNumber: 229,
                            },
                            __self: this,
                          },
                          react__WEBPACK_IMPORTED_MODULE_11__["createElement"](
                            _components_Button__WEBPACK_IMPORTED_MODULE_17__[
                              "default"
                            ],
                            {
                              className: "mt4 db button-donate",
                              href: "/donate",
                              size: "big",
                              theme: "ghost",
                              __source: {
                                fileName: _jsxFileName,
                                lineNumber: 230,
                              },
                              __self: this,
                            },
                            "Donate",
                          ),
                        ),
                      ),
                    ),
                  );
                },
              },
            ]);

            return Navigation;
          })(react__WEBPACK_IMPORTED_MODULE_11__["Component"]);

        var NavItem = glamorous__WEBPACK_IMPORTED_MODULE_8__["default"].li(
          Object(
            _babel_runtime_corejs2_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_7__[
              "default"
            ],
          )(
            {
              listStyle: "none",
              marginLeft: 0,
              paddingLeft: 0,
              marginBottom: Object(
                _utils_Scale__WEBPACK_IMPORTED_MODULE_20__["Step"],
              )(5),
              fontSize: Object(
                _utils_Scale__WEBPACK_IMPORTED_MODULE_20__["Step"],
              )(5),
              fontWeight: 500,
              "& a, & span": {
                color:
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].white,
                "&:hover": {
                  color:
                    _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"]
                      .greyLighter,
                },
              },
              "& .active": {
                color:
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"]
                    .greyLightest,
                borderBottom: "1px solid ".concat(
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"]
                    .greyLightest,
                ),
              },
            },
            _design_system__WEBPACK_IMPORTED_MODULE_19__["breakpoints"].l,
            {
              display: "inline-block",
              marginRight: Object(
                _utils_Scale__WEBPACK_IMPORTED_MODULE_20__["Step"],
              )(6),
              fontSize: Object(
                _utils_Scale__WEBPACK_IMPORTED_MODULE_20__["Step"],
              )(4),
              fontWeight: 400,
              marginBottom: 0,
              "& a, & span": {
                color:
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].black,
                "&:hover": {
                  color:
                    _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].grey,
                },
              },
              "> .active > span": {
                "& a, & span": {
                  color:
                    _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"]
                      .black,
                },
                color:
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].black,
                borderBottom: "1px solid ".concat(
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].black,
                ),
              },
              "& .active": {
                color:
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].black,
                borderBottom: "1px solid ".concat(
                  _design_system__WEBPACK_IMPORTED_MODULE_19__["colors"].black,
                ),
              },
            },
          ),
        );

        /***/
      },

    /***/ "./components/NextLink.tsx":
      /*!*********************************!*\
  !*** ./components/NextLink.tsx ***!
  \*********************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/objectWithoutProperties */ "./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js",
        );
        /* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! next/link */ "./node_modules/next/link.js",
        );
        /* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          next_link__WEBPACK_IMPORTED_MODULE_2__,
        );
        /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! next/router */ "./node_modules/next/dist/client/router.js",
        );
        /* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          next_router__WEBPACK_IMPORTED_MODULE_3__,
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_4__,
        );

        var _jsxFileName =
          "/Users/jklb/dev/givecrypto/website/components/NextLink.tsx";

        var ActiveLink = function ActiveLink(_ref) {
          var router = _ref.router,
            children = _ref.children,
            props = Object(
              _babel_runtime_corejs2_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__[
                "default"
              ],
            )(_ref, ["router", "children"]);

          var child = react__WEBPACK_IMPORTED_MODULE_4__["Children"].only(
            children,
          );
          var className = child.props.className || null;

          if (router) {
            if (router.pathname === props.href) {
              if (props.activeClassName) {
                className = ""
                  .concat(className !== null ? className : "", " ")
                  .concat(props.activeClassName)
                  .trim();
              } else {
                className = ""
                  .concat(className !== null ? className : "", " active")
                  .trim();
              }
            }
          }

          delete props.activeClassName;
          return react__WEBPACK_IMPORTED_MODULE_4__["createElement"](
            next_link__WEBPACK_IMPORTED_MODULE_2___default.a,
            Object(
              _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                "default"
              ],
            )({}, props, {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 22,
              },
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_4__["cloneElement"](child, {
              className: className,
            }),
          );
        };

        /* harmony default export */ __webpack_exports__["default"] = Object(
          next_router__WEBPACK_IMPORTED_MODULE_3__["withRouter"],
        )(ActiveLink);

        /***/
      },

    /***/ "./components/Share.tsx":
      /*!******************************!*\
  !*** ./components/Share.tsx ***!
  \******************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js",
        );
        /* harmony import */ var glamorous__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! glamorous */ "./node_modules/glamorous/dist/glamorous.esm.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_2__,
        );
        /* harmony import */ var _design_system__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! ../design-system */ "./design-system/index.ts",
        );
        /* harmony import */ var _utils_Scale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! ../utils/Scale */ "./utils/Scale.tsx",
        );

        var _jsxFileName =
          "/Users/jklb/dev/givecrypto/website/components/Share.tsx";

        var Medium = function Medium(props) {
          return react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
            "svg",
            Object(
              _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                "default"
              ],
            )({}, props, {
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
              "title",
              {
                __self: this,
              },
              "medium",
            ),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"]("path", {
              d:
                "M18.07 16.5h-6.85l1.36-1.5a1 1 0 0 0 .07-.5V5.07L8.15 16.5 3.26 5.86C3.14 5.59 3 5.24 2.93 5v7.91a.79.79 0 0 0 .21.68l2.08 3H.07l2.09-3a.81.81 0 0 0 .2-.68V4.66c0-.36.05-.4-.11-.6L.65 1.65H5.5L9.7 11l3.65-9.31h4.72l-1.25 1.53c-.19.18-.17.34-.17.63v10.64c0 .27 0 .43.08.5z",
              __self: this,
            }),
          );
        };

        Medium.defaultProps = {
          xmlns: "http://www.w3.org/2000/svg",
          width: "18.15",
          height: "18.15",
          viewBox: "0 0 18.15 18.15",
        };

        var Reddit = function Reddit(props) {
          return react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
            "svg",
            Object(
              _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                "default"
              ],
            )({}, props, {
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
              "title",
              {
                __self: this,
              },
              "reddit",
            ),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"]("path", {
              d:
                "M18.15 8.91A2.05 2.05 0 0 0 14.7 7.4a10.24 10.24 0 0 0-5.18-1.54l1.11-3.38 2.91.68a1.71 1.71 0 1 0 .14-.66l-3.2-.75-.29-.07L8.8 5.86a10.35 10.35 0 0 0-5.38 1.51 2.08 2.08 0 0 0-1.37-.52A2.06 2.06 0 0 0 1 10.66a3.08 3.08 0 0 0 0 .61c0 3 3.63 5.41 8.11 5.41H9c4.47 0 8.11-2.43 8.11-5.41a3.56 3.56 0 0 0 0-.57 2.06 2.06 0 0 0 1.04-1.79zM1.6 11.27a3.39 3.39 0 0 1 .07-.64.68.68 0 0 0 0-.14 4.42 4.42 0 0 1 1.82-2.37.3.3 0 0 0 .13-.12A9.82 9.82 0 0 1 9 6.53a9.8 9.8 0 0 1 5.45 1.52.33.33 0 0 0 .15.11 4.35 4.35 0 0 1 1.74 2.35.32.32 0 0 0 0 .14 3.26 3.26 0 0 1 .06.62C16.47 13.88 13.14 16 9 16s-7.4-2.12-7.4-4.73zm1.24-3.49A5 5 0 0 0 1.17 10a1.37 1.37 0 0 1 1.67-2.22zM16.93 10a5.14 5.14 0 0 0-1.66-2.2 1.44 1.44 0 0 1 .82-.27 1.38 1.38 0 0 1 .84 2.47zm-2.71-6.84a1 1 0 1 1 1 1 1 1 0 0 1-1-1z",
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"]("path", {
              d:
                "M11.52 13.36a3.37 3.37 0 0 1-2.45.71 3.34 3.34 0 0 1-2.44-.71.34.34 0 0 0-.48.48 4 4 0 0 0 2.92.91 4 4 0 0 0 2.93-.91.34.34 0 0 0-.48-.48zM11.82 9a1.28 1.28 0 0 0-1.27 1.27 1.27 1.27 0 0 0 1.27 1.25 1.24 1.24 0 0 0 1.25-1.25A1.27 1.27 0 0 0 11.82 9zM6.34 9a1.28 1.28 0 0 0-1.27 1.27 1.27 1.27 0 0 0 1.27 1.25 1.25 1.25 0 0 0 1.26-1.24A1.27 1.27 0 0 0 6.34 9z",
              __self: this,
            }),
          );
        };

        Reddit.defaultProps = {
          xmlns: "http://www.w3.org/2000/svg",
          width: "18.15",
          height: "18.15",
          viewBox: "0 0 18.15 18.15",
        };

        var Twitter = function Twitter(props) {
          return react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
            "svg",
            Object(
              _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                "default"
              ],
            )({}, props, {
              __self: this,
            }),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
              "title",
              {
                __self: this,
              },
              "twitter",
            ),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"]("path", {
              d:
                "M16.24 5.4v.48a10.43 10.43 0 0 1-10.5 10.51 10.36 10.36 0 0 1-5.67-1.51A5.3 5.3 0 0 0 1 15a7.45 7.45 0 0 0 4.53-1.8 3.67 3.67 0 0 1-3.43-2.57 3.82 3.82 0 0 0 .68.07 3.64 3.64 0 0 0 1-.13A3.7 3.7 0 0 1 .8 7a3.69 3.69 0 0 0 1.67.46A3.68 3.68 0 0 1 .82 4.3a3.58 3.58 0 0 1 .5-1.79A10.53 10.53 0 0 0 8.93 6.3a3.49 3.49 0 0 1-.08-.86 3.68 3.68 0 0 1 3.68-3.68 3.82 3.82 0 0 1 2.71 1.16A7.46 7.46 0 0 0 17.57 2a3.62 3.62 0 0 1-1.62 2 6.88 6.88 0 0 0 2.12-.59 7.44 7.44 0 0 1-1.83 1.99z",
              __self: this,
            }),
          );
        };

        Twitter.defaultProps = {
          xmlns: "http://www.w3.org/2000/svg",
          width: "18.15",
          height: "18.15",
          viewBox: "0 0 18.15 18.15",
        };

        var Icons = glamorous__WEBPACK_IMPORTED_MODULE_1__["default"].div({
          "& a": {
            padding: "0 ".concat(
              Object(_utils_Scale__WEBPACK_IMPORTED_MODULE_4__["Step"])(4),
            ),
            "> svg": {
              transition: "all 200ms",
              fill: _design_system__WEBPACK_IMPORTED_MODULE_3__["colors"].grey,
            },
            "&:hover, &:active": {
              color: _design_system__WEBPACK_IMPORTED_MODULE_3__["colors"].grey,
              "> svg": {
                fill:
                  _design_system__WEBPACK_IMPORTED_MODULE_3__["colors"].black,
              },
            },
          },
        });

        var Share = function Share() {
          return react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
            Icons,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 27,
              },
              __self: this,
            },
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
              "a",
              {
                href: "http://twitter.com/givecrypto/",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28,
                },
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_2__["createElement"](Twitter, {
                className: "test",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 29,
                },
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
              "a",
              {
                href: "http://medium.com/givecrypto/",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 31,
                },
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_2__["createElement"](Medium, {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 32,
                },
                __self: this,
              }),
            ),
            react__WEBPACK_IMPORTED_MODULE_2__["createElement"](
              "a",
              {
                href: "https://www.reddit.com/r/givecrypto/",
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 34,
                },
                __self: this,
              },
              react__WEBPACK_IMPORTED_MODULE_2__["createElement"](Reddit, {
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 35,
                },
                __self: this,
              }),
            ),
          );
        };

        /* harmony default export */ __webpack_exports__["default"] = Share;

        /***/
      },

    /***/ "./design-system/breakpoints.ts":
      /*!**************************************!*\
  !*** ./design-system/breakpoints.ts ***!
  \**************************************/
      /*! exports provided: breakpoints, mediaQueries, default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "breakpoints",
          function() {
            return breakpoints;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "mediaQueries",
          function() {
            return mediaQueries;
          },
        );
        var breakpoints = {
          ns: "30em",
          m: "60em",
        };
        var mediaQueries = {
          s: "@media only screen and (max-width: ".concat(breakpoints.ns, ")"),
          ns: "@media only screen and (min-width: ".concat(breakpoints.ns, ")"),
          m: "@media only screen and (min-width: 30em) and (max-width: ".concat(
            breakpoints.m,
            ")",
          ),
          l: "@media only screen and (min-width: ".concat(breakpoints.m, ")"),
        };
        /* harmony default export */ __webpack_exports__[
          "default"
        ] = mediaQueries;

        /***/
      },

    /***/ "./design-system/colors.ts":
      /*!*********************************!*\
  !*** ./design-system/colors.ts ***!
  \*********************************/
      /*! exports provided: colors, default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "colors",
          function() {
            return colors;
          },
        );
        var colors = {
          green: "#00CD90",
          blue: "#5890FF",
          blueDark: "#374056",
          red: "#D9694B",
          redWarning: "rgba(248, 90, 39, .20)",
          grey: "#898F9C",
          greyLight: "#9FA4AE",
          greyDark: "#4E5665",
          greyLighter: "#DBDBDB",
          greyLightest: "#e7eaf2",
          black: "#323232",
          white: "#ffffff",
          yellow: "#fbd281",
          yellowLight: "#fbe2bb",
        };
        /* harmony default export */ __webpack_exports__["default"] = colors;

        /***/
      },

    /***/ "./design-system/index.ts":
      /*!********************************!*\
  !*** ./design-system/index.ts ***!
  \********************************/
      /*! exports provided: colors, shadows, breakpoints */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var _colors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./colors */ "./design-system/colors.ts",
        );
        /* harmony reexport (safe) */ __webpack_require__.d(
          __webpack_exports__,
          "colors",
          function() {
            return _colors__WEBPACK_IMPORTED_MODULE_0__["default"];
          },
        );

        /* harmony import */ var _shadows__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./shadows */ "./design-system/shadows.ts",
        );
        /* harmony reexport (safe) */ __webpack_require__.d(
          __webpack_exports__,
          "shadows",
          function() {
            return _shadows__WEBPACK_IMPORTED_MODULE_1__["default"];
          },
        );

        /* harmony import */ var _breakpoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./breakpoints */ "./design-system/breakpoints.ts",
        );
        /* harmony reexport (safe) */ __webpack_require__.d(
          __webpack_exports__,
          "breakpoints",
          function() {
            return _breakpoints__WEBPACK_IMPORTED_MODULE_2__["default"];
          },
        );

        /***/
      },

    /***/ "./design-system/shadows.ts":
      /*!**********************************!*\
  !*** ./design-system/shadows.ts ***!
  \**********************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony default export */ __webpack_exports__["default"] = {
          default: "0 8px 16px rgba(0,0,0,0.075)",
          light: "0 4px 12px rgba(0,0,0,0.1)",
          card: "0 18px 48px rgba(0,0,0,0.075)",
        };

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/array/is-array */ "./node_modules/core-js/library/fn/array/is-array.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/get-iterator */ "./node_modules/core-js/library/fn/get-iterator.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/json/stringify */ "./node_modules/core-js/library/fn/json/stringify.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/assign.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/object/assign */ "./node_modules/core-js/library/fn/object/assign.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/object/create.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/create.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/object/create */ "./node_modules/core-js/library/fn/object/create.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js":
      /*!*******************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js ***!
  \*******************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/object/define-property */ "./node_modules/core-js/library/fn/object/define-property.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js":
      /*!****************************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js ***!
  \****************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/object/get-own-property-symbols */ "./node_modules/core-js/library/fn/object/get-own-property-symbols.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js":
      /*!********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/object/get-prototype-of */ "./node_modules/core-js/library/fn/object/get-prototype-of.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/object/keys.js":
      /*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/keys.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/object/keys */ "./node_modules/core-js/library/fn/object/keys.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js":
      /*!********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js ***!
  \********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/object/set-prototype-of */ "./node_modules/core-js/library/fn/object/set-prototype-of.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/promise.js":
      /*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/promise.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/promise */ "./node_modules/core-js/library/fn/promise.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js":
      /*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js ***!
  \**************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/reflect/construct */ "./node_modules/core-js/library/fn/reflect/construct.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/set.js":
      /*!************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/set.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/set */ "./node_modules/core-js/library/fn/set.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/symbol.js":
      /*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/symbol.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/symbol */ "./node_modules/core-js/library/fn/symbol/index.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js":
      /*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js ***!
  \************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! core-js/library/fn/symbol/iterator */ "./node_modules/core-js/library/fn/symbol/iterator.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js":
      /*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }

          return self;
        }

        module.exports = _assertThisInitialized;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        module.exports = _classCallCheck;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/construct.js":
      /*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/construct.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var _Reflect$construct = __webpack_require__(
          /*! ../core-js/reflect/construct */ "./node_modules/@babel/runtime-corejs2/core-js/reflect/construct.js",
        );

        var setPrototypeOf = __webpack_require__(
          /*! ./setPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js",
        );

        function isNativeReflectConstruct() {
          if (typeof Reflect === "undefined" || !_Reflect$construct)
            return false;
          if (_Reflect$construct.sham) return false;
          if (typeof Proxy === "function") return true;

          try {
            Date.prototype.toString.call(
              _Reflect$construct(Date, [], function() {}),
            );
            return true;
          } catch (e) {
            return false;
          }
        }

        function _construct(Parent, args, Class) {
          if (isNativeReflectConstruct()) {
            module.exports = _construct = _Reflect$construct;
          } else {
            module.exports = _construct = function _construct(
              Parent,
              args,
              Class,
            ) {
              var a = [null];
              a.push.apply(a, args);
              var Constructor = Function.bind.apply(Parent, a);
              var instance = new Constructor();
              if (Class) setPrototypeOf(instance, Class.prototype);
              return instance;
            };
          }

          return _construct.apply(null, arguments);
        }

        module.exports = _construct;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js":
      /*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/createClass.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var _Object$defineProperty = __webpack_require__(
          /*! ../core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js",
        );

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;

            _Object$defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        module.exports = _createClass;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js":
      /*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js ***!
  \***************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _arrayWithHoles;
          },
        );
        /* harmony import */ var _core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/array/is-array */ "./node_modules/@babel/runtime-corejs2/core-js/array/is-array.js",
        );
        /* harmony import */ var _core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0__,
        );

        function _arrayWithHoles(arr) {
          if (
            _core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0___default()(arr)
          )
            return arr;
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js":
      /*!**********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js ***!
  \**********************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _assertThisInitialized;
          },
        );
        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }

          return self;
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js":
      /*!*****************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js ***!
  \*****************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _asyncToGenerator;
          },
        );
        /* harmony import */ var _core_js_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/promise */ "./node_modules/@babel/runtime-corejs2/core-js/promise.js",
        );
        /* harmony import */ var _core_js_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_promise__WEBPACK_IMPORTED_MODULE_0__,
        );

        function asyncGeneratorStep(
          gen,
          resolve,
          reject,
          _next,
          _throw,
          key,
          arg,
        ) {
          try {
            var info = gen[key](arg);
            var value = info.value;
          } catch (error) {
            reject(error);
            return;
          }

          if (info.done) {
            resolve(value);
          } else {
            _core_js_promise__WEBPACK_IMPORTED_MODULE_0___default.a
              .resolve(value)
              .then(_next, _throw);
          }
        }

        function _asyncToGenerator(fn) {
          return function() {
            var self = this,
              args = arguments;
            return new _core_js_promise__WEBPACK_IMPORTED_MODULE_0___default.a(
              function(resolve, reject) {
                var gen = fn.apply(self, args);

                function _next(value) {
                  asyncGeneratorStep(
                    gen,
                    resolve,
                    reject,
                    _next,
                    _throw,
                    "next",
                    value,
                  );
                }

                function _throw(err) {
                  asyncGeneratorStep(
                    gen,
                    resolve,
                    reject,
                    _next,
                    _throw,
                    "throw",
                    err,
                  );
                }

                _next(undefined);
              },
            );
          };
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js":
      /*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js ***!
  \***************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _classCallCheck;
          },
        );
        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js":
      /*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js ***!
  \************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _createClass;
          },
        );
        /* harmony import */ var _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js",
        );
        /* harmony import */ var _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__,
        );

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;

            _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0___default()(
              target,
              descriptor.key,
              descriptor,
            );
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js":
      /*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js ***!
  \***************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _defineProperty;
          },
        );
        /* harmony import */ var _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js",
        );
        /* harmony import */ var _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__,
        );

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            _core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0___default()(
              obj,
              key,
              {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true,
              },
            );
          } else {
            obj[key] = value;
          }

          return obj;
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js":
      /*!********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js ***!
  \********************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _extends;
          },
        );
        /* harmony import */ var _core_js_object_assign__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/assign */ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js",
        );
        /* harmony import */ var _core_js_object_assign__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_assign__WEBPACK_IMPORTED_MODULE_0__,
        );

        function _extends() {
          _extends =
            _core_js_object_assign__WEBPACK_IMPORTED_MODULE_0___default.a ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];

                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }

              return target;
            };

          return _extends.apply(this, arguments);
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js":
      /*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js ***!
  \***************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _getPrototypeOf;
          },
        );
        /* harmony import */ var _core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/get-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js",
        );
        /* harmony import */ var _core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_0__,
        );
        /* harmony import */ var _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../core-js/object/set-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js",
        );
        /* harmony import */ var _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_1__,
        );

        function _getPrototypeOf(o) {
          _getPrototypeOf = _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_1___default.a
            ? _core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_0___default.a
            : function _getPrototypeOf(o) {
                return (
                  o.__proto__ ||
                  _core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_0___default()(
                    o,
                  )
                );
              };
          return _getPrototypeOf(o);
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js ***!
  \*********************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _inherits;
          },
        );
        /* harmony import */ var _core_js_object_create__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/create */ "./node_modules/@babel/runtime-corejs2/core-js/object/create.js",
        );
        /* harmony import */ var _core_js_object_create__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_create__WEBPACK_IMPORTED_MODULE_0__,
        );
        /* harmony import */ var _setPrototypeOf__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./setPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js",
        );

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function",
            );
          }

          subClass.prototype = _core_js_object_create__WEBPACK_IMPORTED_MODULE_0___default()(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object(_setPrototypeOf__WEBPACK_IMPORTED_MODULE_1__["default"])(
              subClass,
              superClass,
            );
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js":
      /*!*********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js ***!
  \*********************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _iterableToArrayLimit;
          },
        );
        /* harmony import */ var _core_js_get_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/get-iterator */ "./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js",
        );
        /* harmony import */ var _core_js_get_iterator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_get_iterator__WEBPACK_IMPORTED_MODULE_0__,
        );

        function _iterableToArrayLimit(arr, i) {
          var _arr = [];
          var _n = true;
          var _d = false;
          var _e = undefined;

          try {
            for (
              var _i = _core_js_get_iterator__WEBPACK_IMPORTED_MODULE_0___default()(
                  arr,
                ),
                _s;
              !(_n = (_s = _i.next()).done);
              _n = true
            ) {
              _arr.push(_s.value);

              if (i && _arr.length === i) break;
            }
          } catch (err) {
            _d = true;
            _e = err;
          } finally {
            try {
              if (!_n && _i["return"] != null) _i["return"]();
            } finally {
              if (_d) throw _e;
            }
          }

          return _arr;
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js":
      /*!****************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js ***!
  \****************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _nonIterableRest;
          },
        );
        function _nonIterableRest() {
          throw new TypeError(
            "Invalid attempt to destructure non-iterable instance",
          );
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js":
      /*!************************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js ***!
  \************************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _objectWithoutProperties;
          },
        );
        /* harmony import */ var _core_js_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/get-own-property-symbols */ "./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js",
        );
        /* harmony import */ var _core_js_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_0__,
        );
        /* harmony import */ var _objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./objectWithoutPropertiesLoose */ "./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose.js",
        );

        function _objectWithoutProperties(source, excluded) {
          if (source == null) return {};
          var target = Object(
            _objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[
              "default"
            ],
          )(source, excluded);
          var key, i;

          if (
            _core_js_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_0___default.a
          ) {
            var sourceSymbolKeys = _core_js_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_0___default()(
              source,
            );

            for (i = 0; i < sourceSymbolKeys.length; i++) {
              key = sourceSymbolKeys[i];
              if (excluded.indexOf(key) >= 0) continue;
              if (!Object.prototype.propertyIsEnumerable.call(source, key))
                continue;
              target[key] = source[key];
            }
          }

          return target;
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose.js":
      /*!*****************************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose.js ***!
  \*****************************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _objectWithoutPropertiesLoose;
          },
        );
        /* harmony import */ var _core_js_object_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/keys */ "./node_modules/@babel/runtime-corejs2/core-js/object/keys.js",
        );
        /* harmony import */ var _core_js_object_keys__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_keys__WEBPACK_IMPORTED_MODULE_0__,
        );

        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {};
          var target = {};

          var sourceKeys = _core_js_object_keys__WEBPACK_IMPORTED_MODULE_0___default()(
            source,
          );

          var key, i;

          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
          }

          return target;
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js":
      /*!**************************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js ***!
  \**************************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _possibleConstructorReturn;
          },
        );
        /* harmony import */ var _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../helpers/esm/typeof */ "./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js",
        );
        /* harmony import */ var _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./assertThisInitialized */ "./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js",
        );

        function _possibleConstructorReturn(self, call) {
          if (
            call &&
            (Object(
              _helpers_esm_typeof__WEBPACK_IMPORTED_MODULE_0__["default"],
            )(call) === "object" ||
              typeof call === "function")
          ) {
            return call;
          }

          return Object(
            _assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"],
          )(self);
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js":
      /*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js ***!
  \***************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _setPrototypeOf;
          },
        );
        /* harmony import */ var _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/object/set-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js",
        );
        /* harmony import */ var _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__,
        );

        function _setPrototypeOf(o, p) {
          _setPrototypeOf =
            _core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0___default.a ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };

          return _setPrototypeOf(o, p);
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js":
      /*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js ***!
  \**************************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _slicedToArray;
          },
        );
        /* harmony import */ var _arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ./arrayWithHoles */ "./node_modules/@babel/runtime-corejs2/helpers/esm/arrayWithHoles.js",
        );
        /* harmony import */ var _iterableToArrayLimit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime-corejs2/helpers/esm/iterableToArrayLimit.js",
        );
        /* harmony import */ var _nonIterableRest__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! ./nonIterableRest */ "./node_modules/@babel/runtime-corejs2/helpers/esm/nonIterableRest.js",
        );

        function _slicedToArray(arr, i) {
          return (
            Object(_arrayWithHoles__WEBPACK_IMPORTED_MODULE_0__["default"])(
              arr,
            ) ||
            Object(
              _iterableToArrayLimit__WEBPACK_IMPORTED_MODULE_1__["default"],
            )(arr, i) ||
            Object(_nonIterableRest__WEBPACK_IMPORTED_MODULE_2__["default"])()
          );
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js ***!
  \*******************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return _typeof;
          },
        );
        /* harmony import */ var _core_js_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! ../../core-js/symbol/iterator */ "./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js",
        );
        /* harmony import */ var _core_js_symbol_iterator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_symbol_iterator__WEBPACK_IMPORTED_MODULE_0__,
        );
        /* harmony import */ var _core_js_symbol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! ../../core-js/symbol */ "./node_modules/@babel/runtime-corejs2/core-js/symbol.js",
        );
        /* harmony import */ var _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          _core_js_symbol__WEBPACK_IMPORTED_MODULE_1__,
        );

        function _typeof2(obj) {
          if (
            typeof _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a ===
              "function" &&
            typeof _core_js_symbol_iterator__WEBPACK_IMPORTED_MODULE_0___default.a ===
              "symbol"
          ) {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj &&
                typeof _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a ===
                  "function" &&
                obj.constructor ===
                  _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a &&
                obj !==
                  _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a
                    .prototype
                ? "symbol"
                : typeof obj;
            };
          }
          return _typeof2(obj);
        }

        function _typeof(obj) {
          if (
            typeof _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a ===
              "function" &&
            _typeof2(
              _core_js_symbol_iterator__WEBPACK_IMPORTED_MODULE_0___default.a,
            ) === "symbol"
          ) {
            _typeof = function _typeof(obj) {
              return _typeof2(obj);
            };
          } else {
            _typeof = function _typeof(obj) {
              return obj &&
                typeof _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a ===
                  "function" &&
                obj.constructor ===
                  _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a &&
                obj !==
                  _core_js_symbol__WEBPACK_IMPORTED_MODULE_1___default.a
                    .prototype
                ? "symbol"
                : _typeof2(obj);
            };
          }

          return _typeof(obj);
        }

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var _Object$getPrototypeOf = __webpack_require__(
          /*! ../core-js/object/get-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js",
        );

        var _Object$setPrototypeOf = __webpack_require__(
          /*! ../core-js/object/set-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js",
        );

        function _getPrototypeOf(o) {
          module.exports = _getPrototypeOf = _Object$setPrototypeOf
            ? _Object$getPrototypeOf
            : function _getPrototypeOf(o) {
                return o.__proto__ || _Object$getPrototypeOf(o);
              };
          return _getPrototypeOf(o);
        }

        module.exports = _getPrototypeOf;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/inherits.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/inherits.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var _Object$create = __webpack_require__(
          /*! ../core-js/object/create */ "./node_modules/@babel/runtime-corejs2/core-js/object/create.js",
        );

        var setPrototypeOf = __webpack_require__(
          /*! ./setPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js",
        );

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function",
            );
          }

          subClass.prototype = _Object$create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass) setPrototypeOf(subClass, superClass);
        }

        module.exports = _inherits;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js":
      /*!******************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        function _interopRequireDefault(obj) {
          return obj && obj.__esModule
            ? obj
            : {
                default: obj,
              };
        }

        module.exports = _interopRequireDefault;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js":
      /*!**********************************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js ***!
  \**********************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var _typeof = __webpack_require__(
          /*! ../helpers/typeof */ "./node_modules/@babel/runtime-corejs2/helpers/typeof.js",
        );

        var assertThisInitialized = __webpack_require__(
          /*! ./assertThisInitialized */ "./node_modules/@babel/runtime-corejs2/helpers/assertThisInitialized.js",
        );

        function _possibleConstructorReturn(self, call) {
          if (
            call &&
            (_typeof(call) === "object" || typeof call === "function")
          ) {
            return call;
          }

          return assertThisInitialized(self);
        }

        module.exports = _possibleConstructorReturn;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/setPrototypeOf.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var _Object$setPrototypeOf = __webpack_require__(
          /*! ../core-js/object/set-prototype-of */ "./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js",
        );

        function _setPrototypeOf(o, p) {
          module.exports = _setPrototypeOf =
            _Object$setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };

          return _setPrototypeOf(o, p);
        }

        module.exports = _setPrototypeOf;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/helpers/typeof.js":
      /*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/helpers/typeof.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var _Symbol$iterator = __webpack_require__(
          /*! ../core-js/symbol/iterator */ "./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js",
        );

        var _Symbol = __webpack_require__(
          /*! ../core-js/symbol */ "./node_modules/@babel/runtime-corejs2/core-js/symbol.js",
        );

        function _typeof2(obj) {
          if (
            typeof _Symbol === "function" &&
            typeof _Symbol$iterator === "symbol"
          ) {
            _typeof2 = function _typeof2(obj) {
              return typeof obj;
            };
          } else {
            _typeof2 = function _typeof2(obj) {
              return obj &&
                typeof _Symbol === "function" &&
                obj.constructor === _Symbol &&
                obj !== _Symbol.prototype
                ? "symbol"
                : typeof obj;
            };
          }
          return _typeof2(obj);
        }

        function _typeof(obj) {
          if (
            typeof _Symbol === "function" &&
            _typeof2(_Symbol$iterator) === "symbol"
          ) {
            module.exports = _typeof = function _typeof(obj) {
              return _typeof2(obj);
            };
          } else {
            module.exports = _typeof = function _typeof(obj) {
              return obj &&
                typeof _Symbol === "function" &&
                obj.constructor === _Symbol &&
                obj !== _Symbol.prototype
                ? "symbol"
                : _typeof2(obj);
            };
          }

          return _typeof(obj);
        }

        module.exports = _typeof;

        /***/
      },

    /***/ "./node_modules/@babel/runtime-corejs2/regenerator/index.js":
      /*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime-corejs2/regenerator/index.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! regenerator-runtime */ "./node_modules/regenerator-runtime/runtime-module.js",
        );

        /***/
      },

    /***/ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        function _interopRequireDefault(obj) {
          return obj && obj.__esModule
            ? obj
            : {
                default: obj,
              };
        }

        module.exports = _interopRequireDefault;

        /***/
      },

    /***/ "./node_modules/babel-runtime/core-js/object/assign.js":
      /*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/assign.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = {
          default: __webpack_require__(
            /*! core-js/library/fn/object/assign */ "./node_modules/core-js/library/fn/object/assign.js",
          ),
          __esModule: true,
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/core-js/object/create.js":
      /*!*************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/create.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = {
          default: __webpack_require__(
            /*! core-js/library/fn/object/create */ "./node_modules/core-js/library/fn/object/create.js",
          ),
          __esModule: true,
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/core-js/object/define-property.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/define-property.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = {
          default: __webpack_require__(
            /*! core-js/library/fn/object/define-property */ "./node_modules/core-js/library/fn/object/define-property.js",
          ),
          __esModule: true,
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/get-prototype-of.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = {
          default: __webpack_require__(
            /*! core-js/library/fn/object/get-prototype-of */ "./node_modules/core-js/library/fn/object/get-prototype-of.js",
          ),
          __esModule: true,
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/object/set-prototype-of.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = {
          default: __webpack_require__(
            /*! core-js/library/fn/object/set-prototype-of */ "./node_modules/core-js/library/fn/object/set-prototype-of.js",
          ),
          __esModule: true,
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/core-js/symbol.js":
      /*!******************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = {
          default: __webpack_require__(
            /*! core-js/library/fn/symbol */ "./node_modules/core-js/library/fn/symbol/index.js",
          ),
          __esModule: true,
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/core-js/symbol/iterator.js":
      /*!***************************************************************!*\
  !*** ./node_modules/babel-runtime/core-js/symbol/iterator.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = {
          default: __webpack_require__(
            /*! core-js/library/fn/symbol/iterator */ "./node_modules/core-js/library/fn/symbol/iterator.js",
          ),
          __esModule: true,
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/helpers/classCallCheck.js":
      /*!**************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/classCallCheck.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;

        exports.default = function(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/helpers/createClass.js":
      /*!***********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/createClass.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;

        var _defineProperty = __webpack_require__(
          /*! ../core-js/object/define-property */ "./node_modules/babel-runtime/core-js/object/define-property.js",
        );

        var _defineProperty2 = _interopRequireDefault(_defineProperty);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              (0, _defineProperty2.default)(target, descriptor.key, descriptor);
            }
          }

          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        /***/
      },

    /***/ "./node_modules/babel-runtime/helpers/extends.js":
      /*!*******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/extends.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;

        var _assign = __webpack_require__(
          /*! ../core-js/object/assign */ "./node_modules/babel-runtime/core-js/object/assign.js",
        );

        var _assign2 = _interopRequireDefault(_assign);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default =
          _assign2.default ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];

              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }

            return target;
          };

        /***/
      },

    /***/ "./node_modules/babel-runtime/helpers/inherits.js":
      /*!********************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/inherits.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;

        var _setPrototypeOf = __webpack_require__(
          /*! ../core-js/object/set-prototype-of */ "./node_modules/babel-runtime/core-js/object/set-prototype-of.js",
        );

        var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

        var _create = __webpack_require__(
          /*! ../core-js/object/create */ "./node_modules/babel-runtime/core-js/object/create.js",
        );

        var _create2 = _interopRequireDefault(_create);

        var _typeof2 = __webpack_require__(
          /*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js",
        );

        var _typeof3 = _interopRequireDefault(_typeof2);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = function(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                (typeof superClass === "undefined"
                  ? "undefined"
                  : (0, _typeof3.default)(superClass)),
            );
          }

          subClass.prototype = (0, _create2.default)(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            _setPrototypeOf2.default
              ? (0, _setPrototypeOf2.default)(subClass, superClass)
              : (subClass.__proto__ = superClass);
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js":
      /*!*************************************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/possibleConstructorReturn.js ***!
  \*************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;

        var _typeof2 = __webpack_require__(
          /*! ../helpers/typeof */ "./node_modules/babel-runtime/helpers/typeof.js",
        );

        var _typeof3 = _interopRequireDefault(_typeof2);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default = function(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }

          return call &&
            ((typeof call === "undefined"
              ? "undefined"
              : (0, _typeof3.default)(call)) === "object" ||
              typeof call === "function")
            ? call
            : self;
        };

        /***/
      },

    /***/ "./node_modules/babel-runtime/helpers/typeof.js":
      /*!******************************************************!*\
  !*** ./node_modules/babel-runtime/helpers/typeof.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;

        var _iterator = __webpack_require__(
          /*! ../core-js/symbol/iterator */ "./node_modules/babel-runtime/core-js/symbol/iterator.js",
        );

        var _iterator2 = _interopRequireDefault(_iterator);

        var _symbol = __webpack_require__(
          /*! ../core-js/symbol */ "./node_modules/babel-runtime/core-js/symbol.js",
        );

        var _symbol2 = _interopRequireDefault(_symbol);

        var _typeof =
          typeof _symbol2.default === "function" &&
          typeof _iterator2.default === "symbol"
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof _symbol2.default === "function" &&
                  obj.constructor === _symbol2.default &&
                  obj !== _symbol2.default.prototype
                  ? "symbol"
                  : typeof obj;
              };

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.default =
          typeof _symbol2.default === "function" &&
          _typeof(_iterator2.default) === "symbol"
            ? function(obj) {
                return typeof obj === "undefined" ? "undefined" : _typeof(obj);
              }
            : function(obj) {
                return obj &&
                  typeof _symbol2.default === "function" &&
                  obj.constructor === _symbol2.default &&
                  obj !== _symbol2.default.prototype
                  ? "symbol"
                  : typeof obj === "undefined"
                  ? "undefined"
                  : _typeof(obj);
              };

        /***/
      },

    /***/ "./node_modules/chroma-js/chroma.js":
      /*!******************************************!*\
  !*** ./node_modules/chroma-js/chroma.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /**
         * chroma.js - JavaScript library for color conversions
         *
         * Copyright (c) 2011-2018, Gregor Aisch
         * All rights reserved.
         *
         * Redistribution and use in source and binary forms, with or without
         * modification, are permitted provided that the following conditions are met:
         *
         * 1. Redistributions of source code must retain the above copyright notice, this
         * list of conditions and the following disclaimer.
         *
         * 2. Redistributions in binary form must reproduce the above copyright notice,
         * this list of conditions and the following disclaimer in the documentation
         * and/or other materials provided with the distribution.
         *
         * 3. The name Gregor Aisch may not be used to endorse or promote products
         * derived from this software without specific prior written permission.
         *
         * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
         * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
         * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
         * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
         * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
         * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
         * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
         * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
         * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
         * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
         *
         * -------------------------------------------------------
         *
         * chroma.js includes colors from colorbrewer2.org, which are released under
         * the following license:
         *
         * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,
         * and The Pennsylvania State University.
         *
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing,
         * software distributed under the License is distributed on an
         * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
         * either express or implied. See the License for the specific
         * language governing permissions and limitations under the License.
         *
         * ------------------------------------------------------
         *
         * Named colors are taken from X11 Color Names.
         * http://www.w3.org/TR/css3-color/#svg-color
         *
         * @preserve
         */

        (function(global, factory) {
          true ? (module.exports = factory()) : undefined;
        })(this, function() {
          "use strict";

          var limit = function(x, min, max) {
            if (min === void 0) min = 0;
            if (max === void 0) max = 1;

            return x < min ? min : x > max ? max : x;
          };

          var clip_rgb = function(rgb) {
            rgb._clipped = false;
            rgb._unclipped = rgb.slice(0);
            for (var i = 0; i <= 3; i++) {
              if (i < 3) {
                if (rgb[i] < 0 || rgb[i] > 255) {
                  rgb._clipped = true;
                }
                rgb[i] = limit(rgb[i], 0, 255);
              } else if (i === 3) {
                rgb[i] = limit(rgb[i], 0, 1);
              }
            }
            return rgb;
          };

          // ported from jQuery's $.type
          var classToType = {};
          for (
            var i = 0,
              list = [
                "Boolean",
                "Number",
                "String",
                "Function",
                "Array",
                "Date",
                "RegExp",
                "Undefined",
                "Null",
              ];
            i < list.length;
            i += 1
          ) {
            var name = list[i];

            classToType["[object " + name + "]"] = name.toLowerCase();
          }
          var type = function(obj) {
            return classToType[Object.prototype.toString.call(obj)] || "object";
          };

          var unpack = function(args, keyOrder) {
            if (keyOrder === void 0) keyOrder = null;

            // if called with more than 3 arguments, we return the arguments
            if (args.length >= 3) {
              return Array.prototype.slice.call(args);
            }
            // with less than 3 args we check if first arg is object
            // and use the keyOrder string to extract and sort properties
            if (type(args[0]) == "object" && keyOrder) {
              return keyOrder
                .split("")
                .filter(function(k) {
                  return args[0][k] !== undefined;
                })
                .map(function(k) {
                  return args[0][k];
                });
            }
            // otherwise we just return the first argument
            // (which we suppose is an array of args)
            return args[0];
          };

          var last = function(args) {
            if (args.length < 2) {
              return null;
            }
            var l = args.length - 1;
            if (type(args[l]) == "string") {
              return args[l].toLowerCase();
            }
            return null;
          };

          var PI = Math.PI;

          var utils = {
            clip_rgb: clip_rgb,
            limit: limit,
            type: type,
            unpack: unpack,
            last: last,
            PI: PI,
            TWOPI: PI * 2,
            PITHIRD: PI / 3,
            DEG2RAD: PI / 180,
            RAD2DEG: 180 / PI,
          };

          var input = {
            format: {},
            autodetect: [],
          };

          var last$1 = utils.last;
          var clip_rgb$1 = utils.clip_rgb;
          var type$1 = utils.type;

          var Color = function Color() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var me = this;
            if (
              type$1(args[0]) === "object" &&
              args[0].constructor &&
              args[0].constructor === this.constructor
            ) {
              // the argument is already a Color instance
              return args[0];
            }

            // last argument could be the mode
            var mode = last$1(args);
            var autodetect = false;

            if (!mode) {
              autodetect = true;
              if (!input.sorted) {
                input.autodetect = input.autodetect.sort(function(a, b) {
                  return b.p - a.p;
                });
                input.sorted = true;
              }
              // auto-detect format
              for (
                var i = 0, list = input.autodetect;
                i < list.length;
                i += 1
              ) {
                var chk = list[i];

                mode = chk.test.apply(chk, args);
                if (mode) {
                  break;
                }
              }
            }

            if (input.format[mode]) {
              var rgb = input.format[mode].apply(
                null,
                autodetect ? args : args.slice(0, -1),
              );
              me._rgb = clip_rgb$1(rgb);
            } else {
              throw new Error("unknown format: " + args);
            }

            // add alpha channel
            if (me._rgb.length === 3) {
              me._rgb.push(1);
            }
          };

          Color.prototype.toString = function toString() {
            if (type$1(this.hex) == "function") {
              return this.hex();
            }
            return "[" + this._rgb.join(",") + "]";
          };

          var Color_1 = Color;

          var chroma = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              chroma.Color,
              [null].concat(args),
            ))();
          };

          chroma.Color = Color_1;
          chroma.version = "2.0.3";

          var chroma_1 = chroma;

          var unpack$1 = utils.unpack;
          var max = Math.max;

          var rgb2cmyk = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var ref = unpack$1(args, "rgb");
            var r = ref[0];
            var g = ref[1];
            var b = ref[2];
            r = r / 255;
            g = g / 255;
            b = b / 255;
            var k = 1 - max(r, max(g, b));
            var f = k < 1 ? 1 / (1 - k) : 0;
            var c = (1 - r - k) * f;
            var m = (1 - g - k) * f;
            var y = (1 - b - k) * f;
            return [c, m, y, k];
          };

          var rgb2cmyk_1 = rgb2cmyk;

          var unpack$2 = utils.unpack;

          var cmyk2rgb = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            args = unpack$2(args, "cmyk");
            var c = args[0];
            var m = args[1];
            var y = args[2];
            var k = args[3];
            var alpha = args.length > 4 ? args[4] : 1;
            if (k === 1) {
              return [0, 0, 0, alpha];
            }
            return [
              c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r
              m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g
              y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b
              alpha,
            ];
          };

          var cmyk2rgb_1 = cmyk2rgb;

          var unpack$3 = utils.unpack;
          var type$2 = utils.type;

          Color_1.prototype.cmyk = function() {
            return rgb2cmyk_1(this._rgb);
          };

          chroma_1.cmyk = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["cmyk"]),
            ))();
          };

          input.format.cmyk = cmyk2rgb_1;

          input.autodetect.push({
            p: 2,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              args = unpack$3(args, "cmyk");
              if (type$2(args) === "array" && args.length === 4) {
                return "cmyk";
              }
            },
          });

          var unpack$4 = utils.unpack;
          var last$2 = utils.last;
          var rnd = function(a) {
            return Math.round(a * 100) / 100;
          };

          /*
           * supported arguments:
           * - hsl2css(h,s,l)
           * - hsl2css(h,s,l,a)
           * - hsl2css([h,s,l], mode)
           * - hsl2css([h,s,l,a], mode)
           * - hsl2css({h,s,l,a}, mode)
           */
          var hsl2css = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var hsla = unpack$4(args, "hsla");
            var mode = last$2(args) || "lsa";
            hsla[0] = rnd(hsla[0] || 0);
            hsla[1] = rnd(hsla[1] * 100) + "%";
            hsla[2] = rnd(hsla[2] * 100) + "%";
            if (mode === "hsla" || (hsla.length > 3 && hsla[3] < 1)) {
              hsla[3] = hsla.length > 3 ? hsla[3] : 1;
              mode = "hsla";
            } else {
              hsla.length = 3;
            }
            return mode + "(" + hsla.join(",") + ")";
          };

          var hsl2css_1 = hsl2css;

          var unpack$5 = utils.unpack;

          /*
           * supported arguments:
           * - rgb2hsl(r,g,b)
           * - rgb2hsl(r,g,b,a)
           * - rgb2hsl([r,g,b])
           * - rgb2hsl([r,g,b,a])
           * - rgb2hsl({r,g,b,a})
           */
          var rgb2hsl = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            args = unpack$5(args, "rgba");
            var r = args[0];
            var g = args[1];
            var b = args[2];

            r /= 255;
            g /= 255;
            b /= 255;

            var min = Math.min(r, g, b);
            var max = Math.max(r, g, b);

            var l = (max + min) / 2;
            var s, h;

            if (max === min) {
              s = 0;
              h = Number.NaN;
            } else {
              s =
                l < 0.5
                  ? (max - min) / (max + min)
                  : (max - min) / (2 - max - min);
            }

            if (r == max) {
              h = (g - b) / (max - min);
            } else if (g == max) {
              h = 2 + (b - r) / (max - min);
            } else if (b == max) {
              h = 4 + (r - g) / (max - min);
            }

            h *= 60;
            if (h < 0) {
              h += 360;
            }
            if (args.length > 3 && args[3] !== undefined) {
              return [h, s, l, args[3]];
            }
            return [h, s, l];
          };

          var rgb2hsl_1 = rgb2hsl;

          var unpack$6 = utils.unpack;
          var last$3 = utils.last;

          var round = Math.round;

          /*
           * supported arguments:
           * - rgb2css(r,g,b)
           * - rgb2css(r,g,b,a)
           * - rgb2css([r,g,b], mode)
           * - rgb2css([r,g,b,a], mode)
           * - rgb2css({r,g,b,a}, mode)
           */
          var rgb2css = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var rgba = unpack$6(args, "rgba");
            var mode = last$3(args) || "rgb";
            if (mode.substr(0, 3) == "hsl") {
              return hsl2css_1(rgb2hsl_1(rgba), mode);
            }
            rgba[0] = round(rgba[0]);
            rgba[1] = round(rgba[1]);
            rgba[2] = round(rgba[2]);
            if (mode === "rgba" || (rgba.length > 3 && rgba[3] < 1)) {
              rgba[3] = rgba.length > 3 ? rgba[3] : 1;
              mode = "rgba";
            }
            return (
              mode + "(" + rgba.slice(0, mode === "rgb" ? 3 : 4).join(",") + ")"
            );
          };

          var rgb2css_1 = rgb2css;

          var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;
          var RE_HEXA = /^#?([A-Fa-f0-9]{8})$/;

          var hex2rgb = function(hex) {
            if (hex.match(RE_HEX)) {
              // remove optional leading #
              if (hex.length === 4 || hex.length === 7) {
                hex = hex.substr(1);
              }
              // expand short-notation to full six-digit
              if (hex.length === 3) {
                hex = hex.split("");
                hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
              }
              var u = parseInt(hex, 16);
              var r = u >> 16;
              var g = (u >> 8) & 0xff;
              var b = u & 0xff;
              return [r, g, b, 1];
            }

            // match rgba hex format, eg #FF000077
            if (hex.match(RE_HEXA)) {
              if (hex.length === 9) {
                // remove optional leading #
                hex = hex.substr(1);
              }
              var u$1 = parseInt(hex, 16);
              var r$1 = (u$1 >> 24) & 0xff;
              var g$1 = (u$1 >> 16) & 0xff;
              var b$1 = (u$1 >> 8) & 0xff;
              var a = Math.round(((u$1 & 0xff) / 0xff) * 100) / 100;
              return [r$1, g$1, b$1, a];
            }

            // we used to check for css colors here
            // if _input.css? and rgb = _input.css hex
            //     return rgb

            throw new Error("unknown hex color: " + hex);
          };

          var hex2rgb_1 = hex2rgb;

          var unpack$7 = utils.unpack;
          var round$1 = Math.round;

          var hsl2rgb = function() {
            var assign;

            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];
            args = unpack$7(args, "hsl");
            var h = args[0];
            var s = args[1];
            var l = args[2];
            var r, g, b;
            if (s === 0) {
              r = g = b = l * 255;
            } else {
              var t3 = [0, 0, 0];
              var c = [0, 0, 0];
              var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;
              var t1 = 2 * l - t2;
              var h_ = h / 360;
              t3[0] = h_ + 1 / 3;
              t3[1] = h_;
              t3[2] = h_ - 1 / 3;
              for (var i = 0; i < 3; i++) {
                if (t3[i] < 0) {
                  t3[i] += 1;
                }
                if (t3[i] > 1) {
                  t3[i] -= 1;
                }
                if (6 * t3[i] < 1) {
                  c[i] = t1 + (t2 - t1) * 6 * t3[i];
                } else if (2 * t3[i] < 1) {
                  c[i] = t2;
                } else if (3 * t3[i] < 2) {
                  c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;
                } else {
                  c[i] = t1;
                }
              }
              (assign = [
                round$1(c[0] * 255),
                round$1(c[1] * 255),
                round$1(c[2] * 255),
              ]),
                (r = assign[0]),
                (g = assign[1]),
                (b = assign[2]);
            }
            if (args.length > 3) {
              // keep alpha channel
              return [r, g, b, args[3]];
            }
            return [r, g, b, 1];
          };

          var hsl2rgb_1 = hsl2rgb;

          /**
    	X11 color names

    	http://www.w3.org/TR/css3-color/#svg-color
    */

          var w3cx11 = {
            aliceblue: "#f0f8ff",
            antiquewhite: "#faebd7",
            aqua: "#00ffff",
            aquamarine: "#7fffd4",
            azure: "#f0ffff",
            beige: "#f5f5dc",
            bisque: "#ffe4c4",
            black: "#000000",
            blanchedalmond: "#ffebcd",
            blue: "#0000ff",
            blueviolet: "#8a2be2",
            brown: "#a52a2a",
            burlywood: "#deb887",
            cadetblue: "#5f9ea0",
            chartreuse: "#7fff00",
            chocolate: "#d2691e",
            coral: "#ff7f50",
            cornflower: "#6495ed",
            cornflowerblue: "#6495ed",
            cornsilk: "#fff8dc",
            crimson: "#dc143c",
            cyan: "#00ffff",
            darkblue: "#00008b",
            darkcyan: "#008b8b",
            darkgoldenrod: "#b8860b",
            darkgray: "#a9a9a9",
            darkgreen: "#006400",
            darkgrey: "#a9a9a9",
            darkkhaki: "#bdb76b",
            darkmagenta: "#8b008b",
            darkolivegreen: "#556b2f",
            darkorange: "#ff8c00",
            darkorchid: "#9932cc",
            darkred: "#8b0000",
            darksalmon: "#e9967a",
            darkseagreen: "#8fbc8f",
            darkslateblue: "#483d8b",
            darkslategray: "#2f4f4f",
            darkslategrey: "#2f4f4f",
            darkturquoise: "#00ced1",
            darkviolet: "#9400d3",
            deeppink: "#ff1493",
            deepskyblue: "#00bfff",
            dimgray: "#696969",
            dimgrey: "#696969",
            dodgerblue: "#1e90ff",
            firebrick: "#b22222",
            floralwhite: "#fffaf0",
            forestgreen: "#228b22",
            fuchsia: "#ff00ff",
            gainsboro: "#dcdcdc",
            ghostwhite: "#f8f8ff",
            gold: "#ffd700",
            goldenrod: "#daa520",
            gray: "#808080",
            green: "#008000",
            greenyellow: "#adff2f",
            grey: "#808080",
            honeydew: "#f0fff0",
            hotpink: "#ff69b4",
            indianred: "#cd5c5c",
            indigo: "#4b0082",
            ivory: "#fffff0",
            khaki: "#f0e68c",
            laserlemon: "#ffff54",
            lavender: "#e6e6fa",
            lavenderblush: "#fff0f5",
            lawngreen: "#7cfc00",
            lemonchiffon: "#fffacd",
            lightblue: "#add8e6",
            lightcoral: "#f08080",
            lightcyan: "#e0ffff",
            lightgoldenrod: "#fafad2",
            lightgoldenrodyellow: "#fafad2",
            lightgray: "#d3d3d3",
            lightgreen: "#90ee90",
            lightgrey: "#d3d3d3",
            lightpink: "#ffb6c1",
            lightsalmon: "#ffa07a",
            lightseagreen: "#20b2aa",
            lightskyblue: "#87cefa",
            lightslategray: "#778899",
            lightslategrey: "#778899",
            lightsteelblue: "#b0c4de",
            lightyellow: "#ffffe0",
            lime: "#00ff00",
            limegreen: "#32cd32",
            linen: "#faf0e6",
            magenta: "#ff00ff",
            maroon: "#800000",
            maroon2: "#7f0000",
            maroon3: "#b03060",
            mediumaquamarine: "#66cdaa",
            mediumblue: "#0000cd",
            mediumorchid: "#ba55d3",
            mediumpurple: "#9370db",
            mediumseagreen: "#3cb371",
            mediumslateblue: "#7b68ee",
            mediumspringgreen: "#00fa9a",
            mediumturquoise: "#48d1cc",
            mediumvioletred: "#c71585",
            midnightblue: "#191970",
            mintcream: "#f5fffa",
            mistyrose: "#ffe4e1",
            moccasin: "#ffe4b5",
            navajowhite: "#ffdead",
            navy: "#000080",
            oldlace: "#fdf5e6",
            olive: "#808000",
            olivedrab: "#6b8e23",
            orange: "#ffa500",
            orangered: "#ff4500",
            orchid: "#da70d6",
            palegoldenrod: "#eee8aa",
            palegreen: "#98fb98",
            paleturquoise: "#afeeee",
            palevioletred: "#db7093",
            papayawhip: "#ffefd5",
            peachpuff: "#ffdab9",
            peru: "#cd853f",
            pink: "#ffc0cb",
            plum: "#dda0dd",
            powderblue: "#b0e0e6",
            purple: "#800080",
            purple2: "#7f007f",
            purple3: "#a020f0",
            rebeccapurple: "#663399",
            red: "#ff0000",
            rosybrown: "#bc8f8f",
            royalblue: "#4169e1",
            saddlebrown: "#8b4513",
            salmon: "#fa8072",
            sandybrown: "#f4a460",
            seagreen: "#2e8b57",
            seashell: "#fff5ee",
            sienna: "#a0522d",
            silver: "#c0c0c0",
            skyblue: "#87ceeb",
            slateblue: "#6a5acd",
            slategray: "#708090",
            slategrey: "#708090",
            snow: "#fffafa",
            springgreen: "#00ff7f",
            steelblue: "#4682b4",
            tan: "#d2b48c",
            teal: "#008080",
            thistle: "#d8bfd8",
            tomato: "#ff6347",
            turquoise: "#40e0d0",
            violet: "#ee82ee",
            wheat: "#f5deb3",
            white: "#ffffff",
            whitesmoke: "#f5f5f5",
            yellow: "#ffff00",
            yellowgreen: "#9acd32",
          };

          var w3cx11_1 = w3cx11;

          var RE_RGB = /^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/;
          var RE_RGBA = /^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/;
          var RE_RGB_PCT = /^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/;
          var RE_RGBA_PCT = /^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/;
          var RE_HSL = /^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/;
          var RE_HSLA = /^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/;

          var round$2 = Math.round;

          var css2rgb = function(css) {
            css = css.toLowerCase().trim();
            // named X11 colors
            if (w3cx11_1[css]) {
              return hex2rgb_1(w3cx11_1[css]);
            }
            var m;

            // rgb(250,20,0)
            if ((m = css.match(RE_RGB))) {
              var rgb = m.slice(1, 4);
              for (var i = 0; i < 3; i++) {
                rgb[i] = +rgb[i];
              }
              rgb[3] = 1; // default alpha
              return rgb;
            }

            // rgba(250,20,0,0.4)
            if ((m = css.match(RE_RGBA))) {
              var rgb$1 = m.slice(1, 5);
              for (var i$1 = 0; i$1 < 4; i$1++) {
                rgb$1[i$1] = +rgb$1[i$1];
              }
              return rgb$1;
            }

            // rgb(100%,0%,0%)
            if ((m = css.match(RE_RGB_PCT))) {
              var rgb$2 = m.slice(1, 4);
              for (var i$2 = 0; i$2 < 3; i$2++) {
                rgb$2[i$2] = round$2(rgb$2[i$2] * 2.55);
              }
              rgb$2[3] = 1; // default alpha
              return rgb$2;
            }

            // rgba(100%,0%,0%,0.4)
            if ((m = css.match(RE_RGBA_PCT))) {
              var rgb$3 = m.slice(1, 5);
              for (var i$3 = 0; i$3 < 3; i$3++) {
                rgb$3[i$3] = round$2(rgb$3[i$3] * 2.55);
              }
              rgb$3[3] = +rgb$3[3];
              return rgb$3;
            }

            // hsl(0,100%,50%)
            if ((m = css.match(RE_HSL))) {
              var hsl = m.slice(1, 4);
              hsl[1] *= 0.01;
              hsl[2] *= 0.01;
              var rgb$4 = hsl2rgb_1(hsl);
              rgb$4[3] = 1;
              return rgb$4;
            }

            // hsla(0,100%,50%,0.5)
            if ((m = css.match(RE_HSLA))) {
              var hsl$1 = m.slice(1, 4);
              hsl$1[1] *= 0.01;
              hsl$1[2] *= 0.01;
              var rgb$5 = hsl2rgb_1(hsl$1);
              rgb$5[3] = +m[4]; // default alpha = 1
              return rgb$5;
            }
          };

          css2rgb.test = function(s) {
            return (
              RE_RGB.test(s) ||
              RE_RGBA.test(s) ||
              RE_RGB_PCT.test(s) ||
              RE_RGBA_PCT.test(s) ||
              RE_HSL.test(s) ||
              RE_HSLA.test(s)
            );
          };

          var css2rgb_1 = css2rgb;

          var type$3 = utils.type;

          Color_1.prototype.css = function(mode) {
            return rgb2css_1(this._rgb, mode);
          };

          chroma_1.css = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["css"]),
            ))();
          };

          input.format.css = css2rgb_1;

          input.autodetect.push({
            p: 5,
            test: function(h) {
              var rest = [],
                len = arguments.length - 1;
              while (len-- > 0) rest[len] = arguments[len + 1];

              if (!rest.length && type$3(h) === "string" && css2rgb_1.test(h)) {
                return "css";
              }
            },
          });

          var unpack$8 = utils.unpack;

          input.format.gl = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var rgb = unpack$8(args, "rgba");
            rgb[0] *= 255;
            rgb[1] *= 255;
            rgb[2] *= 255;
            return rgb;
          };

          chroma_1.gl = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["gl"]),
            ))();
          };

          Color_1.prototype.gl = function() {
            var rgb = this._rgb;
            return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];
          };

          var unpack$9 = utils.unpack;

          var rgb2hcg = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var ref = unpack$9(args, "rgb");
            var r = ref[0];
            var g = ref[1];
            var b = ref[2];
            var min = Math.min(r, g, b);
            var max = Math.max(r, g, b);
            var delta = max - min;
            var c = (delta * 100) / 255;
            var _g = (min / (255 - delta)) * 100;
            var h;
            if (delta === 0) {
              h = Number.NaN;
            } else {
              if (r === max) {
                h = (g - b) / delta;
              }
              if (g === max) {
                h = 2 + (b - r) / delta;
              }
              if (b === max) {
                h = 4 + (r - g) / delta;
              }
              h *= 60;
              if (h < 0) {
                h += 360;
              }
            }
            return [h, c, _g];
          };

          var rgb2hcg_1 = rgb2hcg;

          var unpack$a = utils.unpack;
          var floor = Math.floor;

          /*
           * this is basically just HSV with some minor tweaks
           *
           * hue.. [0..360]
           * chroma .. [0..1]
           * grayness .. [0..1]
           */

          var hcg2rgb = function() {
            var assign, assign$1, assign$2, assign$3, assign$4, assign$5;

            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];
            args = unpack$a(args, "hcg");
            var h = args[0];
            var c = args[1];
            var _g = args[2];
            var r, g, b;
            _g = _g * 255;
            var _c = c * 255;
            if (c === 0) {
              r = g = b = _g;
            } else {
              if (h === 360) {
                h = 0;
              }
              if (h > 360) {
                h -= 360;
              }
              if (h < 0) {
                h += 360;
              }
              h /= 60;
              var i = floor(h);
              var f = h - i;
              var p = _g * (1 - c);
              var q = p + _c * (1 - f);
              var t = p + _c * f;
              var v = p + _c;
              switch (i) {
                case 0:
                  (assign = [v, t, p]),
                    (r = assign[0]),
                    (g = assign[1]),
                    (b = assign[2]);
                  break;
                case 1:
                  (assign$1 = [q, v, p]),
                    (r = assign$1[0]),
                    (g = assign$1[1]),
                    (b = assign$1[2]);
                  break;
                case 2:
                  (assign$2 = [p, v, t]),
                    (r = assign$2[0]),
                    (g = assign$2[1]),
                    (b = assign$2[2]);
                  break;
                case 3:
                  (assign$3 = [p, q, v]),
                    (r = assign$3[0]),
                    (g = assign$3[1]),
                    (b = assign$3[2]);
                  break;
                case 4:
                  (assign$4 = [t, p, v]),
                    (r = assign$4[0]),
                    (g = assign$4[1]),
                    (b = assign$4[2]);
                  break;
                case 5:
                  (assign$5 = [v, p, q]),
                    (r = assign$5[0]),
                    (g = assign$5[1]),
                    (b = assign$5[2]);
                  break;
              }
            }
            return [r, g, b, args.length > 3 ? args[3] : 1];
          };

          var hcg2rgb_1 = hcg2rgb;

          var unpack$b = utils.unpack;
          var type$4 = utils.type;

          Color_1.prototype.hcg = function() {
            return rgb2hcg_1(this._rgb);
          };

          chroma_1.hcg = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["hcg"]),
            ))();
          };

          input.format.hcg = hcg2rgb_1;

          input.autodetect.push({
            p: 1,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              args = unpack$b(args, "hcg");
              if (type$4(args) === "array" && args.length === 3) {
                return "hcg";
              }
            },
          });

          var unpack$c = utils.unpack;
          var last$4 = utils.last;
          var round$3 = Math.round;

          var rgb2hex = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var ref = unpack$c(args, "rgba");
            var r = ref[0];
            var g = ref[1];
            var b = ref[2];
            var a = ref[3];
            var mode = last$4(args) || "auto";
            if (a === undefined) {
              a = 1;
            }
            if (mode === "auto") {
              mode = a < 1 ? "rgba" : "rgb";
            }
            r = round$3(r);
            g = round$3(g);
            b = round$3(b);
            var u = (r << 16) | (g << 8) | b;
            var str = "000000" + u.toString(16); //#.toUpperCase();
            str = str.substr(str.length - 6);
            var hxa = "0" + round$3(a * 255).toString(16);
            hxa = hxa.substr(hxa.length - 2);
            switch (mode.toLowerCase()) {
              case "rgba":
                return "#" + str + hxa;
              case "argb":
                return "#" + hxa + str;
              default:
                return "#" + str;
            }
          };

          var rgb2hex_1 = rgb2hex;

          var type$5 = utils.type;

          Color_1.prototype.hex = function(mode) {
            return rgb2hex_1(this._rgb, mode);
          };

          chroma_1.hex = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["hex"]),
            ))();
          };

          input.format.hex = hex2rgb_1;
          input.autodetect.push({
            p: 4,
            test: function(h) {
              var rest = [],
                len = arguments.length - 1;
              while (len-- > 0) rest[len] = arguments[len + 1];

              if (
                !rest.length &&
                type$5(h) === "string" &&
                [3, 4, 6, 7, 8, 9].includes(h.length)
              ) {
                return "hex";
              }
            },
          });

          var unpack$d = utils.unpack;
          var TWOPI = utils.TWOPI;
          var min = Math.min;
          var sqrt = Math.sqrt;
          var acos = Math.acos;

          var rgb2hsi = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            /*
        borrowed from here:
        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp
        */
            var ref = unpack$d(args, "rgb");
            var r = ref[0];
            var g = ref[1];
            var b = ref[2];
            r /= 255;
            g /= 255;
            b /= 255;
            var h;
            var min_ = min(r, g, b);
            var i = (r + g + b) / 3;
            var s = i > 0 ? 1 - min_ / i : 0;
            if (s === 0) {
              h = NaN;
            } else {
              h = (r - g + (r - b)) / 2;
              h /= sqrt((r - g) * (r - g) + (r - b) * (g - b));
              h = acos(h);
              if (b > g) {
                h = TWOPI - h;
              }
              h /= TWOPI;
            }
            return [h * 360, s, i];
          };

          var rgb2hsi_1 = rgb2hsi;

          var unpack$e = utils.unpack;
          var limit$1 = utils.limit;
          var TWOPI$1 = utils.TWOPI;
          var PITHIRD = utils.PITHIRD;
          var cos = Math.cos;

          /*
           * hue [0..360]
           * saturation [0..1]
           * intensity [0..1]
           */
          var hsi2rgb = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            /*
        borrowed from here:
        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp
        */
            args = unpack$e(args, "hsi");
            var h = args[0];
            var s = args[1];
            var i = args[2];
            var r, g, b;

            if (isNaN(h)) {
              h = 0;
            }
            if (isNaN(s)) {
              s = 0;
            }
            // normalize hue
            if (h > 360) {
              h -= 360;
            }
            if (h < 0) {
              h += 360;
            }
            h /= 360;
            if (h < 1 / 3) {
              b = (1 - s) / 3;
              r = (1 + (s * cos(TWOPI$1 * h)) / cos(PITHIRD - TWOPI$1 * h)) / 3;
              g = 1 - (b + r);
            } else if (h < 2 / 3) {
              h -= 1 / 3;
              r = (1 - s) / 3;
              g = (1 + (s * cos(TWOPI$1 * h)) / cos(PITHIRD - TWOPI$1 * h)) / 3;
              b = 1 - (r + g);
            } else {
              h -= 2 / 3;
              g = (1 - s) / 3;
              b = (1 + (s * cos(TWOPI$1 * h)) / cos(PITHIRD - TWOPI$1 * h)) / 3;
              r = 1 - (g + b);
            }
            r = limit$1(i * r * 3);
            g = limit$1(i * g * 3);
            b = limit$1(i * b * 3);
            return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];
          };

          var hsi2rgb_1 = hsi2rgb;

          var unpack$f = utils.unpack;
          var type$6 = utils.type;

          Color_1.prototype.hsi = function() {
            return rgb2hsi_1(this._rgb);
          };

          chroma_1.hsi = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["hsi"]),
            ))();
          };

          input.format.hsi = hsi2rgb_1;

          input.autodetect.push({
            p: 2,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              args = unpack$f(args, "hsi");
              if (type$6(args) === "array" && args.length === 3) {
                return "hsi";
              }
            },
          });

          var unpack$g = utils.unpack;
          var type$7 = utils.type;

          Color_1.prototype.hsl = function() {
            return rgb2hsl_1(this._rgb);
          };

          chroma_1.hsl = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["hsl"]),
            ))();
          };

          input.format.hsl = hsl2rgb_1;

          input.autodetect.push({
            p: 2,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              args = unpack$g(args, "hsl");
              if (type$7(args) === "array" && args.length === 3) {
                return "hsl";
              }
            },
          });

          var unpack$h = utils.unpack;
          var min$1 = Math.min;
          var max$1 = Math.max;

          /*
           * supported arguments:
           * - rgb2hsv(r,g,b)
           * - rgb2hsv([r,g,b])
           * - rgb2hsv({r,g,b})
           */
          var rgb2hsl$1 = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            args = unpack$h(args, "rgb");
            var r = args[0];
            var g = args[1];
            var b = args[2];
            var min_ = min$1(r, g, b);
            var max_ = max$1(r, g, b);
            var delta = max_ - min_;
            var h, s, v;
            v = max_ / 255.0;
            if (max_ === 0) {
              h = Number.NaN;
              s = 0;
            } else {
              s = delta / max_;
              if (r === max_) {
                h = (g - b) / delta;
              }
              if (g === max_) {
                h = 2 + (b - r) / delta;
              }
              if (b === max_) {
                h = 4 + (r - g) / delta;
              }
              h *= 60;
              if (h < 0) {
                h += 360;
              }
            }
            return [h, s, v];
          };

          var rgb2hsv = rgb2hsl$1;

          var unpack$i = utils.unpack;
          var floor$1 = Math.floor;

          var hsv2rgb = function() {
            var assign, assign$1, assign$2, assign$3, assign$4, assign$5;

            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];
            args = unpack$i(args, "hsv");
            var h = args[0];
            var s = args[1];
            var v = args[2];
            var r, g, b;
            v *= 255;
            if (s === 0) {
              r = g = b = v;
            } else {
              if (h === 360) {
                h = 0;
              }
              if (h > 360) {
                h -= 360;
              }
              if (h < 0) {
                h += 360;
              }
              h /= 60;

              var i = floor$1(h);
              var f = h - i;
              var p = v * (1 - s);
              var q = v * (1 - s * f);
              var t = v * (1 - s * (1 - f));

              switch (i) {
                case 0:
                  (assign = [v, t, p]),
                    (r = assign[0]),
                    (g = assign[1]),
                    (b = assign[2]);
                  break;
                case 1:
                  (assign$1 = [q, v, p]),
                    (r = assign$1[0]),
                    (g = assign$1[1]),
                    (b = assign$1[2]);
                  break;
                case 2:
                  (assign$2 = [p, v, t]),
                    (r = assign$2[0]),
                    (g = assign$2[1]),
                    (b = assign$2[2]);
                  break;
                case 3:
                  (assign$3 = [p, q, v]),
                    (r = assign$3[0]),
                    (g = assign$3[1]),
                    (b = assign$3[2]);
                  break;
                case 4:
                  (assign$4 = [t, p, v]),
                    (r = assign$4[0]),
                    (g = assign$4[1]),
                    (b = assign$4[2]);
                  break;
                case 5:
                  (assign$5 = [v, p, q]),
                    (r = assign$5[0]),
                    (g = assign$5[1]),
                    (b = assign$5[2]);
                  break;
              }
            }
            return [r, g, b, args.length > 3 ? args[3] : 1];
          };

          var hsv2rgb_1 = hsv2rgb;

          var unpack$j = utils.unpack;
          var type$8 = utils.type;

          Color_1.prototype.hsv = function() {
            return rgb2hsv(this._rgb);
          };

          chroma_1.hsv = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["hsv"]),
            ))();
          };

          input.format.hsv = hsv2rgb_1;

          input.autodetect.push({
            p: 2,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              args = unpack$j(args, "hsv");
              if (type$8(args) === "array" && args.length === 3) {
                return "hsv";
              }
            },
          });

          var labConstants = {
            // Corresponds roughly to RGB brighter/darker
            Kn: 18,

            // D65 standard referent
            Xn: 0.95047,
            Yn: 1,
            Zn: 1.08883,

            t0: 0.137931034, // 4 / 29
            t1: 0.206896552, // 6 / 29
            t2: 0.12841855, // 3 * t1 * t1
            t3: 0.008856452, // t1 * t1 * t1
          };

          var unpack$k = utils.unpack;
          var pow = Math.pow;

          var rgb2lab = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var ref = unpack$k(args, "rgb");
            var r = ref[0];
            var g = ref[1];
            var b = ref[2];
            var ref$1 = rgb2xyz(r, g, b);
            var x = ref$1[0];
            var y = ref$1[1];
            var z = ref$1[2];
            var l = 116 * y - 16;
            return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];
          };

          var rgb_xyz = function(r) {
            if ((r /= 255) <= 0.04045) {
              return r / 12.92;
            }
            return pow((r + 0.055) / 1.055, 2.4);
          };

          var xyz_lab = function(t) {
            if (t > labConstants.t3) {
              return pow(t, 1 / 3);
            }
            return t / labConstants.t2 + labConstants.t0;
          };

          var rgb2xyz = function(r, g, b) {
            r = rgb_xyz(r);
            g = rgb_xyz(g);
            b = rgb_xyz(b);
            var x = xyz_lab(
              (0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / labConstants.Xn,
            );
            var y = xyz_lab(
              (0.2126729 * r + 0.7151522 * g + 0.072175 * b) / labConstants.Yn,
            );
            var z = xyz_lab(
              (0.0193339 * r + 0.119192 * g + 0.9503041 * b) / labConstants.Zn,
            );
            return [x, y, z];
          };

          var rgb2lab_1 = rgb2lab;

          var unpack$l = utils.unpack;
          var pow$1 = Math.pow;

          /*
           * L* [0..100]
           * a [-100..100]
           * b [-100..100]
           */
          var lab2rgb = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            args = unpack$l(args, "lab");
            var l = args[0];
            var a = args[1];
            var b = args[2];
            var x, y, z, r, g, b_;

            y = (l + 16) / 116;
            x = isNaN(a) ? y : y + a / 500;
            z = isNaN(b) ? y : y - b / 200;

            y = labConstants.Yn * lab_xyz(y);
            x = labConstants.Xn * lab_xyz(x);
            z = labConstants.Zn * lab_xyz(z);

            r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB
            g = xyz_rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z);
            b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);

            return [r, g, b_, args.length > 3 ? args[3] : 1];
          };

          var xyz_rgb = function(r) {
            return (
              255 *
              (r <= 0.00304 ? 12.92 * r : 1.055 * pow$1(r, 1 / 2.4) - 0.055)
            );
          };

          var lab_xyz = function(t) {
            return t > labConstants.t1
              ? t * t * t
              : labConstants.t2 * (t - labConstants.t0);
          };

          var lab2rgb_1 = lab2rgb;

          var unpack$m = utils.unpack;
          var type$9 = utils.type;

          Color_1.prototype.lab = function() {
            return rgb2lab_1(this._rgb);
          };

          chroma_1.lab = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["lab"]),
            ))();
          };

          input.format.lab = lab2rgb_1;

          input.autodetect.push({
            p: 2,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              args = unpack$m(args, "lab");
              if (type$9(args) === "array" && args.length === 3) {
                return "lab";
              }
            },
          });

          var unpack$n = utils.unpack;
          var RAD2DEG = utils.RAD2DEG;
          var sqrt$1 = Math.sqrt;
          var atan2 = Math.atan2;
          var round$4 = Math.round;

          var lab2lch = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var ref = unpack$n(args, "lab");
            var l = ref[0];
            var a = ref[1];
            var b = ref[2];
            var c = sqrt$1(a * a + b * b);
            var h = (atan2(b, a) * RAD2DEG + 360) % 360;
            if (round$4(c * 10000) === 0) {
              h = Number.NaN;
            }
            return [l, c, h];
          };

          var lab2lch_1 = lab2lch;

          var unpack$o = utils.unpack;

          var rgb2lch = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var ref = unpack$o(args, "rgb");
            var r = ref[0];
            var g = ref[1];
            var b = ref[2];
            var ref$1 = rgb2lab_1(r, g, b);
            var l = ref$1[0];
            var a = ref$1[1];
            var b_ = ref$1[2];
            return lab2lch_1(l, a, b_);
          };

          var rgb2lch_1 = rgb2lch;

          var unpack$p = utils.unpack;
          var DEG2RAD = utils.DEG2RAD;
          var sin = Math.sin;
          var cos$1 = Math.cos;

          var lch2lab = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            /*
        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.
        These formulas were invented by David Dalrymple to obtain maximum contrast without going
        out of gamut if the parameters are in the range 0-1.

        A saturation multiplier was added by Gregor Aisch
        */
            var ref = unpack$p(args, "lch");
            var l = ref[0];
            var c = ref[1];
            var h = ref[2];
            if (isNaN(h)) {
              h = 0;
            }
            h = h * DEG2RAD;
            return [l, cos$1(h) * c, sin(h) * c];
          };

          var lch2lab_1 = lch2lab;

          var unpack$q = utils.unpack;

          var lch2rgb = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            args = unpack$q(args, "lch");
            var l = args[0];
            var c = args[1];
            var h = args[2];
            var ref = lch2lab_1(l, c, h);
            var L = ref[0];
            var a = ref[1];
            var b_ = ref[2];
            var ref$1 = lab2rgb_1(L, a, b_);
            var r = ref$1[0];
            var g = ref$1[1];
            var b = ref$1[2];
            return [r, g, b, args.length > 3 ? args[3] : 1];
          };

          var lch2rgb_1 = lch2rgb;

          var unpack$r = utils.unpack;

          var hcl2rgb = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var hcl = unpack$r(args, "hcl").reverse();
            return lch2rgb_1.apply(void 0, hcl);
          };

          var hcl2rgb_1 = hcl2rgb;

          var unpack$s = utils.unpack;
          var type$a = utils.type;

          Color_1.prototype.lch = function() {
            return rgb2lch_1(this._rgb);
          };
          Color_1.prototype.hcl = function() {
            return rgb2lch_1(this._rgb).reverse();
          };

          chroma_1.lch = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["lch"]),
            ))();
          };
          chroma_1.hcl = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["hcl"]),
            ))();
          };

          input.format.lch = lch2rgb_1;
          input.format.hcl = hcl2rgb_1;

          ["lch", "hcl"].forEach(function(m) {
            return input.autodetect.push({
              p: 2,
              test: function() {
                var args = [],
                  len = arguments.length;
                while (len--) args[len] = arguments[len];

                args = unpack$s(args, m);
                if (type$a(args) === "array" && args.length === 3) {
                  return m;
                }
              },
            });
          });

          var type$b = utils.type;

          Color_1.prototype.name = function() {
            var hex = rgb2hex_1(this._rgb, "rgb");
            for (
              var i = 0, list = Object.keys(w3cx11_1);
              i < list.length;
              i += 1
            ) {
              var n = list[i];

              if (w3cx11_1[n] === hex) {
                return n.toLowerCase();
              }
            }
            return hex;
          };

          input.format.named = function(name) {
            name = name.toLowerCase();
            if (w3cx11_1[name]) {
              return hex2rgb_1(w3cx11_1[name]);
            }
            throw new Error("unknown color name: " + name);
          };

          input.autodetect.push({
            p: 5,
            test: function(h) {
              var rest = [],
                len = arguments.length - 1;
              while (len-- > 0) rest[len] = arguments[len + 1];

              if (
                !rest.length &&
                type$b(h) === "string" &&
                w3cx11_1[h.toLowerCase()]
              ) {
                return "named";
              }
            },
          });

          var unpack$t = utils.unpack;

          var rgb2num = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var ref = unpack$t(args, "rgb");
            var r = ref[0];
            var g = ref[1];
            var b = ref[2];
            return (r << 16) + (g << 8) + b;
          };

          var rgb2num_1 = rgb2num;

          var type$c = utils.type;

          var num2rgb = function(num) {
            if (type$c(num) == "number" && num >= 0 && num <= 0xffffff) {
              var r = num >> 16;
              var g = (num >> 8) & 0xff;
              var b = num & 0xff;
              return [r, g, b, 1];
            }
            throw new Error("unknown num color: " + num);
          };

          var num2rgb_1 = num2rgb;

          var type$d = utils.type;

          Color_1.prototype.num = function() {
            return rgb2num_1(this._rgb);
          };

          chroma_1.num = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["num"]),
            ))();
          };

          input.format.num = num2rgb_1;

          input.autodetect.push({
            p: 5,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              if (
                args.length === 1 &&
                type$d(args[0]) === "number" &&
                args[0] >= 0 &&
                args[0] <= 0xffffff
              ) {
                return "num";
              }
            },
          });

          var unpack$u = utils.unpack;
          var type$e = utils.type;
          var round$5 = Math.round;

          Color_1.prototype.rgb = function(rnd) {
            if (rnd === void 0) rnd = true;

            if (rnd === false) {
              return this._rgb.slice(0, 3);
            }
            return this._rgb.slice(0, 3).map(round$5);
          };

          Color_1.prototype.rgba = function(rnd) {
            if (rnd === void 0) rnd = true;

            return this._rgb.slice(0, 4).map(function(v, i) {
              return i < 3 ? (rnd === false ? v : round$5(v)) : v;
            });
          };

          chroma_1.rgb = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["rgb"]),
            ))();
          };

          input.format.rgb = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var rgba = unpack$u(args, "rgba");
            if (rgba[3] === undefined) {
              rgba[3] = 1;
            }
            return rgba;
          };

          input.autodetect.push({
            p: 3,
            test: function() {
              var args = [],
                len = arguments.length;
              while (len--) args[len] = arguments[len];

              args = unpack$u(args, "rgba");
              if (
                type$e(args) === "array" &&
                (args.length === 3 ||
                  (args.length === 4 &&
                    type$e(args[3]) == "number" &&
                    args[3] >= 0 &&
                    args[3] <= 1))
              ) {
                return "rgb";
              }
            },
          });

          /*
           * Based on implementation by Neil Bartlett
           * https://github.com/neilbartlett/color-temperature
           */

          var log = Math.log;

          var temperature2rgb = function(kelvin) {
            var temp = kelvin / 100;
            var r, g, b;
            if (temp < 66) {
              r = 255;
              g =
                -155.25485562709179 -
                0.44596950469579133 * (g = temp - 2) +
                104.49216199393888 * log(g);
              b =
                temp < 20
                  ? 0
                  : -254.76935184120902 +
                    0.8274096064007395 * (b = temp - 10) +
                    115.67994401066147 * log(b);
            } else {
              r =
                351.97690566805693 +
                0.114206453784165 * (r = temp - 55) -
                40.25366309332127 * log(r);
              g =
                325.4494125711974 +
                0.07943456536662342 * (g = temp - 50) -
                28.0852963507957 * log(g);
              b = 255;
            }
            return [r, g, b, 1];
          };

          var temperature2rgb_1 = temperature2rgb;

          /*
           * Based on implementation by Neil Bartlett
           * https://github.com/neilbartlett/color-temperature
           **/

          var unpack$v = utils.unpack;
          var round$6 = Math.round;

          var rgb2temperature = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            var rgb = unpack$v(args, "rgb");
            var r = rgb[0],
              b = rgb[2];
            var minTemp = 1000;
            var maxTemp = 40000;
            var eps = 0.4;
            var temp;
            while (maxTemp - minTemp > eps) {
              temp = (maxTemp + minTemp) * 0.5;
              var rgb$1 = temperature2rgb_1(temp);
              if (rgb$1[2] / rgb$1[0] >= b / r) {
                maxTemp = temp;
              } else {
                minTemp = temp;
              }
            }
            return round$6(temp);
          };

          var rgb2temperature_1 = rgb2temperature;

          Color_1.prototype.temp = Color_1.prototype.kelvin = Color_1.prototype.temperature = function() {
            return rgb2temperature_1(this._rgb);
          };

          chroma_1.temp = chroma_1.kelvin = chroma_1.temperature = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            return new (Function.prototype.bind.apply(
              Color_1,
              [null].concat(args, ["temp"]),
            ))();
          };

          input.format.temp = input.format.kelvin = input.format.temperature = temperature2rgb_1;

          var type$f = utils.type;

          Color_1.prototype.alpha = function(a, mutate) {
            if (mutate === void 0) mutate = false;

            if (a !== undefined && type$f(a) === "number") {
              if (mutate) {
                this._rgb[3] = a;
                return this;
              }
              return new Color_1(
                [this._rgb[0], this._rgb[1], this._rgb[2], a],
                "rgb",
              );
            }
            return this._rgb[3];
          };

          Color_1.prototype.clipped = function() {
            return this._rgb._clipped || false;
          };

          Color_1.prototype.darken = function(amount) {
            if (amount === void 0) amount = 1;

            var me = this;
            var lab = me.lab();
            lab[0] -= labConstants.Kn * amount;
            return new Color_1(lab, "lab").alpha(me.alpha(), true);
          };

          Color_1.prototype.brighten = function(amount) {
            if (amount === void 0) amount = 1;

            return this.darken(-amount);
          };

          Color_1.prototype.darker = Color_1.prototype.darken;
          Color_1.prototype.brighter = Color_1.prototype.brighten;

          Color_1.prototype.get = function(mc) {
            var ref = mc.split(".");
            var mode = ref[0];
            var channel = ref[1];
            var src = this[mode]();
            if (channel) {
              var i = mode.indexOf(channel);
              if (i > -1) {
                return src[i];
              }
              throw new Error(
                "unknown channel " + channel + " in mode " + mode,
              );
            } else {
              return src;
            }
          };

          var type$g = utils.type;
          var pow$2 = Math.pow;

          var EPS = 1e-7;
          var MAX_ITER = 20;

          Color_1.prototype.luminance = function(lum) {
            if (lum !== undefined && type$g(lum) === "number") {
              if (lum === 0) {
                // return pure black
                return new Color_1([0, 0, 0, this._rgb[3]], "rgb");
              }
              if (lum === 1) {
                // return pure white
                return new Color_1([255, 255, 255, this._rgb[3]], "rgb");
              }
              // compute new color using...
              var cur_lum = this.luminance();
              var mode = "rgb";
              var max_iter = MAX_ITER;

              var test = function(low, high) {
                var mid = low.interpolate(high, 0.5, mode);
                var lm = mid.luminance();
                if (Math.abs(lum - lm) < EPS || !max_iter--) {
                  // close enough
                  return mid;
                }
                return lm > lum ? test(low, mid) : test(mid, high);
              };

              var rgb = (cur_lum > lum
                ? test(new Color_1([0, 0, 0]), this)
                : test(this, new Color_1([255, 255, 255]))
              ).rgb();
              return new Color_1(rgb.concat([this._rgb[3]]));
            }
            return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));
          };

          var rgb2luminance = function(r, g, b) {
            // relative luminance
            // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
            r = luminance_x(r);
            g = luminance_x(g);
            b = luminance_x(b);
            return 0.2126 * r + 0.7152 * g + 0.0722 * b;
          };

          var luminance_x = function(x) {
            x /= 255;
            return x <= 0.03928 ? x / 12.92 : pow$2((x + 0.055) / 1.055, 2.4);
          };

          var interpolator = {};

          var type$h = utils.type;

          var mix = function(col1, col2, f) {
            if (f === void 0) f = 0.5;
            var rest = [],
              len = arguments.length - 3;
            while (len-- > 0) rest[len] = arguments[len + 3];

            var mode = rest[0] || "lrgb";
            if (!interpolator[mode] && !rest.length) {
              // fall back to the first supported mode
              mode = Object.keys(interpolator)[0];
            }
            if (!interpolator[mode]) {
              throw new Error("interpolation mode " + mode + " is not defined");
            }
            if (type$h(col1) !== "object") {
              col1 = new Color_1(col1);
            }
            if (type$h(col2) !== "object") {
              col2 = new Color_1(col2);
            }
            return interpolator[mode](col1, col2, f).alpha(
              col1.alpha() + f * (col2.alpha() - col1.alpha()),
            );
          };

          Color_1.prototype.mix = Color_1.prototype.interpolate = function(
            col2,
            f,
          ) {
            if (f === void 0) f = 0.5;
            var rest = [],
              len = arguments.length - 2;
            while (len-- > 0) rest[len] = arguments[len + 2];

            return mix.apply(void 0, [this, col2, f].concat(rest));
          };

          Color_1.prototype.premultiply = function(mutate) {
            if (mutate === void 0) mutate = false;

            var rgb = this._rgb;
            var a = rgb[3];
            if (mutate) {
              this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];
              return this;
            } else {
              return new Color_1(
                [rgb[0] * a, rgb[1] * a, rgb[2] * a, a],
                "rgb",
              );
            }
          };

          Color_1.prototype.saturate = function(amount) {
            if (amount === void 0) amount = 1;

            var me = this;
            var lch = me.lch();
            lch[1] += labConstants.Kn * amount;
            if (lch[1] < 0) {
              lch[1] = 0;
            }
            return new Color_1(lch, "lch").alpha(me.alpha(), true);
          };

          Color_1.prototype.desaturate = function(amount) {
            if (amount === void 0) amount = 1;

            return this.saturate(-amount);
          };

          var type$i = utils.type;

          Color_1.prototype.set = function(mc, value, mutate) {
            if (mutate === void 0) mutate = false;

            var ref = mc.split(".");
            var mode = ref[0];
            var channel = ref[1];
            var src = this[mode]();
            if (channel) {
              var i = mode.indexOf(channel);
              if (i > -1) {
                if (type$i(value) == "string") {
                  switch (value.charAt(0)) {
                    case "+":
                      src[i] += +value;
                      break;
                    case "-":
                      src[i] += +value;
                      break;
                    case "*":
                      src[i] *= +value.substr(1);
                      break;
                    case "/":
                      src[i] /= +value.substr(1);
                      break;
                    default:
                      src[i] = +value;
                  }
                } else if (type$i(value) === "number") {
                  src[i] = value;
                } else {
                  throw new Error("unsupported value for Color.set");
                }
                var out = new Color_1(src, mode);
                if (mutate) {
                  this._rgb = out._rgb;
                  return this;
                }
                return out;
              }
              throw new Error(
                "unknown channel " + channel + " in mode " + mode,
              );
            } else {
              return src;
            }
          };

          var rgb$1 = function(col1, col2, f) {
            var xyz0 = col1._rgb;
            var xyz1 = col2._rgb;
            return new Color_1(
              xyz0[0] + f * (xyz1[0] - xyz0[0]),
              xyz0[1] + f * (xyz1[1] - xyz0[1]),
              xyz0[2] + f * (xyz1[2] - xyz0[2]),
              "rgb",
            );
          };

          // register interpolator
          interpolator.rgb = rgb$1;

          var sqrt$2 = Math.sqrt;
          var pow$3 = Math.pow;

          var lrgb = function(col1, col2, f) {
            var ref = col1._rgb;
            var x1 = ref[0];
            var y1 = ref[1];
            var z1 = ref[2];
            var ref$1 = col2._rgb;
            var x2 = ref$1[0];
            var y2 = ref$1[1];
            var z2 = ref$1[2];
            return new Color_1(
              sqrt$2(pow$3(x1, 2) * (1 - f) + pow$3(x2, 2) * f),
              sqrt$2(pow$3(y1, 2) * (1 - f) + pow$3(y2, 2) * f),
              sqrt$2(pow$3(z1, 2) * (1 - f) + pow$3(z2, 2) * f),
              "rgb",
            );
          };

          // register interpolator
          interpolator.lrgb = lrgb;

          var lab$1 = function(col1, col2, f) {
            var xyz0 = col1.lab();
            var xyz1 = col2.lab();
            return new Color_1(
              xyz0[0] + f * (xyz1[0] - xyz0[0]),
              xyz0[1] + f * (xyz1[1] - xyz0[1]),
              xyz0[2] + f * (xyz1[2] - xyz0[2]),
              "lab",
            );
          };

          // register interpolator
          interpolator.lab = lab$1;

          var _hsx = function(col1, col2, f, m) {
            var assign, assign$1;

            var xyz0, xyz1;
            if (m === "hsl") {
              xyz0 = col1.hsl();
              xyz1 = col2.hsl();
            } else if (m === "hsv") {
              xyz0 = col1.hsv();
              xyz1 = col2.hsv();
            } else if (m === "hcg") {
              xyz0 = col1.hcg();
              xyz1 = col2.hcg();
            } else if (m === "hsi") {
              xyz0 = col1.hsi();
              xyz1 = col2.hsi();
            } else if (m === "lch" || m === "hcl") {
              m = "hcl";
              xyz0 = col1.hcl();
              xyz1 = col2.hcl();
            }

            var hue0, hue1, sat0, sat1, lbv0, lbv1;
            if (m.substr(0, 1) === "h") {
              (assign = xyz0),
                (hue0 = assign[0]),
                (sat0 = assign[1]),
                (lbv0 = assign[2]);
              (assign$1 = xyz1),
                (hue1 = assign$1[0]),
                (sat1 = assign$1[1]),
                (lbv1 = assign$1[2]);
            }

            var sat, hue, lbv, dh;

            if (!isNaN(hue0) && !isNaN(hue1)) {
              // both colors have hue
              if (hue1 > hue0 && hue1 - hue0 > 180) {
                dh = hue1 - (hue0 + 360);
              } else if (hue1 < hue0 && hue0 - hue1 > 180) {
                dh = hue1 + 360 - hue0;
              } else {
                dh = hue1 - hue0;
              }
              hue = hue0 + f * dh;
            } else if (!isNaN(hue0)) {
              hue = hue0;
              if ((lbv1 == 1 || lbv1 == 0) && m != "hsv") {
                sat = sat0;
              }
            } else if (!isNaN(hue1)) {
              hue = hue1;
              if ((lbv0 == 1 || lbv0 == 0) && m != "hsv") {
                sat = sat1;
              }
            } else {
              hue = Number.NaN;
            }

            if (sat === undefined) {
              sat = sat0 + f * (sat1 - sat0);
            }
            lbv = lbv0 + f * (lbv1 - lbv0);
            return new Color_1([hue, sat, lbv], m);
          };

          var lch$1 = function(col1, col2, f) {
            return _hsx(col1, col2, f, "lch");
          };

          // register interpolator
          interpolator.lch = lch$1;
          interpolator.hcl = lch$1;

          var num$1 = function(col1, col2, f) {
            var c1 = col1.num();
            var c2 = col2.num();
            return new Color_1(c1 + f * (c2 - c1), "num");
          };

          // register interpolator
          interpolator.num = num$1;

          var hcg$1 = function(col1, col2, f) {
            return _hsx(col1, col2, f, "hcg");
          };

          // register interpolator
          interpolator.hcg = hcg$1;

          var hsi$1 = function(col1, col2, f) {
            return _hsx(col1, col2, f, "hsi");
          };

          // register interpolator
          interpolator.hsi = hsi$1;

          var hsl$1 = function(col1, col2, f) {
            return _hsx(col1, col2, f, "hsl");
          };

          // register interpolator
          interpolator.hsl = hsl$1;

          var hsv$1 = function(col1, col2, f) {
            return _hsx(col1, col2, f, "hsv");
          };

          // register interpolator
          interpolator.hsv = hsv$1;

          var clip_rgb$2 = utils.clip_rgb;
          var pow$4 = Math.pow;
          var sqrt$3 = Math.sqrt;
          var PI$1 = Math.PI;
          var cos$2 = Math.cos;
          var sin$1 = Math.sin;
          var atan2$1 = Math.atan2;

          var average = function(colors, mode) {
            if (mode === void 0) mode = "lrgb";

            var l = colors.length;
            // convert colors to Color objects
            colors = colors.map(function(c) {
              return new Color_1(c);
            });
            if (mode === "lrgb") {
              return _average_lrgb(colors);
            }
            var first = colors.shift();
            var xyz = first.get(mode);
            var cnt = [];
            var dx = 0;
            var dy = 0;
            // initial color
            for (var i = 0; i < xyz.length; i++) {
              xyz[i] = xyz[i] || 0;
              cnt.push(isNaN(xyz[i]) ? 0 : 1);
              if (mode.charAt(i) === "h" && !isNaN(xyz[i])) {
                var A = (xyz[i] / 180) * PI$1;
                dx += cos$2(A);
                dy += sin$1(A);
              }
            }

            var alpha = first.alpha();
            colors.forEach(function(c) {
              var xyz2 = c.get(mode);
              alpha += c.alpha();
              for (var i = 0; i < xyz.length; i++) {
                if (!isNaN(xyz2[i])) {
                  cnt[i]++;
                  if (mode.charAt(i) === "h") {
                    var A = (xyz2[i] / 180) * PI$1;
                    dx += cos$2(A);
                    dy += sin$1(A);
                  } else {
                    xyz[i] += xyz2[i];
                  }
                }
              }
            });

            for (var i$1 = 0; i$1 < xyz.length; i$1++) {
              if (mode.charAt(i$1) === "h") {
                var A$1 = (atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1) * 180;
                while (A$1 < 0) {
                  A$1 += 360;
                }
                while (A$1 >= 360) {
                  A$1 -= 360;
                }
                xyz[i$1] = A$1;
              } else {
                xyz[i$1] = xyz[i$1] / cnt[i$1];
              }
            }
            alpha /= l;
            return new Color_1(xyz, mode).alpha(
              alpha > 0.99999 ? 1 : alpha,
              true,
            );
          };

          var _average_lrgb = function(colors) {
            var l = colors.length;
            var f = 1 / l;
            var xyz = [0, 0, 0, 0];
            for (var i = 0, list = colors; i < list.length; i += 1) {
              var col = list[i];

              var rgb = col._rgb;
              xyz[0] += pow$4(rgb[0], 2) * f;
              xyz[1] += pow$4(rgb[1], 2) * f;
              xyz[2] += pow$4(rgb[2], 2) * f;
              xyz[3] += rgb[3] * f;
            }
            xyz[0] = sqrt$3(xyz[0]);
            xyz[1] = sqrt$3(xyz[1]);
            xyz[2] = sqrt$3(xyz[2]);
            if (xyz[3] > 0.9999999) {
              xyz[3] = 1;
            }
            return new Color_1(clip_rgb$2(xyz));
          };

          // minimal multi-purpose interface

          // @requires utils color analyze

          var type$j = utils.type;

          var pow$5 = Math.pow;

          var scale = function(colors) {
            // constructor
            var _mode = "rgb";
            var _nacol = chroma_1("#ccc");
            var _spread = 0;
            // const _fixed = false;
            var _domain = [0, 1];
            var _pos = [];
            var _padding = [0, 0];
            var _classes = false;
            var _colors = [];
            var _out = false;
            var _min = 0;
            var _max = 1;
            var _correctLightness = false;
            var _colorCache = {};
            var _useCache = true;
            var _gamma = 1;

            // private methods

            var setColors = function(colors) {
              colors = colors || ["#fff", "#000"];
              if (
                colors &&
                type$j(colors) === "string" &&
                chroma_1.brewer &&
                chroma_1.brewer[colors.toLowerCase()]
              ) {
                colors = chroma_1.brewer[colors.toLowerCase()];
              }
              if (type$j(colors) === "array") {
                // handle single color
                if (colors.length === 1) {
                  colors = [colors[0], colors[0]];
                }
                // make a copy of the colors
                colors = colors.slice(0);
                // convert to chroma classes
                for (var c = 0; c < colors.length; c++) {
                  colors[c] = chroma_1(colors[c]);
                }
                // auto-fill color position
                _pos.length = 0;
                for (var c$1 = 0; c$1 < colors.length; c$1++) {
                  _pos.push(c$1 / (colors.length - 1));
                }
              }
              resetCache();
              return (_colors = colors);
            };

            var getClass = function(value) {
              if (_classes != null) {
                var n = _classes.length - 1;
                var i = 0;
                while (i < n && value >= _classes[i]) {
                  i++;
                }
                return i - 1;
              }
              return 0;
            };

            var tmap = function(t) {
              return t;
            };

            // const classifyValue = function(value) {
            //     let val = value;
            //     if (_classes.length > 2) {
            //         const n = _classes.length-1;
            //         const i = getClass(value);
            //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class
            //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class
            //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));
            //     }
            //     return val;
            // };

            var getColor = function(val, bypassMap) {
              var col, t;
              if (bypassMap == null) {
                bypassMap = false;
              }
              if (isNaN(val) || val === null) {
                return _nacol;
              }
              if (!bypassMap) {
                if (_classes && _classes.length > 2) {
                  // find the class
                  var c = getClass(val);
                  t = c / (_classes.length - 2);
                } else if (_max !== _min) {
                  // just interpolate between min/max
                  t = (val - _min) / (_max - _min);
                } else {
                  t = 1;
                }
              } else {
                t = val;
              }

              if (!bypassMap) {
                t = tmap(t); // lightness correction
              }

              if (_gamma !== 1) {
                t = pow$5(t, _gamma);
              }

              t = _padding[0] + t * (1 - _padding[0] - _padding[1]);

              t = Math.min(1, Math.max(0, t));

              var k = Math.floor(t * 10000);

              if (_useCache && _colorCache[k]) {
                col = _colorCache[k];
              } else {
                if (type$j(_colors) === "array") {
                  //for i in [0.._pos.length-1]
                  for (var i = 0; i < _pos.length; i++) {
                    var p = _pos[i];
                    if (t <= p) {
                      col = _colors[i];
                      break;
                    }
                    if (t >= p && i === _pos.length - 1) {
                      col = _colors[i];
                      break;
                    }
                    if (t > p && t < _pos[i + 1]) {
                      t = (t - p) / (_pos[i + 1] - p);
                      col = chroma_1.interpolate(
                        _colors[i],
                        _colors[i + 1],
                        t,
                        _mode,
                      );
                      break;
                    }
                  }
                } else if (type$j(_colors) === "function") {
                  col = _colors(t);
                }
                if (_useCache) {
                  _colorCache[k] = col;
                }
              }
              return col;
            };

            var resetCache = function() {
              return (_colorCache = {});
            };

            setColors(colors);

            // public interface

            var f = function(v) {
              var c = chroma_1(getColor(v));
              if (_out && c[_out]) {
                return c[_out]();
              } else {
                return c;
              }
            };

            f.classes = function(classes) {
              if (classes != null) {
                if (type$j(classes) === "array") {
                  _classes = classes;
                  _domain = [classes[0], classes[classes.length - 1]];
                } else {
                  var d = chroma_1.analyze(_domain);
                  if (classes === 0) {
                    _classes = [d.min, d.max];
                  } else {
                    _classes = chroma_1.limits(d, "e", classes);
                  }
                }
                return f;
              }
              return _classes;
            };

            f.domain = function(domain) {
              if (!arguments.length) {
                return _domain;
              }
              _min = domain[0];
              _max = domain[domain.length - 1];
              _pos = [];
              var k = _colors.length;
              if (domain.length === k && _min !== _max) {
                // update positions
                for (
                  var i = 0, list = Array.from(domain);
                  i < list.length;
                  i += 1
                ) {
                  var d = list[i];

                  _pos.push((d - _min) / (_max - _min));
                }
              } else {
                for (var c = 0; c < k; c++) {
                  _pos.push(c / (k - 1));
                }
              }
              _domain = [_min, _max];
              return f;
            };

            f.mode = function(_m) {
              if (!arguments.length) {
                return _mode;
              }
              _mode = _m;
              resetCache();
              return f;
            };

            f.range = function(colors, _pos) {
              setColors(colors, _pos);
              return f;
            };

            f.out = function(_o) {
              _out = _o;
              return f;
            };

            f.spread = function(val) {
              if (!arguments.length) {
                return _spread;
              }
              _spread = val;
              return f;
            };

            f.correctLightness = function(v) {
              if (v == null) {
                v = true;
              }
              _correctLightness = v;
              resetCache();
              if (_correctLightness) {
                tmap = function(t) {
                  var L0 = getColor(0, true).lab()[0];
                  var L1 = getColor(1, true).lab()[0];
                  var pol = L0 > L1;
                  var L_actual = getColor(t, true).lab()[0];
                  var L_ideal = L0 + (L1 - L0) * t;
                  var L_diff = L_actual - L_ideal;
                  var t0 = 0;
                  var t1 = 1;
                  var max_iter = 20;
                  while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {
                    (function() {
                      if (pol) {
                        L_diff *= -1;
                      }
                      if (L_diff < 0) {
                        t0 = t;
                        t += (t1 - t) * 0.5;
                      } else {
                        t1 = t;
                        t += (t0 - t) * 0.5;
                      }
                      L_actual = getColor(t, true).lab()[0];
                      return (L_diff = L_actual - L_ideal);
                    })();
                  }
                  return t;
                };
              } else {
                tmap = function(t) {
                  return t;
                };
              }
              return f;
            };

            f.padding = function(p) {
              if (p != null) {
                if (type$j(p) === "number") {
                  p = [p, p];
                }
                _padding = p;
                return f;
              } else {
                return _padding;
              }
            };

            f.colors = function(numColors, out) {
              // If no arguments are given, return the original colors that were provided
              if (arguments.length < 2) {
                out = "hex";
              }
              var result = [];

              if (arguments.length === 0) {
                result = _colors.slice(0);
              } else if (numColors === 1) {
                result = [f(0.5)];
              } else if (numColors > 1) {
                var dm = _domain[0];
                var dd = _domain[1] - dm;
                result = __range__(0, numColors, false).map(function(i) {
                  return f(dm + (i / (numColors - 1)) * dd);
                });
              } else {
                // returns all colors based on the defined classes
                colors = [];
                var samples = [];
                if (_classes && _classes.length > 2) {
                  for (
                    var i = 1, end = _classes.length, asc = 1 <= end;
                    asc ? i < end : i > end;
                    asc ? i++ : i--
                  ) {
                    samples.push((_classes[i - 1] + _classes[i]) * 0.5);
                  }
                } else {
                  samples = _domain;
                }
                result = samples.map(function(v) {
                  return f(v);
                });
              }

              if (chroma_1[out]) {
                result = result.map(function(c) {
                  return c[out]();
                });
              }
              return result;
            };

            f.cache = function(c) {
              if (c != null) {
                _useCache = c;
                return f;
              } else {
                return _useCache;
              }
            };

            f.gamma = function(g) {
              if (g != null) {
                _gamma = g;
                return f;
              } else {
                return _gamma;
              }
            };

            f.nodata = function(d) {
              if (d != null) {
                _nacol = chroma_1(d);
                return f;
              } else {
                return _nacol;
              }
            };

            return f;
          };

          function __range__(left, right, inclusive) {
            var range = [];
            var ascending = left < right;
            var end = !inclusive ? right : ascending ? right + 1 : right - 1;
            for (
              var i = left;
              ascending ? i < end : i > end;
              ascending ? i++ : i--
            ) {
              range.push(i);
            }
            return range;
          }

          //
          // interpolates between a set of colors uzing a bezier spline
          //

          // @requires utils lab

          var bezier = function(colors) {
            var assign, assign$1, assign$2;

            var I, lab0, lab1, lab2;
            colors = colors.map(function(c) {
              return new Color_1(c);
            });
            if (colors.length === 2) {
              // linear interpolation
              (assign = colors.map(function(c) {
                return c.lab();
              })),
                (lab0 = assign[0]),
                (lab1 = assign[1]);
              I = function(t) {
                var lab = [0, 1, 2].map(function(i) {
                  return lab0[i] + t * (lab1[i] - lab0[i]);
                });
                return new Color_1(lab, "lab");
              };
            } else if (colors.length === 3) {
              // quadratic bezier interpolation
              (assign$1 = colors.map(function(c) {
                return c.lab();
              })),
                (lab0 = assign$1[0]),
                (lab1 = assign$1[1]),
                (lab2 = assign$1[2]);
              I = function(t) {
                var lab = [0, 1, 2].map(function(i) {
                  return (
                    (1 - t) * (1 - t) * lab0[i] +
                    2 * (1 - t) * t * lab1[i] +
                    t * t * lab2[i]
                  );
                });
                return new Color_1(lab, "lab");
              };
            } else if (colors.length === 4) {
              // cubic bezier interpolation
              var lab3;
              (assign$2 = colors.map(function(c) {
                return c.lab();
              })),
                (lab0 = assign$2[0]),
                (lab1 = assign$2[1]),
                (lab2 = assign$2[2]),
                (lab3 = assign$2[3]);
              I = function(t) {
                var lab = [0, 1, 2].map(function(i) {
                  return (
                    (1 - t) * (1 - t) * (1 - t) * lab0[i] +
                    3 * (1 - t) * (1 - t) * t * lab1[i] +
                    3 * (1 - t) * t * t * lab2[i] +
                    t * t * t * lab3[i]
                  );
                });
                return new Color_1(lab, "lab");
              };
            } else if (colors.length === 5) {
              var I0 = bezier(colors.slice(0, 3));
              var I1 = bezier(colors.slice(2, 5));
              I = function(t) {
                if (t < 0.5) {
                  return I0(t * 2);
                } else {
                  return I1((t - 0.5) * 2);
                }
              };
            }
            return I;
          };

          var bezier_1 = function(colors) {
            var f = bezier(colors);
            f.scale = function() {
              return scale(f);
            };
            return f;
          };

          /*
           * interpolates between a set of colors uzing a bezier spline
           * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/
           */

          var blend = function(bottom, top, mode) {
            if (!blend[mode]) {
              throw new Error("unknown blend mode " + mode);
            }
            return blend[mode](bottom, top);
          };

          var blend_f = function(f) {
            return function(bottom, top) {
              var c0 = chroma_1(top).rgb();
              var c1 = chroma_1(bottom).rgb();
              return chroma_1.rgb(f(c0, c1));
            };
          };

          var each = function(f) {
            return function(c0, c1) {
              var out = [];
              out[0] = f(c0[0], c1[0]);
              out[1] = f(c0[1], c1[1]);
              out[2] = f(c0[2], c1[2]);
              return out;
            };
          };

          var normal = function(a) {
            return a;
          };
          var multiply = function(a, b) {
            return (a * b) / 255;
          };
          var darken$1 = function(a, b) {
            return a > b ? b : a;
          };
          var lighten = function(a, b) {
            return a > b ? a : b;
          };
          var screen = function(a, b) {
            return 255 * (1 - (1 - a / 255) * (1 - b / 255));
          };
          var overlay = function(a, b) {
            return b < 128
              ? (2 * a * b) / 255
              : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));
          };
          var burn = function(a, b) {
            return 255 * (1 - (1 - b / 255) / (a / 255));
          };
          var dodge = function(a, b) {
            if (a === 255) {
              return 255;
            }
            a = (255 * (b / 255)) / (1 - a / 255);
            return a > 255 ? 255 : a;
          };

          // # add = (a,b) ->
          // #     if (a + b > 255) then 255 else a + b

          blend.normal = blend_f(each(normal));
          blend.multiply = blend_f(each(multiply));
          blend.screen = blend_f(each(screen));
          blend.overlay = blend_f(each(overlay));
          blend.darken = blend_f(each(darken$1));
          blend.lighten = blend_f(each(lighten));
          blend.dodge = blend_f(each(dodge));
          blend.burn = blend_f(each(burn));
          // blend.add = blend_f(each(add));

          var blend_1 = blend;

          // cubehelix interpolation
          // based on D.A. Green "A colour scheme for the display of astronomical intensity images"
          // http://astron-soc.in/bulletin/11June/289392011.pdf

          var type$k = utils.type;
          var clip_rgb$3 = utils.clip_rgb;
          var TWOPI$2 = utils.TWOPI;
          var pow$6 = Math.pow;
          var sin$2 = Math.sin;
          var cos$3 = Math.cos;

          var cubehelix = function(start, rotations, hue, gamma, lightness) {
            if (start === void 0) start = 300;
            if (rotations === void 0) rotations = -1.5;
            if (hue === void 0) hue = 1;
            if (gamma === void 0) gamma = 1;
            if (lightness === void 0) lightness = [0, 1];

            var dh = 0,
              dl;
            if (type$k(lightness) === "array") {
              dl = lightness[1] - lightness[0];
            } else {
              dl = 0;
              lightness = [lightness, lightness];
            }

            var f = function(fract) {
              var a = TWOPI$2 * ((start + 120) / 360 + rotations * fract);
              var l = pow$6(lightness[0] + dl * fract, gamma);
              var h = dh !== 0 ? hue[0] + fract * dh : hue;
              var amp = (h * l * (1 - l)) / 2;
              var cos_a = cos$3(a);
              var sin_a = sin$2(a);
              var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);
              var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);
              var b = l + amp * (+1.97294 * cos_a);
              return chroma_1(clip_rgb$3([r * 255, g * 255, b * 255, 1]));
            };

            f.start = function(s) {
              if (s == null) {
                return start;
              }
              start = s;
              return f;
            };

            f.rotations = function(r) {
              if (r == null) {
                return rotations;
              }
              rotations = r;
              return f;
            };

            f.gamma = function(g) {
              if (g == null) {
                return gamma;
              }
              gamma = g;
              return f;
            };

            f.hue = function(h) {
              if (h == null) {
                return hue;
              }
              hue = h;
              if (type$k(hue) === "array") {
                dh = hue[1] - hue[0];
                if (dh === 0) {
                  hue = hue[1];
                }
              } else {
                dh = 0;
              }
              return f;
            };

            f.lightness = function(h) {
              if (h == null) {
                return lightness;
              }
              if (type$k(h) === "array") {
                lightness = h;
                dl = h[1] - h[0];
              } else {
                lightness = [h, h];
                dl = 0;
              }
              return f;
            };

            f.scale = function() {
              return chroma_1.scale(f);
            };

            f.hue(hue);

            return f;
          };

          var digits = "0123456789abcdef";

          var floor$2 = Math.floor;
          var random = Math.random;

          var random_1 = function() {
            var code = "#";
            for (var i = 0; i < 6; i++) {
              code += digits.charAt(floor$2(random() * 16));
            }
            return new Color_1(code, "hex");
          };

          var log$1 = Math.log;
          var pow$7 = Math.pow;
          var floor$3 = Math.floor;
          var abs = Math.abs;

          var analyze = function(data, key) {
            if (key === void 0) key = null;

            var r = {
              min: Number.MAX_VALUE,
              max: Number.MAX_VALUE * -1,
              sum: 0,
              values: [],
              count: 0,
            };
            if (type(data) === "object") {
              data = Object.values(data);
            }
            data.forEach(function(val) {
              if (key && type(val) === "object") {
                val = val[key];
              }
              if (val !== undefined && val !== null && !isNaN(val)) {
                r.values.push(val);
                r.sum += val;
                if (val < r.min) {
                  r.min = val;
                }
                if (val > r.max) {
                  r.max = val;
                }
                r.count += 1;
              }
            });

            r.domain = [r.min, r.max];

            r.limits = function(mode, num) {
              return limits(r, mode, num);
            };

            return r;
          };

          var limits = function(data, mode, num) {
            if (mode === void 0) mode = "equal";
            if (num === void 0) num = 7;

            if (type(data) == "array") {
              data = analyze(data);
            }
            var min = data.min;
            var max = data.max;
            var values = data.values.sort(function(a, b) {
              return a - b;
            });

            if (num === 1) {
              return [min, max];
            }

            var limits = [];

            if (mode.substr(0, 1) === "c") {
              // continuous
              limits.push(min);
              limits.push(max);
            }

            if (mode.substr(0, 1) === "e") {
              // equal interval
              limits.push(min);
              for (var i = 1; i < num; i++) {
                limits.push(min + (i / num) * (max - min));
              }
              limits.push(max);
            } else if (mode.substr(0, 1) === "l") {
              // log scale
              if (min <= 0) {
                throw new Error(
                  "Logarithmic scales are only possible for values > 0",
                );
              }
              var min_log = Math.LOG10E * log$1(min);
              var max_log = Math.LOG10E * log$1(max);
              limits.push(min);
              for (var i$1 = 1; i$1 < num; i$1++) {
                limits.push(
                  pow$7(10, min_log + (i$1 / num) * (max_log - min_log)),
                );
              }
              limits.push(max);
            } else if (mode.substr(0, 1) === "q") {
              // quantile scale
              limits.push(min);
              for (var i$2 = 1; i$2 < num; i$2++) {
                var p = ((values.length - 1) * i$2) / num;
                var pb = floor$3(p);
                if (pb === p) {
                  limits.push(values[pb]);
                } else {
                  // p > pb
                  var pr = p - pb;
                  limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);
                }
              }
              limits.push(max);
            } else if (mode.substr(0, 1) === "k") {
              // k-means clustering
              /*
            implementation based on
            http://code.google.com/p/figue/source/browse/trunk/figue.js#336
            simplified for 1-d input values
            */
              var cluster;
              var n = values.length;
              var assignments = new Array(n);
              var clusterSizes = new Array(num);
              var repeat = true;
              var nb_iters = 0;
              var centroids = null;

              // get seed values
              centroids = [];
              centroids.push(min);
              for (var i$3 = 1; i$3 < num; i$3++) {
                centroids.push(min + (i$3 / num) * (max - min));
              }
              centroids.push(max);

              while (repeat) {
                // assignment step
                for (var j = 0; j < num; j++) {
                  clusterSizes[j] = 0;
                }
                for (var i$4 = 0; i$4 < n; i$4++) {
                  var value = values[i$4];
                  var mindist = Number.MAX_VALUE;
                  var best = void 0;
                  for (var j$1 = 0; j$1 < num; j$1++) {
                    var dist = abs(centroids[j$1] - value);
                    if (dist < mindist) {
                      mindist = dist;
                      best = j$1;
                    }
                    clusterSizes[best]++;
                    assignments[i$4] = best;
                  }
                }

                // update centroids step
                var newCentroids = new Array(num);
                for (var j$2 = 0; j$2 < num; j$2++) {
                  newCentroids[j$2] = null;
                }
                for (var i$5 = 0; i$5 < n; i$5++) {
                  cluster = assignments[i$5];
                  if (newCentroids[cluster] === null) {
                    newCentroids[cluster] = values[i$5];
                  } else {
                    newCentroids[cluster] += values[i$5];
                  }
                }
                for (var j$3 = 0; j$3 < num; j$3++) {
                  newCentroids[j$3] *= 1 / clusterSizes[j$3];
                }

                // check convergence
                repeat = false;
                for (var j$4 = 0; j$4 < num; j$4++) {
                  if (newCentroids[j$4] !== centroids[j$4]) {
                    repeat = true;
                    break;
                  }
                }

                centroids = newCentroids;
                nb_iters++;

                if (nb_iters > 200) {
                  repeat = false;
                }
              }

              // finished k-means clustering
              // the next part is borrowed from gabrielflor.it
              var kClusters = {};
              for (var j$5 = 0; j$5 < num; j$5++) {
                kClusters[j$5] = [];
              }
              for (var i$6 = 0; i$6 < n; i$6++) {
                cluster = assignments[i$6];
                kClusters[cluster].push(values[i$6]);
              }
              var tmpKMeansBreaks = [];
              for (var j$6 = 0; j$6 < num; j$6++) {
                tmpKMeansBreaks.push(kClusters[j$6][0]);
                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);
              }
              tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {
                return a - b;
              });
              limits.push(tmpKMeansBreaks[0]);
              for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {
                var v = tmpKMeansBreaks[i$7];
                if (!isNaN(v) && limits.indexOf(v) === -1) {
                  limits.push(v);
                }
              }
            }
            return limits;
          };

          var analyze_1 = { analyze: analyze, limits: limits };

          var contrast = function(a, b) {
            // WCAG contrast ratio
            // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
            a = new Color_1(a);
            b = new Color_1(b);
            var l1 = a.luminance();
            var l2 = b.luminance();
            return l1 > l2
              ? (l1 + 0.05) / (l2 + 0.05)
              : (l2 + 0.05) / (l1 + 0.05);
          };

          var sqrt$4 = Math.sqrt;
          var atan2$2 = Math.atan2;
          var abs$1 = Math.abs;
          var cos$4 = Math.cos;
          var PI$2 = Math.PI;

          var deltaE = function(a, b, L, C) {
            if (L === void 0) L = 1;
            if (C === void 0) C = 1;

            // Delta E (CMC)
            // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CMC.html
            a = new Color_1(a);
            b = new Color_1(b);
            var ref = Array.from(a.lab());
            var L1 = ref[0];
            var a1 = ref[1];
            var b1 = ref[2];
            var ref$1 = Array.from(b.lab());
            var L2 = ref$1[0];
            var a2 = ref$1[1];
            var b2 = ref$1[2];
            var c1 = sqrt$4(a1 * a1 + b1 * b1);
            var c2 = sqrt$4(a2 * a2 + b2 * b2);
            var sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);
            var sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;
            var h1 = c1 < 0.000001 ? 0.0 : (atan2$2(b1, a1) * 180.0) / PI$2;
            while (h1 < 0) {
              h1 += 360;
            }
            while (h1 >= 360) {
              h1 -= 360;
            }
            var t =
              h1 >= 164.0 && h1 <= 345.0
                ? 0.56 + abs$1(0.2 * cos$4((PI$2 * (h1 + 168.0)) / 180.0))
                : 0.36 + abs$1(0.4 * cos$4((PI$2 * (h1 + 35.0)) / 180.0));
            var c4 = c1 * c1 * c1 * c1;
            var f = sqrt$4(c4 / (c4 + 1900.0));
            var sh = sc * (f * t + 1.0 - f);
            var delL = L1 - L2;
            var delC = c1 - c2;
            var delA = a1 - a2;
            var delB = b1 - b2;
            var dH2 = delA * delA + delB * delB - delC * delC;
            var v1 = delL / (L * sl);
            var v2 = delC / (C * sc);
            var v3 = sh;
            return sqrt$4(v1 * v1 + v2 * v2 + dH2 / (v3 * v3));
          };

          // simple Euclidean distance
          var distance = function(a, b, mode) {
            if (mode === void 0) mode = "lab";

            // Delta E (CIE 1976)
            // see http://www.brucelindbloom.com/index.html?Equations.html
            a = new Color_1(a);
            b = new Color_1(b);
            var l1 = a.get(mode);
            var l2 = b.get(mode);
            var sum_sq = 0;
            for (var i in l1) {
              var d = (l1[i] || 0) - (l2[i] || 0);
              sum_sq += d * d;
            }
            return Math.sqrt(sum_sq);
          };

          var valid = function() {
            var args = [],
              len = arguments.length;
            while (len--) args[len] = arguments[len];

            try {
              new (Function.prototype.bind.apply(
                Color_1,
                [null].concat(args),
              ))();
              return true;
            } catch (e) {
              return false;
            }
          };

          // some pre-defined color scales:

          var scales = {
            cool: function cool() {
              return scale([
                chroma_1.hsl(180, 1, 0.9),
                chroma_1.hsl(250, 0.7, 0.4),
              ]);
            },
            hot: function hot() {
              return scale(
                ["#000", "#f00", "#ff0", "#fff"],
                [0, 0.25, 0.75, 1],
              ).mode("rgb");
            },
          };

          /**
        ColorBrewer colors for chroma.js

        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The
        Pennsylvania State University.

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software distributed
        under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
        CONDITIONS OF ANY KIND, either express or implied. See the License for the
        specific language governing permissions and limitations under the License.
    */

          var colorbrewer = {
            // sequential
            OrRd: [
              "#fff7ec",
              "#fee8c8",
              "#fdd49e",
              "#fdbb84",
              "#fc8d59",
              "#ef6548",
              "#d7301f",
              "#b30000",
              "#7f0000",
            ],
            PuBu: [
              "#fff7fb",
              "#ece7f2",
              "#d0d1e6",
              "#a6bddb",
              "#74a9cf",
              "#3690c0",
              "#0570b0",
              "#045a8d",
              "#023858",
            ],
            BuPu: [
              "#f7fcfd",
              "#e0ecf4",
              "#bfd3e6",
              "#9ebcda",
              "#8c96c6",
              "#8c6bb1",
              "#88419d",
              "#810f7c",
              "#4d004b",
            ],
            Oranges: [
              "#fff5eb",
              "#fee6ce",
              "#fdd0a2",
              "#fdae6b",
              "#fd8d3c",
              "#f16913",
              "#d94801",
              "#a63603",
              "#7f2704",
            ],
            BuGn: [
              "#f7fcfd",
              "#e5f5f9",
              "#ccece6",
              "#99d8c9",
              "#66c2a4",
              "#41ae76",
              "#238b45",
              "#006d2c",
              "#00441b",
            ],
            YlOrBr: [
              "#ffffe5",
              "#fff7bc",
              "#fee391",
              "#fec44f",
              "#fe9929",
              "#ec7014",
              "#cc4c02",
              "#993404",
              "#662506",
            ],
            YlGn: [
              "#ffffe5",
              "#f7fcb9",
              "#d9f0a3",
              "#addd8e",
              "#78c679",
              "#41ab5d",
              "#238443",
              "#006837",
              "#004529",
            ],
            Reds: [
              "#fff5f0",
              "#fee0d2",
              "#fcbba1",
              "#fc9272",
              "#fb6a4a",
              "#ef3b2c",
              "#cb181d",
              "#a50f15",
              "#67000d",
            ],
            RdPu: [
              "#fff7f3",
              "#fde0dd",
              "#fcc5c0",
              "#fa9fb5",
              "#f768a1",
              "#dd3497",
              "#ae017e",
              "#7a0177",
              "#49006a",
            ],
            Greens: [
              "#f7fcf5",
              "#e5f5e0",
              "#c7e9c0",
              "#a1d99b",
              "#74c476",
              "#41ab5d",
              "#238b45",
              "#006d2c",
              "#00441b",
            ],
            YlGnBu: [
              "#ffffd9",
              "#edf8b1",
              "#c7e9b4",
              "#7fcdbb",
              "#41b6c4",
              "#1d91c0",
              "#225ea8",
              "#253494",
              "#081d58",
            ],
            Purples: [
              "#fcfbfd",
              "#efedf5",
              "#dadaeb",
              "#bcbddc",
              "#9e9ac8",
              "#807dba",
              "#6a51a3",
              "#54278f",
              "#3f007d",
            ],
            GnBu: [
              "#f7fcf0",
              "#e0f3db",
              "#ccebc5",
              "#a8ddb5",
              "#7bccc4",
              "#4eb3d3",
              "#2b8cbe",
              "#0868ac",
              "#084081",
            ],
            Greys: [
              "#ffffff",
              "#f0f0f0",
              "#d9d9d9",
              "#bdbdbd",
              "#969696",
              "#737373",
              "#525252",
              "#252525",
              "#000000",
            ],
            YlOrRd: [
              "#ffffcc",
              "#ffeda0",
              "#fed976",
              "#feb24c",
              "#fd8d3c",
              "#fc4e2a",
              "#e31a1c",
              "#bd0026",
              "#800026",
            ],
            PuRd: [
              "#f7f4f9",
              "#e7e1ef",
              "#d4b9da",
              "#c994c7",
              "#df65b0",
              "#e7298a",
              "#ce1256",
              "#980043",
              "#67001f",
            ],
            Blues: [
              "#f7fbff",
              "#deebf7",
              "#c6dbef",
              "#9ecae1",
              "#6baed6",
              "#4292c6",
              "#2171b5",
              "#08519c",
              "#08306b",
            ],
            PuBuGn: [
              "#fff7fb",
              "#ece2f0",
              "#d0d1e6",
              "#a6bddb",
              "#67a9cf",
              "#3690c0",
              "#02818a",
              "#016c59",
              "#014636",
            ],
            Viridis: [
              "#440154",
              "#482777",
              "#3f4a8a",
              "#31678e",
              "#26838f",
              "#1f9d8a",
              "#6cce5a",
              "#b6de2b",
              "#fee825",
            ],

            // diverging

            Spectral: [
              "#9e0142",
              "#d53e4f",
              "#f46d43",
              "#fdae61",
              "#fee08b",
              "#ffffbf",
              "#e6f598",
              "#abdda4",
              "#66c2a5",
              "#3288bd",
              "#5e4fa2",
            ],
            RdYlGn: [
              "#a50026",
              "#d73027",
              "#f46d43",
              "#fdae61",
              "#fee08b",
              "#ffffbf",
              "#d9ef8b",
              "#a6d96a",
              "#66bd63",
              "#1a9850",
              "#006837",
            ],
            RdBu: [
              "#67001f",
              "#b2182b",
              "#d6604d",
              "#f4a582",
              "#fddbc7",
              "#f7f7f7",
              "#d1e5f0",
              "#92c5de",
              "#4393c3",
              "#2166ac",
              "#053061",
            ],
            PiYG: [
              "#8e0152",
              "#c51b7d",
              "#de77ae",
              "#f1b6da",
              "#fde0ef",
              "#f7f7f7",
              "#e6f5d0",
              "#b8e186",
              "#7fbc41",
              "#4d9221",
              "#276419",
            ],
            PRGn: [
              "#40004b",
              "#762a83",
              "#9970ab",
              "#c2a5cf",
              "#e7d4e8",
              "#f7f7f7",
              "#d9f0d3",
              "#a6dba0",
              "#5aae61",
              "#1b7837",
              "#00441b",
            ],
            RdYlBu: [
              "#a50026",
              "#d73027",
              "#f46d43",
              "#fdae61",
              "#fee090",
              "#ffffbf",
              "#e0f3f8",
              "#abd9e9",
              "#74add1",
              "#4575b4",
              "#313695",
            ],
            BrBG: [
              "#543005",
              "#8c510a",
              "#bf812d",
              "#dfc27d",
              "#f6e8c3",
              "#f5f5f5",
              "#c7eae5",
              "#80cdc1",
              "#35978f",
              "#01665e",
              "#003c30",
            ],
            RdGy: [
              "#67001f",
              "#b2182b",
              "#d6604d",
              "#f4a582",
              "#fddbc7",
              "#ffffff",
              "#e0e0e0",
              "#bababa",
              "#878787",
              "#4d4d4d",
              "#1a1a1a",
            ],
            PuOr: [
              "#7f3b08",
              "#b35806",
              "#e08214",
              "#fdb863",
              "#fee0b6",
              "#f7f7f7",
              "#d8daeb",
              "#b2abd2",
              "#8073ac",
              "#542788",
              "#2d004b",
            ],

            // qualitative

            Set2: [
              "#66c2a5",
              "#fc8d62",
              "#8da0cb",
              "#e78ac3",
              "#a6d854",
              "#ffd92f",
              "#e5c494",
              "#b3b3b3",
            ],
            Accent: [
              "#7fc97f",
              "#beaed4",
              "#fdc086",
              "#ffff99",
              "#386cb0",
              "#f0027f",
              "#bf5b17",
              "#666666",
            ],
            Set1: [
              "#e41a1c",
              "#377eb8",
              "#4daf4a",
              "#984ea3",
              "#ff7f00",
              "#ffff33",
              "#a65628",
              "#f781bf",
              "#999999",
            ],
            Set3: [
              "#8dd3c7",
              "#ffffb3",
              "#bebada",
              "#fb8072",
              "#80b1d3",
              "#fdb462",
              "#b3de69",
              "#fccde5",
              "#d9d9d9",
              "#bc80bd",
              "#ccebc5",
              "#ffed6f",
            ],
            Dark2: [
              "#1b9e77",
              "#d95f02",
              "#7570b3",
              "#e7298a",
              "#66a61e",
              "#e6ab02",
              "#a6761d",
              "#666666",
            ],
            Paired: [
              "#a6cee3",
              "#1f78b4",
              "#b2df8a",
              "#33a02c",
              "#fb9a99",
              "#e31a1c",
              "#fdbf6f",
              "#ff7f00",
              "#cab2d6",
              "#6a3d9a",
              "#ffff99",
              "#b15928",
            ],
            Pastel2: [
              "#b3e2cd",
              "#fdcdac",
              "#cbd5e8",
              "#f4cae4",
              "#e6f5c9",
              "#fff2ae",
              "#f1e2cc",
              "#cccccc",
            ],
            Pastel1: [
              "#fbb4ae",
              "#b3cde3",
              "#ccebc5",
              "#decbe4",
              "#fed9a6",
              "#ffffcc",
              "#e5d8bd",
              "#fddaec",
              "#f2f2f2",
            ],
          };

          // add lowercase aliases for case-insensitive matches
          for (
            var i$1 = 0, list$1 = Object.keys(colorbrewer);
            i$1 < list$1.length;
            i$1 += 1
          ) {
            var key = list$1[i$1];

            colorbrewer[key.toLowerCase()] = colorbrewer[key];
          }

          var colorbrewer_1 = colorbrewer;

          // feel free to comment out anything to rollup
          // a smaller chroma.js built

          // io --> convert colors

          // operators --> modify existing Colors

          // interpolators

          // generators -- > create new colors
          chroma_1.average = average;
          chroma_1.bezier = bezier_1;
          chroma_1.blend = blend_1;
          chroma_1.cubehelix = cubehelix;
          chroma_1.mix = chroma_1.interpolate = mix;
          chroma_1.random = random_1;
          chroma_1.scale = scale;

          // other utility methods
          chroma_1.analyze = analyze_1.analyze;
          chroma_1.contrast = contrast;
          chroma_1.deltaE = deltaE;
          chroma_1.distance = distance;
          chroma_1.limits = analyze_1.limits;
          chroma_1.valid = valid;

          // scale
          chroma_1.scales = scales;

          // colors
          chroma_1.colors = w3cx11_1;
          chroma_1.brewer = colorbrewer_1;

          var chroma_js = chroma_1;

          return chroma_js;
        });

        /***/
      },

    /***/ "./node_modules/classnames/index.js":
      /*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_ARRAY__,
          __WEBPACK_AMD_DEFINE_RESULT__; /*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
        /* global define */

        (function() {
          "use strict";

          var hasOwn = {}.hasOwnProperty;

          function classNames() {
            var classes = [];

            for (var i = 0; i < arguments.length; i++) {
              var arg = arguments[i];
              if (!arg) continue;

              var argType = typeof arg;

              if (argType === "string" || argType === "number") {
                classes.push(arg);
              } else if (Array.isArray(arg) && arg.length) {
                var inner = classNames.apply(null, arg);
                if (inner) {
                  classes.push(inner);
                }
              } else if (argType === "object") {
                for (var key in arg) {
                  if (hasOwn.call(arg, key) && arg[key]) {
                    classes.push(key);
                  }
                }
              }
            }

            return classes.join(" ");
          }

          if (true && module.exports) {
            classNames.default = classNames;
            module.exports = classNames;
          } else if (true) {
            // register as 'classnames', consistent with npm package name
            !((__WEBPACK_AMD_DEFINE_ARRAY__ = []),
            (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
              return classNames;
            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })();

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/array/is-array.js":
      /*!***********************************************************!*\
  !*** ./node_modules/core-js/library/fn/array/is-array.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.array.is-array */ "./node_modules/core-js/library/modules/es6.array.is-array.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Array.isArray;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/get-iterator.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/fn/get-iterator.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js",
        );
        __webpack_require__(
          /*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js",
        );
        module.exports = __webpack_require__(
          /*! ../modules/core.get-iterator */ "./node_modules/core-js/library/modules/core.get-iterator.js",
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/json/stringify.js":
      /*!***********************************************************!*\
  !*** ./node_modules/core-js/library/fn/json/stringify.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var core = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        );
        var $JSON = core.JSON || (core.JSON = { stringify: JSON.stringify });
        module.exports = function stringify(it) {
          // eslint-disable-line no-unused-vars
          return $JSON.stringify.apply($JSON, arguments);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/object/assign.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/assign.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.object.assign */ "./node_modules/core-js/library/modules/es6.object.assign.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Object.assign;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/object/create.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/create.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.object.create */ "./node_modules/core-js/library/modules/es6.object.create.js",
        );
        var $Object = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Object;
        module.exports = function create(P, D) {
          return $Object.create(P, D);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/object/define-property.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/define-property.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.object.define-property */ "./node_modules/core-js/library/modules/es6.object.define-property.js",
        );
        var $Object = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Object;
        module.exports = function defineProperty(it, key, desc) {
          return $Object.defineProperty(it, key, desc);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/object/get-own-property-symbols.js":
      /*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/get-own-property-symbols.js ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.symbol */ "./node_modules/core-js/library/modules/es6.symbol.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Object.getOwnPropertySymbols;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/object/get-prototype-of.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/get-prototype-of.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.object.get-prototype-of */ "./node_modules/core-js/library/modules/es6.object.get-prototype-of.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Object.getPrototypeOf;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/object/keys.js":
      /*!********************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/keys.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.object.keys */ "./node_modules/core-js/library/modules/es6.object.keys.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Object.keys;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/object/set-prototype-of.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/fn/object/set-prototype-of.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.object.set-prototype-of */ "./node_modules/core-js/library/modules/es6.object.set-prototype-of.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Object.setPrototypeOf;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/promise.js":
      /*!****************************************************!*\
  !*** ./node_modules/core-js/library/fn/promise.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js",
        );
        __webpack_require__(
          /*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js",
        );
        __webpack_require__(
          /*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js",
        );
        __webpack_require__(
          /*! ../modules/es6.promise */ "./node_modules/core-js/library/modules/es6.promise.js",
        );
        __webpack_require__(
          /*! ../modules/es7.promise.finally */ "./node_modules/core-js/library/modules/es7.promise.finally.js",
        );
        __webpack_require__(
          /*! ../modules/es7.promise.try */ "./node_modules/core-js/library/modules/es7.promise.try.js",
        );
        module.exports = __webpack_require__(
          /*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Promise;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/reflect/construct.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/fn/reflect/construct.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.reflect.construct */ "./node_modules/core-js/library/modules/es6.reflect.construct.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Reflect.construct;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/set.js":
      /*!************************************************!*\
  !*** ./node_modules/core-js/library/fn/set.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js",
        );
        __webpack_require__(
          /*! ../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js",
        );
        __webpack_require__(
          /*! ../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js",
        );
        __webpack_require__(
          /*! ../modules/es6.set */ "./node_modules/core-js/library/modules/es6.set.js",
        );
        __webpack_require__(
          /*! ../modules/es7.set.to-json */ "./node_modules/core-js/library/modules/es7.set.to-json.js",
        );
        __webpack_require__(
          /*! ../modules/es7.set.of */ "./node_modules/core-js/library/modules/es7.set.of.js",
        );
        __webpack_require__(
          /*! ../modules/es7.set.from */ "./node_modules/core-js/library/modules/es7.set.from.js",
        );
        module.exports = __webpack_require__(
          /*! ../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Set;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/symbol/index.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/fn/symbol/index.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.symbol */ "./node_modules/core-js/library/modules/es6.symbol.js",
        );
        __webpack_require__(
          /*! ../../modules/es6.object.to-string */ "./node_modules/core-js/library/modules/es6.object.to-string.js",
        );
        __webpack_require__(
          /*! ../../modules/es7.symbol.async-iterator */ "./node_modules/core-js/library/modules/es7.symbol.async-iterator.js",
        );
        __webpack_require__(
          /*! ../../modules/es7.symbol.observable */ "./node_modules/core-js/library/modules/es7.symbol.observable.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_core */ "./node_modules/core-js/library/modules/_core.js",
        ).Symbol;

        /***/
      },

    /***/ "./node_modules/core-js/library/fn/symbol/iterator.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/fn/symbol/iterator.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ../../modules/es6.string.iterator */ "./node_modules/core-js/library/modules/es6.string.iterator.js",
        );
        __webpack_require__(
          /*! ../../modules/web.dom.iterable */ "./node_modules/core-js/library/modules/web.dom.iterable.js",
        );
        module.exports = __webpack_require__(
          /*! ../../modules/_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js",
        ).f("iterator");

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_a-function.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_a-function.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(it) {
          if (typeof it != "function")
            throw TypeError(it + " is not a function!");
          return it;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_add-to-unscopables.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_add-to-unscopables.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function() {
          /* empty */
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_an-instance.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-instance.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(it, Constructor, name, forbiddenField) {
          if (
            !(it instanceof Constructor) ||
            (forbiddenField !== undefined && forbiddenField in it)
          ) {
            throw TypeError(name + ": incorrect invocation!");
          }
          return it;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_an-object.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_an-object.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        module.exports = function(it) {
          if (!isObject(it)) throw TypeError(it + " is not an object!");
          return it;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_array-from-iterable.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-from-iterable.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var forOf = __webpack_require__(
          /*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js",
        );

        module.exports = function(iter, ITERATOR) {
          var result = [];
          forOf(iter, false, result.push, result, ITERATOR);
          return result;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_array-includes.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-includes.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // false -> Array#indexOf
        // true  -> Array#includes
        var toIObject = __webpack_require__(
          /*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js",
        );
        var toLength = __webpack_require__(
          /*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js",
        );
        var toAbsoluteIndex = __webpack_require__(
          /*! ./_to-absolute-index */ "./node_modules/core-js/library/modules/_to-absolute-index.js",
        );
        module.exports = function(IS_INCLUDES) {
          return function($this, el, fromIndex) {
            var O = toIObject($this);
            var length = toLength(O.length);
            var index = toAbsoluteIndex(fromIndex, length);
            var value;
            // Array#includes uses SameValueZero equality algorithm
            // eslint-disable-next-line no-self-compare
            if (IS_INCLUDES && el != el)
              while (length > index) {
                value = O[index++];
                // eslint-disable-next-line no-self-compare
                if (value != value) return true;
                // Array#indexOf ignores holes, Array#includes - not
              }
            else
              for (; length > index; index++)
                if (IS_INCLUDES || index in O) {
                  if (O[index] === el) return IS_INCLUDES || index || 0;
                }
            return !IS_INCLUDES && -1;
          };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_array-methods.js":
      /*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-methods.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 0 -> Array#forEach
        // 1 -> Array#map
        // 2 -> Array#filter
        // 3 -> Array#some
        // 4 -> Array#every
        // 5 -> Array#find
        // 6 -> Array#findIndex
        var ctx = __webpack_require__(
          /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
        );
        var IObject = __webpack_require__(
          /*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js",
        );
        var toObject = __webpack_require__(
          /*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js",
        );
        var toLength = __webpack_require__(
          /*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js",
        );
        var asc = __webpack_require__(
          /*! ./_array-species-create */ "./node_modules/core-js/library/modules/_array-species-create.js",
        );
        module.exports = function(TYPE, $create) {
          var IS_MAP = TYPE == 1;
          var IS_FILTER = TYPE == 2;
          var IS_SOME = TYPE == 3;
          var IS_EVERY = TYPE == 4;
          var IS_FIND_INDEX = TYPE == 6;
          var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
          var create = $create || asc;
          return function($this, callbackfn, that) {
            var O = toObject($this);
            var self = IObject(O);
            var f = ctx(callbackfn, that, 3);
            var length = toLength(self.length);
            var index = 0;
            var result = IS_MAP
              ? create($this, length)
              : IS_FILTER
              ? create($this, 0)
              : undefined;
            var val, res;
            for (; length > index; index++)
              if (NO_HOLES || index in self) {
                val = self[index];
                res = f(val, index, O);
                if (TYPE) {
                  if (IS_MAP) result[index] = res;
                  // map
                  else if (res)
                    switch (TYPE) {
                      case 3:
                        return true; // some
                      case 5:
                        return val; // find
                      case 6:
                        return index; // findIndex
                      case 2:
                        result.push(val); // filter
                    }
                  else if (IS_EVERY) return false; // every
                }
              }
            return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
          };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_array-species-constructor.js":
      /*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-constructor.js ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var isArray = __webpack_require__(
          /*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js",
        );
        var SPECIES = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("species");

        module.exports = function(original) {
          var C;
          if (isArray(original)) {
            C = original.constructor;
            // cross-realm fallback
            if (typeof C == "function" && (C === Array || isArray(C.prototype)))
              C = undefined;
            if (isObject(C)) {
              C = C[SPECIES];
              if (C === null) C = undefined;
            }
          }
          return C === undefined ? Array : C;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_array-species-create.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_array-species-create.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 9.4.2.3 ArraySpeciesCreate(originalArray, length)
        var speciesConstructor = __webpack_require__(
          /*! ./_array-species-constructor */ "./node_modules/core-js/library/modules/_array-species-constructor.js",
        );

        module.exports = function(original, length) {
          return new (speciesConstructor(original))(length);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_bind.js":
      /*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_bind.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var aFunction = __webpack_require__(
          /*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js",
        );
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var invoke = __webpack_require__(
          /*! ./_invoke */ "./node_modules/core-js/library/modules/_invoke.js",
        );
        var arraySlice = [].slice;
        var factories = {};

        var construct = function(F, len, args) {
          if (!(len in factories)) {
            for (var n = [], i = 0; i < len; i++) n[i] = "a[" + i + "]";
            // eslint-disable-next-line no-new-func
            factories[len] = Function(
              "F,a",
              "return new F(" + n.join(",") + ")",
            );
          }
          return factories[len](F, args);
        };

        module.exports =
          Function.bind ||
          function bind(that /* , ...args */) {
            var fn = aFunction(this);
            var partArgs = arraySlice.call(arguments, 1);
            var bound = function(/* args... */) {
              var args = partArgs.concat(arraySlice.call(arguments));
              return this instanceof bound
                ? construct(fn, args.length, args)
                : invoke(fn, args, that);
            };
            if (isObject(fn.prototype)) bound.prototype = fn.prototype;
            return bound;
          };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_classof.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_classof.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // getting tag from 19.1.3.6 Object.prototype.toString()
        var cof = __webpack_require__(
          /*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js",
        );
        var TAG = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("toStringTag");
        // ES3 wrong here
        var ARG =
          cof(
            (function() {
              return arguments;
            })(),
          ) == "Arguments";

        // fallback for IE11 Script Access Denied error
        var tryGet = function(it, key) {
          try {
            return it[key];
          } catch (e) {
            /* empty */
          }
        };

        module.exports = function(it) {
          var O, T, B;
          return it === undefined
            ? "Undefined"
            : it === null
            ? "Null"
            : // @@toStringTag case
            typeof (T = tryGet((O = Object(it)), TAG)) == "string"
            ? T
            : // builtinTag case
            ARG
            ? cof(O)
            : // ES3 arguments fallback
            (B = cof(O)) == "Object" && typeof O.callee == "function"
            ? "Arguments"
            : B;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_cof.js":
      /*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_cof.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        var toString = {}.toString;

        module.exports = function(it) {
          return toString.call(it).slice(8, -1);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_collection-strong.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-strong.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var dP = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        ).f;
        var create = __webpack_require__(
          /*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js",
        );
        var redefineAll = __webpack_require__(
          /*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js",
        );
        var ctx = __webpack_require__(
          /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
        );
        var anInstance = __webpack_require__(
          /*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js",
        );
        var forOf = __webpack_require__(
          /*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js",
        );
        var $iterDefine = __webpack_require__(
          /*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js",
        );
        var step = __webpack_require__(
          /*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js",
        );
        var setSpecies = __webpack_require__(
          /*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js",
        );
        var DESCRIPTORS = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        );
        var fastKey = __webpack_require__(
          /*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js",
        ).fastKey;
        var validate = __webpack_require__(
          /*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js",
        );
        var SIZE = DESCRIPTORS ? "_s" : "size";

        var getEntry = function(that, key) {
          // fast case
          var index = fastKey(key);
          var entry;
          if (index !== "F") return that._i[index];
          // frozen object case
          for (entry = that._f; entry; entry = entry.n) {
            if (entry.k == key) return entry;
          }
        };

        module.exports = {
          getConstructor: function(wrapper, NAME, IS_MAP, ADDER) {
            var C = wrapper(function(that, iterable) {
              anInstance(that, C, NAME, "_i");
              that._t = NAME; // collection type
              that._i = create(null); // index
              that._f = undefined; // first entry
              that._l = undefined; // last entry
              that[SIZE] = 0; // size
              if (iterable != undefined)
                forOf(iterable, IS_MAP, that[ADDER], that);
            });
            redefineAll(C.prototype, {
              // 23.1.3.1 Map.prototype.clear()
              // 23.2.3.2 Set.prototype.clear()
              clear: function clear() {
                for (
                  var that = validate(this, NAME),
                    data = that._i,
                    entry = that._f;
                  entry;
                  entry = entry.n
                ) {
                  entry.r = true;
                  if (entry.p) entry.p = entry.p.n = undefined;
                  delete data[entry.i];
                }
                that._f = that._l = undefined;
                that[SIZE] = 0;
              },
              // 23.1.3.3 Map.prototype.delete(key)
              // 23.2.3.4 Set.prototype.delete(value)
              delete: function(key) {
                var that = validate(this, NAME);
                var entry = getEntry(that, key);
                if (entry) {
                  var next = entry.n;
                  var prev = entry.p;
                  delete that._i[entry.i];
                  entry.r = true;
                  if (prev) prev.n = next;
                  if (next) next.p = prev;
                  if (that._f == entry) that._f = next;
                  if (that._l == entry) that._l = prev;
                  that[SIZE]--;
                }
                return !!entry;
              },
              // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
              // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
              forEach: function forEach(callbackfn /* , that = undefined */) {
                validate(this, NAME);
                var f = ctx(
                  callbackfn,
                  arguments.length > 1 ? arguments[1] : undefined,
                  3,
                );
                var entry;
                while ((entry = entry ? entry.n : this._f)) {
                  f(entry.v, entry.k, this);
                  // revert to the last existing entry
                  while (entry && entry.r) entry = entry.p;
                }
              },
              // 23.1.3.7 Map.prototype.has(key)
              // 23.2.3.7 Set.prototype.has(value)
              has: function has(key) {
                return !!getEntry(validate(this, NAME), key);
              },
            });
            if (DESCRIPTORS)
              dP(C.prototype, "size", {
                get: function() {
                  return validate(this, NAME)[SIZE];
                },
              });
            return C;
          },
          def: function(that, key, value) {
            var entry = getEntry(that, key);
            var prev, index;
            // change existing entry
            if (entry) {
              entry.v = value;
              // create new entry
            } else {
              that._l = entry = {
                i: (index = fastKey(key, true)), // <- index
                k: key, // <- key
                v: value, // <- value
                p: (prev = that._l), // <- previous entry
                n: undefined, // <- next entry
                r: false, // <- removed
              };
              if (!that._f) that._f = entry;
              if (prev) prev.n = entry;
              that[SIZE]++;
              // add to index
              if (index !== "F") that._i[index] = entry;
            }
            return that;
          },
          getEntry: getEntry,
          setStrong: function(C, NAME, IS_MAP) {
            // add .keys, .values, .entries, [@@iterator]
            // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
            $iterDefine(
              C,
              NAME,
              function(iterated, kind) {
                this._t = validate(iterated, NAME); // target
                this._k = kind; // kind
                this._l = undefined; // previous
              },
              function() {
                var that = this;
                var kind = that._k;
                var entry = that._l;
                // revert to the last existing entry
                while (entry && entry.r) entry = entry.p;
                // get next entry
                if (
                  !that._t ||
                  !(that._l = entry = entry ? entry.n : that._t._f)
                ) {
                  // or finish the iteration
                  that._t = undefined;
                  return step(1);
                }
                // return step by kind
                if (kind == "keys") return step(0, entry.k);
                if (kind == "values") return step(0, entry.v);
                return step(0, [entry.k, entry.v]);
              },
              IS_MAP ? "entries" : "values",
              !IS_MAP,
              true,
            );

            // add [@@species], 23.1.2.2, 23.2.2.2
            setSpecies(NAME);
          },
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_collection-to-json.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection-to-json.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // https://github.com/DavidBruant/Map-Set.prototype.toJSON
        var classof = __webpack_require__(
          /*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js",
        );
        var from = __webpack_require__(
          /*! ./_array-from-iterable */ "./node_modules/core-js/library/modules/_array-from-iterable.js",
        );
        module.exports = function(NAME) {
          return function toJSON() {
            if (classof(this) != NAME)
              throw TypeError(NAME + "#toJSON isn't generic");
            return from(this);
          };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_collection.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_collection.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var meta = __webpack_require__(
          /*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js",
        );
        var fails = __webpack_require__(
          /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
        );
        var hide = __webpack_require__(
          /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
        );
        var redefineAll = __webpack_require__(
          /*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js",
        );
        var forOf = __webpack_require__(
          /*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js",
        );
        var anInstance = __webpack_require__(
          /*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js",
        );
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var setToStringTag = __webpack_require__(
          /*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js",
        );
        var dP = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        ).f;
        var each = __webpack_require__(
          /*! ./_array-methods */ "./node_modules/core-js/library/modules/_array-methods.js",
        )(0);
        var DESCRIPTORS = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        );

        module.exports = function(
          NAME,
          wrapper,
          methods,
          common,
          IS_MAP,
          IS_WEAK,
        ) {
          var Base = global[NAME];
          var C = Base;
          var ADDER = IS_MAP ? "set" : "add";
          var proto = C && C.prototype;
          var O = {};
          if (
            !DESCRIPTORS ||
            typeof C != "function" ||
            !(
              IS_WEAK ||
              (proto.forEach &&
                !fails(function() {
                  new C().entries().next();
                }))
            )
          ) {
            // create collection constructor
            C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
            redefineAll(C.prototype, methods);
            meta.NEED = true;
          } else {
            C = wrapper(function(target, iterable) {
              anInstance(target, C, NAME, "_c");
              target._c = new Base();
              if (iterable != undefined)
                forOf(iterable, IS_MAP, target[ADDER], target);
            });
            each(
              "add,clear,delete,forEach,get,has,set,keys,values,entries,toJSON".split(
                ",",
              ),
              function(KEY) {
                var IS_ADDER = KEY == "add" || KEY == "set";
                if (KEY in proto && !(IS_WEAK && KEY == "clear"))
                  hide(C.prototype, KEY, function(a, b) {
                    anInstance(this, C, KEY);
                    if (!IS_ADDER && IS_WEAK && !isObject(a))
                      return KEY == "get" ? undefined : false;
                    var result = this._c[KEY](a === 0 ? 0 : a, b);
                    return IS_ADDER ? this : result;
                  });
              },
            );
            IS_WEAK ||
              dP(C.prototype, "size", {
                get: function() {
                  return this._c.size;
                },
              });
          }

          setToStringTag(C, NAME);

          O[NAME] = C;
          $export($export.G + $export.W + $export.F, O);

          if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

          return C;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_core.js":
      /*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_core.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        var core = (module.exports = { version: "2.6.9" });
        if (typeof __e == "number") __e = core; // eslint-disable-line no-undef

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_ctx.js":
      /*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ctx.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // optional / simple context binding
        var aFunction = __webpack_require__(
          /*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js",
        );
        module.exports = function(fn, that, length) {
          aFunction(fn);
          if (that === undefined) return fn;
          switch (length) {
            case 1:
              return function(a) {
                return fn.call(that, a);
              };
            case 2:
              return function(a, b) {
                return fn.call(that, a, b);
              };
            case 3:
              return function(a, b, c) {
                return fn.call(that, a, b, c);
              };
          }
          return function(/* ...args */) {
            return fn.apply(that, arguments);
          };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_defined.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_defined.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        // 7.2.1 RequireObjectCoercible(argument)
        module.exports = function(it) {
          if (it == undefined) throw TypeError("Can't call method on  " + it);
          return it;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_descriptors.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_descriptors.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // Thank's IE8 for his funny defineProperty
        module.exports = !__webpack_require__(
          /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
        )(function() {
          return (
            Object.defineProperty({}, "a", {
              get: function() {
                return 7;
              },
            }).a != 7
          );
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_dom-create.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_dom-create.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var document = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        ).document;
        // typeof document.createElement is 'object' in old IE
        var is = isObject(document) && isObject(document.createElement);
        module.exports = function(it) {
          return is ? document.createElement(it) : {};
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_enum-bug-keys.js":
      /*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-bug-keys.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        // IE 8- don't enum bug keys
        module.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(
          ",",
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_enum-keys.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_enum-keys.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // all enumerable object keys, includes symbols
        var getKeys = __webpack_require__(
          /*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js",
        );
        var gOPS = __webpack_require__(
          /*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js",
        );
        var pIE = __webpack_require__(
          /*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js",
        );
        module.exports = function(it) {
          var result = getKeys(it);
          var getSymbols = gOPS.f;
          if (getSymbols) {
            var symbols = getSymbols(it);
            var isEnum = pIE.f;
            var i = 0;
            var key;
            while (symbols.length > i)
              if (isEnum.call(it, (key = symbols[i++]))) result.push(key);
          }
          return result;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_export.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_export.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var core = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        );
        var ctx = __webpack_require__(
          /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
        );
        var hide = __webpack_require__(
          /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
        );
        var has = __webpack_require__(
          /*! ./_has */ "./node_modules/core-js/library/modules/_has.js",
        );
        var PROTOTYPE = "prototype";

        var $export = function(type, name, source) {
          var IS_FORCED = type & $export.F;
          var IS_GLOBAL = type & $export.G;
          var IS_STATIC = type & $export.S;
          var IS_PROTO = type & $export.P;
          var IS_BIND = type & $export.B;
          var IS_WRAP = type & $export.W;
          var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
          var expProto = exports[PROTOTYPE];
          var target = IS_GLOBAL
            ? global
            : IS_STATIC
            ? global[name]
            : (global[name] || {})[PROTOTYPE];
          var key, own, out;
          if (IS_GLOBAL) source = name;
          for (key in source) {
            // contains in native
            own = !IS_FORCED && target && target[key] !== undefined;
            if (own && has(exports, key)) continue;
            // export native or passed
            out = own ? target[key] : source[key];
            // prevent global pollution for namespaces
            exports[key] =
              IS_GLOBAL && typeof target[key] != "function"
                ? source[key]
                : // bind timers to global for call from export context
                IS_BIND && own
                ? ctx(out, global)
                : // wrap global constructors for prevent change them in library
                IS_WRAP && target[key] == out
                ? (function(C) {
                    var F = function(a, b, c) {
                      if (this instanceof C) {
                        switch (arguments.length) {
                          case 0:
                            return new C();
                          case 1:
                            return new C(a);
                          case 2:
                            return new C(a, b);
                        }
                        return new C(a, b, c);
                      }
                      return C.apply(this, arguments);
                    };
                    F[PROTOTYPE] = C[PROTOTYPE];
                    return F;
                    // make static versions for prototype methods
                  })(out)
                : IS_PROTO && typeof out == "function"
                ? ctx(Function.call, out)
                : out;
            // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
            if (IS_PROTO) {
              (exports.virtual || (exports.virtual = {}))[key] = out;
              // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
              if (type & $export.R && expProto && !expProto[key])
                hide(expProto, key, out);
            }
          }
        };
        // type bitmap
        $export.F = 1; // forced
        $export.G = 2; // global
        $export.S = 4; // static
        $export.P = 8; // proto
        $export.B = 16; // bind
        $export.W = 32; // wrap
        $export.U = 64; // safe
        $export.R = 128; // real proto method for `library`
        module.exports = $export;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_fails.js":
      /*!********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_fails.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(exec) {
          try {
            return !!exec();
          } catch (e) {
            return true;
          }
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_for-of.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_for-of.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var ctx = __webpack_require__(
          /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
        );
        var call = __webpack_require__(
          /*! ./_iter-call */ "./node_modules/core-js/library/modules/_iter-call.js",
        );
        var isArrayIter = __webpack_require__(
          /*! ./_is-array-iter */ "./node_modules/core-js/library/modules/_is-array-iter.js",
        );
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var toLength = __webpack_require__(
          /*! ./_to-length */ "./node_modules/core-js/library/modules/_to-length.js",
        );
        var getIterFn = __webpack_require__(
          /*! ./core.get-iterator-method */ "./node_modules/core-js/library/modules/core.get-iterator-method.js",
        );
        var BREAK = {};
        var RETURN = {};
        var exports = (module.exports = function(
          iterable,
          entries,
          fn,
          that,
          ITERATOR,
        ) {
          var iterFn = ITERATOR
            ? function() {
                return iterable;
              }
            : getIterFn(iterable);
          var f = ctx(fn, that, entries ? 2 : 1);
          var index = 0;
          var length, step, iterator, result;
          if (typeof iterFn != "function")
            throw TypeError(iterable + " is not iterable!");
          // fast case for arrays with default iterator
          if (isArrayIter(iterFn))
            for (length = toLength(iterable.length); length > index; index++) {
              result = entries
                ? f(anObject((step = iterable[index]))[0], step[1])
                : f(iterable[index]);
              if (result === BREAK || result === RETURN) return result;
            }
          else
            for (
              iterator = iterFn.call(iterable);
              !(step = iterator.next()).done;

            ) {
              result = call(iterator, f, step.value, entries);
              if (result === BREAK || result === RETURN) return result;
            }
        });
        exports.BREAK = BREAK;
        exports.RETURN = RETURN;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_global.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_global.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        var global = (module.exports =
          typeof window != "undefined" && window.Math == Math
            ? window
            : typeof self != "undefined" && self.Math == Math
            ? self
            : // eslint-disable-next-line no-new-func
              Function("return this")());
        if (typeof __g == "number") __g = global; // eslint-disable-line no-undef

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_has.js":
      /*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_has.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        var hasOwnProperty = {}.hasOwnProperty;
        module.exports = function(it, key) {
          return hasOwnProperty.call(it, key);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_hide.js":
      /*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_hide.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var dP = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        );
        var createDesc = __webpack_require__(
          /*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js",
        );
        module.exports = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        )
          ? function(object, key, value) {
              return dP.f(object, key, createDesc(1, value));
            }
          : function(object, key, value) {
              object[key] = value;
              return object;
            };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_html.js":
      /*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_html.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var document = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        ).document;
        module.exports = document && document.documentElement;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_ie8-dom-define.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports =
          !__webpack_require__(
            /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
          ) &&
          !__webpack_require__(
            /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
          )(function() {
            return (
              Object.defineProperty(
                __webpack_require__(
                  /*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js",
                )("div"),
                "a",
                {
                  get: function() {
                    return 7;
                  },
                },
              ).a != 7
            );
          });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_invoke.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_invoke.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        // fast apply, http://jsperf.lnkit.com/fast-apply/5
        module.exports = function(fn, args, that) {
          var un = that === undefined;
          switch (args.length) {
            case 0:
              return un ? fn() : fn.call(that);
            case 1:
              return un ? fn(args[0]) : fn.call(that, args[0]);
            case 2:
              return un
                ? fn(args[0], args[1])
                : fn.call(that, args[0], args[1]);
            case 3:
              return un
                ? fn(args[0], args[1], args[2])
                : fn.call(that, args[0], args[1], args[2]);
            case 4:
              return un
                ? fn(args[0], args[1], args[2], args[3])
                : fn.call(that, args[0], args[1], args[2], args[3]);
          }
          return fn.apply(that, args);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_iobject.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iobject.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // fallback for non-array-like ES3 and non-enumerable old V8 strings
        var cof = __webpack_require__(
          /*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js",
        );
        // eslint-disable-next-line no-prototype-builtins
        module.exports = Object("z").propertyIsEnumerable(0)
          ? Object
          : function(it) {
              return cof(it) == "String" ? it.split("") : Object(it);
            };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_is-array-iter.js":
      /*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array-iter.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // check on default Array iterator
        var Iterators = __webpack_require__(
          /*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js",
        );
        var ITERATOR = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("iterator");
        var ArrayProto = Array.prototype;

        module.exports = function(it) {
          return (
            it !== undefined &&
            (Iterators.Array === it || ArrayProto[ITERATOR] === it)
          );
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_is-array.js":
      /*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-array.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 7.2.2 IsArray(argument)
        var cof = __webpack_require__(
          /*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js",
        );
        module.exports =
          Array.isArray ||
          function isArray(arg) {
            return cof(arg) == "Array";
          };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_is-object.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_is-object.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(it) {
          return typeof it === "object"
            ? it !== null
            : typeof it === "function";
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_iter-call.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-call.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // call something on iterator step with safe closing on error
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        module.exports = function(iterator, fn, value, entries) {
          try {
            return entries ? fn(anObject(value)[0], value[1]) : fn(value);
            // 7.4.6 IteratorClose(iterator, completion)
          } catch (e) {
            var ret = iterator["return"];
            if (ret !== undefined) anObject(ret.call(iterator));
            throw e;
          }
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_iter-create.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-create.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var create = __webpack_require__(
          /*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js",
        );
        var descriptor = __webpack_require__(
          /*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js",
        );
        var setToStringTag = __webpack_require__(
          /*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js",
        );
        var IteratorPrototype = {};

        // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
        __webpack_require__(
          /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
        )(
          IteratorPrototype,
          __webpack_require__(
            /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
          )("iterator"),
          function() {
            return this;
          },
        );

        module.exports = function(Constructor, NAME, next) {
          Constructor.prototype = create(IteratorPrototype, {
            next: descriptor(1, next),
          });
          setToStringTag(Constructor, NAME + " Iterator");
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_iter-define.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-define.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var LIBRARY = __webpack_require__(
          /*! ./_library */ "./node_modules/core-js/library/modules/_library.js",
        );
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var redefine = __webpack_require__(
          /*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js",
        );
        var hide = __webpack_require__(
          /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
        );
        var Iterators = __webpack_require__(
          /*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js",
        );
        var $iterCreate = __webpack_require__(
          /*! ./_iter-create */ "./node_modules/core-js/library/modules/_iter-create.js",
        );
        var setToStringTag = __webpack_require__(
          /*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js",
        );
        var getPrototypeOf = __webpack_require__(
          /*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js",
        );
        var ITERATOR = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("iterator");
        var BUGGY = !([].keys && "next" in [].keys()); // Safari has buggy iterators w/o `next`
        var FF_ITERATOR = "@@iterator";
        var KEYS = "keys";
        var VALUES = "values";

        var returnThis = function() {
          return this;
        };

        module.exports = function(
          Base,
          NAME,
          Constructor,
          next,
          DEFAULT,
          IS_SET,
          FORCED,
        ) {
          $iterCreate(Constructor, NAME, next);
          var getMethod = function(kind) {
            if (!BUGGY && kind in proto) return proto[kind];
            switch (kind) {
              case KEYS:
                return function keys() {
                  return new Constructor(this, kind);
                };
              case VALUES:
                return function values() {
                  return new Constructor(this, kind);
                };
            }
            return function entries() {
              return new Constructor(this, kind);
            };
          };
          var TAG = NAME + " Iterator";
          var DEF_VALUES = DEFAULT == VALUES;
          var VALUES_BUG = false;
          var proto = Base.prototype;
          var $native =
            proto[ITERATOR] ||
            proto[FF_ITERATOR] ||
            (DEFAULT && proto[DEFAULT]);
          var $default = $native || getMethod(DEFAULT);
          var $entries = DEFAULT
            ? !DEF_VALUES
              ? $default
              : getMethod("entries")
            : undefined;
          var $anyNative = NAME == "Array" ? proto.entries || $native : $native;
          var methods, key, IteratorPrototype;
          // Fix native
          if ($anyNative) {
            IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
            if (
              IteratorPrototype !== Object.prototype &&
              IteratorPrototype.next
            ) {
              // Set @@toStringTag to native iterators
              setToStringTag(IteratorPrototype, TAG, true);
              // fix for some old engines
              if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != "function")
                hide(IteratorPrototype, ITERATOR, returnThis);
            }
          }
          // fix Array#{values, @@iterator}.name in V8 / FF
          if (DEF_VALUES && $native && $native.name !== VALUES) {
            VALUES_BUG = true;
            $default = function values() {
              return $native.call(this);
            };
          }
          // Define iterator
          if (
            (!LIBRARY || FORCED) &&
            (BUGGY || VALUES_BUG || !proto[ITERATOR])
          ) {
            hide(proto, ITERATOR, $default);
          }
          // Plug for library
          Iterators[NAME] = $default;
          Iterators[TAG] = returnThis;
          if (DEFAULT) {
            methods = {
              values: DEF_VALUES ? $default : getMethod(VALUES),
              keys: IS_SET ? $default : getMethod(KEYS),
              entries: $entries,
            };
            if (FORCED)
              for (key in methods) {
                if (!(key in proto)) redefine(proto, key, methods[key]);
              }
            else
              $export(
                $export.P + $export.F * (BUGGY || VALUES_BUG),
                NAME,
                methods,
              );
          }
          return methods;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_iter-detect.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-detect.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var ITERATOR = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("iterator");
        var SAFE_CLOSING = false;

        try {
          var riter = [7][ITERATOR]();
          riter["return"] = function() {
            SAFE_CLOSING = true;
          };
          // eslint-disable-next-line no-throw-literal
          Array.from(riter, function() {
            throw 2;
          });
        } catch (e) {
          /* empty */
        }

        module.exports = function(exec, skipClosing) {
          if (!skipClosing && !SAFE_CLOSING) return false;
          var safe = false;
          try {
            var arr = [7];
            var iter = arr[ITERATOR]();
            iter.next = function() {
              return { done: (safe = true) };
            };
            arr[ITERATOR] = function() {
              return iter;
            };
            exec(arr);
          } catch (e) {
            /* empty */
          }
          return safe;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_iter-step.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iter-step.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(done, value) {
          return { value: value, done: !!done };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_iterators.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_iterators.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = {};

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_library.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_library.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = true;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_meta.js":
      /*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_meta.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var META = __webpack_require__(
          /*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js",
        )("meta");
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var has = __webpack_require__(
          /*! ./_has */ "./node_modules/core-js/library/modules/_has.js",
        );
        var setDesc = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        ).f;
        var id = 0;
        var isExtensible =
          Object.isExtensible ||
          function() {
            return true;
          };
        var FREEZE = !__webpack_require__(
          /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
        )(function() {
          return isExtensible(Object.preventExtensions({}));
        });
        var setMeta = function(it) {
          setDesc(it, META, {
            value: {
              i: "O" + ++id, // object ID
              w: {}, // weak collections IDs
            },
          });
        };
        var fastKey = function(it, create) {
          // return primitive with prefix
          if (!isObject(it))
            return typeof it == "symbol"
              ? it
              : (typeof it == "string" ? "S" : "P") + it;
          if (!has(it, META)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return "F";
            // not necessary to add metadata
            if (!create) return "E";
            // add missing metadata
            setMeta(it);
            // return object ID
          }
          return it[META].i;
        };
        var getWeak = function(it, create) {
          if (!has(it, META)) {
            // can't set metadata to uncaught frozen object
            if (!isExtensible(it)) return true;
            // not necessary to add metadata
            if (!create) return false;
            // add missing metadata
            setMeta(it);
            // return hash weak collections IDs
          }
          return it[META].w;
        };
        // add metadata on freeze-family methods calling
        var onFreeze = function(it) {
          if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META))
            setMeta(it);
          return it;
        };
        var meta = (module.exports = {
          KEY: META,
          NEED: false,
          fastKey: fastKey,
          getWeak: getWeak,
          onFreeze: onFreeze,
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_microtask.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_microtask.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var macrotask = __webpack_require__(
          /*! ./_task */ "./node_modules/core-js/library/modules/_task.js",
        ).set;
        var Observer = global.MutationObserver || global.WebKitMutationObserver;
        var process = global.process;
        var Promise = global.Promise;
        var isNode =
          __webpack_require__(
            /*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js",
          )(process) == "process";

        module.exports = function() {
          var head, last, notify;

          var flush = function() {
            var parent, fn;
            if (isNode && (parent = process.domain)) parent.exit();
            while (head) {
              fn = head.fn;
              head = head.next;
              try {
                fn();
              } catch (e) {
                if (head) notify();
                else last = undefined;
                throw e;
              }
            }
            last = undefined;
            if (parent) parent.enter();
          };

          // Node.js
          if (isNode) {
            notify = function() {
              process.nextTick(flush);
            };
            // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
          } else if (
            Observer &&
            !(global.navigator && global.navigator.standalone)
          ) {
            var toggle = true;
            var node = document.createTextNode("");
            new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
            notify = function() {
              node.data = toggle = !toggle;
            };
            // environments with maybe non-completely correct, but existent Promise
          } else if (Promise && Promise.resolve) {
            // Promise.resolve without an argument throws an error in LG WebOS 2
            var promise = Promise.resolve(undefined);
            notify = function() {
              promise.then(flush);
            };
            // for other environments - macrotask based on:
            // - setImmediate
            // - MessageChannel
            // - window.postMessag
            // - onreadystatechange
            // - setTimeout
          } else {
            notify = function() {
              // strange IE + webpack dev server bug - use .call(global)
              macrotask.call(global, flush);
            };
          }

          return function(fn) {
            var task = { fn: fn, next: undefined };
            if (last) last.next = task;
            if (!head) {
              head = task;
              notify();
            }
            last = task;
          };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_new-promise-capability.js":
      /*!*************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_new-promise-capability.js ***!
  \*************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // 25.4.1.5 NewPromiseCapability(C)
        var aFunction = __webpack_require__(
          /*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js",
        );

        function PromiseCapability(C) {
          var resolve, reject;
          this.promise = new C(function($$resolve, $$reject) {
            if (resolve !== undefined || reject !== undefined)
              throw TypeError("Bad Promise constructor");
            resolve = $$resolve;
            reject = $$reject;
          });
          this.resolve = aFunction(resolve);
          this.reject = aFunction(reject);
        }

        module.exports.f = function(C) {
          return new PromiseCapability(C);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-assign.js":
      /*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-assign.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // 19.1.2.1 Object.assign(target, source, ...)
        var DESCRIPTORS = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        );
        var getKeys = __webpack_require__(
          /*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js",
        );
        var gOPS = __webpack_require__(
          /*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js",
        );
        var pIE = __webpack_require__(
          /*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js",
        );
        var toObject = __webpack_require__(
          /*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js",
        );
        var IObject = __webpack_require__(
          /*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js",
        );
        var $assign = Object.assign;

        // should work with symbols and should have deterministic property order (V8 bug)
        module.exports =
          !$assign ||
          __webpack_require__(
            /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
          )(function() {
            var A = {};
            var B = {};
            // eslint-disable-next-line no-undef
            var S = Symbol();
            var K = "abcdefghijklmnopqrst";
            A[S] = 7;
            K.split("").forEach(function(k) {
              B[k] = k;
            });
            return (
              $assign({}, A)[S] != 7 ||
              Object.keys($assign({}, B)).join("") != K
            );
          })
            ? function assign(target, source) {
                // eslint-disable-line no-unused-vars
                var T = toObject(target);
                var aLen = arguments.length;
                var index = 1;
                var getSymbols = gOPS.f;
                var isEnum = pIE.f;
                while (aLen > index) {
                  var S = IObject(arguments[index++]);
                  var keys = getSymbols
                    ? getKeys(S).concat(getSymbols(S))
                    : getKeys(S);
                  var length = keys.length;
                  var j = 0;
                  var key;
                  while (length > j) {
                    key = keys[j++];
                    if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
                  }
                }
                return T;
              }
            : $assign;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-create.js":
      /*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-create.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var dPs = __webpack_require__(
          /*! ./_object-dps */ "./node_modules/core-js/library/modules/_object-dps.js",
        );
        var enumBugKeys = __webpack_require__(
          /*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js",
        );
        var IE_PROTO = __webpack_require__(
          /*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js",
        )("IE_PROTO");
        var Empty = function() {
          /* empty */
        };
        var PROTOTYPE = "prototype";

        // Create object with fake `null` prototype: use iframe Object with cleared prototype
        var createDict = function() {
          // Thrash, waste and sodomy: IE GC bug
          var iframe = __webpack_require__(
            /*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js",
          )("iframe");
          var i = enumBugKeys.length;
          var lt = "<";
          var gt = ">";
          var iframeDocument;
          iframe.style.display = "none";
          __webpack_require__(
            /*! ./_html */ "./node_modules/core-js/library/modules/_html.js",
          ).appendChild(iframe);
          iframe.src = "javascript:"; // eslint-disable-line no-script-url
          // createDict = iframe.contentWindow.Object;
          // html.removeChild(iframe);
          iframeDocument = iframe.contentWindow.document;
          iframeDocument.open();
          iframeDocument.write(
            lt + "script" + gt + "document.F=Object" + lt + "/script" + gt,
          );
          iframeDocument.close();
          createDict = iframeDocument.F;
          while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
          return createDict();
        };

        module.exports =
          Object.create ||
          function create(O, Properties) {
            var result;
            if (O !== null) {
              Empty[PROTOTYPE] = anObject(O);
              result = new Empty();
              Empty[PROTOTYPE] = null;
              // add "__proto__" for Object.getPrototypeOf polyfill
              result[IE_PROTO] = O;
            } else result = createDict();
            return Properties === undefined ? result : dPs(result, Properties);
          };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-dp.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dp.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var IE8_DOM_DEFINE = __webpack_require__(
          /*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js",
        );
        var toPrimitive = __webpack_require__(
          /*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js",
        );
        var dP = Object.defineProperty;

        exports.f = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        )
          ? Object.defineProperty
          : function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPrimitive(P, true);
              anObject(Attributes);
              if (IE8_DOM_DEFINE)
                try {
                  return dP(O, P, Attributes);
                } catch (e) {
                  /* empty */
                }
              if ("get" in Attributes || "set" in Attributes)
                throw TypeError("Accessors not supported!");
              if ("value" in Attributes) O[P] = Attributes.value;
              return O;
            };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-dps.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-dps.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var dP = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        );
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var getKeys = __webpack_require__(
          /*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js",
        );

        module.exports = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        )
          ? Object.defineProperties
          : function defineProperties(O, Properties) {
              anObject(O);
              var keys = getKeys(Properties);
              var length = keys.length;
              var i = 0;
              var P;
              while (length > i) dP.f(O, (P = keys[i++]), Properties[P]);
              return O;
            };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-gopd.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopd.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var pIE = __webpack_require__(
          /*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js",
        );
        var createDesc = __webpack_require__(
          /*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js",
        );
        var toIObject = __webpack_require__(
          /*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js",
        );
        var toPrimitive = __webpack_require__(
          /*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js",
        );
        var has = __webpack_require__(
          /*! ./_has */ "./node_modules/core-js/library/modules/_has.js",
        );
        var IE8_DOM_DEFINE = __webpack_require__(
          /*! ./_ie8-dom-define */ "./node_modules/core-js/library/modules/_ie8-dom-define.js",
        );
        var gOPD = Object.getOwnPropertyDescriptor;

        exports.f = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        )
          ? gOPD
          : function getOwnPropertyDescriptor(O, P) {
              O = toIObject(O);
              P = toPrimitive(P, true);
              if (IE8_DOM_DEFINE)
                try {
                  return gOPD(O, P);
                } catch (e) {
                  /* empty */
                }
              if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
            };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-gopn-ext.js":
      /*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopn-ext.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
        var toIObject = __webpack_require__(
          /*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js",
        );
        var gOPN = __webpack_require__(
          /*! ./_object-gopn */ "./node_modules/core-js/library/modules/_object-gopn.js",
        ).f;
        var toString = {}.toString;

        var windowNames =
          typeof window == "object" && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window)
            : [];

        var getWindowNames = function(it) {
          try {
            return gOPN(it);
          } catch (e) {
            return windowNames.slice();
          }
        };

        module.exports.f = function getOwnPropertyNames(it) {
          return windowNames && toString.call(it) == "[object Window]"
            ? getWindowNames(it)
            : gOPN(toIObject(it));
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-gopn.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gopn.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
        var $keys = __webpack_require__(
          /*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js",
        );
        var hiddenKeys = __webpack_require__(
          /*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js",
        ).concat("length", "prototype");

        exports.f =
          Object.getOwnPropertyNames ||
          function getOwnPropertyNames(O) {
            return $keys(O, hiddenKeys);
          };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-gops.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gops.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        exports.f = Object.getOwnPropertySymbols;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-gpo.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-gpo.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
        var has = __webpack_require__(
          /*! ./_has */ "./node_modules/core-js/library/modules/_has.js",
        );
        var toObject = __webpack_require__(
          /*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js",
        );
        var IE_PROTO = __webpack_require__(
          /*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js",
        )("IE_PROTO");
        var ObjectProto = Object.prototype;

        module.exports =
          Object.getPrototypeOf ||
          function(O) {
            O = toObject(O);
            if (has(O, IE_PROTO)) return O[IE_PROTO];
            if (
              typeof O.constructor == "function" &&
              O instanceof O.constructor
            ) {
              return O.constructor.prototype;
            }
            return O instanceof Object ? ObjectProto : null;
          };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-keys-internal.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys-internal.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var has = __webpack_require__(
          /*! ./_has */ "./node_modules/core-js/library/modules/_has.js",
        );
        var toIObject = __webpack_require__(
          /*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js",
        );
        var arrayIndexOf = __webpack_require__(
          /*! ./_array-includes */ "./node_modules/core-js/library/modules/_array-includes.js",
        )(false);
        var IE_PROTO = __webpack_require__(
          /*! ./_shared-key */ "./node_modules/core-js/library/modules/_shared-key.js",
        )("IE_PROTO");

        module.exports = function(object, names) {
          var O = toIObject(object);
          var i = 0;
          var result = [];
          var key;
          for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
          // Don't enum bug & hidden keys
          while (names.length > i)
            if (has(O, (key = names[i++]))) {
              ~arrayIndexOf(result, key) || result.push(key);
            }
          return result;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-keys.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-keys.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.2.14 / 15.2.3.14 Object.keys(O)
        var $keys = __webpack_require__(
          /*! ./_object-keys-internal */ "./node_modules/core-js/library/modules/_object-keys-internal.js",
        );
        var enumBugKeys = __webpack_require__(
          /*! ./_enum-bug-keys */ "./node_modules/core-js/library/modules/_enum-bug-keys.js",
        );

        module.exports =
          Object.keys ||
          function keys(O) {
            return $keys(O, enumBugKeys);
          };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-pie.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-pie.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        exports.f = {}.propertyIsEnumerable;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_object-sap.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_object-sap.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // most Object methods by ES6 should accept primitives
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var core = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        );
        var fails = __webpack_require__(
          /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
        );
        module.exports = function(KEY, exec) {
          var fn = (core.Object || {})[KEY] || Object[KEY];
          var exp = {};
          exp[KEY] = exec(fn);
          $export(
            $export.S +
              $export.F *
                fails(function() {
                  fn(1);
                }),
            "Object",
            exp,
          );
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_perform.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_perform.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(exec) {
          try {
            return { e: false, v: exec() };
          } catch (e) {
            return { e: true, v: e };
          }
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_promise-resolve.js":
      /*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_promise-resolve.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var newPromiseCapability = __webpack_require__(
          /*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js",
        );

        module.exports = function(C, x) {
          anObject(C);
          if (isObject(x) && x.constructor === C) return x;
          var promiseCapability = newPromiseCapability.f(C);
          var resolve = promiseCapability.resolve;
          resolve(x);
          return promiseCapability.promise;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_property-desc.js":
      /*!****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_property-desc.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(bitmap, value) {
          return {
            enumerable: !(bitmap & 1),
            configurable: !(bitmap & 2),
            writable: !(bitmap & 4),
            value: value,
          };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_redefine-all.js":
      /*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine-all.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var hide = __webpack_require__(
          /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
        );
        module.exports = function(target, src, safe) {
          for (var key in src) {
            if (safe && target[key]) target[key] = src[key];
            else hide(target, key, src[key]);
          }
          return target;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_redefine.js":
      /*!***********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_redefine.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_set-collection-from.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-from.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // https://tc39.github.io/proposal-setmap-offrom/
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var aFunction = __webpack_require__(
          /*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js",
        );
        var ctx = __webpack_require__(
          /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
        );
        var forOf = __webpack_require__(
          /*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js",
        );

        module.exports = function(COLLECTION) {
          $export($export.S, COLLECTION, {
            from: function from(source /* , mapFn, thisArg */) {
              var mapFn = arguments[1];
              var mapping, A, n, cb;
              aFunction(this);
              mapping = mapFn !== undefined;
              if (mapping) aFunction(mapFn);
              if (source == undefined) return new this();
              A = [];
              if (mapping) {
                n = 0;
                cb = ctx(mapFn, arguments[2], 2);
                forOf(source, false, function(nextItem) {
                  A.push(cb(nextItem, n++));
                });
              } else {
                forOf(source, false, A.push, A);
              }
              return new this(A);
            },
          });
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_set-collection-of.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-collection-of.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // https://tc39.github.io/proposal-setmap-offrom/
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );

        module.exports = function(COLLECTION) {
          $export($export.S, COLLECTION, {
            of: function of() {
              var length = arguments.length;
              var A = new Array(length);
              while (length--) A[length] = arguments[length];
              return new this(A);
            },
          });
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_set-proto.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-proto.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // Works with __proto__ only. Old v8 can't work with null proto objects.
        /* eslint-disable no-proto */
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var check = function(O, proto) {
          anObject(O);
          if (!isObject(proto) && proto !== null)
            throw TypeError(proto + ": can't set as prototype!");
        };
        module.exports = {
          set:
            Object.setPrototypeOf ||
            ("__proto__" in {} // eslint-disable-line
              ? (function(test, buggy, set) {
                  try {
                    set = __webpack_require__(
                      /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
                    )(
                      Function.call,
                      __webpack_require__(
                        /*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js",
                      ).f(Object.prototype, "__proto__").set,
                      2,
                    );
                    set(test, []);
                    buggy = !(test instanceof Array);
                  } catch (e) {
                    buggy = true;
                  }
                  return function setPrototypeOf(O, proto) {
                    check(O, proto);
                    if (buggy) O.__proto__ = proto;
                    else set(O, proto);
                    return O;
                  };
                })({}, false)
              : undefined),
          check: check,
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_set-species.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-species.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var core = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        );
        var dP = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        );
        var DESCRIPTORS = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        );
        var SPECIES = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("species");

        module.exports = function(KEY) {
          var C = typeof core[KEY] == "function" ? core[KEY] : global[KEY];
          if (DESCRIPTORS && C && !C[SPECIES])
            dP.f(C, SPECIES, {
              configurable: true,
              get: function() {
                return this;
              },
            });
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_set-to-string-tag.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_set-to-string-tag.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var def = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        ).f;
        var has = __webpack_require__(
          /*! ./_has */ "./node_modules/core-js/library/modules/_has.js",
        );
        var TAG = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("toStringTag");

        module.exports = function(it, tag, stat) {
          if (it && !has((it = stat ? it : it.prototype), TAG))
            def(it, TAG, { configurable: true, value: tag });
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_shared-key.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared-key.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var shared = __webpack_require__(
          /*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js",
        )("keys");
        var uid = __webpack_require__(
          /*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js",
        );
        module.exports = function(key) {
          return shared[key] || (shared[key] = uid(key));
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_shared.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_shared.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var core = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        );
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var SHARED = "__core-js_shared__";
        var store = global[SHARED] || (global[SHARED] = {});

        (module.exports = function(key, value) {
          return store[key] || (store[key] = value !== undefined ? value : {});
        })("versions", []).push({
          version: core.version,
          mode: __webpack_require__(
            /*! ./_library */ "./node_modules/core-js/library/modules/_library.js",
          )
            ? "pure"
            : "global",
          copyright: "© 2019 Denis Pushkarev (zloirock.ru)",
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_species-constructor.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_species-constructor.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 7.3.20 SpeciesConstructor(O, defaultConstructor)
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var aFunction = __webpack_require__(
          /*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js",
        );
        var SPECIES = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("species");
        module.exports = function(O, D) {
          var C = anObject(O).constructor;
          var S;
          return C === undefined || (S = anObject(C)[SPECIES]) == undefined
            ? D
            : aFunction(S);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_string-at.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_string-at.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(
          /*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js",
        );
        var defined = __webpack_require__(
          /*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js",
        );
        // true  -> String#at
        // false -> String#codePointAt
        module.exports = function(TO_STRING) {
          return function(that, pos) {
            var s = String(defined(that));
            var i = toInteger(pos);
            var l = s.length;
            var a, b;
            if (i < 0 || i >= l) return TO_STRING ? "" : undefined;
            a = s.charCodeAt(i);
            return a < 0xd800 ||
              a > 0xdbff ||
              i + 1 === l ||
              (b = s.charCodeAt(i + 1)) < 0xdc00 ||
              b > 0xdfff
              ? TO_STRING
                ? s.charAt(i)
                : a
              : TO_STRING
              ? s.slice(i, i + 2)
              : ((a - 0xd800) << 10) + (b - 0xdc00) + 0x10000;
          };
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_task.js":
      /*!*******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_task.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var ctx = __webpack_require__(
          /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
        );
        var invoke = __webpack_require__(
          /*! ./_invoke */ "./node_modules/core-js/library/modules/_invoke.js",
        );
        var html = __webpack_require__(
          /*! ./_html */ "./node_modules/core-js/library/modules/_html.js",
        );
        var cel = __webpack_require__(
          /*! ./_dom-create */ "./node_modules/core-js/library/modules/_dom-create.js",
        );
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var process = global.process;
        var setTask = global.setImmediate;
        var clearTask = global.clearImmediate;
        var MessageChannel = global.MessageChannel;
        var Dispatch = global.Dispatch;
        var counter = 0;
        var queue = {};
        var ONREADYSTATECHANGE = "onreadystatechange";
        var defer, channel, port;
        var run = function() {
          var id = +this;
          // eslint-disable-next-line no-prototype-builtins
          if (queue.hasOwnProperty(id)) {
            var fn = queue[id];
            delete queue[id];
            fn();
          }
        };
        var listener = function(event) {
          run.call(event.data);
        };
        // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!setTask || !clearTask) {
          setTask = function setImmediate(fn) {
            var args = [];
            var i = 1;
            while (arguments.length > i) args.push(arguments[i++]);
            queue[++counter] = function() {
              // eslint-disable-next-line no-new-func
              invoke(typeof fn == "function" ? fn : Function(fn), args);
            };
            defer(counter);
            return counter;
          };
          clearTask = function clearImmediate(id) {
            delete queue[id];
          };
          // Node.js 0.8-
          if (
            __webpack_require__(
              /*! ./_cof */ "./node_modules/core-js/library/modules/_cof.js",
            )(process) == "process"
          ) {
            defer = function(id) {
              process.nextTick(ctx(run, id, 1));
            };
            // Sphere (JS game engine) Dispatch API
          } else if (Dispatch && Dispatch.now) {
            defer = function(id) {
              Dispatch.now(ctx(run, id, 1));
            };
            // Browsers with MessageChannel, includes WebWorkers
          } else if (MessageChannel) {
            channel = new MessageChannel();
            port = channel.port2;
            channel.port1.onmessage = listener;
            defer = ctx(port.postMessage, port, 1);
            // Browsers with postMessage, skip WebWorkers
            // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
          } else if (
            global.addEventListener &&
            typeof postMessage == "function" &&
            !global.importScripts
          ) {
            defer = function(id) {
              global.postMessage(id + "", "*");
            };
            global.addEventListener("message", listener, false);
            // IE8-
          } else if (ONREADYSTATECHANGE in cel("script")) {
            defer = function(id) {
              html.appendChild(cel("script"))[ONREADYSTATECHANGE] = function() {
                html.removeChild(this);
                run.call(id);
              };
            };
            // Rest old browsers
          } else {
            defer = function(id) {
              setTimeout(ctx(run, id, 1), 0);
            };
          }
        }
        module.exports = {
          set: setTask,
          clear: clearTask,
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_to-absolute-index.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-absolute-index.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var toInteger = __webpack_require__(
          /*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js",
        );
        var max = Math.max;
        var min = Math.min;
        module.exports = function(index, length) {
          index = toInteger(index);
          return index < 0 ? max(index + length, 0) : min(index, length);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_to-integer.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-integer.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        // 7.1.4 ToInteger
        var ceil = Math.ceil;
        var floor = Math.floor;
        module.exports = function(it) {
          return isNaN((it = +it)) ? 0 : (it > 0 ? floor : ceil)(it);
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_to-iobject.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-iobject.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // to indexed object, toObject with fallback for non-array-like ES3 strings
        var IObject = __webpack_require__(
          /*! ./_iobject */ "./node_modules/core-js/library/modules/_iobject.js",
        );
        var defined = __webpack_require__(
          /*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js",
        );
        module.exports = function(it) {
          return IObject(defined(it));
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_to-length.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-length.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 7.1.15 ToLength
        var toInteger = __webpack_require__(
          /*! ./_to-integer */ "./node_modules/core-js/library/modules/_to-integer.js",
        );
        var min = Math.min;
        module.exports = function(it) {
          return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_to-object.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-object.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 7.1.13 ToObject(argument)
        var defined = __webpack_require__(
          /*! ./_defined */ "./node_modules/core-js/library/modules/_defined.js",
        );
        module.exports = function(it) {
          return Object(defined(it));
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_to-primitive.js":
      /*!***************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_to-primitive.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 7.1.1 ToPrimitive(input [, PreferredType])
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        // instead of the ES6 spec version, we didn't implement @@toPrimitive case
        // and the second argument - flag - preferred type is a string
        module.exports = function(it, S) {
          if (!isObject(it)) return it;
          var fn, val;
          if (
            S &&
            typeof (fn = it.toString) == "function" &&
            !isObject((val = fn.call(it)))
          )
            return val;
          if (
            typeof (fn = it.valueOf) == "function" &&
            !isObject((val = fn.call(it)))
          )
            return val;
          if (
            !S &&
            typeof (fn = it.toString) == "function" &&
            !isObject((val = fn.call(it)))
          )
            return val;
          throw TypeError("Can't convert object to primitive value");
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_uid.js":
      /*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_uid.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        var id = 0;
        var px = Math.random();
        module.exports = function(key) {
          return "Symbol(".concat(
            key === undefined ? "" : key,
            ")_",
            (++id + px).toString(36),
          );
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_user-agent.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_user-agent.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var navigator = global.navigator;

        module.exports = (navigator && navigator.userAgent) || "";

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_validate-collection.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_validate-collection.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        module.exports = function(it, TYPE) {
          if (!isObject(it) || it._t !== TYPE)
            throw TypeError("Incompatible receiver, " + TYPE + " required!");
          return it;
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_wks-define.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks-define.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var core = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        );
        var LIBRARY = __webpack_require__(
          /*! ./_library */ "./node_modules/core-js/library/modules/_library.js",
        );
        var wksExt = __webpack_require__(
          /*! ./_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js",
        );
        var defineProperty = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        ).f;
        module.exports = function(name) {
          var $Symbol =
            core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
          if (name.charAt(0) != "_" && !(name in $Symbol))
            defineProperty($Symbol, name, { value: wksExt.f(name) });
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_wks-ext.js":
      /*!**********************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks-ext.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        exports.f = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/_wks.js":
      /*!******************************************************!*\
  !*** ./node_modules/core-js/library/modules/_wks.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var store = __webpack_require__(
          /*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js",
        )("wks");
        var uid = __webpack_require__(
          /*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js",
        );
        var Symbol = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        ).Symbol;
        var USE_SYMBOL = typeof Symbol == "function";

        var $exports = (module.exports = function(name) {
          return (
            store[name] ||
            (store[name] =
              (USE_SYMBOL && Symbol[name]) ||
              (USE_SYMBOL ? Symbol : uid)("Symbol." + name))
          );
        });

        $exports.store = store;

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/core.get-iterator-method.js":
      /*!**************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/core.get-iterator-method.js ***!
  \**************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var classof = __webpack_require__(
          /*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js",
        );
        var ITERATOR = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("iterator");
        var Iterators = __webpack_require__(
          /*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js",
        );
        module.exports = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        ).getIteratorMethod = function(it) {
          if (it != undefined)
            return it[ITERATOR] || it["@@iterator"] || Iterators[classof(it)];
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/core.get-iterator.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/core.get-iterator.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var get = __webpack_require__(
          /*! ./core.get-iterator-method */ "./node_modules/core-js/library/modules/core.get-iterator-method.js",
        );
        module.exports = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        ).getIterator = function(it) {
          var iterFn = get(it);
          if (typeof iterFn != "function")
            throw TypeError(it + " is not iterable!");
          return anObject(iterFn.call(it));
        };

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.array.is-array.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.is-array.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );

        $export($export.S, "Array", {
          isArray: __webpack_require__(
            /*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js",
          ),
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.array.iterator.js":
      /*!********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.array.iterator.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var addToUnscopables = __webpack_require__(
          /*! ./_add-to-unscopables */ "./node_modules/core-js/library/modules/_add-to-unscopables.js",
        );
        var step = __webpack_require__(
          /*! ./_iter-step */ "./node_modules/core-js/library/modules/_iter-step.js",
        );
        var Iterators = __webpack_require__(
          /*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js",
        );
        var toIObject = __webpack_require__(
          /*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js",
        );

        // 22.1.3.4 Array.prototype.entries()
        // 22.1.3.13 Array.prototype.keys()
        // 22.1.3.29 Array.prototype.values()
        // 22.1.3.30 Array.prototype[@@iterator]()
        module.exports = __webpack_require__(
          /*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js",
        )(
          Array,
          "Array",
          function(iterated, kind) {
            this._t = toIObject(iterated); // target
            this._i = 0; // next index
            this._k = kind; // kind
            // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
          },
          function() {
            var O = this._t;
            var kind = this._k;
            var index = this._i++;
            if (!O || index >= O.length) {
              this._t = undefined;
              return step(1);
            }
            if (kind == "keys") return step(0, index);
            if (kind == "values") return step(0, O[index]);
            return step(0, [index, O[index]]);
          },
          "values",
        );

        // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
        Iterators.Arguments = Iterators.Array;

        addToUnscopables("keys");
        addToUnscopables("values");
        addToUnscopables("entries");

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.object.assign.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.assign.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.3.1 Object.assign(target, source)
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );

        $export($export.S + $export.F, "Object", {
          assign: __webpack_require__(
            /*! ./_object-assign */ "./node_modules/core-js/library/modules/_object-assign.js",
          ),
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.object.create.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.create.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
        $export($export.S, "Object", {
          create: __webpack_require__(
            /*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js",
          ),
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.object.define-property.js":
      /*!****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.define-property.js ***!
  \****************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        // 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
        $export(
          $export.S +
            $export.F *
              !__webpack_require__(
                /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
              ),
          "Object",
          {
            defineProperty: __webpack_require__(
              /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
            ).f,
          },
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.object.get-prototype-of.js":
      /*!*****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.get-prototype-of.js ***!
  \*****************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.2.9 Object.getPrototypeOf(O)
        var toObject = __webpack_require__(
          /*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js",
        );
        var $getPrototypeOf = __webpack_require__(
          /*! ./_object-gpo */ "./node_modules/core-js/library/modules/_object-gpo.js",
        );

        __webpack_require__(
          /*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js",
        )("getPrototypeOf", function() {
          return function getPrototypeOf(it) {
            return $getPrototypeOf(toObject(it));
          };
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.object.keys.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.keys.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.2.14 Object.keys(O)
        var toObject = __webpack_require__(
          /*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js",
        );
        var $keys = __webpack_require__(
          /*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js",
        );

        __webpack_require__(
          /*! ./_object-sap */ "./node_modules/core-js/library/modules/_object-sap.js",
        )("keys", function() {
          return function keys(it) {
            return $keys(toObject(it));
          };
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.object.set-prototype-of.js":
      /*!*****************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.set-prototype-of.js ***!
  \*****************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 19.1.3.19 Object.setPrototypeOf(O, proto)
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        $export($export.S, "Object", {
          setPrototypeOf: __webpack_require__(
            /*! ./_set-proto */ "./node_modules/core-js/library/modules/_set-proto.js",
          ).set,
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.object.to-string.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.object.to-string.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.promise.js":
      /*!*************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.promise.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var LIBRARY = __webpack_require__(
          /*! ./_library */ "./node_modules/core-js/library/modules/_library.js",
        );
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var ctx = __webpack_require__(
          /*! ./_ctx */ "./node_modules/core-js/library/modules/_ctx.js",
        );
        var classof = __webpack_require__(
          /*! ./_classof */ "./node_modules/core-js/library/modules/_classof.js",
        );
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var aFunction = __webpack_require__(
          /*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js",
        );
        var anInstance = __webpack_require__(
          /*! ./_an-instance */ "./node_modules/core-js/library/modules/_an-instance.js",
        );
        var forOf = __webpack_require__(
          /*! ./_for-of */ "./node_modules/core-js/library/modules/_for-of.js",
        );
        var speciesConstructor = __webpack_require__(
          /*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js",
        );
        var task = __webpack_require__(
          /*! ./_task */ "./node_modules/core-js/library/modules/_task.js",
        ).set;
        var microtask = __webpack_require__(
          /*! ./_microtask */ "./node_modules/core-js/library/modules/_microtask.js",
        )();
        var newPromiseCapabilityModule = __webpack_require__(
          /*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js",
        );
        var perform = __webpack_require__(
          /*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js",
        );
        var userAgent = __webpack_require__(
          /*! ./_user-agent */ "./node_modules/core-js/library/modules/_user-agent.js",
        );
        var promiseResolve = __webpack_require__(
          /*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js",
        );
        var PROMISE = "Promise";
        var TypeError = global.TypeError;
        var process = global.process;
        var versions = process && process.versions;
        var v8 = (versions && versions.v8) || "";
        var $Promise = global[PROMISE];
        var isNode = classof(process) == "process";
        var empty = function() {
          /* empty */
        };
        var Internal,
          newGenericPromiseCapability,
          OwnPromiseCapability,
          Wrapper;
        var newPromiseCapability = (newGenericPromiseCapability =
          newPromiseCapabilityModule.f);

        var USE_NATIVE = !!(function() {
          try {
            // correct subclassing with @@species support
            var promise = $Promise.resolve(1);
            var FakePromise = ((promise.constructor = {})[
              __webpack_require__(
                /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
              )("species")
            ] = function(exec) {
              exec(empty, empty);
            });
            // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
            return (
              (isNode || typeof PromiseRejectionEvent == "function") &&
              promise.then(empty) instanceof FakePromise &&
              // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
              // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
              // we can't detect it synchronously, so just check versions
              v8.indexOf("6.6") !== 0 &&
              userAgent.indexOf("Chrome/66") === -1
            );
          } catch (e) {
            /* empty */
          }
        })();

        // helpers
        var isThenable = function(it) {
          var then;
          return isObject(it) && typeof (then = it.then) == "function"
            ? then
            : false;
        };
        var notify = function(promise, isReject) {
          if (promise._n) return;
          promise._n = true;
          var chain = promise._c;
          microtask(function() {
            var value = promise._v;
            var ok = promise._s == 1;
            var i = 0;
            var run = function(reaction) {
              var handler = ok ? reaction.ok : reaction.fail;
              var resolve = reaction.resolve;
              var reject = reaction.reject;
              var domain = reaction.domain;
              var result, then, exited;
              try {
                if (handler) {
                  if (!ok) {
                    if (promise._h == 2) onHandleUnhandled(promise);
                    promise._h = 1;
                  }
                  if (handler === true) result = value;
                  else {
                    if (domain) domain.enter();
                    result = handler(value); // may throw
                    if (domain) {
                      domain.exit();
                      exited = true;
                    }
                  }
                  if (result === reaction.promise) {
                    reject(TypeError("Promise-chain cycle"));
                  } else if ((then = isThenable(result))) {
                    then.call(result, resolve, reject);
                  } else resolve(result);
                } else reject(value);
              } catch (e) {
                if (domain && !exited) domain.exit();
                reject(e);
              }
            };
            while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
            promise._c = [];
            promise._n = false;
            if (isReject && !promise._h) onUnhandled(promise);
          });
        };
        var onUnhandled = function(promise) {
          task.call(global, function() {
            var value = promise._v;
            var unhandled = isUnhandled(promise);
            var result, handler, console;
            if (unhandled) {
              result = perform(function() {
                if (isNode) {
                  process.emit("unhandledRejection", value, promise);
                } else if ((handler = global.onunhandledrejection)) {
                  handler({ promise: promise, reason: value });
                } else if ((console = global.console) && console.error) {
                  console.error("Unhandled promise rejection", value);
                }
              });
              // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
              promise._h = isNode || isUnhandled(promise) ? 2 : 1;
            }
            promise._a = undefined;
            if (unhandled && result.e) throw result.v;
          });
        };
        var isUnhandled = function(promise) {
          return promise._h !== 1 && (promise._a || promise._c).length === 0;
        };
        var onHandleUnhandled = function(promise) {
          task.call(global, function() {
            var handler;
            if (isNode) {
              process.emit("rejectionHandled", promise);
            } else if ((handler = global.onrejectionhandled)) {
              handler({ promise: promise, reason: promise._v });
            }
          });
        };
        var $reject = function(value) {
          var promise = this;
          if (promise._d) return;
          promise._d = true;
          promise = promise._w || promise; // unwrap
          promise._v = value;
          promise._s = 2;
          if (!promise._a) promise._a = promise._c.slice();
          notify(promise, true);
        };
        var $resolve = function(value) {
          var promise = this;
          var then;
          if (promise._d) return;
          promise._d = true;
          promise = promise._w || promise; // unwrap
          try {
            if (promise === value)
              throw TypeError("Promise can't be resolved itself");
            if ((then = isThenable(value))) {
              microtask(function() {
                var wrapper = { _w: promise, _d: false }; // wrap
                try {
                  then.call(
                    value,
                    ctx($resolve, wrapper, 1),
                    ctx($reject, wrapper, 1),
                  );
                } catch (e) {
                  $reject.call(wrapper, e);
                }
              });
            } else {
              promise._v = value;
              promise._s = 1;
              notify(promise, false);
            }
          } catch (e) {
            $reject.call({ _w: promise, _d: false }, e); // wrap
          }
        };

        // constructor polyfill
        if (!USE_NATIVE) {
          // 25.4.3.1 Promise(executor)
          $Promise = function Promise(executor) {
            anInstance(this, $Promise, PROMISE, "_h");
            aFunction(executor);
            Internal.call(this);
            try {
              executor(ctx($resolve, this, 1), ctx($reject, this, 1));
            } catch (err) {
              $reject.call(this, err);
            }
          };
          // eslint-disable-next-line no-unused-vars
          Internal = function Promise(executor) {
            this._c = []; // <- awaiting reactions
            this._a = undefined; // <- checked in isUnhandled reactions
            this._s = 0; // <- state
            this._d = false; // <- done
            this._v = undefined; // <- value
            this._h = 0; // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
            this._n = false; // <- notify
          };
          Internal.prototype = __webpack_require__(
            /*! ./_redefine-all */ "./node_modules/core-js/library/modules/_redefine-all.js",
          )($Promise.prototype, {
            // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
            then: function then(onFulfilled, onRejected) {
              var reaction = newPromiseCapability(
                speciesConstructor(this, $Promise),
              );
              reaction.ok =
                typeof onFulfilled == "function" ? onFulfilled : true;
              reaction.fail = typeof onRejected == "function" && onRejected;
              reaction.domain = isNode ? process.domain : undefined;
              this._c.push(reaction);
              if (this._a) this._a.push(reaction);
              if (this._s) notify(this, false);
              return reaction.promise;
            },
            // 25.4.5.1 Promise.prototype.catch(onRejected)
            catch: function(onRejected) {
              return this.then(undefined, onRejected);
            },
          });
          OwnPromiseCapability = function() {
            var promise = new Internal();
            this.promise = promise;
            this.resolve = ctx($resolve, promise, 1);
            this.reject = ctx($reject, promise, 1);
          };
          newPromiseCapabilityModule.f = newPromiseCapability = function(C) {
            return C === $Promise || C === Wrapper
              ? new OwnPromiseCapability(C)
              : newGenericPromiseCapability(C);
          };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, {
          Promise: $Promise,
        });
        __webpack_require__(
          /*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js",
        )($Promise, PROMISE);
        __webpack_require__(
          /*! ./_set-species */ "./node_modules/core-js/library/modules/_set-species.js",
        )(PROMISE);
        Wrapper = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        )[PROMISE];

        // statics
        $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
          // 25.4.4.5 Promise.reject(r)
          reject: function reject(r) {
            var capability = newPromiseCapability(this);
            var $$reject = capability.reject;
            $$reject(r);
            return capability.promise;
          },
        });
        $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
          // 25.4.4.6 Promise.resolve(x)
          resolve: function resolve(x) {
            return promiseResolve(
              LIBRARY && this === Wrapper ? $Promise : this,
              x,
            );
          },
        });
        $export(
          $export.S +
            $export.F *
              !(
                USE_NATIVE &&
                __webpack_require__(
                  /*! ./_iter-detect */ "./node_modules/core-js/library/modules/_iter-detect.js",
                )(function(iter) {
                  $Promise.all(iter)["catch"](empty);
                })
              ),
          PROMISE,
          {
            // 25.4.4.1 Promise.all(iterable)
            all: function all(iterable) {
              var C = this;
              var capability = newPromiseCapability(C);
              var resolve = capability.resolve;
              var reject = capability.reject;
              var result = perform(function() {
                var values = [];
                var index = 0;
                var remaining = 1;
                forOf(iterable, false, function(promise) {
                  var $index = index++;
                  var alreadyCalled = false;
                  values.push(undefined);
                  remaining++;
                  C.resolve(promise).then(function(value) {
                    if (alreadyCalled) return;
                    alreadyCalled = true;
                    values[$index] = value;
                    --remaining || resolve(values);
                  }, reject);
                });
                --remaining || resolve(values);
              });
              if (result.e) reject(result.v);
              return capability.promise;
            },
            // 25.4.4.4 Promise.race(iterable)
            race: function race(iterable) {
              var C = this;
              var capability = newPromiseCapability(C);
              var reject = capability.reject;
              var result = perform(function() {
                forOf(iterable, false, function(promise) {
                  C.resolve(promise).then(capability.resolve, reject);
                });
              });
              if (result.e) reject(result.v);
              return capability.promise;
            },
          },
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.reflect.construct.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.reflect.construct.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var create = __webpack_require__(
          /*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js",
        );
        var aFunction = __webpack_require__(
          /*! ./_a-function */ "./node_modules/core-js/library/modules/_a-function.js",
        );
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var fails = __webpack_require__(
          /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
        );
        var bind = __webpack_require__(
          /*! ./_bind */ "./node_modules/core-js/library/modules/_bind.js",
        );
        var rConstruct = (
          __webpack_require__(
            /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
          ).Reflect || {}
        ).construct;

        // MS Edge supports only 2 arguments and argumentsList argument is optional
        // FF Nightly sets third argument as `new.target`, but does not create `this` from it
        var NEW_TARGET_BUG = fails(function() {
          function F() {
            /* empty */
          }
          return !(
            rConstruct(
              function() {
                /* empty */
              },
              [],
              F,
            ) instanceof F
          );
        });
        var ARGS_BUG = !fails(function() {
          rConstruct(function() {
            /* empty */
          });
        });

        $export(
          $export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG),
          "Reflect",
          {
            construct: function construct(Target, args /* , newTarget */) {
              aFunction(Target);
              anObject(args);
              var newTarget =
                arguments.length < 3 ? Target : aFunction(arguments[2]);
              if (ARGS_BUG && !NEW_TARGET_BUG)
                return rConstruct(Target, args, newTarget);
              if (Target == newTarget) {
                // w/o altered newTarget, optimization for 0-4 arguments
                switch (args.length) {
                  case 0:
                    return new Target();
                  case 1:
                    return new Target(args[0]);
                  case 2:
                    return new Target(args[0], args[1]);
                  case 3:
                    return new Target(args[0], args[1], args[2]);
                  case 4:
                    return new Target(args[0], args[1], args[2], args[3]);
                }
                // w/o altered newTarget, lot of arguments case
                var $args = [null];
                $args.push.apply($args, args);
                return new (bind.apply(Target, $args))();
              }
              // with altered newTarget, not support built-in constructors
              var proto = newTarget.prototype;
              var instance = create(isObject(proto) ? proto : Object.prototype);
              var result = Function.apply.call(Target, instance, args);
              return isObject(result) ? result : instance;
            },
          },
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.set.js":
      /*!*********************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.set.js ***!
  \*********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var strong = __webpack_require__(
          /*! ./_collection-strong */ "./node_modules/core-js/library/modules/_collection-strong.js",
        );
        var validate = __webpack_require__(
          /*! ./_validate-collection */ "./node_modules/core-js/library/modules/_validate-collection.js",
        );
        var SET = "Set";

        // 23.2 Set Objects
        module.exports = __webpack_require__(
          /*! ./_collection */ "./node_modules/core-js/library/modules/_collection.js",
        )(
          SET,
          function(get) {
            return function Set() {
              return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
          },
          {
            // 23.2.3.1 Set.prototype.add(value)
            add: function add(value) {
              return strong.def(
                validate(this, SET),
                (value = value === 0 ? 0 : value),
                value,
              );
            },
          },
          strong,
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.string.iterator.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.string.iterator.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var $at = __webpack_require__(
          /*! ./_string-at */ "./node_modules/core-js/library/modules/_string-at.js",
        )(true);

        // 21.1.3.27 String.prototype[@@iterator]()
        __webpack_require__(
          /*! ./_iter-define */ "./node_modules/core-js/library/modules/_iter-define.js",
        )(
          String,
          "String",
          function(iterated) {
            this._t = String(iterated); // target
            this._i = 0; // next index
            // 21.1.5.2.1 %StringIteratorPrototype%.next()
          },
          function() {
            var O = this._t;
            var index = this._i;
            var point;
            if (index >= O.length) return { value: undefined, done: true };
            point = $at(O, index);
            this._i += point.length;
            return { value: point, done: false };
          },
        );

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es6.symbol.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es6.symbol.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // ECMAScript 6 symbols shim
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var has = __webpack_require__(
          /*! ./_has */ "./node_modules/core-js/library/modules/_has.js",
        );
        var DESCRIPTORS = __webpack_require__(
          /*! ./_descriptors */ "./node_modules/core-js/library/modules/_descriptors.js",
        );
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var redefine = __webpack_require__(
          /*! ./_redefine */ "./node_modules/core-js/library/modules/_redefine.js",
        );
        var META = __webpack_require__(
          /*! ./_meta */ "./node_modules/core-js/library/modules/_meta.js",
        ).KEY;
        var $fails = __webpack_require__(
          /*! ./_fails */ "./node_modules/core-js/library/modules/_fails.js",
        );
        var shared = __webpack_require__(
          /*! ./_shared */ "./node_modules/core-js/library/modules/_shared.js",
        );
        var setToStringTag = __webpack_require__(
          /*! ./_set-to-string-tag */ "./node_modules/core-js/library/modules/_set-to-string-tag.js",
        );
        var uid = __webpack_require__(
          /*! ./_uid */ "./node_modules/core-js/library/modules/_uid.js",
        );
        var wks = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        );
        var wksExt = __webpack_require__(
          /*! ./_wks-ext */ "./node_modules/core-js/library/modules/_wks-ext.js",
        );
        var wksDefine = __webpack_require__(
          /*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js",
        );
        var enumKeys = __webpack_require__(
          /*! ./_enum-keys */ "./node_modules/core-js/library/modules/_enum-keys.js",
        );
        var isArray = __webpack_require__(
          /*! ./_is-array */ "./node_modules/core-js/library/modules/_is-array.js",
        );
        var anObject = __webpack_require__(
          /*! ./_an-object */ "./node_modules/core-js/library/modules/_an-object.js",
        );
        var isObject = __webpack_require__(
          /*! ./_is-object */ "./node_modules/core-js/library/modules/_is-object.js",
        );
        var toObject = __webpack_require__(
          /*! ./_to-object */ "./node_modules/core-js/library/modules/_to-object.js",
        );
        var toIObject = __webpack_require__(
          /*! ./_to-iobject */ "./node_modules/core-js/library/modules/_to-iobject.js",
        );
        var toPrimitive = __webpack_require__(
          /*! ./_to-primitive */ "./node_modules/core-js/library/modules/_to-primitive.js",
        );
        var createDesc = __webpack_require__(
          /*! ./_property-desc */ "./node_modules/core-js/library/modules/_property-desc.js",
        );
        var _create = __webpack_require__(
          /*! ./_object-create */ "./node_modules/core-js/library/modules/_object-create.js",
        );
        var gOPNExt = __webpack_require__(
          /*! ./_object-gopn-ext */ "./node_modules/core-js/library/modules/_object-gopn-ext.js",
        );
        var $GOPD = __webpack_require__(
          /*! ./_object-gopd */ "./node_modules/core-js/library/modules/_object-gopd.js",
        );
        var $GOPS = __webpack_require__(
          /*! ./_object-gops */ "./node_modules/core-js/library/modules/_object-gops.js",
        );
        var $DP = __webpack_require__(
          /*! ./_object-dp */ "./node_modules/core-js/library/modules/_object-dp.js",
        );
        var $keys = __webpack_require__(
          /*! ./_object-keys */ "./node_modules/core-js/library/modules/_object-keys.js",
        );
        var gOPD = $GOPD.f;
        var dP = $DP.f;
        var gOPN = gOPNExt.f;
        var $Symbol = global.Symbol;
        var $JSON = global.JSON;
        var _stringify = $JSON && $JSON.stringify;
        var PROTOTYPE = "prototype";
        var HIDDEN = wks("_hidden");
        var TO_PRIMITIVE = wks("toPrimitive");
        var isEnum = {}.propertyIsEnumerable;
        var SymbolRegistry = shared("symbol-registry");
        var AllSymbols = shared("symbols");
        var OPSymbols = shared("op-symbols");
        var ObjectProto = Object[PROTOTYPE];
        var USE_NATIVE = typeof $Symbol == "function" && !!$GOPS.f;
        var QObject = global.QObject;
        // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
        var setter =
          !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

        // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
        var setSymbolDesc =
          DESCRIPTORS &&
          $fails(function() {
            return (
              _create(
                dP({}, "a", {
                  get: function() {
                    return dP(this, "a", { value: 7 }).a;
                  },
                }),
              ).a != 7
            );
          })
            ? function(it, key, D) {
                var protoDesc = gOPD(ObjectProto, key);
                if (protoDesc) delete ObjectProto[key];
                dP(it, key, D);
                if (protoDesc && it !== ObjectProto)
                  dP(ObjectProto, key, protoDesc);
              }
            : dP;

        var wrap = function(tag) {
          var sym = (AllSymbols[tag] = _create($Symbol[PROTOTYPE]));
          sym._k = tag;
          return sym;
        };

        var isSymbol =
          USE_NATIVE && typeof $Symbol.iterator == "symbol"
            ? function(it) {
                return typeof it == "symbol";
              }
            : function(it) {
                return it instanceof $Symbol;
              };

        var $defineProperty = function defineProperty(it, key, D) {
          if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
          anObject(it);
          key = toPrimitive(key, true);
          anObject(D);
          if (has(AllSymbols, key)) {
            if (!D.enumerable) {
              if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
              it[HIDDEN][key] = true;
            } else {
              if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
              D = _create(D, { enumerable: createDesc(0, false) });
            }
            return setSymbolDesc(it, key, D);
          }
          return dP(it, key, D);
        };
        var $defineProperties = function defineProperties(it, P) {
          anObject(it);
          var keys = enumKeys((P = toIObject(P)));
          var i = 0;
          var l = keys.length;
          var key;
          while (l > i) $defineProperty(it, (key = keys[i++]), P[key]);
          return it;
        };
        var $create = function create(it, P) {
          return P === undefined
            ? _create(it)
            : $defineProperties(_create(it), P);
        };
        var $propertyIsEnumerable = function propertyIsEnumerable(key) {
          var E = isEnum.call(this, (key = toPrimitive(key, true)));
          if (
            this === ObjectProto &&
            has(AllSymbols, key) &&
            !has(OPSymbols, key)
          )
            return false;
          return E ||
            !has(this, key) ||
            !has(AllSymbols, key) ||
            (has(this, HIDDEN) && this[HIDDEN][key])
            ? E
            : true;
        };
        var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(
          it,
          key,
        ) {
          it = toIObject(it);
          key = toPrimitive(key, true);
          if (
            it === ObjectProto &&
            has(AllSymbols, key) &&
            !has(OPSymbols, key)
          )
            return;
          var D = gOPD(it, key);
          if (
            D &&
            has(AllSymbols, key) &&
            !(has(it, HIDDEN) && it[HIDDEN][key])
          )
            D.enumerable = true;
          return D;
        };
        var $getOwnPropertyNames = function getOwnPropertyNames(it) {
          var names = gOPN(toIObject(it));
          var result = [];
          var i = 0;
          var key;
          while (names.length > i) {
            if (
              !has(AllSymbols, (key = names[i++])) &&
              key != HIDDEN &&
              key != META
            )
              result.push(key);
          }
          return result;
        };
        var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
          var IS_OP = it === ObjectProto;
          var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
          var result = [];
          var i = 0;
          var key;
          while (names.length > i) {
            if (
              has(AllSymbols, (key = names[i++])) &&
              (IS_OP ? has(ObjectProto, key) : true)
            )
              result.push(AllSymbols[key]);
          }
          return result;
        };

        // 19.4.1.1 Symbol([description])
        if (!USE_NATIVE) {
          $Symbol = function Symbol() {
            if (this instanceof $Symbol)
              throw TypeError("Symbol is not a constructor!");
            var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
            var $set = function(value) {
              if (this === ObjectProto) $set.call(OPSymbols, value);
              if (has(this, HIDDEN) && has(this[HIDDEN], tag))
                this[HIDDEN][tag] = false;
              setSymbolDesc(this, tag, createDesc(1, value));
            };
            if (DESCRIPTORS && setter)
              setSymbolDesc(ObjectProto, tag, {
                configurable: true,
                set: $set,
              });
            return wrap(tag);
          };
          redefine($Symbol[PROTOTYPE], "toString", function toString() {
            return this._k;
          });

          $GOPD.f = $getOwnPropertyDescriptor;
          $DP.f = $defineProperty;
          __webpack_require__(
            /*! ./_object-gopn */ "./node_modules/core-js/library/modules/_object-gopn.js",
          ).f = gOPNExt.f = $getOwnPropertyNames;
          __webpack_require__(
            /*! ./_object-pie */ "./node_modules/core-js/library/modules/_object-pie.js",
          ).f = $propertyIsEnumerable;
          $GOPS.f = $getOwnPropertySymbols;

          if (
            DESCRIPTORS &&
            !__webpack_require__(
              /*! ./_library */ "./node_modules/core-js/library/modules/_library.js",
            )
          ) {
            redefine(
              ObjectProto,
              "propertyIsEnumerable",
              $propertyIsEnumerable,
              true,
            );
          }

          wksExt.f = function(name) {
            return wrap(wks(name));
          };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, {
          Symbol: $Symbol,
        });

        for (
          var es6Symbols = // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
            "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(
              ",",
            ),
            j = 0;
          es6Symbols.length > j;

        )
          wks(es6Symbols[j++]);

        for (
          var wellKnownSymbols = $keys(wks.store), k = 0;
          wellKnownSymbols.length > k;

        )
          wksDefine(wellKnownSymbols[k++]);

        $export($export.S + $export.F * !USE_NATIVE, "Symbol", {
          // 19.4.2.1 Symbol.for(key)
          for: function(key) {
            return has(SymbolRegistry, (key += ""))
              ? SymbolRegistry[key]
              : (SymbolRegistry[key] = $Symbol(key));
          },
          // 19.4.2.5 Symbol.keyFor(sym)
          keyFor: function keyFor(sym) {
            if (!isSymbol(sym)) throw TypeError(sym + " is not a symbol!");
            for (var key in SymbolRegistry)
              if (SymbolRegistry[key] === sym) return key;
          },
          useSetter: function() {
            setter = true;
          },
          useSimple: function() {
            setter = false;
          },
        });

        $export($export.S + $export.F * !USE_NATIVE, "Object", {
          // 19.1.2.2 Object.create(O [, Properties])
          create: $create,
          // 19.1.2.4 Object.defineProperty(O, P, Attributes)
          defineProperty: $defineProperty,
          // 19.1.2.3 Object.defineProperties(O, Properties)
          defineProperties: $defineProperties,
          // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
          getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
          // 19.1.2.7 Object.getOwnPropertyNames(O)
          getOwnPropertyNames: $getOwnPropertyNames,
          // 19.1.2.8 Object.getOwnPropertySymbols(O)
          getOwnPropertySymbols: $getOwnPropertySymbols,
        });

        // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
        // https://bugs.chromium.org/p/v8/issues/detail?id=3443
        var FAILS_ON_PRIMITIVES = $fails(function() {
          $GOPS.f(1);
        });

        $export($export.S + $export.F * FAILS_ON_PRIMITIVES, "Object", {
          getOwnPropertySymbols: function getOwnPropertySymbols(it) {
            return $GOPS.f(toObject(it));
          },
        });

        // 24.3.2 JSON.stringify(value [, replacer [, space]])
        $JSON &&
          $export(
            $export.S +
              $export.F *
                (!USE_NATIVE ||
                  $fails(function() {
                    var S = $Symbol();
                    // MS Edge converts symbol values to JSON as {}
                    // WebKit converts symbol values to JSON as null
                    // V8 throws on boxed symbols
                    return (
                      _stringify([S]) != "[null]" ||
                      _stringify({ a: S }) != "{}" ||
                      _stringify(Object(S)) != "{}"
                    );
                  })),
            "JSON",
            {
              stringify: function stringify(it) {
                var args = [it];
                var i = 1;
                var replacer, $replacer;
                while (arguments.length > i) args.push(arguments[i++]);
                $replacer = replacer = args[1];
                if ((!isObject(replacer) && it === undefined) || isSymbol(it))
                  return; // IE8 returns string on undefined
                if (!isArray(replacer))
                  replacer = function(key, value) {
                    if (typeof $replacer == "function")
                      value = $replacer.call(this, key, value);
                    if (!isSymbol(value)) return value;
                  };
                args[1] = replacer;
                return _stringify.apply($JSON, args);
              },
            },
          );

        // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
        $Symbol[PROTOTYPE][TO_PRIMITIVE] ||
          __webpack_require__(
            /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
          )($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
        // 19.4.3.5 Symbol.prototype[@@toStringTag]
        setToStringTag($Symbol, "Symbol");
        // 20.2.1.9 Math[@@toStringTag]
        setToStringTag(Math, "Math", true);
        // 24.3.3 JSON[@@toStringTag]
        setToStringTag(global.JSON, "JSON", true);

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es7.promise.finally.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.finally.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // https://github.com/tc39/proposal-promise-finally

        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var core = __webpack_require__(
          /*! ./_core */ "./node_modules/core-js/library/modules/_core.js",
        );
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var speciesConstructor = __webpack_require__(
          /*! ./_species-constructor */ "./node_modules/core-js/library/modules/_species-constructor.js",
        );
        var promiseResolve = __webpack_require__(
          /*! ./_promise-resolve */ "./node_modules/core-js/library/modules/_promise-resolve.js",
        );

        $export($export.P + $export.R, "Promise", {
          finally: function(onFinally) {
            var C = speciesConstructor(this, core.Promise || global.Promise);
            var isFunction = typeof onFinally == "function";
            return this.then(
              isFunction
                ? function(x) {
                    return promiseResolve(C, onFinally()).then(function() {
                      return x;
                    });
                  }
                : onFinally,
              isFunction
                ? function(e) {
                    return promiseResolve(C, onFinally()).then(function() {
                      throw e;
                    });
                  }
                : onFinally,
            );
          },
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es7.promise.try.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.promise.try.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // https://github.com/tc39/proposal-promise-try
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );
        var newPromiseCapability = __webpack_require__(
          /*! ./_new-promise-capability */ "./node_modules/core-js/library/modules/_new-promise-capability.js",
        );
        var perform = __webpack_require__(
          /*! ./_perform */ "./node_modules/core-js/library/modules/_perform.js",
        );

        $export($export.S, "Promise", {
          try: function(callbackfn) {
            var promiseCapability = newPromiseCapability.f(this);
            var result = perform(callbackfn);
            (result.e ? promiseCapability.reject : promiseCapability.resolve)(
              result.v,
            );
            return promiseCapability.promise;
          },
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es7.set.from.js":
      /*!**************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.set.from.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // https://tc39.github.io/proposal-setmap-offrom/#sec-set.from
        __webpack_require__(
          /*! ./_set-collection-from */ "./node_modules/core-js/library/modules/_set-collection-from.js",
        )("Set");

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es7.set.of.js":
      /*!************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.set.of.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // https://tc39.github.io/proposal-setmap-offrom/#sec-set.of
        __webpack_require__(
          /*! ./_set-collection-of */ "./node_modules/core-js/library/modules/_set-collection-of.js",
        )("Set");

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es7.set.to-json.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.set.to-json.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        // https://github.com/DavidBruant/Map-Set.prototype.toJSON
        var $export = __webpack_require__(
          /*! ./_export */ "./node_modules/core-js/library/modules/_export.js",
        );

        $export($export.P + $export.R, "Set", {
          toJSON: __webpack_require__(
            /*! ./_collection-to-json */ "./node_modules/core-js/library/modules/_collection-to-json.js",
          )("Set"),
        });

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es7.symbol.async-iterator.js":
      /*!***************************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.symbol.async-iterator.js ***!
  \***************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js",
        )("asyncIterator");

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/es7.symbol.observable.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/core-js/library/modules/es7.symbol.observable.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ./_wks-define */ "./node_modules/core-js/library/modules/_wks-define.js",
        )("observable");

        /***/
      },

    /***/ "./node_modules/core-js/library/modules/web.dom.iterable.js":
      /*!******************************************************************!*\
  !*** ./node_modules/core-js/library/modules/web.dom.iterable.js ***!
  \******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        __webpack_require__(
          /*! ./es6.array.iterator */ "./node_modules/core-js/library/modules/es6.array.iterator.js",
        );
        var global = __webpack_require__(
          /*! ./_global */ "./node_modules/core-js/library/modules/_global.js",
        );
        var hide = __webpack_require__(
          /*! ./_hide */ "./node_modules/core-js/library/modules/_hide.js",
        );
        var Iterators = __webpack_require__(
          /*! ./_iterators */ "./node_modules/core-js/library/modules/_iterators.js",
        );
        var TO_STRING_TAG = __webpack_require__(
          /*! ./_wks */ "./node_modules/core-js/library/modules/_wks.js",
        )("toStringTag");

        var DOMIterables = (
          "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList," +
          "DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement," +
          "MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList," +
          "SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList," +
          "TextTrackList,TouchList"
        ).split(",");

        for (var i = 0; i < DOMIterables.length; i++) {
          var NAME = DOMIterables[i];
          var Collection = global[NAME];
          var proto = Collection && Collection.prototype;
          if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
          Iterators[NAME] = Iterators.Array;
        }

        /***/
      },

    /***/ "./node_modules/css-in-js-utils/lib/hyphenateProperty.js":
      /*!***************************************************************!*\
  !*** ./node_modules/css-in-js-utils/lib/hyphenateProperty.js ***!
  \***************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = hyphenateProperty;

        var _hyphenateStyleName = __webpack_require__(
          /*! hyphenate-style-name */ "./node_modules/hyphenate-style-name/index.js",
        );

        var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function hyphenateProperty(property) {
          return (0, _hyphenateStyleName2.default)(property);
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/css-in-js-utils/lib/isPrefixedValue.js":
      /*!*************************************************************!*\
  !*** ./node_modules/css-in-js-utils/lib/isPrefixedValue.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = isPrefixedValue;
        var regex = /-webkit-|-moz-|-ms-/;

        function isPrefixedValue(value) {
          return typeof value === "string" && regex.test(value);
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/define-properties/index.js":
      /*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var keys = __webpack_require__(
          /*! object-keys */ "./node_modules/object-keys/index.js",
        );
        var hasSymbols =
          typeof Symbol === "function" && typeof Symbol("foo") === "symbol";

        var toStr = Object.prototype.toString;
        var concat = Array.prototype.concat;
        var origDefineProperty = Object.defineProperty;

        var isFunction = function(fn) {
          return (
            typeof fn === "function" && toStr.call(fn) === "[object Function]"
          );
        };

        var arePropertyDescriptorsSupported = function() {
          var obj = {};
          try {
            origDefineProperty(obj, "x", { enumerable: false, value: obj });
            // eslint-disable-next-line no-unused-vars, no-restricted-syntax
            for (var _ in obj) {
              // jscs:ignore disallowUnusedVariables
              return false;
            }
            return obj.x === obj;
          } catch (e) {
            /* this is IE 8. */
            return false;
          }
        };
        var supportsDescriptors =
          origDefineProperty && arePropertyDescriptorsSupported();

        var defineProperty = function(object, name, value, predicate) {
          if (name in object && (!isFunction(predicate) || !predicate())) {
            return;
          }
          if (supportsDescriptors) {
            origDefineProperty(object, name, {
              configurable: true,
              enumerable: false,
              value: value,
              writable: true,
            });
          } else {
            object[name] = value;
          }
        };

        var defineProperties = function(object, map) {
          var predicates = arguments.length > 2 ? arguments[2] : {};
          var props = keys(map);
          if (hasSymbols) {
            props = concat.call(props, Object.getOwnPropertySymbols(map));
          }
          for (var i = 0; i < props.length; i += 1) {
            defineProperty(
              object,
              props[i],
              map[props[i]],
              predicates[props[i]],
            );
          }
        };

        defineProperties.supportsDescriptors = !!supportsDescriptors;

        module.exports = defineProperties;

        /***/
      },

    /***/ "./node_modules/dom-helpers/class/addClass.js":
      /*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/addClass.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/@babel/runtime/helpers/interopRequireDefault.js",
        );

        exports.__esModule = true;
        exports.default = addClass;

        var _hasClass = _interopRequireDefault(
          __webpack_require__(
            /*! ./hasClass */ "./node_modules/dom-helpers/class/hasClass.js",
          ),
        );

        function addClass(element, className) {
          if (element.classList) element.classList.add(className);
          else if (!(0, _hasClass.default)(element, className))
            if (typeof element.className === "string")
              element.className = element.className + " " + className;
            else
              element.setAttribute(
                "class",
                ((element.className && element.className.baseVal) || "") +
                  " " +
                  className,
              );
        }

        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/dom-helpers/class/hasClass.js":
      /*!****************************************************!*\
  !*** ./node_modules/dom-helpers/class/hasClass.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;
        exports.default = hasClass;

        function hasClass(element, className) {
          if (element.classList)
            return !!className && element.classList.contains(className);
          else
            return (
              (
                " " +
                (element.className.baseVal || element.className) +
                " "
              ).indexOf(" " + className + " ") !== -1
            );
        }

        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/dom-helpers/class/removeClass.js":
      /*!*******************************************************!*\
  !*** ./node_modules/dom-helpers/class/removeClass.js ***!
  \*******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        function replaceClassName(origClass, classToRemove) {
          return origClass
            .replace(
              new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"),
              "$1",
            )
            .replace(/\s+/g, " ")
            .replace(/^\s*|\s*$/g, "");
        }

        module.exports = function removeClass(element, className) {
          if (element.classList) element.classList.remove(className);
          else if (typeof element.className === "string")
            element.className = replaceClassName(element.className, className);
          else
            element.setAttribute(
              "class",
              replaceClassName(
                (element.className && element.className.baseVal) || "",
                className,
              ),
            );
        };

        /***/
      },

    /***/ "./node_modules/fbjs/lib/camelize.js":
      /*!*******************************************!*\
  !*** ./node_modules/fbjs/lib/camelize.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var _hyphenPattern = /-(.)/g;

        /**
         * Camelcases a hyphenated string, for example:
         *
         *   > camelize('background-color')
         *   < "backgroundColor"
         *
         * @param {string} string
         * @return {string}
         */
        function camelize(string) {
          return string.replace(_hyphenPattern, function(_, character) {
            return character.toUpperCase();
          });
        }

        module.exports = camelize;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/camelizeStyleName.js":
      /*!****************************************************!*\
  !*** ./node_modules/fbjs/lib/camelizeStyleName.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var camelize = __webpack_require__(
          /*! ./camelize */ "./node_modules/fbjs/lib/camelize.js",
        );

        var msPattern = /^-ms-/;

        /**
         * Camelcases a hyphenated CSS property name, for example:
         *
         *   > camelizeStyleName('background-color')
         *   < "backgroundColor"
         *   > camelizeStyleName('-moz-transition')
         *   < "MozTransition"
         *   > camelizeStyleName('-ms-transition')
         *   < "msTransition"
         *
         * As Andi Smith suggests
         * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
         * is converted to lowercase `ms`.
         *
         * @param {string} string
         * @return {string}
         */
        function camelizeStyleName(string) {
          return camelize(string.replace(msPattern, "ms-"));
        }

        module.exports = camelizeStyleName;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/emptyFunction.js":
      /*!************************************************!*\
  !*** ./node_modules/fbjs/lib/emptyFunction.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         *
         */

        function makeEmptyFunction(arg) {
          return function() {
            return arg;
          };
        }

        /**
         * This function accepts and discards inputs; it has no side effects. This is
         * primarily useful idiomatically for overridable function endpoints which
         * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
         */
        var emptyFunction = function emptyFunction() {};

        emptyFunction.thatReturns = makeEmptyFunction;
        emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
        emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
        emptyFunction.thatReturnsNull = makeEmptyFunction(null);
        emptyFunction.thatReturnsThis = function() {
          return this;
        };
        emptyFunction.thatReturnsArgument = function(arg) {
          return arg;
        };

        module.exports = emptyFunction;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/hyphenate.js":
      /*!********************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenate.js ***!
  \********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var _uppercasePattern = /([A-Z])/g;

        /**
         * Hyphenates a camelcased string, for example:
         *
         *   > hyphenate('backgroundColor')
         *   < "background-color"
         *
         * For CSS style names, use `hyphenateStyleName` instead which works properly
         * with all vendor prefixes, including `ms`.
         *
         * @param {string} string
         * @return {string}
         */
        function hyphenate(string) {
          return string.replace(_uppercasePattern, "-$1").toLowerCase();
        }

        module.exports = hyphenate;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/hyphenateStyleName.js":
      /*!*****************************************************!*\
  !*** ./node_modules/fbjs/lib/hyphenateStyleName.js ***!
  \*****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @typechecks
         */

        var hyphenate = __webpack_require__(
          /*! ./hyphenate */ "./node_modules/fbjs/lib/hyphenate.js",
        );

        var msPattern = /^ms-/;

        /**
         * Hyphenates a camelcased CSS property name, for example:
         *
         *   > hyphenateStyleName('backgroundColor')
         *   < "background-color"
         *   > hyphenateStyleName('MozTransition')
         *   < "-moz-transition"
         *   > hyphenateStyleName('msTransition')
         *   < "-ms-transition"
         *
         * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
         * is converted to `-ms-`.
         *
         * @param {string} string
         * @return {string}
         */
        function hyphenateStyleName(string) {
          return hyphenate(string).replace(msPattern, "-ms-");
        }

        module.exports = hyphenateStyleName;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/memoizeStringOnly.js":
      /*!****************************************************!*\
  !*** ./node_modules/fbjs/lib/memoizeStringOnly.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         *
         * @typechecks static-only
         */

        /**
         * Memoizes the return value of a function that accepts one string argument.
         */

        function memoizeStringOnly(callback) {
          var cache = {};
          return function(string) {
            if (!cache.hasOwnProperty(string)) {
              cache[string] = callback.call(this, string);
            }
            return cache[string];
          };
        }

        module.exports = memoizeStringOnly;

        /***/
      },

    /***/ "./node_modules/fbjs/lib/warning.js":
      /*!******************************************!*\
  !*** ./node_modules/fbjs/lib/warning.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         */

        var emptyFunction = __webpack_require__(
          /*! ./emptyFunction */ "./node_modules/fbjs/lib/emptyFunction.js",
        );

        /**
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var warning = emptyFunction;

        if (true) {
          var printWarning = function printWarning(format) {
            for (
              var _len = arguments.length,
                args = Array(_len > 1 ? _len - 1 : 0),
                _key = 1;
              _key < _len;
              _key++
            ) {
              args[_key - 1] = arguments[_key];
            }

            var argIndex = 0;
            var message =
              "Warning: " +
              format.replace(/%s/g, function() {
                return args[argIndex++];
              });
            if (typeof console !== "undefined") {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };

          warning = function warning(condition, format) {
            if (format === undefined) {
              throw new Error(
                "`warning(condition, format, ...args)` requires a warning " +
                  "message argument",
              );
            }

            if (format.indexOf("Failed Composite propType: ") === 0) {
              return; // Ignore CompositeComponent proptype check.
            }

            if (!condition) {
              for (
                var _len2 = arguments.length,
                  args = Array(_len2 > 2 ? _len2 - 2 : 0),
                  _key2 = 2;
                _key2 < _len2;
                _key2++
              ) {
                args[_key2 - 2] = arguments[_key2];
              }

              printWarning.apply(undefined, [format].concat(args));
            }
          };
        }

        module.exports = warning;

        /***/
      },

    /***/ "./node_modules/focus-trap-react/dist/focus-trap-react.js":
      /*!****************************************************************!*\
  !*** ./node_modules/focus-trap-react/dist/focus-trap-react.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var React = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        var createFocusTrap = __webpack_require__(
          /*! focus-trap */ "./node_modules/focus-trap/index.js",
        );

        var checkedProps = [
          "active",
          "paused",
          "tag",
          "focusTrapOptions",
          "_createFocusTrap",
        ];

        var FocusTrap = (function(_React$Component) {
          _inherits(FocusTrap, _React$Component);

          function FocusTrap(props) {
            _classCallCheck(this, FocusTrap);

            var _this = _possibleConstructorReturn(
              this,
              (FocusTrap.__proto__ || Object.getPrototypeOf(FocusTrap)).call(
                this,
                props,
              ),
            );

            _this.setNode = function(el) {
              _this.node = el;
            };

            if (typeof document !== "undefined") {
              _this.previouslyFocusedElement = document.activeElement;
            }
            return _this;
          }

          _createClass(FocusTrap, [
            {
              key: "componentDidMount",
              value: function componentDidMount() {
                // We need to hijack the returnFocusOnDeactivate option,
                // because React can move focus into the element before we arrived at
                // this lifecycle hook (e.g. with autoFocus inputs). So the component
                // captures the previouslyFocusedElement in componentWillMount,
                // then (optionally) returns focus to it in componentWillUnmount.
                var specifiedFocusTrapOptions = this.props.focusTrapOptions;
                var tailoredFocusTrapOptions = {
                  returnFocusOnDeactivate: false,
                };
                for (var optionName in specifiedFocusTrapOptions) {
                  if (!specifiedFocusTrapOptions.hasOwnProperty(optionName))
                    continue;
                  if (optionName === "returnFocusOnDeactivate") continue;
                  tailoredFocusTrapOptions[optionName] =
                    specifiedFocusTrapOptions[optionName];
                }

                this.focusTrap = this.props._createFocusTrap(
                  this.node,
                  tailoredFocusTrapOptions,
                );
                if (this.props.active) {
                  this.focusTrap.activate();
                }
                if (this.props.paused) {
                  this.focusTrap.pause();
                }
              },
            },
            {
              key: "componentDidUpdate",
              value: function componentDidUpdate(prevProps) {
                if (prevProps.active && !this.props.active) {
                  var returnFocusOnDeactivate = this.props.focusTrapOptions
                    .returnFocusOnDeactivate;

                  var returnFocus = returnFocusOnDeactivate || false;
                  var config = { returnFocus: returnFocus };
                  this.focusTrap.deactivate(config);
                } else if (!prevProps.active && this.props.active) {
                  this.focusTrap.activate();
                }

                if (prevProps.paused && !this.props.paused) {
                  this.focusTrap.unpause();
                } else if (!prevProps.paused && this.props.paused) {
                  this.focusTrap.pause();
                }
              },
            },
            {
              key: "componentWillUnmount",
              value: function componentWillUnmount() {
                this.focusTrap.deactivate();
                if (
                  this.props.focusTrapOptions.returnFocusOnDeactivate !==
                    false &&
                  this.previouslyFocusedElement &&
                  this.previouslyFocusedElement.focus
                ) {
                  this.previouslyFocusedElement.focus();
                }
              },
            },
            {
              key: "render",
              value: function render() {
                var elementProps = {
                  ref: this.setNode,
                };

                // This will get id, className, style, etc. -- arbitrary element props
                for (var prop in this.props) {
                  if (!this.props.hasOwnProperty(prop)) continue;
                  if (checkedProps.indexOf(prop) !== -1) continue;
                  elementProps[prop] = this.props[prop];
                }

                return React.createElement(
                  this.props.tag,
                  elementProps,
                  this.props.children,
                );
              },
            },
          ]);

          return FocusTrap;
        })(React.Component);

        FocusTrap.defaultProps = {
          active: true,
          tag: "div",
          paused: false,
          focusTrapOptions: {},
          _createFocusTrap: createFocusTrap,
        };

        module.exports = FocusTrap;

        /***/
      },

    /***/ "./node_modules/focus-trap/index.js":
      /*!******************************************!*\
  !*** ./node_modules/focus-trap/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var tabbable = __webpack_require__(
          /*! tabbable */ "./node_modules/tabbable/index.js",
        );
        var xtend = __webpack_require__(
          /*! xtend */ "./node_modules/xtend/immutable.js",
        );

        var listeningFocusTrap = null;

        function focusTrap(element, userOptions) {
          var doc = document;
          var container =
            typeof element === "string" ? doc.querySelector(element) : element;

          var config = xtend(
            {
              returnFocusOnDeactivate: true,
              escapeDeactivates: true,
            },
            userOptions,
          );

          var state = {
            firstTabbableNode: null,
            lastTabbableNode: null,
            nodeFocusedBeforeActivation: null,
            mostRecentlyFocusedNode: null,
            active: false,
            paused: false,
          };

          var trap = {
            activate: activate,
            deactivate: deactivate,
            pause: pause,
            unpause: unpause,
          };

          return trap;

          function activate(activateOptions) {
            if (state.active) return;

            updateTabbableNodes();

            state.active = true;
            state.paused = false;
            state.nodeFocusedBeforeActivation = doc.activeElement;

            var onActivate =
              activateOptions && activateOptions.onActivate
                ? activateOptions.onActivate
                : config.onActivate;
            if (onActivate) {
              onActivate();
            }

            addListeners();
            return trap;
          }

          function deactivate(deactivateOptions) {
            if (!state.active) return;

            removeListeners();
            state.active = false;
            state.paused = false;

            var onDeactivate =
              deactivateOptions && deactivateOptions.onDeactivate !== undefined
                ? deactivateOptions.onDeactivate
                : config.onDeactivate;
            if (onDeactivate) {
              onDeactivate();
            }

            var returnFocus =
              deactivateOptions && deactivateOptions.returnFocus !== undefined
                ? deactivateOptions.returnFocus
                : config.returnFocusOnDeactivate;
            if (returnFocus) {
              delay(function() {
                tryFocus(state.nodeFocusedBeforeActivation);
              });
            }

            return trap;
          }

          function pause() {
            if (state.paused || !state.active) return;
            state.paused = true;
            removeListeners();
          }

          function unpause() {
            if (!state.paused || !state.active) return;
            state.paused = false;
            addListeners();
          }

          function addListeners() {
            if (!state.active) return;

            // There can be only one listening focus trap at a time
            if (listeningFocusTrap) {
              listeningFocusTrap.pause();
            }
            listeningFocusTrap = trap;

            updateTabbableNodes();

            // Delay ensures that the focused element doesn't capture the event
            // that caused the focus trap activation.
            delay(function() {
              tryFocus(getInitialFocusNode());
            });
            doc.addEventListener("focusin", checkFocusIn, true);
            doc.addEventListener("mousedown", checkPointerDown, true);
            doc.addEventListener("touchstart", checkPointerDown, true);
            doc.addEventListener("click", checkClick, true);
            doc.addEventListener("keydown", checkKey, true);

            return trap;
          }

          function removeListeners() {
            if (!state.active || listeningFocusTrap !== trap) return;

            doc.removeEventListener("focusin", checkFocusIn, true);
            doc.removeEventListener("mousedown", checkPointerDown, true);
            doc.removeEventListener("touchstart", checkPointerDown, true);
            doc.removeEventListener("click", checkClick, true);
            doc.removeEventListener("keydown", checkKey, true);

            listeningFocusTrap = null;

            return trap;
          }

          function getNodeForOption(optionName) {
            var optionValue = config[optionName];
            var node = optionValue;
            if (!optionValue) {
              return null;
            }
            if (typeof optionValue === "string") {
              node = doc.querySelector(optionValue);
              if (!node) {
                throw new Error("`" + optionName + "` refers to no known node");
              }
            }
            if (typeof optionValue === "function") {
              node = optionValue();
              if (!node) {
                throw new Error("`" + optionName + "` did not return a node");
              }
            }
            return node;
          }

          function getInitialFocusNode() {
            var node;
            if (getNodeForOption("initialFocus") !== null) {
              node = getNodeForOption("initialFocus");
            } else if (container.contains(doc.activeElement)) {
              node = doc.activeElement;
            } else {
              node =
                state.firstTabbableNode || getNodeForOption("fallbackFocus");
            }

            if (!node) {
              throw new Error(
                "You can't have a focus-trap without at least one focusable element",
              );
            }

            return node;
          }

          // This needs to be done on mousedown and touchstart instead of click
          // so that it precedes the focus event.
          function checkPointerDown(e) {
            if (container.contains(e.target)) return;
            if (config.clickOutsideDeactivates) {
              deactivate({
                returnFocus: !tabbable.isFocusable(e.target),
              });
            } else {
              e.preventDefault();
            }
          }

          // In case focus escapes the trap for some strange reason, pull it back in.
          function checkFocusIn(e) {
            // In Firefox when you Tab out of an iframe the Document is briefly focused.
            if (container.contains(e.target) || e.target instanceof Document) {
              return;
            }
            e.stopImmediatePropagation();
            tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
          }

          function checkKey(e) {
            if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
              e.preventDefault();
              deactivate();
              return;
            }
            if (isTabEvent(e)) {
              checkTab(e);
              return;
            }
          }

          // Hijack Tab events on the first and last focusable nodes of the trap,
          // in order to prevent focus from escaping. If it escapes for even a
          // moment it can end up scrolling the page and causing confusion so we
          // kind of need to capture the action at the keydown phase.
          function checkTab(e) {
            updateTabbableNodes();
            if (e.shiftKey && e.target === state.firstTabbableNode) {
              e.preventDefault();
              tryFocus(state.lastTabbableNode);
              return;
            }
            if (!e.shiftKey && e.target === state.lastTabbableNode) {
              e.preventDefault();
              tryFocus(state.firstTabbableNode);
              return;
            }
          }

          function checkClick(e) {
            if (config.clickOutsideDeactivates) return;
            if (container.contains(e.target)) return;
            e.preventDefault();
            e.stopImmediatePropagation();
          }

          function updateTabbableNodes() {
            var tabbableNodes = tabbable(container);
            state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();
            state.lastTabbableNode =
              tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();
          }

          function tryFocus(node) {
            if (node === doc.activeElement) return;
            if (!node || !node.focus) {
              tryFocus(getInitialFocusNode());
              return;
            }

            node.focus();
            state.mostRecentlyFocusedNode = node;
            if (isSelectableInput(node)) {
              node.select();
            }
          }
        }

        function isSelectableInput(node) {
          return (
            node.tagName &&
            node.tagName.toLowerCase() === "input" &&
            typeof node.select === "function"
          );
        }

        function isEscapeEvent(e) {
          return e.key === "Escape" || e.key === "Esc" || e.keyCode === 27;
        }

        function isTabEvent(e) {
          return e.key === "Tab" || e.keyCode === 9;
        }

        function delay(fn) {
          return setTimeout(fn, 0);
        }

        module.exports = focusTrap;

        /***/
      },

    /***/ "./node_modules/function-bind/implementation.js":
      /*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /* eslint no-invalid-this: 1 */

        var ERROR_MESSAGE = "Function.prototype.bind called on incompatible ";
        var slice = Array.prototype.slice;
        var toStr = Object.prototype.toString;
        var funcType = "[object Function]";

        module.exports = function bind(that) {
          var target = this;
          if (typeof target !== "function" || toStr.call(target) !== funcType) {
            throw new TypeError(ERROR_MESSAGE + target);
          }
          var args = slice.call(arguments, 1);

          var bound;
          var binder = function() {
            if (this instanceof bound) {
              var result = target.apply(
                this,
                args.concat(slice.call(arguments)),
              );
              if (Object(result) === result) {
                return result;
              }
              return this;
            } else {
              return target.apply(that, args.concat(slice.call(arguments)));
            }
          };

          var boundLength = Math.max(0, target.length - args.length);
          var boundArgs = [];
          for (var i = 0; i < boundLength; i++) {
            boundArgs.push("$" + i);
          }

          bound = Function(
            "binder",
            "return function (" +
              boundArgs.join(",") +
              "){ return binder.apply(this,arguments); }",
          )(binder);

          if (target.prototype) {
            var Empty = function Empty() {};
            Empty.prototype = target.prototype;
            bound.prototype = new Empty();
            Empty.prototype = null;
          }

          return bound;
        };

        /***/
      },

    /***/ "./node_modules/function-bind/index.js":
      /*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var implementation = __webpack_require__(
          /*! ./implementation */ "./node_modules/function-bind/implementation.js",
        );

        module.exports = Function.prototype.bind || implementation;

        /***/
      },

    /***/ "./node_modules/glamor/lib/CSSPropertyOperations/CSSProperty.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/glamor/lib/CSSPropertyOperations/CSSProperty.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @providesModule CSSProperty
         */

        /**
         * CSS properties which accept numbers but are not in units of "px".
         */

        var isUnitlessNumber = {
          animationIterationCount: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridRow: true,
          gridRowStart: true,
          gridRowEnd: true,
          gridColumn: true,
          gridColumnStart: true,
          gridColumnEnd: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,

          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true,

          /**
           * @param {string} prefix vendor-specific prefix, eg: Webkit
           * @param {string} key style name, eg: transitionDuration
           * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
           * WebkitTransitionDuration
           */
        };
        function prefixKey(prefix, key) {
          return prefix + key.charAt(0).toUpperCase() + key.substring(1);
        }

        /**
         * Support style names that may come passed in prefixed by adding permutations
         * of vendor prefixes.
         */
        var prefixes = ["Webkit", "ms", "Moz", "O"];

        // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
        // infinite loop, because it iterates over the newly added props too.
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes.forEach(function(prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
          });
        });

        /**
         * Most style properties can be unset by doing .style[prop] = '' but IE8
         * doesn't like doing that with shorthand properties so for the properties that
         * IE8 breaks on, which are listed here, we instead unset each of the
         * individual properties. See http://bugs.jquery.com/ticket/12385.
         * The 4-value 'clock' properties like margin, padding, border-width seem to
         * behave without any problems. Curiously, list-style works too without any
         * special prodding.
         */
        var shorthandPropertyExpansions = {
          background: {
            backgroundAttachment: true,
            backgroundColor: true,
            backgroundImage: true,
            backgroundPositionX: true,
            backgroundPositionY: true,
            backgroundRepeat: true,
          },
          backgroundPosition: {
            backgroundPositionX: true,
            backgroundPositionY: true,
          },
          border: {
            borderWidth: true,
            borderStyle: true,
            borderColor: true,
          },
          borderBottom: {
            borderBottomWidth: true,
            borderBottomStyle: true,
            borderBottomColor: true,
          },
          borderLeft: {
            borderLeftWidth: true,
            borderLeftStyle: true,
            borderLeftColor: true,
          },
          borderRight: {
            borderRightWidth: true,
            borderRightStyle: true,
            borderRightColor: true,
          },
          borderTop: {
            borderTopWidth: true,
            borderTopStyle: true,
            borderTopColor: true,
          },
          font: {
            fontStyle: true,
            fontVariant: true,
            fontWeight: true,
            fontSize: true,
            lineHeight: true,
            fontFamily: true,
          },
          outline: {
            outlineWidth: true,
            outlineStyle: true,
            outlineColor: true,
          },
        };

        var CSSProperty = {
          isUnitlessNumber: isUnitlessNumber,
          shorthandPropertyExpansions: shorthandPropertyExpansions,
        };

        exports.default = CSSProperty;

        /***/
      },

    /***/ "./node_modules/glamor/lib/CSSPropertyOperations/dangerousStyleValue.js":
      /*!******************************************************************************!*\
  !*** ./node_modules/glamor/lib/CSSPropertyOperations/dangerousStyleValue.js ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _CSSProperty = __webpack_require__(
          /*! ./CSSProperty */ "./node_modules/glamor/lib/CSSPropertyOperations/CSSProperty.js",
        );

        var _CSSProperty2 = _interopRequireDefault(_CSSProperty);

        var _warning = __webpack_require__(
          /*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js",
        );

        var _warning2 = _interopRequireDefault(_warning);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @providesModule dangerousStyleValue
         */

        var isUnitlessNumber = _CSSProperty2.default.isUnitlessNumber;
        var styleWarnings = {};

        /**
         * Convert a value into the proper css writable value. The style name `name`
         * should be logical (no hyphens), as specified
         * in `CSSProperty.isUnitlessNumber`.
         *
         * @param {string} name CSS property name such as `topMargin`.
         * @param {*} value CSS property value such as `10px`.
         * @param {ReactDOMComponent} component
         * @return {string} Normalized style value with dimensions applied.
         */
        function dangerousStyleValue(name, value, component) {
          // Note that we've removed escapeTextForBrowser() calls here since the
          // whole string will be escaped when the attribute is injected into
          // the markup. If you provide unsafe user data here they can inject
          // arbitrary CSS which may be problematic (I couldn't repro this):
          // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
          // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
          // This is not an XSS hole but instead a potential CSS injection issue
          // which has lead to a greater discussion about how we're going to
          // trust URLs moving forward. See #2115901

          var isEmpty =
            value == null || typeof value === "boolean" || value === "";
          if (isEmpty) {
            return "";
          }

          var isNonNumeric = isNaN(value);
          if (
            isNonNumeric ||
            value === 0 ||
            (isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])
          ) {
            return "" + value; // cast to string
          }

          if (typeof value === "string") {
            if (true) {
              // Allow '0' to pass through without warning. 0 is already special and
              // doesn't require units, so we don't need to warn about it.
              if (component && value !== "0") {
                var owner = component._currentElement._owner;
                var ownerName = owner ? owner.getName() : null;
                if (ownerName && !styleWarnings[ownerName]) {
                  styleWarnings[ownerName] = {};
                }
                var warned = false;
                if (ownerName) {
                  var warnings = styleWarnings[ownerName];
                  warned = warnings[name];
                  if (!warned) {
                    warnings[name] = true;
                  }
                }
                if (!warned) {
                  true
                    ? (0, _warning2.default)(
                        false,
                        "a `%s` tag (owner: `%s`) was passed a numeric string value " +
                          "for CSS property `%s` (value: `%s`) which will be treated " +
                          "as a unitless number in a future version of React.",
                        component._currentElement.type,
                        ownerName || "unknown",
                        name,
                        value,
                      )
                    : undefined;
                }
              }
            }
            value = value.trim();
          }
          return value + "px";
        }

        exports.default = dangerousStyleValue;

        /***/
      },

    /***/ "./node_modules/glamor/lib/CSSPropertyOperations/index.js":
      /*!****************************************************************!*\
  !*** ./node_modules/glamor/lib/CSSPropertyOperations/index.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.processStyleName = undefined;
        exports.createMarkupForStyles = createMarkupForStyles;

        var _camelizeStyleName = __webpack_require__(
          /*! fbjs/lib/camelizeStyleName */ "./node_modules/fbjs/lib/camelizeStyleName.js",
        );

        var _camelizeStyleName2 = _interopRequireDefault(_camelizeStyleName);

        var _dangerousStyleValue = __webpack_require__(
          /*! ./dangerousStyleValue */ "./node_modules/glamor/lib/CSSPropertyOperations/dangerousStyleValue.js",
        );

        var _dangerousStyleValue2 = _interopRequireDefault(
          _dangerousStyleValue,
        );

        var _hyphenateStyleName = __webpack_require__(
          /*! fbjs/lib/hyphenateStyleName */ "./node_modules/fbjs/lib/hyphenateStyleName.js",
        );

        var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);

        var _memoizeStringOnly = __webpack_require__(
          /*! fbjs/lib/memoizeStringOnly */ "./node_modules/fbjs/lib/memoizeStringOnly.js",
        );

        var _memoizeStringOnly2 = _interopRequireDefault(_memoizeStringOnly);

        var _warning = __webpack_require__(
          /*! fbjs/lib/warning */ "./node_modules/fbjs/lib/warning.js",
        );

        var _warning2 = _interopRequireDefault(_warning);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var processStyleName = (exports.processStyleName = (0,
        _memoizeStringOnly2.default)(_hyphenateStyleName2.default));
        /**
         * Copyright 2013-present, Facebook, Inc.
         * All rights reserved.
         *
         * This source code is licensed under the BSD-style license found in the
         * LICENSE file in the root directory of this source tree. An additional grant
         * of patent rights can be found in the PATENTS file in the same directory.
         *
         * @providesModule CSSPropertyOperations
         */

        if (true) {
          // 'msTransform' is correct, but the other prefixes should be capitalized
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

          // style values shouldn't contain a semicolon
          var badStyleValueWithSemicolonPattern = /;\s*$/;

          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;

          var warnHyphenatedStyleName = function warnHyphenatedStyleName(
            name,
            owner,
          ) {
            if (
              warnedStyleNames.hasOwnProperty(name) &&
              warnedStyleNames[name]
            ) {
              return;
            }

            warnedStyleNames[name] = true;
            true
              ? (0, _warning2.default)(
                  false,
                  "Unsupported style property %s. Did you mean %s?%s",
                  name,
                  (0, _camelizeStyleName2.default)(name),
                  checkRenderMessage(owner),
                )
              : undefined;
          };

          var warnBadVendoredStyleName = function warnBadVendoredStyleName(
            name,
            owner,
          ) {
            if (
              warnedStyleNames.hasOwnProperty(name) &&
              warnedStyleNames[name]
            ) {
              return;
            }

            warnedStyleNames[name] = true;
            true
              ? (0, _warning2.default)(
                  false,
                  "Unsupported vendor-prefixed style property %s. Did you mean %s?%s",
                  name,
                  name.charAt(0).toUpperCase() + name.slice(1),
                  checkRenderMessage(owner),
                )
              : undefined;
          };

          var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(
            name,
            value,
            owner,
          ) {
            if (
              warnedStyleValues.hasOwnProperty(value) &&
              warnedStyleValues[value]
            ) {
              return;
            }

            warnedStyleValues[value] = true;
            true
              ? (0, _warning2.default)(
                  false,
                  "Style property values shouldn't contain a semicolon.%s " +
                    'Try "%s: %s" instead.',
                  checkRenderMessage(owner),
                  name,
                  value.replace(badStyleValueWithSemicolonPattern, ""),
                )
              : undefined;
          };

          var warnStyleValueIsNaN = function warnStyleValueIsNaN(
            name,
            value,
            owner,
          ) {
            if (warnedForNaNValue) {
              return;
            }

            warnedForNaNValue = true;
            true
              ? (0, _warning2.default)(
                  false,
                  "`NaN` is an invalid value for the `%s` css style property.%s",
                  name,
                  checkRenderMessage(owner),
                )
              : undefined;
          };

          var checkRenderMessage = function checkRenderMessage(owner) {
            if (owner) {
              var name = owner.getName();
              if (name) {
                return " Check the render method of `" + name + "`.";
              }
            }
            return "";
          };

          /**
           * @param {string} name
           * @param {*} value
           * @param {ReactDOMComponent} component
           */
          var warnValidStyle = function warnValidStyle(name, value, component) {
            //eslint-disable-line no-var
            var owner = void 0;
            if (component) {
              owner = component._currentElement._owner;
            }
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name, owner);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name, owner);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value, owner);
            }

            if (typeof value === "number" && isNaN(value)) {
              warnStyleValueIsNaN(name, value, owner);
            }
          };
        }

        /**
         * Serializes a mapping of style properties for use as inline styles:
         *
         *   > createMarkupForStyles({width: '200px', height: 0})
         *   "width:200px;height:0;"
         *
         * Undefined values are ignored so that declarative programming is easier.
         * The result should be HTML-escaped before insertion into the DOM.
         *
         * @param {object} styles
         * @param {ReactDOMComponent} component
         * @return {?string}
         */

        function createMarkupForStyles(styles, component) {
          var serialized = "";
          for (var styleName in styles) {
            var isCustomProp = styleName.indexOf("--") === 0;
            if (!styles.hasOwnProperty(styleName)) {
              continue;
            }
            if (styleName === "label") {
              continue;
            }
            var styleValue = styles[styleName];
            if (true && !isCustomProp) {
              warnValidStyle(styleName, styleValue, component);
            }
            if (styleValue != null) {
              if (isCustomProp) {
                serialized += styleName + ":" + styleValue + ";";
              } else {
                serialized += processStyleName(styleName) + ":";
                serialized +=
                  (0, _dangerousStyleValue2.default)(
                    styleName,
                    styleValue,
                    component,
                  ) + ";";
              }
            }
          }
          return serialized || null;
        }

        /***/
      },

    /***/ "./node_modules/glamor/lib/clean.js":
      /*!******************************************!*\
  !*** ./node_modules/glamor/lib/clean.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _typeof =
          typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === "function" &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? "symbol"
                  : typeof obj;
              };

        exports.default = clean;
        // Returns true for null, false, undefined and {}
        function isFalsy(value) {
          return (
            value === null ||
            value === undefined ||
            value === false ||
            ((typeof value === "undefined" ? "undefined" : _typeof(value)) ===
              "object" &&
              Object.keys(value).length === 0)
          );
        }

        function cleanObject(object) {
          if (isFalsy(object)) return null;
          if (
            (typeof object === "undefined" ? "undefined" : _typeof(object)) !==
            "object"
          )
            return object;

          var acc = {},
            keys = Object.keys(object),
            hasFalsy = false;
          for (var i = 0; i < keys.length; i++) {
            var value = object[keys[i]];
            var filteredValue = clean(value);
            if (filteredValue === null || filteredValue !== value) {
              hasFalsy = true;
            }
            if (filteredValue !== null) {
              acc[keys[i]] = filteredValue;
            }
          }
          return Object.keys(acc).length === 0 ? null : hasFalsy ? acc : object;
        }

        function cleanArray(rules) {
          var hasFalsy = false;
          var filtered = [];
          rules.forEach(function(rule) {
            var filteredRule = clean(rule);
            if (filteredRule === null || filteredRule !== rule) {
              hasFalsy = true;
            }
            if (filteredRule !== null) {
              filtered.push(filteredRule);
            }
          });
          return filtered.length == 0 ? null : hasFalsy ? filtered : rules;
        }

        // Takes style array or object provided by user and clears all the falsy data
        // If there is no styles left after filtration returns null
        function clean(input) {
          return Array.isArray(input) ? cleanArray(input) : cleanObject(input);
        }

        /***/
      },

    /***/ "./node_modules/glamor/lib/hash.js":
      /*!*****************************************!*\
  !*** ./node_modules/glamor/lib/hash.js ***!
  \*****************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = doHash;
        // murmurhash2 via https://gist.github.com/raycmorgan/588423

        function doHash(str, seed) {
          var m = 0x5bd1e995;
          var r = 24;
          var h = seed ^ str.length;
          var length = str.length;
          var currentIndex = 0;

          while (length >= 4) {
            var k = UInt32(str, currentIndex);

            k = Umul32(k, m);
            k ^= k >>> r;
            k = Umul32(k, m);

            h = Umul32(h, m);
            h ^= k;

            currentIndex += 4;
            length -= 4;
          }

          switch (length) {
            case 3:
              h ^= UInt16(str, currentIndex);
              h ^= str.charCodeAt(currentIndex + 2) << 16;
              h = Umul32(h, m);
              break;

            case 2:
              h ^= UInt16(str, currentIndex);
              h = Umul32(h, m);
              break;

            case 1:
              h ^= str.charCodeAt(currentIndex);
              h = Umul32(h, m);
              break;
          }

          h ^= h >>> 13;
          h = Umul32(h, m);
          h ^= h >>> 15;

          return h >>> 0;
        }

        function UInt32(str, pos) {
          return (
            str.charCodeAt(pos++) +
            (str.charCodeAt(pos++) << 8) +
            (str.charCodeAt(pos++) << 16) +
            (str.charCodeAt(pos) << 24)
          );
        }

        function UInt16(str, pos) {
          return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
        }

        function Umul32(n, m) {
          n = n | 0;
          m = m | 0;
          var nlo = n & 0xffff;
          var nhi = n >>> 16;
          var res = (nlo * m + (((nhi * m) & 0xffff) << 16)) | 0;
          return res;
        }

        /***/
      },

    /***/ "./node_modules/glamor/lib/index.js":
      /*!******************************************!*\
  !*** ./node_modules/glamor/lib/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.compose = exports.merge = exports.$ = exports.style = exports.presets = exports.keyframes = exports.fontFace = exports.insertGlobal = exports.insertRule = exports.plugins = exports.styleSheet = undefined;
        exports.speedy = speedy;
        exports.simulations = simulations;
        exports.simulate = simulate;
        exports.cssLabels = cssLabels;
        exports.isLikeRule = isLikeRule;
        exports.idFor = idFor;
        exports.css = css;
        exports.rehydrate = rehydrate;
        exports.flush = flush;
        exports.select = select;
        exports.parent = parent;
        exports.media = media;
        exports.pseudo = pseudo;
        exports.active = active;
        exports.any = any;
        exports.checked = checked;
        exports.disabled = disabled;
        exports.empty = empty;
        exports.enabled = enabled;
        exports._default = _default;
        exports.first = first;
        exports.firstChild = firstChild;
        exports.firstOfType = firstOfType;
        exports.fullscreen = fullscreen;
        exports.focus = focus;
        exports.hover = hover;
        exports.indeterminate = indeterminate;
        exports.inRange = inRange;
        exports.invalid = invalid;
        exports.lastChild = lastChild;
        exports.lastOfType = lastOfType;
        exports.left = left;
        exports.link = link;
        exports.onlyChild = onlyChild;
        exports.onlyOfType = onlyOfType;
        exports.optional = optional;
        exports.outOfRange = outOfRange;
        exports.readOnly = readOnly;
        exports.readWrite = readWrite;
        exports.required = required;
        exports.right = right;
        exports.root = root;
        exports.scope = scope;
        exports.target = target;
        exports.valid = valid;
        exports.visited = visited;
        exports.dir = dir;
        exports.lang = lang;
        exports.not = not;
        exports.nthChild = nthChild;
        exports.nthLastChild = nthLastChild;
        exports.nthLastOfType = nthLastOfType;
        exports.nthOfType = nthOfType;
        exports.after = after;
        exports.before = before;
        exports.firstLetter = firstLetter;
        exports.firstLine = firstLine;
        exports.selection = selection;
        exports.backdrop = backdrop;
        exports.placeholder = placeholder;
        exports.cssFor = cssFor;
        exports.attribsFor = attribsFor;

        var _objectAssign = __webpack_require__(
          /*! object-assign */ "./node_modules/object-assign/index.js",
        );

        var _objectAssign2 = _interopRequireDefault(_objectAssign);

        var _sheet = __webpack_require__(
          /*! ./sheet.js */ "./node_modules/glamor/lib/sheet.js",
        );

        var _CSSPropertyOperations = __webpack_require__(
          /*! ./CSSPropertyOperations */ "./node_modules/glamor/lib/CSSPropertyOperations/index.js",
        );

        var _clean = __webpack_require__(
          /*! ./clean.js */ "./node_modules/glamor/lib/clean.js",
        );

        var _clean2 = _interopRequireDefault(_clean);

        var _plugins = __webpack_require__(
          /*! ./plugins */ "./node_modules/glamor/lib/plugins.js",
        );

        var _hash = __webpack_require__(
          /*! ./hash */ "./node_modules/glamor/lib/hash.js",
        );

        var _hash2 = _interopRequireDefault(_hash);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _toConsumableArray(arr) {
          if (Array.isArray(arr)) {
            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
              arr2[i] = arr[i];
            }
            return arr2;
          } else {
            return Array.from(arr);
          }
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }
        /* stylesheet */

        var styleSheet = (exports.styleSheet = new _sheet.StyleSheet());
        // an isomorphic StyleSheet shim. hides all the nitty gritty.

        // /**************** LIFTOFF IN 3... 2... 1... ****************/
        styleSheet.inject(); //eslint-disable-line indent
        // /****************      TO THE MOOOOOOON     ****************/

        // convenience function to toggle speedy
        function speedy(bool) {
          return styleSheet.speedy(bool);
        }

        // plugins
        // we include these by default
        var plugins = (exports.plugins = styleSheet.plugins = new _plugins.PluginSet(
          [_plugins.prefixes, _plugins.contentWrap, _plugins.fallbacks],
        ));
        plugins.media = new _plugins.PluginSet(); // neat! media, font-face, keyframes
        plugins.fontFace = new _plugins.PluginSet();
        plugins.keyframes = new _plugins.PluginSet([
          _plugins.prefixes,
          _plugins.fallbacks,
        ]);

        // define some constants

        var isDev = true || false;
        var isTest = "development" === "test";
        var isBrowser = typeof window !== "undefined";

        /**** simulations  ****/

        // a flag to enable simulation meta tags on dom nodes
        // defaults to true in dev mode. recommend *not* to
        // toggle often.
        var canSimulate = isDev;

        // we use these flags for issuing warnings when simulate is called
        // in prod / in incorrect order
        var warned1 = false,
          warned2 = false;

        // toggles simulation activity. shouldn't be needed in most cases
        function simulations() {
          var bool =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : true;

          canSimulate = !!bool;
        }

        // use this on dom nodes to 'simulate' pseudoclasses
        // <div {...hover({ color: 'red' })} {...simulate('hover', 'visited')}>...</div>
        // you can even send in some weird ones, as long as it's in simple format
        // and matches an existing rule on the element
        // eg simulate('nthChild2', ':hover:active') etc
        function simulate() {
          for (
            var _len = arguments.length, pseudos = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            pseudos[_key] = arguments[_key];
          }

          pseudos = (0, _clean2.default)(pseudos);
          if (!pseudos) return {};
          if (!canSimulate) {
            if (!warned1) {
              console.warn(
                "can't simulate without once calling simulations(true)",
              ); //eslint-disable-line no-console
              warned1 = true;
            }
            if (!isDev && !isTest && !warned2) {
              console.warn("don't use simulation outside dev"); //eslint-disable-line no-console
              warned2 = true;
            }
            return {};
          }
          return pseudos.reduce(function(o, p) {
            return (o["data-simulate-" + simple(p)] = ""), o;
          }, {});
        }

        /**** labels ****/
        // toggle for debug labels.
        // *shouldn't* have to mess with this manually
        var hasLabels = isDev;

        function cssLabels(bool) {
          hasLabels = !!bool;
        }

        // takes a string, converts to lowercase, strips out nonalphanumeric.
        function simple(str) {
          var char =
            arguments.length > 1 && arguments[1] !== undefined
              ? arguments[1]
              : "";

          return str.toLowerCase().replace(/[^a-z0-9]/g, char);
        }

        // hashes a string to something 'unique'
        // we use this to generate ids for styles

        function hashify(obj) {
          var str = JSON.stringify(obj);
          var toRet = (0, _hash2.default)(str).toString(36);
          if (obj.label && obj.label.length > 0 && isDev) {
            return simple(obj.label.join("."), "-") + "-" + toRet;
          }
          return toRet;
        }

        // of shape { 'data-css-<id>': '' }
        function isLikeRule(rule) {
          var keys = Object.keys(rule).filter(function(x) {
            return x !== "toString";
          });
          if (keys.length !== 1) {
            return false;
          }
          return !!/data\-css\-([a-zA-Z0-9\-_]+)/.exec(keys[0]);
        }

        // extracts id from a { 'data-css-<id>': ''} like object
        function idFor(rule) {
          var keys = Object.keys(rule).filter(function(x) {
            return x !== "toString";
          });
          if (keys.length !== 1) throw new Error("not a rule");
          var regex = /data\-css\-([a-zA-Z0-9\-_]+)/;
          var match = regex.exec(keys[0]);
          if (!match) throw new Error("not a rule");
          return match[1];
        }

        // from https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61

        // "Tokenizes" the selectors into parts relevant for the next function.
        // Strings and comments are matched, but ignored afterwards.
        // This is not a full tokenizers. It only recognizes comas, parentheses,
        // strings and comments.
        // regexp generated by scripts/regexps.js then trimmed by hand
        var selectorTokenizer = /[(),]|"(?:\\.|[^"\n])*"|'(?:\\.|[^'\n])*'|\/\*[\s\S]*?\*\//g;

        /**
         * This will split a coma-separated selector list into individual selectors,
         * ignoring comas in strings, comments and in :pseudo-selectors(parameter, lists).
         *
         * @param {string} selector
         * @return {string[]}
         */

        function splitSelector(selector) {
          if (selector.indexOf(",") === -1) {
            return [selector];
          }

          var indices = [],
            res = [],
            inParen = 0,
            o;
          /*eslint-disable no-cond-assign*/
          while ((o = selectorTokenizer.exec(selector))) {
            /*eslint-enable no-cond-assign*/
            switch (o[0]) {
              case "(":
                inParen++;
                break;
              case ")":
                inParen--;
                break;
              case ",":
                if (inParen) break;
                indices.push(o.index);
            }
          }
          for (o = indices.length; o--; ) {
            res.unshift(selector.slice(indices[o] + 1));
            selector = selector.slice(0, indices[o]);
          }
          res.unshift(selector);
          return res;
        }

        function selector(id, path) {
          if (!id) {
            return path.replace(/\&/g, "");
          }
          if (!path) return ".css-" + id + ",[data-css-" + id + "]";

          var x = splitSelector(path)
            .map(function(x) {
              return x.indexOf("&") >= 0
                ? [
                    x.replace(/\&/gm, ".css-" + id),
                    x.replace(/\&/gm, "[data-css-" + id + "]"),
                  ].join(",") // todo - make sure each sub selector has an &
                : ".css-" + id + x + ",[data-css-" + id + "]" + x;
            })
            .join(",");

          if (canSimulate && /^\&\:/.exec(path) && !/\s/.exec(path)) {
            x +=
              ",.css-" +
              id +
              "[data-simulate-" +
              simple(path) +
              "],[data-css-" +
              id +
              "][data-simulate-" +
              simple(path) +
              "]";
          }
          return x;
        }

        // end https://github.com/j2css/j2c/blob/5d381c2d721d04b54fabe6a165d587247c3087cb/src/helpers.js#L28-L61

        function toCSS(_ref) {
          var selector = _ref.selector,
            style = _ref.style;

          var result = plugins.transform({ selector: selector, style: style });
          return (
            result.selector +
            "{" +
            (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) +
            "}"
          );
        }

        function deconstruct(style) {
          // we can be sure it's not infinitely nested here
          var plain = void 0,
            selects = void 0,
            medias = void 0,
            supports = void 0;
          Object.keys(style).forEach(function(key) {
            if (key.indexOf("&") >= 0) {
              selects = selects || {};
              selects[key] = style[key];
            } else if (key.indexOf("@media") === 0) {
              medias = medias || {};
              medias[key] = deconstruct(style[key]);
            } else if (key.indexOf("@supports") === 0) {
              supports = supports || {};
              supports[key] = deconstruct(style[key]);
            } else if (key === "label") {
              if (style.label.length > 0) {
                plain = plain || {};
                plain.label = hasLabels ? style.label.join(".") : "";
              }
            } else {
              plain = plain || {};
              plain[key] = style[key];
            }
          });
          return {
            plain: plain,
            selects: selects,
            medias: medias,
            supports: supports,
          };
        }

        function deconstructedStyleToCSS(id, style) {
          var css = [];

          // plugins here
          var plain = style.plain,
            selects = style.selects,
            medias = style.medias,
            supports = style.supports;

          if (plain) {
            css.push(toCSS({ style: plain, selector: selector(id) }));
          }
          if (selects) {
            Object.keys(selects).forEach(function(key) {
              return css.push(
                toCSS({ style: selects[key], selector: selector(id, key) }),
              );
            });
          }
          if (medias) {
            Object.keys(medias).forEach(function(key) {
              return css.push(
                key +
                  "{" +
                  deconstructedStyleToCSS(id, medias[key]).join("") +
                  "}",
              );
            });
          }
          if (supports) {
            Object.keys(supports).forEach(function(key) {
              return css.push(
                key +
                  "{" +
                  deconstructedStyleToCSS(id, supports[key]).join("") +
                  "}",
              );
            });
          }
          return css;
        }

        // this cache to track which rules have
        // been inserted into the stylesheet
        var inserted = (styleSheet.inserted = {});

        // and helpers to insert rules into said styleSheet
        function insert(spec) {
          if (!inserted[spec.id]) {
            inserted[spec.id] = true;
            var deconstructed = deconstruct(spec.style);
            var rules = deconstructedStyleToCSS(spec.id, deconstructed);
            inserted[spec.id] = isBrowser ? true : rules;
            rules.forEach(function(cssRule) {
              return styleSheet.insert(cssRule);
            });
          }
        }

        // a simple cache to store generated rules
        var registered = (styleSheet.registered = {});
        function register(spec) {
          if (!registered[spec.id]) {
            registered[spec.id] = spec;
          }
        }

        function _getRegistered(rule) {
          if (isLikeRule(rule)) {
            var ret = registered[idFor(rule)];
            if (ret == null) {
              throw new Error(
                "[glamor] an unexpected rule cache miss occurred. This is probably a sign of multiple glamor instances in your app. See https://github.com/threepointone/glamor/issues/79",
              );
            }
            return ret;
          }
          return rule;
        }

        // todo - perf
        var ruleCache = {};
        function toRule(spec) {
          register(spec);
          insert(spec);

          if (ruleCache[spec.id]) {
            return ruleCache[spec.id];
          }

          var ret = _defineProperty(
            {},
            "data-css-" + spec.id,
            hasLabels ? spec.label || "" : "",
          );
          Object.defineProperty(ret, "toString", {
            enumerable: false,
            value: function value() {
              return "css-" + spec.id;
            },
          });
          ruleCache[spec.id] = ret;
          return ret;
        }

        function log() {
          //eslint-disable-line no-unused-vars
          console.log(this); //eslint-disable-line no-console
          return this;
        }

        function isSelector(key) {
          var possibles = [":", ".", "[", ">", " "],
            found = false,
            ch = key.charAt(0);
          for (var i = 0; i < possibles.length; i++) {
            if (ch === possibles[i]) {
              found = true;
              break;
            }
          }
          return found || key.indexOf("&") >= 0;
        }

        function joinSelectors(a, b) {
          var as = splitSelector(a).map(function(a) {
            return !(a.indexOf("&") >= 0) ? "&" + a : a;
          });
          var bs = splitSelector(b).map(function(b) {
            return !(b.indexOf("&") >= 0) ? "&" + b : b;
          });

          return bs
            .reduce(function(arr, b) {
              return arr.concat(
                as.map(function(a) {
                  return b.replace(/\&/g, a);
                }),
              );
            }, [])
            .join(",");
        }

        function joinMediaQueries(a, b) {
          return a ? "@media " + a.substring(6) + " and " + b.substring(6) : b;
        }

        function isMediaQuery(key) {
          return key.indexOf("@media") === 0;
        }

        function isSupports(key) {
          return key.indexOf("@supports") === 0;
        }

        function joinSupports(a, b) {
          return a
            ? "@supports " + a.substring(9) + " and " + b.substring(9)
            : b;
        }

        // flatten a nested array
        function flatten(inArr) {
          var arr = [];
          for (var i = 0; i < inArr.length; i++) {
            if (Array.isArray(inArr[i])) arr = arr.concat(flatten(inArr[i]));
            else arr = arr.concat(inArr[i]);
          }
          return arr;
        }

        var prefixedPseudoSelectors = {
          "::placeholder": [
            "::-webkit-input-placeholder",
            "::-moz-placeholder",
            "::-ms-input-placeholder",
          ],
          ":fullscreen": [
            ":-webkit-full-screen",
            ":-moz-full-screen",
            ":-ms-fullscreen",
          ],

          // mutable! modifies dest.
        };
        function build(dest, _ref2) {
          var _ref2$selector = _ref2.selector,
            selector = _ref2$selector === undefined ? "" : _ref2$selector,
            _ref2$mq = _ref2.mq,
            mq = _ref2$mq === undefined ? "" : _ref2$mq,
            _ref2$supp = _ref2.supp,
            supp = _ref2$supp === undefined ? "" : _ref2$supp,
            _ref2$src = _ref2.src,
            src = _ref2$src === undefined ? {} : _ref2$src;

          if (!Array.isArray(src)) {
            src = [src];
          }
          src = flatten(src);

          src.forEach(function(_src) {
            if (isLikeRule(_src)) {
              var reg = _getRegistered(_src);
              if (reg.type !== "css") {
                throw new Error("cannot merge this rule");
              }
              _src = reg.style;
            }
            _src = (0, _clean2.default)(_src);
            if (_src && _src.composes) {
              build(dest, {
                selector: selector,
                mq: mq,
                supp: supp,
                src: _src.composes,
              });
            }
            Object.keys(_src || {}).forEach(function(key) {
              if (isSelector(key)) {
                if (prefixedPseudoSelectors[key]) {
                  prefixedPseudoSelectors[key].forEach(function(p) {
                    return build(dest, {
                      selector: joinSelectors(selector, p),
                      mq: mq,
                      supp: supp,
                      src: _src[key],
                    });
                  });
                }

                build(dest, {
                  selector: joinSelectors(selector, key),
                  mq: mq,
                  supp: supp,
                  src: _src[key],
                });
              } else if (isMediaQuery(key)) {
                build(dest, {
                  selector: selector,
                  mq: joinMediaQueries(mq, key),
                  supp: supp,
                  src: _src[key],
                });
              } else if (isSupports(key)) {
                build(dest, {
                  selector: selector,
                  mq: mq,
                  supp: joinSupports(supp, key),
                  src: _src[key],
                });
              } else if (key === "composes") {
                // ignore, we already dealth with it
              } else {
                var _dest = dest;
                if (supp) {
                  _dest[supp] = _dest[supp] || {};
                  _dest = _dest[supp];
                }
                if (mq) {
                  _dest[mq] = _dest[mq] || {};
                  _dest = _dest[mq];
                }
                if (selector) {
                  _dest[selector] = _dest[selector] || {};
                  _dest = _dest[selector];
                }

                if (key === "label") {
                  if (hasLabels) {
                    dest.label = dest.label.concat(_src.label);
                  }
                } else {
                  _dest[key] = _src[key];
                }
              }
            });
          });
        }

        function _css(rules) {
          var style = { label: [] };
          build(style, { src: rules }); // mutative! but worth it.

          var spec = {
            id: hashify(style),
            style: style,
            label: hasLabels ? style.label.join(".") : "",
            type: "css",
          };
          return toRule(spec);
        }

        var nullrule = {
          // 'data-css-nil': ''
        };
        Object.defineProperty(nullrule, "toString", {
          enumerable: false,
          value: function value() {
            return "css-nil";
          },
        });

        var inputCaches =
          typeof WeakMap !== "undefined"
            ? [nullrule, new WeakMap(), new WeakMap(), new WeakMap()]
            : [nullrule];

        var warnedWeakMapError = false;
        function multiIndexCache(fn) {
          return function(args) {
            if (inputCaches[args.length]) {
              var coi = inputCaches[args.length];
              var ctr = 0;
              while (ctr < args.length - 1) {
                if (!coi.has(args[ctr])) {
                  coi.set(args[ctr], new WeakMap());
                }
                coi = coi.get(args[ctr]);
                ctr++;
              }
              if (coi.has(args[args.length - 1])) {
                var ret = coi.get(args[ctr]);

                if (registered[ret.toString().substring(4)]) {
                  // make sure it hasn't been flushed
                  return ret;
                }
              }
            }
            var value = fn(args);
            if (inputCaches[args.length]) {
              var _ctr = 0,
                _coi = inputCaches[args.length];
              while (_ctr < args.length - 1) {
                _coi = _coi.get(args[_ctr]);
                _ctr++;
              }
              try {
                _coi.set(args[_ctr], value);
              } catch (err) {
                if (isDev && !warnedWeakMapError) {
                  var _console;

                  warnedWeakMapError = true;
                  (_console = console).warn.apply(
                    _console,
                    ["failed setting the WeakMap cache for args:"].concat(
                      _toConsumableArray(args),
                    ),
                  ); // eslint-disable-line no-console
                  console.warn(
                    "this should NOT happen, please file a bug on the github repo.",
                  ); // eslint-disable-line no-console
                }
              }
            }
            return value;
          };
        }

        var cachedCss =
          typeof WeakMap !== "undefined" ? multiIndexCache(_css) : _css;

        function css() {
          for (
            var _len2 = arguments.length, rules = Array(_len2), _key2 = 0;
            _key2 < _len2;
            _key2++
          ) {
            rules[_key2] = arguments[_key2];
          }

          if (rules[0] && rules[0].length && rules[0].raw) {
            throw new Error(
              "you forgot to include glamor/babel in your babel plugins.",
            );
          }

          rules = (0, _clean2.default)(rules);
          if (!rules) {
            return nullrule;
          }

          return cachedCss(rules);
        }

        css.insert = function(css) {
          var spec = {
            id: hashify(css),
            css: css,
            type: "raw",
          };
          register(spec);
          if (!inserted[spec.id]) {
            styleSheet.insert(spec.css);
            inserted[spec.id] = isBrowser ? true : [spec.css];
          }
        };

        var insertRule = (exports.insertRule = css.insert);

        css.global = function(selector, style) {
          style = (0, _clean2.default)(style);
          if (style) {
            return css.insert(toCSS({ selector: selector, style: style }));
          }
        };

        var insertGlobal = (exports.insertGlobal = css.global);

        function insertKeyframe(spec) {
          if (!inserted[spec.id]) {
            var inner = Object.keys(spec.keyframes)
              .map(function(kf) {
                var result = plugins.keyframes.transform({
                  id: spec.id,
                  name: kf,
                  style: spec.keyframes[kf],
                });
                return (
                  result.name +
                  "{" +
                  (0, _CSSPropertyOperations.createMarkupForStyles)(
                    result.style,
                  ) +
                  "}"
                );
              })
              .join("");

            var rules = ["-webkit-", "-moz-", "-o-", ""].map(function(prefix) {
              return (
                "@" +
                prefix +
                "keyframes " +
                (spec.name + "_" + spec.id) +
                "{" +
                inner +
                "}"
              );
            });
            rules.forEach(function(rule) {
              return styleSheet.insert(rule);
            });

            inserted[spec.id] = isBrowser ? true : rules;
          }
        }
        css.keyframes = function(name, kfs) {
          if (!kfs) {
            (kfs = name), (name = "animation");
          }

          // do not ignore empty keyframe definitions for now.
          kfs = (0, _clean2.default)(kfs) || {};
          var spec = {
            id: hashify({ name: name, kfs: kfs }),
            type: "keyframes",
            name: name,
            keyframes: kfs,
          };
          register(spec);
          insertKeyframe(spec);
          return name + "_" + spec.id;
        };

        // we don't go all out for fonts as much, giving a simple font loading strategy
        // use a fancier lib if you need moar power
        css.fontFace = function(font) {
          font = (0, _clean2.default)(font);
          var spec = {
            id: hashify(font),
            type: "font-face",
            font: font,
          };
          register(spec);
          insertFontFace(spec);

          return font.fontFamily;
        };

        var fontFace = (exports.fontFace = css.fontFace);
        var keyframes = (exports.keyframes = css.keyframes);

        function insertFontFace(spec) {
          if (!inserted[spec.id]) {
            var rule =
              "@font-face{" +
              (0, _CSSPropertyOperations.createMarkupForStyles)(spec.font) +
              "}";
            styleSheet.insert(rule);
            inserted[spec.id] = isBrowser ? true : [rule];
          }
        }

        // rehydrate the insertion cache with ids sent from
        // renderStatic / renderStaticOptimized
        function rehydrate(ids) {
          // load up ids
          (0, _objectAssign2.default)(
            inserted,
            ids.reduce(function(o, i) {
              return (o[i] = true), o;
            }, {}),
          );
          // assume css loaded separately
        }

        // clears out the cache and empties the stylesheet
        // best for tests, though there might be some value for SSR.

        function flush() {
          inserted = styleSheet.inserted = {};
          registered = styleSheet.registered = {};
          ruleCache = {};
          styleSheet.flush();
          styleSheet.inject();
        }

        var presets = (exports.presets = {
          mobile: "(min-width: 400px)",
          Mobile: "@media (min-width: 400px)",
          phablet: "(min-width: 550px)",
          Phablet: "@media (min-width: 550px)",
          tablet: "(min-width: 750px)",
          Tablet: "@media (min-width: 750px)",
          desktop: "(min-width: 1000px)",
          Desktop: "@media (min-width: 1000px)",
          hd: "(min-width: 1200px)",
          Hd: "@media (min-width: 1200px)",
        });

        var style = (exports.style = css);

        function select(selector) {
          for (
            var _len3 = arguments.length,
              styles = Array(_len3 > 1 ? _len3 - 1 : 0),
              _key3 = 1;
            _key3 < _len3;
            _key3++
          ) {
            styles[_key3 - 1] = arguments[_key3];
          }

          if (!selector) {
            return style(styles);
          }
          return css(_defineProperty({}, selector, styles));
        }
        var $ = (exports.$ = select);

        function parent(selector) {
          for (
            var _len4 = arguments.length,
              styles = Array(_len4 > 1 ? _len4 - 1 : 0),
              _key4 = 1;
            _key4 < _len4;
            _key4++
          ) {
            styles[_key4 - 1] = arguments[_key4];
          }

          return css(_defineProperty({}, selector + " &", styles));
        }

        var merge = (exports.merge = css);
        var compose = (exports.compose = css);

        function media(query) {
          for (
            var _len5 = arguments.length,
              rules = Array(_len5 > 1 ? _len5 - 1 : 0),
              _key5 = 1;
            _key5 < _len5;
            _key5++
          ) {
            rules[_key5 - 1] = arguments[_key5];
          }

          return css(_defineProperty({}, "@media " + query, rules));
        }

        function pseudo(selector) {
          for (
            var _len6 = arguments.length,
              styles = Array(_len6 > 1 ? _len6 - 1 : 0),
              _key6 = 1;
            _key6 < _len6;
            _key6++
          ) {
            styles[_key6 - 1] = arguments[_key6];
          }

          return css(_defineProperty({}, selector, styles));
        }

        // allllll the pseudoclasses

        function active(x) {
          return pseudo(":active", x);
        }

        function any(x) {
          return pseudo(":any", x);
        }

        function checked(x) {
          return pseudo(":checked", x);
        }

        function disabled(x) {
          return pseudo(":disabled", x);
        }

        function empty(x) {
          return pseudo(":empty", x);
        }

        function enabled(x) {
          return pseudo(":enabled", x);
        }

        function _default(x) {
          return pseudo(":default", x); // note '_default' name
        }

        function first(x) {
          return pseudo(":first", x);
        }

        function firstChild(x) {
          return pseudo(":first-child", x);
        }

        function firstOfType(x) {
          return pseudo(":first-of-type", x);
        }

        function fullscreen(x) {
          return pseudo(":fullscreen", x);
        }

        function focus(x) {
          return pseudo(":focus", x);
        }

        function hover(x) {
          return pseudo(":hover", x);
        }

        function indeterminate(x) {
          return pseudo(":indeterminate", x);
        }

        function inRange(x) {
          return pseudo(":in-range", x);
        }

        function invalid(x) {
          return pseudo(":invalid", x);
        }

        function lastChild(x) {
          return pseudo(":last-child", x);
        }

        function lastOfType(x) {
          return pseudo(":last-of-type", x);
        }

        function left(x) {
          return pseudo(":left", x);
        }

        function link(x) {
          return pseudo(":link", x);
        }

        function onlyChild(x) {
          return pseudo(":only-child", x);
        }

        function onlyOfType(x) {
          return pseudo(":only-of-type", x);
        }

        function optional(x) {
          return pseudo(":optional", x);
        }

        function outOfRange(x) {
          return pseudo(":out-of-range", x);
        }

        function readOnly(x) {
          return pseudo(":read-only", x);
        }

        function readWrite(x) {
          return pseudo(":read-write", x);
        }

        function required(x) {
          return pseudo(":required", x);
        }

        function right(x) {
          return pseudo(":right", x);
        }

        function root(x) {
          return pseudo(":root", x);
        }

        function scope(x) {
          return pseudo(":scope", x);
        }

        function target(x) {
          return pseudo(":target", x);
        }

        function valid(x) {
          return pseudo(":valid", x);
        }

        function visited(x) {
          return pseudo(":visited", x);
        }

        // parameterized pseudoclasses
        function dir(p, x) {
          return pseudo(":dir(" + p + ")", x);
        }
        function lang(p, x) {
          return pseudo(":lang(" + p + ")", x);
        }
        function not(p, x) {
          // should this be a plugin?
          var selector = p
            .split(",")
            .map(function(x) {
              return x.trim();
            })
            .map(function(x) {
              return ":not(" + x + ")";
            });
          if (selector.length === 1) {
            return pseudo(":not(" + p + ")", x);
          }
          return select(selector.join(""), x);
        }
        function nthChild(p, x) {
          return pseudo(":nth-child(" + p + ")", x);
        }
        function nthLastChild(p, x) {
          return pseudo(":nth-last-child(" + p + ")", x);
        }
        function nthLastOfType(p, x) {
          return pseudo(":nth-last-of-type(" + p + ")", x);
        }
        function nthOfType(p, x) {
          return pseudo(":nth-of-type(" + p + ")", x);
        }

        // pseudoelements
        function after(x) {
          return pseudo("::after", x);
        }
        function before(x) {
          return pseudo("::before", x);
        }
        function firstLetter(x) {
          return pseudo("::first-letter", x);
        }
        function firstLine(x) {
          return pseudo("::first-line", x);
        }
        function selection(x) {
          return pseudo("::selection", x);
        }
        function backdrop(x) {
          return pseudo("::backdrop", x);
        }
        function placeholder(x) {
          // https://github.com/threepointone/glamor/issues/14
          return css({ "::placeholder": x });
        }

        /*** helpers for web components ***/
        // https://github.com/threepointone/glamor/issues/16

        function cssFor() {
          for (
            var _len7 = arguments.length, rules = Array(_len7), _key7 = 0;
            _key7 < _len7;
            _key7++
          ) {
            rules[_key7] = arguments[_key7];
          }

          rules = (0, _clean2.default)(rules);
          return rules
            ? rules
                .map(function(r) {
                  var style = { label: [] };
                  build(style, { src: r }); // mutative! but worth it.
                  return deconstructedStyleToCSS(
                    hashify(style),
                    deconstruct(style),
                  ).join("");
                })
                .join("")
            : "";
        }

        function attribsFor() {
          for (
            var _len8 = arguments.length, rules = Array(_len8), _key8 = 0;
            _key8 < _len8;
            _key8++
          ) {
            rules[_key8] = arguments[_key8];
          }

          rules = (0, _clean2.default)(rules);
          var htmlAttributes = rules
            ? rules
                .map(function(rule) {
                  idFor(rule); // throwaway check for rule
                  var key = Object.keys(rule)[0],
                    value = rule[key];
                  return key + '="' + (value || "") + '"';
                })
                .join(" ")
            : "";

          return htmlAttributes;
        }

        /***/
      },

    /***/ "./node_modules/glamor/lib/plugins.js":
      /*!********************************************!*\
  !*** ./node_modules/glamor/lib/plugins.js ***!
  \********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        exports.PluginSet = PluginSet;
        exports.fallbacks = fallbacks;
        exports.contentWrap = contentWrap;
        exports.prefixes = prefixes;

        var _objectAssign = __webpack_require__(
          /*! object-assign */ "./node_modules/object-assign/index.js",
        );

        var _objectAssign2 = _interopRequireDefault(_objectAssign);

        var _CSSPropertyOperations = __webpack_require__(
          /*! ./CSSPropertyOperations */ "./node_modules/glamor/lib/CSSPropertyOperations/index.js",
        );

        var _prefixer = __webpack_require__(
          /*! ./prefixer */ "./node_modules/glamor/lib/prefixer.js",
        );

        var _prefixer2 = _interopRequireDefault(_prefixer);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var isDev = (function(x) {
          return x === "development" || !x;
        })("development");

        function PluginSet(initial) {
          this.fns = initial || [];
        }

        (0, _objectAssign2.default)(PluginSet.prototype, {
          add: function add() {
            var _this = this;

            for (
              var _len = arguments.length, fns = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              fns[_key] = arguments[_key];
            }

            fns.forEach(function(fn) {
              if (_this.fns.indexOf(fn) >= 0) {
                if (isDev) {
                  console.warn("adding the same plugin again, ignoring"); //eslint-disable-line no-console
                }
              } else {
                _this.fns = [fn].concat(_this.fns);
              }
            });
          },
          remove: function remove(fn) {
            this.fns = this.fns.filter(function(x) {
              return x !== fn;
            });
          },
          clear: function clear() {
            this.fns = [];
          },
          transform: function transform(o) {
            return this.fns.reduce(function(o, fn) {
              return fn(o);
            }, o);
          },
        });

        function fallbacks(node) {
          var hasArray =
            Object.keys(node.style)
              .map(function(x) {
                return Array.isArray(node.style[x]);
              })
              .indexOf(true) >= 0;
          if (hasArray) {
            var style = node.style;

            var flattened = Object.keys(style).reduce(function(o, key) {
              o[key] = Array.isArray(style[key])
                ? style[key].join(
                    "; " +
                      (0, _CSSPropertyOperations.processStyleName)(key) +
                      ": ",
                  )
                : style[key];
              return o;
            }, {});
            // todo -
            // flatten arrays which haven't been flattened yet
            return (0, _objectAssign2.default)({}, node, { style: flattened });
          }
          return node;
        }

        var contentValues = [
          "normal",
          "none",
          "counter",
          "open-quote",
          "close-quote",
          "no-open-quote",
          "no-close-quote",
          "initial",
          "inherit",
        ];

        function contentWrap(node) {
          if (node.style.content) {
            var cont = node.style.content;
            if (contentValues.indexOf(cont) >= 0) {
              return node;
            }
            if (/^(attr|calc|counters?|url)\(/.test(cont)) {
              return node;
            }
            if (
              cont.charAt(0) === cont.charAt(cont.length - 1) &&
              (cont.charAt(0) === '"' || cont.charAt(0) === "'")
            ) {
              return node;
            }
            return _extends({}, node, {
              style: _extends({}, node.style, { content: '"' + cont + '"' }),
            });
          }
          return node;
        }

        function prefixes(node) {
          return (0, _objectAssign2.default)({}, node, {
            style: (0, _prefixer2.default)(_extends({}, node.style)),
          });
        }

        /***/
      },

    /***/ "./node_modules/glamor/lib/prefixer.js":
      /*!*********************************************!*\
  !*** ./node_modules/glamor/lib/prefixer.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = prefixer;

        var _staticData = __webpack_require__(
          /*! inline-style-prefixer/static/staticData */ "./node_modules/inline-style-prefixer/static/staticData.js",
        );

        var _staticData2 = _interopRequireDefault(_staticData);

        var _prefixProperty = __webpack_require__(
          /*! inline-style-prefixer/utils/prefixProperty */ "./node_modules/inline-style-prefixer/utils/prefixProperty.js",
        );

        var _prefixProperty2 = _interopRequireDefault(_prefixProperty);

        var _prefixValue = __webpack_require__(
          /*! inline-style-prefixer/utils/prefixValue */ "./node_modules/inline-style-prefixer/utils/prefixValue.js",
        );

        var _prefixValue2 = _interopRequireDefault(_prefixValue);

        var _cursor = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/cursor */ "./node_modules/inline-style-prefixer/static/plugins/cursor.js",
        );

        var _cursor2 = _interopRequireDefault(_cursor);

        var _crossFade = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/crossFade */ "./node_modules/inline-style-prefixer/static/plugins/crossFade.js",
        );

        var _crossFade2 = _interopRequireDefault(_crossFade);

        var _filter = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/filter */ "./node_modules/inline-style-prefixer/static/plugins/filter.js",
        );

        var _filter2 = _interopRequireDefault(_filter);

        var _flex = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/flex */ "./node_modules/inline-style-prefixer/static/plugins/flex.js",
        );

        var _flex2 = _interopRequireDefault(_flex);

        var _flexboxOld = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/flexboxOld */ "./node_modules/inline-style-prefixer/static/plugins/flexboxOld.js",
        );

        var _flexboxOld2 = _interopRequireDefault(_flexboxOld);

        var _gradient = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/gradient */ "./node_modules/inline-style-prefixer/static/plugins/gradient.js",
        );

        var _gradient2 = _interopRequireDefault(_gradient);

        var _imageSet = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/imageSet */ "./node_modules/inline-style-prefixer/static/plugins/imageSet.js",
        );

        var _imageSet2 = _interopRequireDefault(_imageSet);

        var _position = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/position */ "./node_modules/inline-style-prefixer/static/plugins/position.js",
        );

        var _position2 = _interopRequireDefault(_position);

        var _sizing = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/sizing */ "./node_modules/inline-style-prefixer/static/plugins/sizing.js",
        );

        var _sizing2 = _interopRequireDefault(_sizing);

        var _transition = __webpack_require__(
          /*! inline-style-prefixer/static/plugins/transition */ "./node_modules/inline-style-prefixer/static/plugins/transition.js",
        );

        var _transition2 = _interopRequireDefault(_transition);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var plugins = [
          _crossFade2.default,
          _cursor2.default,
          _filter2.default,
          _flexboxOld2.default,
          _gradient2.default,
          _imageSet2.default,
          _position2.default,
          _sizing2.default,
          _transition2.default,
          _flex2.default,
        ]; // custom facade for inline-style-prefixer

        var prefixMap = _staticData2.default.prefixMap;

        function prefixer(style) {
          for (var property in style) {
            var value = style[property];

            var processedValue = (0, _prefixValue2.default)(
              plugins,
              property,
              value,
              style,
              prefixMap,
            );

            // only modify the value if it was touched
            // by any plugin to prevent unnecessary mutations
            if (processedValue) {
              style[property] = processedValue;
            }

            (0, _prefixProperty2.default)(prefixMap, property, style);
          }
          return style;
        }

        /***/
      },

    /***/ "./node_modules/glamor/lib/sheet.js":
      /*!******************************************!*\
  !*** ./node_modules/glamor/lib/sheet.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.StyleSheet = StyleSheet;

        var _objectAssign = __webpack_require__(
          /*! object-assign */ "./node_modules/object-assign/index.js",
        );

        var _objectAssign2 = _interopRequireDefault(_objectAssign);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _toConsumableArray(arr) {
          if (Array.isArray(arr)) {
            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
              arr2[i] = arr[i];
            }
            return arr2;
          } else {
            return Array.from(arr);
          }
        }

        /* 

high performance StyleSheet for css-in-js systems 

- uses multiple style tags behind the scenes for millions of rules 
- uses `insertRule` for appending in production for *much* faster performance
- 'polyfills' on server side 


// usage

import StyleSheet from 'glamor/lib/sheet'
let styleSheet = new StyleSheet()

styleSheet.inject() 
- 'injects' the stylesheet into the page (or into memory if on server)

styleSheet.insert('#box { border: 1px solid red; }') 
- appends a css rule into the stylesheet 

styleSheet.flush() 
- empties the stylesheet of all its contents


*/

        function last(arr) {
          return arr[arr.length - 1];
        }

        function sheetForTag(tag) {
          if (tag.sheet) {
            return tag.sheet;
          }

          // this weirdness brought to you by firefox
          for (var i = 0; i < document.styleSheets.length; i++) {
            if (document.styleSheets[i].ownerNode === tag) {
              return document.styleSheets[i];
            }
          }
        }

        var isBrowser = typeof window !== "undefined";
        var isDev = true || false; //(x => (x === 'development') || !x)(process.env.NODE_ENV)
        var isTest = "development" === "test";

        var oldIE = (function() {
          if (isBrowser) {
            var div = document.createElement("div");
            div.innerHTML = "<!--[if lt IE 10]><i></i><![endif]-->";
            return div.getElementsByTagName("i").length === 1;
          }
        })();

        function makeStyleTag() {
          var tag = document.createElement("style");
          tag.type = "text/css";
          tag.setAttribute("data-glamor", "");
          tag.appendChild(document.createTextNode(""));
          (
            document.head || document.getElementsByTagName("head")[0]
          ).appendChild(tag);
          return tag;
        }

        function StyleSheet() {
          var _ref =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {},
            _ref$speedy = _ref.speedy,
            speedy =
              _ref$speedy === undefined ? !isDev && !isTest : _ref$speedy,
            _ref$maxLength = _ref.maxLength,
            maxLength =
              _ref$maxLength === undefined
                ? isBrowser && oldIE
                  ? 4000
                  : 65000
                : _ref$maxLength;

          this.isSpeedy = speedy; // the big drawback here is that the css won't be editable in devtools
          this.sheet = undefined;
          this.tags = [];
          this.maxLength = maxLength;
          this.ctr = 0;
        }

        (0, _objectAssign2.default)(StyleSheet.prototype, {
          getSheet: function getSheet() {
            return sheetForTag(last(this.tags));
          },
          inject: function inject() {
            var _this = this;

            if (this.injected) {
              throw new Error("already injected stylesheet!");
            }
            if (isBrowser) {
              this.tags[0] = makeStyleTag();
            } else {
              // server side 'polyfill'. just enough behavior to be useful.
              this.sheet = {
                cssRules: [],
                insertRule: function insertRule(rule) {
                  // enough 'spec compliance' to be able to extract the rules later
                  // in other words, just the cssText field
                  _this.sheet.cssRules.push({ cssText: rule });
                },
              };
            }
            this.injected = true;
          },
          speedy: function speedy(bool) {
            if (this.ctr !== 0) {
              throw new Error(
                "cannot change speedy mode after inserting any rule to sheet. Either call speedy(" +
                  bool +
                  ") earlier in your app, or call flush() before speedy(" +
                  bool +
                  ")",
              );
            }
            this.isSpeedy = !!bool;
          },
          _insert: function _insert(rule) {
            // this weirdness for perf, and chrome's weird bug
            // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
            try {
              var sheet = this.getSheet();
              sheet.insertRule(
                rule,
                rule.indexOf("@import") !== -1 ? 0 : sheet.cssRules.length,
              );
            } catch (e) {
              if (isDev) {
                // might need beter dx for this
                console.warn("whoops, illegal rule inserted", rule); //eslint-disable-line no-console
              }
            }
          },
          insert: function insert(rule) {
            if (isBrowser) {
              // this is the ultrafast version, works across browsers
              if (this.isSpeedy && this.getSheet().insertRule) {
                this._insert(rule);
              }
              // more browser weirdness. I don't even know
              // else if(this.tags.length > 0 && this.tags::last().styleSheet) {
              //   this.tags::last().styleSheet.cssText+= rule
              // }
              else {
                if (rule.indexOf("@import") !== -1) {
                  var tag = last(this.tags);
                  tag.insertBefore(
                    document.createTextNode(rule),
                    tag.firstChild,
                  );
                } else {
                  last(this.tags).appendChild(document.createTextNode(rule));
                }
              }
            } else {
              // server side is pretty simple
              this.sheet.insertRule(
                rule,
                rule.indexOf("@import") !== -1 ? 0 : this.sheet.cssRules.length,
              );
            }

            this.ctr++;
            if (isBrowser && this.ctr % this.maxLength === 0) {
              this.tags.push(makeStyleTag());
            }
            return this.ctr - 1;
          },

          // commenting this out till we decide on v3's decision
          // _replace(index, rule) {
          //   // this weirdness for perf, and chrome's weird bug
          //   // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
          //   try {
          //     let sheet = this.getSheet()
          //     sheet.deleteRule(index) // todo - correct index here
          //     sheet.insertRule(rule, index)
          //   }
          //   catch(e) {
          //     if(isDev) {
          //       // might need beter dx for this
          //       console.warn('whoops, problem replacing rule', rule) //eslint-disable-line no-console
          //     }
          //   }

          // }
          // replace(index, rule) {
          //   if(isBrowser) {
          //     if(this.isSpeedy && this.getSheet().insertRule) {
          //       this._replace(index, rule)
          //     }
          //     else {
          //       let _slot = Math.floor((index  + this.maxLength) / this.maxLength) - 1
          //       let _index = (index % this.maxLength) + 1
          //       let tag = this.tags[_slot]
          //       tag.replaceChild(document.createTextNode(rule), tag.childNodes[_index])
          //     }
          //   }
          //   else {
          //     let rules = this.sheet.cssRules
          //     this.sheet.cssRules = [ ...rules.slice(0, index), { cssText: rule }, ...rules.slice(index + 1) ]
          //   }
          // }
          delete: function _delete(index) {
            // we insert a blank rule when 'deleting' so previously returned indexes remain stable
            return this.replace(index, "");
          },
          flush: function flush() {
            if (isBrowser) {
              this.tags.forEach(function(tag) {
                return tag.parentNode.removeChild(tag);
              });
              this.tags = [];
              this.sheet = null;
              this.ctr = 0;
              // todo - look for remnants in document.styleSheets
            } else {
              // simpler on server
              this.sheet.cssRules = [];
            }
            this.injected = false;
          },
          rules: function rules() {
            if (!isBrowser) {
              return this.sheet.cssRules;
            }
            var arr = [];
            this.tags.forEach(function(tag) {
              return arr.splice.apply(
                arr,
                [arr.length, 0].concat(
                  _toConsumableArray(Array.from(sheetForTag(tag).cssRules)),
                ),
              );
            });
            return arr;
          },
        });

        /***/
      },

    /***/ "./node_modules/glamorous/dist/glamorous.esm.js":
      /*!******************************************************!*\
  !*** ./node_modules/glamorous/dist/glamorous.esm.js ***!
  \******************************************************/
      /*! exports provided: default, ThemeProvider, withTheme, A, Abbr, Acronym, Address, Applet, Area, Article, Aside, Audio, B, Base, Basefont, Bdi, Bdo, Bgsound, Big, Blink, Blockquote, Body, Br, Button, Canvas, Caption, Center, Cite, Code, Col, Colgroup, Command, Content, Data, Datalist, Dd, Del, Details, Dfn, Dialog, Dir, Div, Dl, Dt, Element, Em, Embed, Fieldset, Figcaption, Figure, Font, Footer, Form, Frame, Frameset, H1, H2, H3, H4, H5, H6, Head, Header, Hgroup, Hr, Html, I, Iframe, Image, Img, Input, Ins, Isindex, Kbd, Keygen, Label, Legend, Li, Link, Listing, Main, MapTag, Mark, Marquee, MathTag, Menu, Menuitem, Meta, Meter, Multicol, Nav, Nextid, Nobr, Noembed, Noframes, Noscript, ObjectTag, Ol, Optgroup, Option, Output, P, Param, Picture, Plaintext, Pre, Progress, Q, Rb, Rbc, Rp, Rt, Rtc, Ruby, S, Samp, Script, Section, Select, Shadow, Slot, Small, Source, Spacer, Span, Strike, Strong, Style, Sub, Summary, Sup, Svg, Table, Tbody, Td, Template, Textarea, Tfoot, Th, Thead, Time, Title, Tr, Track, Tt, U, Ul, Var, Video, Wbr, Xmp, AltGlyph, AltGlyphDef, AltGlyphItem, Animate, AnimateColor, AnimateMotion, AnimateTransform, Animation, Circle, ClipPath, ColorProfile, Cursor, Defs, Desc, Discard, Ellipse, FeBlend, FeColorMatrix, FeComponentTransfer, FeComposite, FeConvolveMatrix, FeDiffuseLighting, FeDisplacementMap, FeDistantLight, FeDropShadow, FeFlood, FeFuncA, FeFuncB, FeFuncG, FeFuncR, FeGaussianBlur, FeImage, FeMerge, FeMergeNode, FeMorphology, FeOffset, FePointLight, FeSpecularLighting, FeSpotLight, FeTile, FeTurbulence, Filter, FontFace, FontFaceFormat, FontFaceName, FontFaceSrc, FontFaceUri, ForeignObject, G, Glyph, GlyphRef, Handler, Hatch, Hatchpath, Hkern, Line, LinearGradient, Listener, Marker, Mask, Mesh, Meshgradient, Meshpatch, Meshrow, Metadata, MissingGlyph, Mpath, Path, Pattern, Polygon, Polyline, Prefetch, RadialGradient, Rect, SetTag, SolidColor, Solidcolor, Stop, Switch, SymbolTag, Tbreak, Text, TextArea, TextPath, Tref, Tspan, Unknown, Use, View, Vkern */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "ThemeProvider",
          function() {
            return ThemeProvider;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "withTheme",
          function() {
            return withTheme;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "A",
          function() {
            return A;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Abbr",
          function() {
            return Abbr;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Acronym",
          function() {
            return Acronym;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Address",
          function() {
            return Address;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Applet",
          function() {
            return Applet;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Area",
          function() {
            return Area;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Article",
          function() {
            return Article;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Aside",
          function() {
            return Aside;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Audio",
          function() {
            return Audio;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "B",
          function() {
            return B;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Base",
          function() {
            return Base;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Basefont",
          function() {
            return Basefont;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Bdi",
          function() {
            return Bdi;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Bdo",
          function() {
            return Bdo;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Bgsound",
          function() {
            return Bgsound;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Big",
          function() {
            return Big;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Blink",
          function() {
            return Blink;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Blockquote",
          function() {
            return Blockquote;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Body",
          function() {
            return Body;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Br",
          function() {
            return Br;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Button",
          function() {
            return Button;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Canvas",
          function() {
            return Canvas;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Caption",
          function() {
            return Caption;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Center",
          function() {
            return Center;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Cite",
          function() {
            return Cite;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Code",
          function() {
            return Code;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Col",
          function() {
            return Col;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Colgroup",
          function() {
            return Colgroup;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Command",
          function() {
            return Command;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Content",
          function() {
            return Content;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Data",
          function() {
            return Data;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Datalist",
          function() {
            return Datalist;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Dd",
          function() {
            return Dd;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Del",
          function() {
            return Del;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Details",
          function() {
            return Details;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Dfn",
          function() {
            return Dfn;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Dialog",
          function() {
            return Dialog;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Dir",
          function() {
            return Dir;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Div",
          function() {
            return Div;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Dl",
          function() {
            return Dl;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Dt",
          function() {
            return Dt;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Element",
          function() {
            return Element;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Em",
          function() {
            return Em;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Embed",
          function() {
            return Embed;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Fieldset",
          function() {
            return Fieldset;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Figcaption",
          function() {
            return Figcaption;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Figure",
          function() {
            return Figure;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Font",
          function() {
            return Font;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Footer",
          function() {
            return Footer;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Form",
          function() {
            return Form;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Frame",
          function() {
            return Frame;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Frameset",
          function() {
            return Frameset;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "H1",
          function() {
            return H1;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "H2",
          function() {
            return H2;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "H3",
          function() {
            return H3;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "H4",
          function() {
            return H4;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "H5",
          function() {
            return H5;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "H6",
          function() {
            return H6;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Head",
          function() {
            return Head;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Header",
          function() {
            return Header;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Hgroup",
          function() {
            return Hgroup;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Hr",
          function() {
            return Hr;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Html",
          function() {
            return Html;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "I",
          function() {
            return I;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Iframe",
          function() {
            return Iframe;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Image",
          function() {
            return Image;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Img",
          function() {
            return Img;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Input",
          function() {
            return Input;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Ins",
          function() {
            return Ins;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Isindex",
          function() {
            return Isindex;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Kbd",
          function() {
            return Kbd;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Keygen",
          function() {
            return Keygen;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Label",
          function() {
            return Label;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Legend",
          function() {
            return Legend;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Li",
          function() {
            return Li;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Link",
          function() {
            return Link;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Listing",
          function() {
            return Listing;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Main",
          function() {
            return Main;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "MapTag",
          function() {
            return MapTag;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Mark",
          function() {
            return Mark;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Marquee",
          function() {
            return Marquee;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "MathTag",
          function() {
            return MathTag;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Menu",
          function() {
            return Menu;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Menuitem",
          function() {
            return Menuitem;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Meta",
          function() {
            return Meta;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Meter",
          function() {
            return Meter;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Multicol",
          function() {
            return Multicol;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Nav",
          function() {
            return Nav;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Nextid",
          function() {
            return Nextid;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Nobr",
          function() {
            return Nobr;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Noembed",
          function() {
            return Noembed;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Noframes",
          function() {
            return Noframes;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Noscript",
          function() {
            return Noscript;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "ObjectTag",
          function() {
            return ObjectTag;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Ol",
          function() {
            return Ol;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Optgroup",
          function() {
            return Optgroup;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Option",
          function() {
            return Option;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Output",
          function() {
            return Output;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "P",
          function() {
            return P;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Param",
          function() {
            return Param;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Picture",
          function() {
            return Picture;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Plaintext",
          function() {
            return Plaintext;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Pre",
          function() {
            return Pre;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Progress",
          function() {
            return Progress;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Q",
          function() {
            return Q;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Rb",
          function() {
            return Rb;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Rbc",
          function() {
            return Rbc;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Rp",
          function() {
            return Rp;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Rt",
          function() {
            return Rt;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Rtc",
          function() {
            return Rtc;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Ruby",
          function() {
            return Ruby;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "S",
          function() {
            return S;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Samp",
          function() {
            return Samp;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Script",
          function() {
            return Script;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Section",
          function() {
            return Section;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Select",
          function() {
            return Select;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Shadow",
          function() {
            return Shadow;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Slot",
          function() {
            return Slot;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Small",
          function() {
            return Small;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Source",
          function() {
            return Source;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Spacer",
          function() {
            return Spacer;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Span",
          function() {
            return Span;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Strike",
          function() {
            return Strike;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Strong",
          function() {
            return Strong;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Style",
          function() {
            return Style;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Sub",
          function() {
            return Sub;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Summary",
          function() {
            return Summary;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Sup",
          function() {
            return Sup;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Svg",
          function() {
            return Svg;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Table",
          function() {
            return Table;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Tbody",
          function() {
            return Tbody;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Td",
          function() {
            return Td;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Template",
          function() {
            return Template;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Textarea",
          function() {
            return Textarea;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Tfoot",
          function() {
            return Tfoot;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Th",
          function() {
            return Th;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Thead",
          function() {
            return Thead;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Time",
          function() {
            return Time;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Title",
          function() {
            return Title;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Tr",
          function() {
            return Tr;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Track",
          function() {
            return Track;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Tt",
          function() {
            return Tt;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "U",
          function() {
            return U;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Ul",
          function() {
            return Ul;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Var",
          function() {
            return Var;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Video",
          function() {
            return Video;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Wbr",
          function() {
            return Wbr;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Xmp",
          function() {
            return Xmp;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "AltGlyph",
          function() {
            return AltGlyph;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "AltGlyphDef",
          function() {
            return AltGlyphDef;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "AltGlyphItem",
          function() {
            return AltGlyphItem;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Animate",
          function() {
            return Animate;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "AnimateColor",
          function() {
            return AnimateColor;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "AnimateMotion",
          function() {
            return AnimateMotion;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "AnimateTransform",
          function() {
            return AnimateTransform;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Animation",
          function() {
            return Animation;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Circle",
          function() {
            return Circle;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "ClipPath",
          function() {
            return ClipPath;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "ColorProfile",
          function() {
            return ColorProfile;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Cursor",
          function() {
            return Cursor;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Defs",
          function() {
            return Defs;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Desc",
          function() {
            return Desc;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Discard",
          function() {
            return Discard;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Ellipse",
          function() {
            return Ellipse;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeBlend",
          function() {
            return FeBlend;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeColorMatrix",
          function() {
            return FeColorMatrix;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeComponentTransfer",
          function() {
            return FeComponentTransfer;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeComposite",
          function() {
            return FeComposite;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeConvolveMatrix",
          function() {
            return FeConvolveMatrix;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeDiffuseLighting",
          function() {
            return FeDiffuseLighting;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeDisplacementMap",
          function() {
            return FeDisplacementMap;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeDistantLight",
          function() {
            return FeDistantLight;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeDropShadow",
          function() {
            return FeDropShadow;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeFlood",
          function() {
            return FeFlood;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeFuncA",
          function() {
            return FeFuncA;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeFuncB",
          function() {
            return FeFuncB;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeFuncG",
          function() {
            return FeFuncG;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeFuncR",
          function() {
            return FeFuncR;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeGaussianBlur",
          function() {
            return FeGaussianBlur;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeImage",
          function() {
            return FeImage;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeMerge",
          function() {
            return FeMerge;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeMergeNode",
          function() {
            return FeMergeNode;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeMorphology",
          function() {
            return FeMorphology;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeOffset",
          function() {
            return FeOffset;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FePointLight",
          function() {
            return FePointLight;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeSpecularLighting",
          function() {
            return FeSpecularLighting;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeSpotLight",
          function() {
            return FeSpotLight;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeTile",
          function() {
            return FeTile;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FeTurbulence",
          function() {
            return FeTurbulence;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Filter",
          function() {
            return Filter;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FontFace",
          function() {
            return FontFace;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FontFaceFormat",
          function() {
            return FontFaceFormat;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FontFaceName",
          function() {
            return FontFaceName;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FontFaceSrc",
          function() {
            return FontFaceSrc;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "FontFaceUri",
          function() {
            return FontFaceUri;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "ForeignObject",
          function() {
            return ForeignObject;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "G",
          function() {
            return G;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Glyph",
          function() {
            return Glyph;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "GlyphRef",
          function() {
            return GlyphRef;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Handler",
          function() {
            return Handler;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Hatch",
          function() {
            return Hatch;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Hatchpath",
          function() {
            return Hatchpath;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Hkern",
          function() {
            return Hkern;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Line",
          function() {
            return Line;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "LinearGradient",
          function() {
            return LinearGradient;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Listener",
          function() {
            return Listener;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Marker",
          function() {
            return Marker;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Mask",
          function() {
            return Mask;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Mesh",
          function() {
            return Mesh;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Meshgradient",
          function() {
            return Meshgradient;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Meshpatch",
          function() {
            return Meshpatch;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Meshrow",
          function() {
            return Meshrow;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Metadata",
          function() {
            return Metadata;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "MissingGlyph",
          function() {
            return MissingGlyph;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Mpath",
          function() {
            return Mpath;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Path",
          function() {
            return Path;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Pattern",
          function() {
            return Pattern;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Polygon",
          function() {
            return Polygon;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Polyline",
          function() {
            return Polyline;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Prefetch",
          function() {
            return Prefetch;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "RadialGradient",
          function() {
            return RadialGradient;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Rect",
          function() {
            return Rect;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "SetTag",
          function() {
            return SetTag;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "SolidColor",
          function() {
            return SolidColor;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Solidcolor",
          function() {
            return Solidcolor;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Stop",
          function() {
            return Stop;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Switch",
          function() {
            return Switch;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "SymbolTag",
          function() {
            return SymbolTag;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Tbreak",
          function() {
            return Tbreak;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Text",
          function() {
            return Text;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "TextArea",
          function() {
            return TextArea;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "TextPath",
          function() {
            return TextPath;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Tref",
          function() {
            return Tref;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Tspan",
          function() {
            return Tspan;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Unknown",
          function() {
            return Unknown;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Use",
          function() {
            return Use;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "View",
          function() {
            return View;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Vkern",
          function() {
            return Vkern;
          },
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_0__,
        );
        /* harmony import */ var glamor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! glamor */ "./node_modules/glamor/lib/index.js",
        );
        /* harmony import */ var glamor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          glamor__WEBPACK_IMPORTED_MODULE_1__,
        );

        var htmlTagNames = [
          "a",
          "abbr",
          "acronym",
          "address",
          "applet",
          "area",
          "article",
          "aside",
          "audio",
          "b",
          "base",
          "basefont",
          "bdi",
          "bdo",
          "bgsound",
          "big",
          "blink",
          "blockquote",
          "body",
          "br",
          "button",
          "canvas",
          "caption",
          "center",
          "cite",
          "code",
          "col",
          "colgroup",
          "command",
          "content",
          "data",
          "datalist",
          "dd",
          "del",
          "details",
          "dfn",
          "dialog",
          "dir",
          "div",
          "dl",
          "dt",
          "element",
          "em",
          "embed",
          "fieldset",
          "figcaption",
          "figure",
          "font",
          "footer",
          "form",
          "frame",
          "frameset",
          "h1",
          "h2",
          "h3",
          "h4",
          "h5",
          "h6",
          "head",
          "header",
          "hgroup",
          "hr",
          "html",
          "i",
          "iframe",
          "image",
          "img",
          "input",
          "ins",
          "isindex",
          "kbd",
          "keygen",
          "label",
          "legend",
          "li",
          "link",
          "listing",
          "main",
          "map",
          "mark",
          "marquee",
          "math",
          "menu",
          "menuitem",
          "meta",
          "meter",
          "multicol",
          "nav",
          "nextid",
          "nobr",
          "noembed",
          "noframes",
          "noscript",
          "object",
          "ol",
          "optgroup",
          "option",
          "output",
          "p",
          "param",
          "picture",
          "plaintext",
          "pre",
          "progress",
          "q",
          "rb",
          "rbc",
          "rp",
          "rt",
          "rtc",
          "ruby",
          "s",
          "samp",
          "script",
          "section",
          "select",
          "shadow",
          "slot",
          "small",
          "source",
          "spacer",
          "span",
          "strike",
          "strong",
          "style",
          "sub",
          "summary",
          "sup",
          "svg",
          "table",
          "tbody",
          "td",
          "template",
          "textarea",
          "tfoot",
          "th",
          "thead",
          "time",
          "title",
          "tr",
          "track",
          "tt",
          "u",
          "ul",
          "var",
          "video",
          "wbr",
          "xmp",
        ];
        var svgTagNames = [
          "a",
          "altGlyph",
          "altGlyphDef",
          "altGlyphItem",
          "animate",
          "animateColor",
          "animateMotion",
          "animateTransform",
          "animation",
          "audio",
          "canvas",
          "circle",
          "clipPath",
          "color-profile",
          "cursor",
          "defs",
          "desc",
          "discard",
          "ellipse",
          "feBlend",
          "feColorMatrix",
          "feComponentTransfer",
          "feComposite",
          "feConvolveMatrix",
          "feDiffuseLighting",
          "feDisplacementMap",
          "feDistantLight",
          "feDropShadow",
          "feFlood",
          "feFuncA",
          "feFuncB",
          "feFuncG",
          "feFuncR",
          "feGaussianBlur",
          "feImage",
          "feMerge",
          "feMergeNode",
          "feMorphology",
          "feOffset",
          "fePointLight",
          "feSpecularLighting",
          "feSpotLight",
          "feTile",
          "feTurbulence",
          "filter",
          "font",
          "font-face",
          "font-face-format",
          "font-face-name",
          "font-face-src",
          "font-face-uri",
          "foreignObject",
          "g",
          "glyph",
          "glyphRef",
          "handler",
          "hatch",
          "hatchpath",
          "hkern",
          "iframe",
          "image",
          "line",
          "linearGradient",
          "listener",
          "marker",
          "mask",
          "mesh",
          "meshgradient",
          "meshpatch",
          "meshrow",
          "metadata",
          "missing-glyph",
          "mpath",
          "path",
          "pattern",
          "polygon",
          "polyline",
          "prefetch",
          "radialGradient",
          "rect",
          "script",
          "set",
          "solidColor",
          "solidcolor",
          "stop",
          "style",
          "svg",
          "switch",
          "symbol",
          "tbreak",
          "text",
          "textArea",
          "textPath",
          "title",
          "tref",
          "tspan",
          "unknown",
          "use",
          "video",
          "view",
          "vkern",
        ];
        var domElements = htmlTagNames
          .concat(svgTagNames)
          .filter(function(tag, index, array) {
            return array.indexOf(tag) === index;
          });

        var CHANNEL = "__glamorous__"; /* istanbul ignore next */

        var isPreact = false;

        var _PropTypes = void 0;

        /* istanbul ignore next */
        if (isPreact) {
          if (!react__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes) {
            _PropTypes = function PropTypes() {
              return _PropTypes;
            };

            [
              "array",
              "bool",
              "func",
              "number",
              "object",
              "string",
              "symbol",
              "any",
              "arrayOf",
              "element",
              "instanceOf",
              "node",
              "objectOf",
              "oneOf",
              "oneOfType",
              "shape",
              "exact",
            ].forEach(function(type) {
              _PropTypes[type] = _PropTypes;
            });
          }
          // copied from preact-compat
          /* eslint-disable no-eq-null, eqeqeq, consistent-return */
          if (!react__WEBPACK_IMPORTED_MODULE_0___default.a.Children) {
            var Children = {
              map: function map(children, fn, ctx) {
                if (children == null) {
                  return null;
                }
                children = Children.toArray(children);
                if (ctx && ctx !== children) {
                  fn = fn.bind(ctx);
                }
                return children.map(fn);
              },
              forEach: function forEach(children, fn, ctx) {
                if (children == null) {
                  return null;
                }
                children = Children.toArray(children);
                if (ctx && ctx !== children) {
                  fn = fn.bind(ctx);
                }
                children.forEach(fn);
              },
              count: function count(children) {
                return (children && children.length) || 0;
              },
              only: function only(children) {
                children = Children.toArray(children);
                if (children.length !== 1) {
                  throw new Error("Children.only() expects only one child.");
                }
                return children[0];
              },
              toArray: function toArray(children) {
                if (children == null) {
                  return [];
                }
                return [].concat(children);
              },
            };
            react__WEBPACK_IMPORTED_MODULE_0___default.a.Children = Children;
          }
          /* eslint-enable no-eq-null, eqeqeq, consistent-return */
        } else if (
          parseFloat(
            react__WEBPACK_IMPORTED_MODULE_0___default.a.version.slice(0, 4),
          ) >= 15.5
        ) {
          /* istanbul ignore next */
          try {
            _PropTypes = __webpack_require__(
              /*! prop-types */ "./node_modules/prop-types/index.js",
            );
            /* istanbul ignore next */
          } catch (error) {
            // ignore
          }
        }
        /* istanbul ignore next */
        _PropTypes =
          _PropTypes || react__WEBPACK_IMPORTED_MODULE_0___default.a.PropTypes;

        /*
eslint
  import/no-mutable-exports:0,
  import/prefer-default-export:0,
  react/no-deprecated:0
 */

        var classCallCheck = function(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        };

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];

              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }

            return target;
          };

        var inherits = function(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }

          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        };

        var objectWithoutProperties = function(obj, keys) {
          var target = {};

          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }

          return target;
        };

        var possibleConstructorReturn = function(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }

          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        };

        function generateWarningMessage(Comp) {
          var componentName =
            Comp.displayName || Comp.name || "FunctionComponent";
          // eslint-disable-next-line max-len
          return (
            'glamorous warning: Expected component called "' +
            componentName +
            '" which uses withTheme to be within a ThemeProvider but none was found.'
          );
        }

        function withTheme(ComponentToTheme) {
          var _defaultContextTypes;

          var _ref =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {},
            _ref$noWarn = _ref.noWarn,
            noWarn = _ref$noWarn === undefined ? false : _ref$noWarn,
            _ref$createElement = _ref.createElement,
            createElement =
              _ref$createElement === undefined ? true : _ref$createElement;

          var ThemedComponent = (function(_React$Component) {
            inherits(ThemedComponent, _React$Component);

            function ThemedComponent() {
              var _temp, _this, _ret;

              classCallCheck(this, ThemedComponent);

              for (
                var _len = arguments.length, args = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              return (
                (_ret = ((_temp = ((_this = possibleConstructorReturn(
                  this,
                  _React$Component.call.apply(
                    _React$Component,
                    [this].concat(args),
                  ),
                )),
                _this)),
                (_this.warned = noWarn),
                (_this.state = { theme: {} }),
                (_this.setTheme = function(theme) {
                  return _this.setState({ theme: theme });
                }),
                _temp)),
                possibleConstructorReturn(_this, _ret)
              );
            }

            // eslint-disable-next-line complexity
            ThemedComponent.prototype.componentWillMount = function componentWillMount() {
              if (!this.context[CHANNEL]) {
                if (true && !this.warned) {
                  this.warned = true;
                  // eslint-disable-next-line no-console
                  console.warn(generateWarningMessage(ComponentToTheme));
                }
              }
              var theme = this.props.theme;

              if (this.context[CHANNEL]) {
                // if a theme is provided via props,
                // it takes precedence over context
                this.setTheme(theme ? theme : this.context[CHANNEL].getState());
              } else {
                this.setTheme(theme || {});
              }
            };

            ThemedComponent.prototype.componentWillReceiveProps = function componentWillReceiveProps(
              nextProps,
            ) {
              if (this.props.theme !== nextProps.theme) {
                this.setTheme(nextProps.theme);
              }
            };

            ThemedComponent.prototype.componentDidMount = function componentDidMount() {
              if (this.context[CHANNEL] && !this.props.theme) {
                // subscribe to future theme changes
                this.subscriptionId = this.context[CHANNEL].subscribe(
                  this.setTheme,
                );
              }
            };

            ThemedComponent.prototype.componentWillUnmount = function componentWillUnmount() {
              // cleanup subscription
              this.subscriptionId &&
                this.context[CHANNEL].unsubscribe(this.subscriptionId);
            };

            ThemedComponent.prototype.render = function render() {
              if (createElement) {
                return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                  ComponentToTheme,
                  _extends({}, this.props, this.state),
                );
              } else {
                // this allows us to effectively use the GlamorousComponent
                // as our `render` method without going through lifecycle hooks.
                // Also allows us to forward the context in the scenario where
                // a user wants to add more context.
                // eslint-disable-next-line babel/new-cap
                return ComponentToTheme.call(
                  this,
                  _extends({}, this.props, this.state),
                  this.context,
                );
              }
            };

            return ThemedComponent;
          })(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);

          true
            ? (ThemedComponent.propTypes = {
                theme: _PropTypes.object,
              })
            : undefined;

          var defaultContextTypes = ((_defaultContextTypes = {}),
          (_defaultContextTypes[CHANNEL] = _PropTypes.object),
          _defaultContextTypes);

          var userDefinedContextTypes = null;

          // configure the contextTypes to be settable by the user,
          // however also retaining the glamorous channel.
          Object.defineProperty(ThemedComponent, "contextTypes", {
            enumerable: true,
            configurable: true,
            set: function set$$1(value) {
              userDefinedContextTypes = value;
            },
            get: function get$$1() {
              // if the user has provided a contextTypes definition,
              // merge the default context types with the provided ones.
              if (userDefinedContextTypes) {
                return _extends(
                  {},
                  defaultContextTypes,
                  userDefinedContextTypes,
                );
              }
              return defaultContextTypes;
            },
          });

          return ThemedComponent;
        }

        var isFunction_1 = isFunction;

        var toString = Object.prototype.toString;

        function isFunction(fn) {
          var string = toString.call(fn);
          return (
            string === "[object Function]" ||
            (typeof fn === "function" && string !== "[object RegExp]") ||
            (typeof window !== "undefined" &&
              // IE8 and below
              (fn === window.setTimeout ||
                fn === window.alert ||
                fn === window.confirm ||
                fn === window.prompt))
          );
        }

        /*!
         * isobject <https://github.com/jonschlinkert/isobject>
         *
         * Copyright (c) 2014-2017, Jon Schlinkert.
         * Released under the MIT License.
         */

        var isobject = function isObject(val) {
          return (
            val != null &&
            typeof val === "object" &&
            Array.isArray(val) === false
          );
        };

        function isObjectObject(o) {
          return (
            isobject(o) === true &&
            Object.prototype.toString.call(o) === "[object Object]"
          );
        }

        var isPlainObject = function isPlainObject(o) {
          var ctor, prot;

          if (isObjectObject(o) === false) return false;

          // If has modified constructor
          ctor = o.constructor;
          if (typeof ctor !== "function") return false;

          // If has modified prototype
          prot = ctor.prototype;
          if (isObjectObject(prot) === false) return false;

          // If constructor does not have an Object-specific method
          if (prot.hasOwnProperty("isPrototypeOf") === false) {
            return false;
          }

          // Most likely a plain Object
          return true;
        };

        function createBroadcast(initialState) {
          var listeners = {};
          var id = 1;
          var _state = initialState;

          function getState() {
            return _state;
          }

          function setState(state) {
            _state = state;
            var keys = Object.keys(listeners);
            var i = 0;
            var len = keys.length;
            for (; i < len; i++) {
              // if a listener gets unsubscribed during setState we just skip it
              if (listeners[keys[i]]) {
                listeners[keys[i]](state);
              }
            }
          }

          // subscribe to changes and return the subscriptionId
          function subscribe(listener) {
            if (typeof listener !== "function") {
              throw new Error("listener must be a function.");
            }
            var currentId = id;
            listeners[currentId] = listener;
            id += 1;
            return currentId;
          }

          // remove subscription by removing the listener function
          function unsubscribe(id) {
            listeners[id] = undefined;
          }

          return {
            getState: getState,
            setState: setState,
            subscribe: subscribe,
            unsubscribe: unsubscribe,
          };
        }

        var _ThemeProvider$childC, _ThemeProvider$contex;

        /**
         * This is a component which will provide a theme to the entire tree
         * via context and event listener
         * (because pure components block context updates)
         * inspired by the styled-components implementation
         * https://github.com/styled-components/styled-components
         * @param {Object} theme the theme object..
         */

        var ThemeProvider = (function(_React$Component) {
          inherits(ThemeProvider, _React$Component);

          function ThemeProvider() {
            var _temp, _this, _ret;

            classCallCheck(this, ThemeProvider);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = possibleConstructorReturn(
                this,
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args),
                ),
              )),
              _this)),
              (_this.setOuterTheme = function(theme) {
                _this.outerTheme = theme;
                if (_this.broadcast !== undefined) {
                  _this.publishTheme();
                }
              }),
              _temp)),
              possibleConstructorReturn(_this, _ret)
            );
          }

          // create theme, by merging with outer theme, if present
          ThemeProvider.prototype.getTheme = function getTheme(passedTheme) {
            var theme = passedTheme || this.props.theme;
            if (isFunction_1(theme)) {
              var mergedTheme = theme(this.outerTheme);
              if (!isPlainObject(mergedTheme)) {
                throw new Error(
                  "[ThemeProvider] Please return an object from your theme function, " +
                    "i.e. theme={() => ({})}!",
                );
              }
              return mergedTheme;
            }
            return _extends({}, this.outerTheme, theme);
          };

          ThemeProvider.prototype.getChildContext = function getChildContext() {
            var _ref;

            return (_ref = {}), (_ref[CHANNEL] = this.broadcast), _ref;
          };

          ThemeProvider.prototype.publishTheme = function publishTheme(theme) {
            this.broadcast.setState(this.getTheme(theme));
          };

          ThemeProvider.prototype.componentDidMount = function componentDidMount() {
            // create a new subscription for keeping track of outer theme, if present
            if (this.context[CHANNEL]) {
              this.subscriptionId = this.context[CHANNEL].subscribe(
                this.setOuterTheme,
              );
            }
          };

          ThemeProvider.prototype.componentWillMount = function componentWillMount() {
            // set broadcast state by merging outer theme with own
            if (this.context[CHANNEL]) {
              this.setOuterTheme(this.context[CHANNEL].getState());
            }
            this.broadcast = createBroadcast(this.getTheme(this.props.theme));
          };

          ThemeProvider.prototype.componentWillReceiveProps = function componentWillReceiveProps(
            nextProps,
          ) {
            if (this.props.theme !== nextProps.theme) {
              this.publishTheme(nextProps.theme);
            }
          };

          ThemeProvider.prototype.componentWillUnmount = function componentWillUnmount() {
            this.subscriptionId &&
              this.context[CHANNEL].unsubscribe(this.subscriptionId);
          };

          ThemeProvider.prototype.render = function render() {
            return this.props.children
              ? react__WEBPACK_IMPORTED_MODULE_0___default.a.Children.only(
                  this.props.children,
                )
              : null;
          };

          return ThemeProvider;
        })(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);

        ThemeProvider.childContextTypes = ((_ThemeProvider$childC = {}),
        (_ThemeProvider$childC[CHANNEL] = _PropTypes.object.isRequired),
        _ThemeProvider$childC);

        ThemeProvider.contextTypes = ((_ThemeProvider$contex = {}),
        (_ThemeProvider$contex[CHANNEL] = _PropTypes.object),
        _ThemeProvider$contex);

        true
          ? (ThemeProvider.propTypes = {
              theme: _PropTypes.oneOfType([_PropTypes.object, _PropTypes.func])
                .isRequired,
              children: _PropTypes.node,
            })
          : undefined;

        /**
         * This function takes a className string and gets all the
         * associated glamor styles. It's used to merge glamor styles
         * from a className to make sure that specificity is not
         * a problem when passing a className to a component.
         * @param {String} [className=''] the className string
         * @return {Object} { glamorStyles, glamorlessClassName }
         *   - glamorStyles is an array of all the glamor styles objects
         *   - glamorlessClassName is the rest of the className string
         *     without the glamor classNames
         */
        function extractGlamorStyles(className) {
          var glamorlessClassName = [];
          var glamorStyles = [];
          className
            .toString()
            .split(" ")
            .forEach(function(name) {
              if (
                glamor__WEBPACK_IMPORTED_MODULE_1__["styleSheet"].registered[
                  name.substring(4)
                ] === undefined
              ) {
                glamorlessClassName.push(name);
              } else {
                var style = buildGlamorSrcFromClassName(name);
                glamorStyles.push(style);
              }
            });

          return {
            glamorlessClassName: glamorlessClassName,
            glamorStyles: glamorStyles,
          };
        }

        /** Glamor's css function returns an object with the shape
         *
         * {
         *   [`data-css-${hash}`]: '',
         *   toString() { return `css-${hash}` }
         * }
         *
         * Whenever glamor's build function encounters an object with
         * this shape it just pulls the resulting styles from the cache.
         *
         * note: the toString method is not needed to qualify the shape
         **/
        function buildGlamorSrcFromClassName(className) {
          var _ref;

          return (_ref = {}), (_ref["data-" + className] = ""), _ref;
        }

        function getGlamorClassName(_ref2) {
          var styles = _ref2.styles,
            props = _ref2.props,
            cssOverrides = _ref2.cssOverrides,
            cssProp = _ref2.cssProp,
            context = _ref2.context,
            displayName = _ref2.displayName;

          var _handleStyles = handleStyles(
              [].concat(styles, [props.className, cssOverrides, cssProp]),
              props,
              context,
            ),
            mappedArgs = _handleStyles.mappedArgs,
            nonGlamorClassNames = _handleStyles.nonGlamorClassNames;
          // eslint-disable-next-line max-len

          var isDev = true || false;
          var devRules = isDev ? { label: displayName } : null;
          var glamorClassName = glamor__WEBPACK_IMPORTED_MODULE_1__["css"]
            .apply(undefined, [devRules].concat(mappedArgs))
            .toString();
          var extras = nonGlamorClassNames.join(" ").trim();
          return (glamorClassName + " " + extras).trim();
        }

        // this next function is on a "hot" code-path
        // so it's pretty complex to make sure it's fast.
        // eslint-disable-next-line complexity
        function handleStyles(styles, props, context) {
          var current = void 0;
          var mappedArgs = [];
          var nonGlamorClassNames = [];
          for (var i = 0; i < styles.length; i++) {
            current = styles[i];
            while (typeof current === "function") {
              current = current(props, context);
            }
            if (typeof current === "string") {
              var _extractGlamorStyles = extractGlamorStyles(current),
                glamorStyles = _extractGlamorStyles.glamorStyles,
                glamorlessClassName = _extractGlamorStyles.glamorlessClassName;

              mappedArgs.push.apply(mappedArgs, glamorStyles);
              nonGlamorClassNames.push.apply(
                nonGlamorClassNames,
                glamorlessClassName,
              );
            } else if (Array.isArray(current)) {
              var recursed = handleStyles(current, props, context);
              mappedArgs.push.apply(mappedArgs, recursed.mappedArgs);
              nonGlamorClassNames.push.apply(
                nonGlamorClassNames,
                recursed.nonGlamorClassNames,
              );
            } else {
              mappedArgs.push(current);
            }
          }
          return {
            mappedArgs: mappedArgs,
            nonGlamorClassNames: nonGlamorClassNames,
          };
        }

        /*
         * This is a relatively small abstraction that's ripe for open sourcing.
         * Documentation is in the README.md
         */

        function createGlamorous(splitProps) {
          return glamorous;

          /**
           * This is the main export and the function that people
           * interact with most directly.
           *
           * It accepts a component which can be a string or
           * a React Component and returns
           * a "glamorousComponentFactory"
           * @param {String|ReactComponent} comp the component to render
           * @param {Object} options helpful info for the GlamorousComponents
           * @return {Function} the glamorousComponentFactory
           */
          function glamorous(comp) {
            var config =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {};
            var rootEl = config.rootEl,
              displayName = config.displayName,
              shouldClassNameUpdate = config.shouldClassNameUpdate,
              _config$filterProps = config.filterProps,
              filterProps =
                _config$filterProps === undefined ? [] : _config$filterProps,
              _config$forwardProps = config.forwardProps,
              forwardProps =
                _config$forwardProps === undefined ? [] : _config$forwardProps,
              _config$propsAreCssOv = config.propsAreCssOverrides,
              propsAreCssOverrides =
                _config$propsAreCssOv === undefined
                  ? comp.propsAreCssOverrides
                  : _config$propsAreCssOv,
              basePropsToApply = config.withProps;

            Object.assign(glamorousComponentFactory, {
              withConfig: withConfig,
            });
            return glamorousComponentFactory;

            function withConfig(newConfig) {
              return glamorous(comp, _extends({}, config, newConfig));
            }

            /**
             * This returns a React Component that renders the comp (closure)
             * with a className based on the given glamor styles object(s)
             * @param {...Object|Function} styles the styles to create with glamor.
             *   If any of these are functions, they are invoked with the component
             *   props and the return value is used.
             * @return {ReactComponent} the ReactComponent function
             */
            function glamorousComponentFactory() {
              for (
                var _len = arguments.length, styles = Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                styles[_key] = arguments[_key];
              }

              /**
               * This is a component which will render the comp (closure)
               * with the glamorous styles (closure). Forwards any valid
               * props to the underlying component.
               */
              var GlamorousComponent = withTheme(
                function(props, context) {
                  props = getPropsToApply(
                    GlamorousComponent.propsToApply,
                    {},
                    props,
                    context,
                  );
                  var updateClassName = shouldUpdate(
                    props,
                    context,
                    this.previous,
                  );

                  if (shouldClassNameUpdate) {
                    this.previous = { props: props, context: context };
                  }

                  var _splitProps = splitProps(props, GlamorousComponent),
                    toForward = _splitProps.toForward,
                    cssOverrides = _splitProps.cssOverrides,
                    cssProp = _splitProps.cssProp;

                  // create className to apply

                  this.className = updateClassName
                    ? getGlamorClassName({
                        styles: GlamorousComponent.styles,
                        props: props,
                        cssOverrides: cssOverrides,
                        cssProp: cssProp,
                        context: context,
                        displayName: GlamorousComponent.displayName,
                      })
                    : this.className;

                  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                    GlamorousComponent.comp,
                    _extends(
                      {
                        // if innerRef is forwarded we don't want to apply it here
                        ref:
                          "innerRef" in toForward ? undefined : props.innerRef,
                      },
                      toForward,
                      {
                        className: this.className,
                      },
                    ),
                  );
                },
                { noWarn: true, createElement: false },
              );

              true
                ? (GlamorousComponent.propTypes = {
                    // className accepts an object due to glamor's css function
                    // returning an object with a toString method that gives the className
                    className: _PropTypes.oneOfType([
                      _PropTypes.string,
                      _PropTypes.object,
                    ]),
                    cssOverrides: _PropTypes.object,
                    innerRef: _PropTypes.oneOfType([
                      _PropTypes.func,
                      _PropTypes.object,
                    ]),
                    glam: _PropTypes.object,
                  })
                : undefined;

              function shouldUpdate(props, context, previous) {
                // exiting early so components which do not use this
                // optimization are not penalized by hanging onto
                // references to previous props and context
                if (!shouldClassNameUpdate) {
                  return true;
                }
                var update = true;
                if (previous) {
                  if (
                    !shouldClassNameUpdate(
                      previous.props,
                      props,
                      previous.context,
                      context,
                    )
                  ) {
                    update = false;
                  }
                }

                return update;
              }

              Object.assign(
                GlamorousComponent,
                getGlamorousComponentMetadata({
                  comp: comp,
                  styles: styles,
                  rootEl: rootEl,
                  filterProps: filterProps,
                  forwardProps: forwardProps,
                  displayName: displayName,
                  propsToApply: basePropsToApply,
                }),
                {
                  isGlamorousComponent: true,
                  propsAreCssOverrides: propsAreCssOverrides,
                  withComponent: function(newComp) {
                    var options =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : {};
                    var fwp = GlamorousComponent.forwardProps,
                      flp = GlamorousComponent.filterProps,
                      componentProperties = objectWithoutProperties(
                        GlamorousComponent,
                        ["forwardProps", "filterProps"],
                      );

                    return glamorous(
                      _extends({}, componentProperties, {
                        comp: newComp,
                        rootEl: getRootEl(newComp),
                      }),
                      _extends(
                        {
                          // allows the forwardProps and filterProps to be overridden
                          forwardProps: fwp,
                          filterProps: flp,
                        },
                        options,
                      ),
                    )();
                  },
                  withProps: function() {
                    for (
                      var _len2 = arguments.length,
                        propsToApply = Array(_len2),
                        _key2 = 0;
                      _key2 < _len2;
                      _key2++
                    ) {
                      propsToApply[_key2] = arguments[_key2];
                    }

                    return glamorous(GlamorousComponent, {
                      withProps: propsToApply,
                    })();
                  },
                  withConfig: withConfig,
                },
              );
              return GlamorousComponent;
            }
          }

          function getGlamorousComponentMetadata(_ref) {
            var comp = _ref.comp,
              styles = _ref.styles,
              rootEl = _ref.rootEl,
              filterProps = _ref.filterProps,
              forwardProps = _ref.forwardProps,
              displayName = _ref.displayName,
              basePropsToApply = _ref.propsToApply;

            var componentsComp = comp.comp ? comp.comp : comp;
            var propsToApply = comp.propsToApply
              ? [].concat(comp.propsToApply, arrayify(basePropsToApply))
              : arrayify(basePropsToApply);
            return {
              // join styles together (for anyone doing: glamorous(glamorous.a({}), {}))
              styles: when(comp.styles, styles),
              // keep track of the ultimate rootEl to render (we never
              // actually render anything but
              // the base component, even when people wrap a glamorous
              // component in glamorous
              comp: componentsComp,
              rootEl: rootEl || getRootEl(comp),
              // join forwardProps and filterProps
              // (for anyone doing: glamorous(glamorous.a({}), {}))
              forwardProps: when(comp.forwardProps, forwardProps),
              filterProps: when(comp.filterProps, filterProps),
              // set the displayName to something that's slightly more
              // helpful than `GlamorousComponent` :)
              displayName:
                displayName || "glamorous(" + getDisplayName(comp) + ")",
              // these are props that should be applied to the component at render time
              propsToApply: propsToApply,
            };
          }
        }

        /**
         * reduces the propsToApply given to a single props object
         * @param {Array} propsToApply an array of propsToApply objects:
         *   - object
         *   - array of propsToApply items
         *   - function that accepts the accumulated props and the context
         * @param {Object} accumulator an object to apply props onto
         * @param {Object} props the props that should ultimately take precedence
         * @param {*} context the context object
         * @return {Object} the reduced props
         */
        function getPropsToApply(propsToApply, accumulator, props, context) {
          // using forEach rather than reduce here because the reduce solution
          // effectively did the same thing because we manipulate the `accumulator`
          propsToApply.forEach(function(propsToApplyItem) {
            if (typeof propsToApplyItem === "function") {
              return Object.assign(
                accumulator,
                propsToApplyItem(
                  Object.assign({}, accumulator, props),
                  context,
                ),
              );
            } else if (Array.isArray(propsToApplyItem)) {
              return Object.assign(
                accumulator,
                getPropsToApply(propsToApplyItem, accumulator, props, context),
              );
            }
            return Object.assign(accumulator, propsToApplyItem);
          });
          // props wins
          return Object.assign(accumulator, props);
        }

        function arrayify() {
          var x =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : [];

          return Array.isArray(x) ? x : [x];
        }

        function when(comp, prop) {
          return comp ? comp.concat(prop) : prop;
        }

        function getRootEl(comp) {
          return comp.rootEl ? comp.rootEl : comp.comp || comp;
        }

        function getDisplayName(comp) {
          return typeof comp === "string"
            ? comp
            : comp.displayName || comp.name || "unknown";
        }

        //
        // Main
        //

        function memoize(fn, options) {
          var cache = options && options.cache ? options.cache : cacheDefault;

          var serializer =
            options && options.serializer
              ? options.serializer
              : serializerDefault;

          var strategy =
            options && options.strategy ? options.strategy : strategyDefault;

          return strategy(fn, {
            cache: cache,
            serializer: serializer,
          });
        }

        //
        // Strategy
        //

        function isPrimitive(value) {
          return (
            value == null ||
            typeof value === "number" ||
            typeof value === "boolean"
          ); // || typeof value === "string" 'unsafe' primitive for our needs
        }

        function monadic(fn, cache, serializer, arg) {
          var cacheKey = isPrimitive(arg) ? arg : serializer(arg);

          var computedValue = cache.get(cacheKey);
          if (typeof computedValue === "undefined") {
            computedValue = fn.call(this, arg);
            cache.set(cacheKey, computedValue);
          }

          return computedValue;
        }

        function variadic(fn, cache, serializer) {
          var args = Array.prototype.slice.call(arguments, 3);
          var cacheKey = serializer(args);

          var computedValue = cache.get(cacheKey);
          if (typeof computedValue === "undefined") {
            computedValue = fn.apply(this, args);
            cache.set(cacheKey, computedValue);
          }

          return computedValue;
        }

        function assemble(fn, context, strategy, cache, serialize) {
          return strategy.bind(context, fn, cache, serialize);
        }

        function strategyDefault(fn, options) {
          var strategy = fn.length === 1 ? monadic : variadic;

          return assemble(
            fn,
            this,
            strategy,
            options.cache.create(),
            options.serializer,
          );
        }

        function strategyVariadic(fn, options) {
          var strategy = variadic;

          return assemble(
            fn,
            this,
            strategy,
            options.cache.create(),
            options.serializer,
          );
        }

        function strategyMonadic(fn, options) {
          var strategy = monadic;

          return assemble(
            fn,
            this,
            strategy,
            options.cache.create(),
            options.serializer,
          );
        }

        //
        // Serializer
        //

        function serializerDefault() {
          return JSON.stringify(arguments);
        }

        //
        // Cache
        //

        function ObjectWithoutPrototypeCache() {
          this.cache = Object.create(null);
        }

        ObjectWithoutPrototypeCache.prototype.has = function(key) {
          return key in this.cache;
        };

        ObjectWithoutPrototypeCache.prototype.get = function(key) {
          return this.cache[key];
        };

        ObjectWithoutPrototypeCache.prototype.set = function(key, value) {
          this.cache[key] = value;
        };

        var cacheDefault = {
          create: function create() {
            return new ObjectWithoutPrototypeCache();
          },
        };

        //
        // API
        //

        var src = memoize;
        var strategies = {
          variadic: strategyVariadic,
          monadic: strategyMonadic,
        };
        src.strategies = strategies;

        function unwrapExports(x) {
          return x &&
            x.__esModule &&
            Object.prototype.hasOwnProperty.call(x, "default")
            ? x.default
            : x;
        }

        function createCommonjsModule(fn, module) {
          return (
            (module = { exports: {} }),
            fn(module, module.exports),
            module.exports
          );
        }

        function getCjsExportFromNamespace(n) {
          return (n && n.default) || n;
        }

        var a = [
          "coords",
          "download",
          "href",
          "name",
          "rel",
          "shape",
          "target",
          "type",
          "onClick",
        ];
        var abbr = ["title"];
        var applet = ["alt", "height", "name", "width"];
        var area = [
          "alt",
          "coords",
          "download",
          "href",
          "rel",
          "shape",
          "target",
          "type",
        ];
        var audio = ["controls", "loop", "muted", "preload", "src"];
        var base = ["href", "target"];
        var basefont = ["size"];
        var bdo = ["dir"];
        var blockquote = ["cite"];
        var button = ["disabled", "form", "name", "type", "value"];
        var canvas = ["height", "width"];
        var col = ["span", "width"];
        var colgroup = ["span", "width"];
        var data = ["value"];
        var del = ["cite"];
        var details = ["open"];
        var dfn = ["title"];
        var dialog = ["open"];
        var embed = ["height", "src", "type", "width"];
        var fieldset = ["disabled", "form", "name"];
        var font = ["size"];
        var form = [
          "accept",
          "action",
          "method",
          "name",
          "target",
          "onChange",
          "onInput",
          "onInvalid",
          "onSubmit",
        ];
        var frame = ["name", "scrolling", "src"];
        var frameset = ["cols", "rows"];
        var head = ["profile"];
        var hr = ["size", "width"];
        var html = ["manifest"];
        var iframe = ["height", "name", "sandbox", "scrolling", "src", "width"];
        var img = ["alt", "height", "name", "sizes", "src", "width"];
        var input = [
          "accept",
          "alt",
          "autoCapitalize",
          "autoCorrect",
          "autoSave",
          "checked",
          "defaultChecked",
          "defaultValue",
          "disabled",
          "form",
          "height",
          "list",
          "max",
          "min",
          "multiple",
          "name",
          "onChange",
          "pattern",
          "placeholder",
          "required",
          "results",
          "size",
          "src",
          "step",
          "title",
          "type",
          "value",
          "width",
        ];
        var ins = ["cite"];
        var keygen = ["challenge", "disabled", "form", "name"];
        var label = ["form"];
        var li = ["type", "value"];
        var link = [
          "color",
          "href",
          "integrity",
          "media",
          "nonce",
          "rel",
          "scope",
          "sizes",
          "target",
          "title",
          "type",
        ];
        var map = ["name"];
        var meta = ["content", "name"];
        var meter = ["high", "low", "max", "min", "optimum", "value"];
        var object = ["data", "form", "height", "name", "type", "width"];
        var ol = ["reversed", "start", "type"];
        var optgroup = ["disabled", "label"];
        var option = ["disabled", "label", "selected", "value"];
        var output = ["form", "name"];
        var param = ["name", "type", "value"];
        var pre = ["width"];
        var progress = ["max", "value"];
        var q = ["cite"];
        var script = ["async", "defer", "integrity", "nonce", "src", "type"];
        var select = [
          "defaultValue",
          "disabled",
          "form",
          "multiple",
          "name",
          "onChange",
          "required",
          "size",
          "value",
        ];
        var slot = ["name"];
        var source = ["media", "sizes", "src", "type"];
        var style = ["media", "nonce", "title", "type"];
        var table = ["summary", "width"];
        var td = ["headers", "height", "scope", "width"];
        var textarea = [
          "autoCapitalize",
          "autoCorrect",
          "cols",
          "defaultValue",
          "disabled",
          "form",
          "name",
          "onChange",
          "placeholder",
          "required",
          "rows",
          "value",
          "wrap",
        ];
        var th = ["headers", "height", "scope", "width"];
        var track = ["default", "kind", "label", "src"];
        var ul = ["type"];
        var video = [
          "controls",
          "height",
          "loop",
          "muted",
          "playsInline",
          "poster",
          "preload",
          "src",
          "width",
        ];
        var svg = [
          "accentHeight",
          "accumulate",
          "additive",
          "alignmentBaseline",
          "allowReorder",
          "alphabetic",
          "amplitude",
          "arabicForm",
          "ascent",
          "attributeName",
          "attributeType",
          "autoReverse",
          "azimuth",
          "baseFrequency",
          "baseProfile",
          "baselineShift",
          "bbox",
          "begin",
          "bias",
          "by",
          "calcMode",
          "capHeight",
          "clip",
          "clipPath",
          "clipPathUnits",
          "clipRule",
          "color",
          "colorInterpolation",
          "colorInterpolationFilters",
          "colorProfile",
          "colorRendering",
          "contentScriptType",
          "contentStyleType",
          "cursor",
          "cx",
          "cy",
          "d",
          "decelerate",
          "descent",
          "diffuseConstant",
          "direction",
          "display",
          "divisor",
          "dominantBaseline",
          "dur",
          "dx",
          "dy",
          "edgeMode",
          "elevation",
          "enableBackground",
          "end",
          "exponent",
          "externalResourcesRequired",
          "fill",
          "fillOpacity",
          "fillRule",
          "filter",
          "filterRes",
          "filterUnits",
          "floodColor",
          "floodOpacity",
          "focusable",
          "fontFamily",
          "fontSize",
          "fontSizeAdjust",
          "fontStretch",
          "fontStyle",
          "fontVariant",
          "fontWeight",
          "format",
          "from",
          "fx",
          "fy",
          "g1",
          "g2",
          "glyphName",
          "glyphOrientationHorizontal",
          "glyphOrientationVertical",
          "glyphRef",
          "gradientTransform",
          "gradientUnits",
          "hanging",
          "height",
          "horizAdvX",
          "horizOriginX",
          "ideographic",
          "imageRendering",
          "in",
          "in2",
          "intercept",
          "k",
          "k1",
          "k2",
          "k3",
          "k4",
          "kernelMatrix",
          "kernelUnitLength",
          "kerning",
          "keyPoints",
          "keySplines",
          "keyTimes",
          "lengthAdjust",
          "letterSpacing",
          "lightingColor",
          "limitingConeAngle",
          "local",
          "markerEnd",
          "markerHeight",
          "markerMid",
          "markerStart",
          "markerUnits",
          "markerWidth",
          "mask",
          "maskContentUnits",
          "maskUnits",
          "mathematical",
          "mode",
          "numOctaves",
          "offset",
          "opacity",
          "operator",
          "order",
          "orient",
          "orientation",
          "origin",
          "overflow",
          "overlinePosition",
          "overlineThickness",
          "paintOrder",
          "panose1",
          "pathLength",
          "patternContentUnits",
          "patternTransform",
          "patternUnits",
          "pointerEvents",
          "points",
          "pointsAtX",
          "pointsAtY",
          "pointsAtZ",
          "preserveAlpha",
          "preserveAspectRatio",
          "primitiveUnits",
          "r",
          "radius",
          "refX",
          "refY",
          "renderingIntent",
          "repeatCount",
          "repeatDur",
          "requiredExtensions",
          "requiredFeatures",
          "restart",
          "result",
          "rotate",
          "rx",
          "ry",
          "scale",
          "seed",
          "shapeRendering",
          "slope",
          "spacing",
          "specularConstant",
          "specularExponent",
          "speed",
          "spreadMethod",
          "startOffset",
          "stdDeviation",
          "stemh",
          "stemv",
          "stitchTiles",
          "stopColor",
          "stopOpacity",
          "strikethroughPosition",
          "strikethroughThickness",
          "string",
          "stroke",
          "strokeDasharray",
          "strokeDashoffset",
          "strokeLinecap",
          "strokeLinejoin",
          "strokeMiterlimit",
          "strokeOpacity",
          "strokeWidth",
          "surfaceScale",
          "systemLanguage",
          "tableValues",
          "targetX",
          "targetY",
          "textAnchor",
          "textDecoration",
          "textLength",
          "textRendering",
          "to",
          "transform",
          "u1",
          "u2",
          "underlinePosition",
          "underlineThickness",
          "unicode",
          "unicodeBidi",
          "unicodeRange",
          "unitsPerEm",
          "vAlphabetic",
          "vHanging",
          "vIdeographic",
          "vMathematical",
          "values",
          "vectorEffect",
          "version",
          "vertAdvY",
          "vertOriginX",
          "vertOriginY",
          "viewBox",
          "viewTarget",
          "visibility",
          "width",
          "widths",
          "wordSpacing",
          "writingMode",
          "x",
          "x1",
          "x2",
          "xChannelSelector",
          "xHeight",
          "xlinkActuate",
          "xlinkArcrole",
          "xlinkHref",
          "xlinkRole",
          "xlinkShow",
          "xlinkTitle",
          "xlinkType",
          "xmlBase",
          "xmlLang",
          "xmlSpace",
          "xmlns",
          "xmlnsXlink",
          "y",
          "y1",
          "y2",
          "yChannelSelector",
          "z",
          "zoomAndPan",
        ];
        var elements = {
          html: [
            "a",
            "abbr",
            "address",
            "area",
            "article",
            "aside",
            "audio",
            "b",
            "base",
            "bdi",
            "bdo",
            "blockquote",
            "body",
            "br",
            "button",
            "canvas",
            "caption",
            "cite",
            "code",
            "col",
            "colgroup",
            "data",
            "datalist",
            "dd",
            "del",
            "details",
            "dfn",
            "dialog",
            "div",
            "dl",
            "dt",
            "em",
            "embed",
            "fieldset",
            "figcaption",
            "figure",
            "footer",
            "form",
            "h1",
            "h2",
            "h3",
            "h4",
            "h5",
            "h6",
            "head",
            "header",
            "hgroup",
            "hr",
            "html",
            "i",
            "iframe",
            "img",
            "input",
            "ins",
            "kbd",
            "keygen",
            "label",
            "legend",
            "li",
            "link",
            "main",
            "map",
            "mark",
            "math",
            "menu",
            "menuitem",
            "meta",
            "meter",
            "nav",
            "noscript",
            "object",
            "ol",
            "optgroup",
            "option",
            "output",
            "p",
            "param",
            "picture",
            "pre",
            "progress",
            "q",
            "rb",
            "rp",
            "rt",
            "rtc",
            "ruby",
            "s",
            "samp",
            "script",
            "section",
            "select",
            "slot",
            "small",
            "source",
            "span",
            "strong",
            "style",
            "sub",
            "summary",
            "sup",
            "svg",
            "table",
            "tbody",
            "td",
            "template",
            "textarea",
            "tfoot",
            "th",
            "thead",
            "time",
            "title",
            "tr",
            "track",
            "u",
            "ul",
            "var",
            "video",
            "wbr",
          ],
          svg: [
            "a",
            "altGlyph",
            "altGlyphDef",
            "altGlyphItem",
            "animate",
            "animateColor",
            "animateMotion",
            "animateTransform",
            "circle",
            "clipPath",
            "color-profile",
            "cursor",
            "defs",
            "desc",
            "ellipse",
            "feBlend",
            "feColorMatrix",
            "feComponentTransfer",
            "feComposite",
            "feConvolveMatrix",
            "feDiffuseLighting",
            "feDisplacementMap",
            "feDistantLight",
            "feFlood",
            "feFuncA",
            "feFuncB",
            "feFuncG",
            "feFuncR",
            "feGaussianBlur",
            "feImage",
            "feMerge",
            "feMergeNode",
            "feMorphology",
            "feOffset",
            "fePointLight",
            "feSpecularLighting",
            "feSpotLight",
            "feTile",
            "feTurbulence",
            "filter",
            "font",
            "font-face",
            "font-face-format",
            "font-face-name",
            "font-face-src",
            "font-face-uri",
            "foreignObject",
            "g",
            "glyph",
            "glyphRef",
            "hkern",
            "image",
            "line",
            "linearGradient",
            "marker",
            "mask",
            "metadata",
            "missing-glyph",
            "mpath",
            "path",
            "pattern",
            "polygon",
            "polyline",
            "radialGradient",
            "rect",
            "script",
            "set",
            "stop",
            "style",
            "svg",
            "switch",
            "symbol",
            "text",
            "textPath",
            "title",
            "tref",
            "tspan",
            "use",
            "view",
            "vkern",
          ],
        };
        var reactHtmlAttributes = {
          a: a,
          abbr: abbr,
          applet: applet,
          area: area,
          audio: audio,
          base: base,
          basefont: basefont,
          bdo: bdo,
          blockquote: blockquote,
          button: button,
          canvas: canvas,
          col: col,
          colgroup: colgroup,
          data: data,
          del: del,
          details: details,
          dfn: dfn,
          dialog: dialog,
          embed: embed,
          fieldset: fieldset,
          font: font,
          form: form,
          frame: frame,
          frameset: frameset,
          head: head,
          hr: hr,
          html: html,
          iframe: iframe,
          img: img,
          input: input,
          ins: ins,
          keygen: keygen,
          label: label,
          li: li,
          link: link,
          map: map,
          meta: meta,
          meter: meter,
          object: object,
          ol: ol,
          optgroup: optgroup,
          option: option,
          output: output,
          param: param,
          pre: pre,
          progress: progress,
          q: q,
          script: script,
          select: select,
          slot: slot,
          source: source,
          style: style,
          table: table,
          td: td,
          textarea: textarea,
          th: th,
          track: track,
          ul: ul,
          video: video,
          svg: svg,
          elements: elements,
          "*": [
            "about",
            "acceptCharset",
            "accessKey",
            "allowFullScreen",
            "allowTransparency",
            "autoComplete",
            "autoFocus",
            "autoPlay",
            "capture",
            "cellPadding",
            "cellSpacing",
            "charSet",
            "classID",
            "className",
            "colSpan",
            "contentEditable",
            "contextMenu",
            "crossOrigin",
            "dangerouslySetInnerHTML",
            "datatype",
            "dateTime",
            "dir",
            "draggable",
            "encType",
            "formAction",
            "formEncType",
            "formMethod",
            "formNoValidate",
            "formTarget",
            "frameBorder",
            "hidden",
            "hrefLang",
            "htmlFor",
            "httpEquiv",
            "icon",
            "id",
            "inlist",
            "inputMode",
            "is",
            "itemID",
            "itemProp",
            "itemRef",
            "itemScope",
            "itemType",
            "keyParams",
            "keyType",
            "lang",
            "marginHeight",
            "marginWidth",
            "maxLength",
            "mediaGroup",
            "minLength",
            "noValidate",
            "prefix",
            "property",
            "radioGroup",
            "readOnly",
            "resource",
            "role",
            "rowSpan",
            "scoped",
            "seamless",
            "security",
            "spellCheck",
            "srcDoc",
            "srcLang",
            "srcSet",
            "style",
            "suppressContentEditableWarning",
            "tabIndex",
            "title",
            "typeof",
            "unselectable",
            "useMap",
            "vocab",
            "wmode",
          ],
        };

        var reactHtmlAttributes$1 = Object.freeze({
          a: a,
          abbr: abbr,
          applet: applet,
          area: area,
          audio: audio,
          base: base,
          basefont: basefont,
          bdo: bdo,
          blockquote: blockquote,
          button: button,
          canvas: canvas,
          col: col,
          colgroup: colgroup,
          data: data,
          del: del,
          details: details,
          dfn: dfn,
          dialog: dialog,
          embed: embed,
          fieldset: fieldset,
          font: font,
          form: form,
          frame: frame,
          frameset: frameset,
          head: head,
          hr: hr,
          html: html,
          iframe: iframe,
          img: img,
          input: input,
          ins: ins,
          keygen: keygen,
          label: label,
          li: li,
          link: link,
          map: map,
          meta: meta,
          meter: meter,
          object: object,
          ol: ol,
          optgroup: optgroup,
          option: option,
          output: output,
          param: param,
          pre: pre,
          progress: progress,
          q: q,
          script: script,
          select: select,
          slot: slot,
          source: source,
          style: style,
          table: table,
          td: td,
          textarea: textarea,
          th: th,
          track: track,
          ul: ul,
          video: video,
          svg: svg,
          elements: elements,
          default: reactHtmlAttributes,
        });

        var reactHtmlAttributes$2 = getCjsExportFromNamespace(
          reactHtmlAttributes$1,
        );

        var dist = createCommonjsModule(function(module, exports) {
          Object.defineProperty(exports, "__esModule", {
            value: true,
          });

          exports.default = reactHtmlAttributes$2;

          module.exports = reactHtmlAttributes$2; // for CommonJS compatibility
        });

        var reactHTMLAttributes = unwrapExports(dist);

        /*
         * This is used to check if a property name is one of the React-specific
         * properties and determine if that property should be forwarded
         * to the React component
         */

        /* Logic copied from ReactDOMUnknownPropertyHook */
        var reactProps = [
          "children",
          "dangerouslySetInnerHTML",
          "key",
          "ref",
          "autoFocus",
          "defaultValue",
          "valueLink",
          "defaultChecked",
          "checkedLink",
          "innerHTML",
          "suppressContentEditableWarning",
          "onFocusIn",
          "onFocusOut",
          "className",

          /* List copied from https://facebook.github.io/react/docs/events.html */
          "onCopy",
          "onCut",
          "onPaste",
          "onCompositionEnd",
          "onCompositionStart",
          "onCompositionUpdate",
          "onKeyDown",
          "onKeyPress",
          "onKeyUp",
          "onFocus",
          "onBlur",
          "onChange",
          "onInput",
          "onInvalid",
          "onSubmit",
          "onClick",
          "onContextMenu",
          "onDoubleClick",
          "onDrag",
          "onDragEnd",
          "onDragEnter",
          "onDragExit",
          "onDragLeave",
          "onDragOver",
          "onDragStart",
          "onDrop",
          "onMouseDown",
          "onMouseEnter",
          "onMouseLeave",
          "onMouseMove",
          "onMouseOut",
          "onMouseOver",
          "onMouseUp",
          "onSelect",
          "onTouchCancel",
          "onTouchEnd",
          "onTouchMove",
          "onTouchStart",
          "onScroll",
          "onWheel",
          "onAbort",
          "onCanPlay",
          "onCanPlayThrough",
          "onDurationChange",
          "onEmptied",
          "onEncrypted",
          "onEnded",
          "onError",
          "onLoadedData",
          "onLoadedMetadata",
          "onLoadStart",
          "onPause",
          "onPlay",
          "onPlaying",
          "onProgress",
          "onRateChange",
          "onSeeked",
          "onSeeking",
          "onStalled",
          "onSuspend",
          "onTimeUpdate",
          "onVolumeChange",
          "onWaiting",
          "onLoad",
          "onAnimationStart",
          "onAnimationEnd",
          "onAnimationIteration",
          "onTransitionEnd",
          "onCopyCapture",
          "onCutCapture",
          "onPasteCapture",
          "onCompositionEndCapture",
          "onCompositionStartCapture",
          "onCompositionUpdateCapture",
          "onKeyDownCapture",
          "onKeyPressCapture",
          "onKeyUpCapture",
          "onFocusCapture",
          "onBlurCapture",
          "onChangeCapture",
          "onInputCapture",
          "onSubmitCapture",
          "onClickCapture",
          "onContextMenuCapture",
          "onDoubleClickCapture",
          "onDragCapture",
          "onDragEndCapture",
          "onDragEnterCapture",
          "onDragExitCapture",
          "onDragLeaveCapture",
          "onDragOverCapture",
          "onDragStartCapture",
          "onDropCapture",
          "onMouseDownCapture",
          "onMouseEnterCapture",
          "onMouseLeaveCapture",
          "onMouseMoveCapture",
          "onMouseOutCapture",
          "onMouseOverCapture",
          "onMouseUpCapture",
          "onSelectCapture",
          "onTouchCancelCapture",
          "onTouchEndCapture",
          "onTouchMoveCapture",
          "onTouchStartCapture",
          "onScrollCapture",
          "onWheelCapture",
          "onAbortCapture",
          "onCanPlayCapture",
          "onCanPlayThroughCapture",
          "onDurationChangeCapture",
          "onEmptiedCapture",
          "onEncryptedCapture",
          "onEndedCapture",
          "onErrorCapture",
          "onLoadedDataCapture",
          "onLoadedMetadataCapture",
          "onLoadStartCapture",
          "onPauseCapture",
          "onPlayCapture",
          "onPlayingCapture",
          "onProgressCapture",
          "onRateChangeCapture",
          "onSeekedCapture",
          "onSeekingCapture",
          "onStalledCapture",
          "onSuspendCapture",
          "onTimeUpdateCapture",
          "onVolumeChangeCapture",
          "onWaitingCapture",
          "onLoadCapture",
          "onAnimationStartCapture",
          "onAnimationEndCapture",
          "onAnimationIterationCapture",
          "onTransitionEndCapture",
        ];

        if (isPreact) {
          reactProps.push(
            "autocomplete",
            "autofocus",
            "class",
            "for",
            "onDblClick",
            "onSearch",
            "slot",
            "srcset",
          );
        }

        /* eslint max-lines:0, func-style:0 */

        var globalReactHtmlProps = reactHTMLAttributes["*"];
        var supportedSVGTagNames = reactHTMLAttributes.elements.svg;
        var supportedHtmlTagNames = reactHTMLAttributes.elements.html;

        // these are valid attributes that have the
        // same name as CSS properties, and is used
        // for css overrides API
        var cssProps = ["color", "height", "width"];

        /* From DOMProperty */
        var ATTRIBUTE_NAME_START_CHAR =
          // eslint-disable-next-line max-len
          ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        // eslint-disable-next-line max-len
        var ATTRIBUTE_NAME_CHAR =
          ATTRIBUTE_NAME_START_CHAR +
          "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var isCustomAttribute = RegExp.prototype.test.bind(
          new RegExp("^(data|aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$"),
        );

        var isSvgTag = function(tagName) {
          return (
            // in our context, we only say that SVG tags are SVG
            // if they are not also HTML.
            // See https://github.com/paypal/glamorous/issues/245
            // the svg tag will always be treated as svg for
            // er... obvious reasons
            tagName === "svg" ||
            (supportedHtmlTagNames.indexOf(tagName) === -1 &&
              supportedSVGTagNames.indexOf(tagName) !== -1)
          );
        };
        var isHtmlProp = function(name, tagName) {
          var elementAttributes = void 0;

          if (isSvgTag(tagName)) {
            // all SVG attributes supported by React are grouped under 'svg'
            elementAttributes = reactHTMLAttributes.svg;
          } else {
            elementAttributes = reactHTMLAttributes[tagName] || [];
          }

          return (
            globalReactHtmlProps.indexOf(name) !== -1 ||
            elementAttributes.indexOf(name) !== -1
          );
        };
        var isCssProp = function(name) {
          return cssProps.indexOf(name) !== -1;
        };
        var isReactProp = function(name) {
          return reactProps.indexOf(name) !== -1;
        };

        // eslint-disable-next-line complexity
        var shouldForwardProperty = function(tagName, name) {
          return (
            typeof tagName !== "string" ||
            ((isHtmlProp(name, tagName) ||
              isReactProp(name) ||
              isCustomAttribute(name.toLowerCase())) &&
              (!isCssProp(name) || isSvgTag(tagName)))
          );
        };

        var shouldForwardProperty$1 = src(shouldForwardProperty);

        // eslint-disable-next-line complexity
        function splitProps(_ref, _ref2) {
          var propsAreCssOverrides = _ref2.propsAreCssOverrides,
            rootEl = _ref2.rootEl,
            filterProps = _ref2.filterProps,
            forwardProps = _ref2.forwardProps;
          var cssProp = _ref.css,
            innerRef = _ref.innerRef,
            theme = _ref.theme,
            className = _ref.className,
            glam = _ref.glam,
            rest = objectWithoutProperties(_ref, [
              "css",
              "innerRef",
              "theme",
              "className",
              "glam",
            ]);

          // forward innerRef if user wishes to do so
          if (
            innerRef !== undefined &&
            forwardProps.indexOf("innerRef") !== -1
          ) {
            rest.innerRef = innerRef;
          }
          var returnValue = {
            toForward: {},
            cssProp: cssProp,
            cssOverrides: {},
          };
          if (!propsAreCssOverrides) {
            if (typeof rootEl !== "string" && filterProps.length === 0) {
              // if it's not a string and filterProps is empty,
              // then we can forward everything (because it's a component)
              returnValue.toForward = rest;
              return returnValue;
            }
          }
          return Object.keys(rest).reduce(function(split, propName) {
            if (filterProps.indexOf(propName) !== -1) {
              return split;
            } else if (
              forwardProps.indexOf(propName) !== -1 ||
              shouldForwardProperty$1(rootEl, propName)
            ) {
              split.toForward[propName] = rest[propName];
            } else if (propsAreCssOverrides) {
              split.cssOverrides[propName] = rest[propName];
            }
            return split;
          }, returnValue);
        }

        var glamorous = createGlamorous(splitProps);

        /*
         * This creates a glamorousComponentFactory for every DOM element so you can
         * simply do:
         * const GreenButton = glamorous.button({
         *   backgroundColor: 'green',
         *   padding: 20,
         * })
         * <GreenButton>Click Me!</GreenButton>
         */
        Object.assign(
          glamorous,
          domElements.reduce(function(getters, tag) {
            // TODO: next breaking change, let's make
            // the `displayName` be: `glamorous.${tag}`
            getters[tag] = glamorous(tag);
            return getters;
          }, {}),
        );

        /*
         * This creates a glamorous component for each DOM element so you can
         * simply do:
         * <glamorous.Div
         *   color="green"
         *   marginLeft={20}
         * >
         *   I'm green!
         * </glamorous.Div>
         */
        Object.assign(
          glamorous,
          domElements.reduce(function(comps, tag) {
            var capitalTag = capitalize(tag);
            comps[capitalTag] = glamorous[tag]();
            comps[capitalTag].displayName = "glamorous." + capitalTag;
            comps[capitalTag].propsAreCssOverrides = true;
            return comps;
          }, {}),
        );

        function capitalize(s) {
          return s.slice(0, 1).toUpperCase() + s.slice(1);
        }

        /*
         * Fix importing in typescript after rollup compilation
         * https://github.com/rollup/rollup/issues/1156
         * https://github.com/Microsoft/TypeScript/issues/13017#issuecomment-268657860
         */
        glamorous.default = glamorous;

        // these exports below are generated
        // and will be tree-shaken if you're using Webpack 2 or Rollup
        var A = glamorous["A"];
        var Abbr = glamorous["Abbr"];
        var Acronym = glamorous["Acronym"];
        var Address = glamorous["Address"];
        var Applet = glamorous["Applet"];
        var Area = glamorous["Area"];
        var Article = glamorous["Article"];
        var Aside = glamorous["Aside"];
        var Audio = glamorous["Audio"];
        var B = glamorous["B"];
        var Base = glamorous["Base"];
        var Basefont = glamorous["Basefont"];
        var Bdi = glamorous["Bdi"];
        var Bdo = glamorous["Bdo"];
        var Bgsound = glamorous["Bgsound"];
        var Big = glamorous["Big"];
        var Blink = glamorous["Blink"];
        var Blockquote = glamorous["Blockquote"];
        var Body = glamorous["Body"];
        var Br = glamorous["Br"];
        var Button = glamorous["Button"];
        var Canvas = glamorous["Canvas"];
        var Caption = glamorous["Caption"];
        var Center = glamorous["Center"];
        var Cite = glamorous["Cite"];
        var Code = glamorous["Code"];
        var Col = glamorous["Col"];
        var Colgroup = glamorous["Colgroup"];
        var Command = glamorous["Command"];
        var Content = glamorous["Content"];
        var Data = glamorous["Data"];
        var Datalist = glamorous["Datalist"];
        var Dd = glamorous["Dd"];
        var Del = glamorous["Del"];
        var Details = glamorous["Details"];
        var Dfn = glamorous["Dfn"];
        var Dialog = glamorous["Dialog"];
        var Dir = glamorous["Dir"];
        var Div = glamorous["Div"];
        var Dl = glamorous["Dl"];
        var Dt = glamorous["Dt"];
        var Element = glamorous["Element"];
        var Em = glamorous["Em"];
        var Embed = glamorous["Embed"];
        var Fieldset = glamorous["Fieldset"];
        var Figcaption = glamorous["Figcaption"];
        var Figure = glamorous["Figure"];
        var Font = glamorous["Font"];
        var Footer = glamorous["Footer"];
        var Form = glamorous["Form"];
        var Frame = glamorous["Frame"];
        var Frameset = glamorous["Frameset"];
        var H1 = glamorous["H1"];
        var H2 = glamorous["H2"];
        var H3 = glamorous["H3"];
        var H4 = glamorous["H4"];
        var H5 = glamorous["H5"];
        var H6 = glamorous["H6"];
        var Head = glamorous["Head"];
        var Header = glamorous["Header"];
        var Hgroup = glamorous["Hgroup"];
        var Hr = glamorous["Hr"];
        var Html = glamorous["Html"];
        var I = glamorous["I"];
        var Iframe = glamorous["Iframe"];
        var Image = glamorous["Image"];
        var Img = glamorous["Img"];
        var Input = glamorous["Input"];
        var Ins = glamorous["Ins"];
        var Isindex = glamorous["Isindex"];
        var Kbd = glamorous["Kbd"];
        var Keygen = glamorous["Keygen"];
        var Label = glamorous["Label"];
        var Legend = glamorous["Legend"];
        var Li = glamorous["Li"];
        var Link = glamorous["Link"];
        var Listing = glamorous["Listing"];
        var Main = glamorous["Main"];
        var MapTag = glamorous["Map"];
        var Mark = glamorous["Mark"];
        var Marquee = glamorous["Marquee"];
        var MathTag = glamorous["Math"];
        var Menu = glamorous["Menu"];
        var Menuitem = glamorous["Menuitem"];
        var Meta = glamorous["Meta"];
        var Meter = glamorous["Meter"];
        var Multicol = glamorous["Multicol"];
        var Nav = glamorous["Nav"];
        var Nextid = glamorous["Nextid"];
        var Nobr = glamorous["Nobr"];
        var Noembed = glamorous["Noembed"];
        var Noframes = glamorous["Noframes"];
        var Noscript = glamorous["Noscript"];
        var ObjectTag = glamorous["Object"];
        var Ol = glamorous["Ol"];
        var Optgroup = glamorous["Optgroup"];
        var Option = glamorous["Option"];
        var Output = glamorous["Output"];
        var P = glamorous["P"];
        var Param = glamorous["Param"];
        var Picture = glamorous["Picture"];
        var Plaintext = glamorous["Plaintext"];
        var Pre = glamorous["Pre"];
        var Progress = glamorous["Progress"];
        var Q = glamorous["Q"];
        var Rb = glamorous["Rb"];
        var Rbc = glamorous["Rbc"];
        var Rp = glamorous["Rp"];
        var Rt = glamorous["Rt"];
        var Rtc = glamorous["Rtc"];
        var Ruby = glamorous["Ruby"];
        var S = glamorous["S"];
        var Samp = glamorous["Samp"];
        var Script = glamorous["Script"];
        var Section = glamorous["Section"];
        var Select = glamorous["Select"];
        var Shadow = glamorous["Shadow"];
        var Slot = glamorous["Slot"];
        var Small = glamorous["Small"];
        var Source = glamorous["Source"];
        var Spacer = glamorous["Spacer"];
        var Span = glamorous["Span"];
        var Strike = glamorous["Strike"];
        var Strong = glamorous["Strong"];
        var Style = glamorous["Style"];
        var Sub = glamorous["Sub"];
        var Summary = glamorous["Summary"];
        var Sup = glamorous["Sup"];
        var Svg = glamorous["Svg"];
        var Table = glamorous["Table"];
        var Tbody = glamorous["Tbody"];
        var Td = glamorous["Td"];
        var Template = glamorous["Template"];
        var Textarea = glamorous["Textarea"];
        var Tfoot = glamorous["Tfoot"];
        var Th = glamorous["Th"];
        var Thead = glamorous["Thead"];
        var Time = glamorous["Time"];
        var Title = glamorous["Title"];
        var Tr = glamorous["Tr"];
        var Track = glamorous["Track"];
        var Tt = glamorous["Tt"];
        var U = glamorous["U"];
        var Ul = glamorous["Ul"];
        var Var = glamorous["Var"];
        var Video = glamorous["Video"];
        var Wbr = glamorous["Wbr"];
        var Xmp = glamorous["Xmp"];
        var AltGlyph = glamorous["AltGlyph"];
        var AltGlyphDef = glamorous["AltGlyphDef"];
        var AltGlyphItem = glamorous["AltGlyphItem"];
        var Animate = glamorous["Animate"];
        var AnimateColor = glamorous["AnimateColor"];
        var AnimateMotion = glamorous["AnimateMotion"];
        var AnimateTransform = glamorous["AnimateTransform"];
        var Animation = glamorous["Animation"];
        var Circle = glamorous["Circle"];
        var ClipPath = glamorous["ClipPath"];
        var ColorProfile = glamorous["Color-profile"];
        var Cursor = glamorous["Cursor"];
        var Defs = glamorous["Defs"];
        var Desc = glamorous["Desc"];
        var Discard = glamorous["Discard"];
        var Ellipse = glamorous["Ellipse"];
        var FeBlend = glamorous["FeBlend"];
        var FeColorMatrix = glamorous["FeColorMatrix"];
        var FeComponentTransfer = glamorous["FeComponentTransfer"];
        var FeComposite = glamorous["FeComposite"];
        var FeConvolveMatrix = glamorous["FeConvolveMatrix"];
        var FeDiffuseLighting = glamorous["FeDiffuseLighting"];
        var FeDisplacementMap = glamorous["FeDisplacementMap"];
        var FeDistantLight = glamorous["FeDistantLight"];
        var FeDropShadow = glamorous["FeDropShadow"];
        var FeFlood = glamorous["FeFlood"];
        var FeFuncA = glamorous["FeFuncA"];
        var FeFuncB = glamorous["FeFuncB"];
        var FeFuncG = glamorous["FeFuncG"];
        var FeFuncR = glamorous["FeFuncR"];
        var FeGaussianBlur = glamorous["FeGaussianBlur"];
        var FeImage = glamorous["FeImage"];
        var FeMerge = glamorous["FeMerge"];
        var FeMergeNode = glamorous["FeMergeNode"];
        var FeMorphology = glamorous["FeMorphology"];
        var FeOffset = glamorous["FeOffset"];
        var FePointLight = glamorous["FePointLight"];
        var FeSpecularLighting = glamorous["FeSpecularLighting"];
        var FeSpotLight = glamorous["FeSpotLight"];
        var FeTile = glamorous["FeTile"];
        var FeTurbulence = glamorous["FeTurbulence"];
        var Filter = glamorous["Filter"];
        var FontFace = glamorous["Font-face"];
        var FontFaceFormat = glamorous["Font-face-format"];
        var FontFaceName = glamorous["Font-face-name"];
        var FontFaceSrc = glamorous["Font-face-src"];
        var FontFaceUri = glamorous["Font-face-uri"];
        var ForeignObject = glamorous["ForeignObject"];
        var G = glamorous["G"];
        var Glyph = glamorous["Glyph"];
        var GlyphRef = glamorous["GlyphRef"];
        var Handler = glamorous["Handler"];
        var Hatch = glamorous["Hatch"];
        var Hatchpath = glamorous["Hatchpath"];
        var Hkern = glamorous["Hkern"];
        var Line = glamorous["Line"];
        var LinearGradient = glamorous["LinearGradient"];
        var Listener = glamorous["Listener"];
        var Marker = glamorous["Marker"];
        var Mask = glamorous["Mask"];
        var Mesh = glamorous["Mesh"];
        var Meshgradient = glamorous["Meshgradient"];
        var Meshpatch = glamorous["Meshpatch"];
        var Meshrow = glamorous["Meshrow"];
        var Metadata = glamorous["Metadata"];
        var MissingGlyph = glamorous["Missing-glyph"];
        var Mpath = glamorous["Mpath"];
        var Path = glamorous["Path"];
        var Pattern = glamorous["Pattern"];
        var Polygon = glamorous["Polygon"];
        var Polyline = glamorous["Polyline"];
        var Prefetch = glamorous["Prefetch"];
        var RadialGradient = glamorous["RadialGradient"];
        var Rect = glamorous["Rect"];
        var SetTag = glamorous["Set"];
        var SolidColor = glamorous["SolidColor"];
        var Solidcolor = glamorous["Solidcolor"];
        var Stop = glamorous["Stop"];
        var Switch = glamorous["Switch"];
        var SymbolTag = glamorous["Symbol"];
        var Tbreak = glamorous["Tbreak"];
        var Text = glamorous["Text"];
        var TextArea = glamorous["TextArea"];
        var TextPath = glamorous["TextPath"];
        var Tref = glamorous["Tref"];
        var Tspan = glamorous["Tspan"];
        var Unknown = glamorous["Unknown"];
        var Use = glamorous["Use"];
        var View = glamorous["View"];
        var Vkern = glamorous["Vkern"];

        /* harmony default export */ __webpack_exports__["default"] = glamorous;

        /***/
      },

    /***/ "./node_modules/has-symbols/shams.js":
      /*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /* eslint complexity: [2, 17], max-statements: [2, 33] */
        module.exports = function hasSymbols() {
          if (
            typeof Symbol !== "function" ||
            typeof Object.getOwnPropertySymbols !== "function"
          ) {
            return false;
          }
          if (typeof Symbol.iterator === "symbol") {
            return true;
          }

          var obj = {};
          var sym = Symbol("test");
          var symObj = Object(sym);
          if (typeof sym === "string") {
            return false;
          }

          if (Object.prototype.toString.call(sym) !== "[object Symbol]") {
            return false;
          }
          if (Object.prototype.toString.call(symObj) !== "[object Symbol]") {
            return false;
          }

          // temp disabled per https://github.com/ljharb/object.assign/issues/17
          // if (sym instanceof Symbol) { return false; }
          // temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
          // if (!(symObj instanceof Symbol)) { return false; }

          // if (typeof Symbol.prototype.toString !== 'function') { return false; }
          // if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

          var symVal = 42;
          obj[sym] = symVal;
          for (sym in obj) {
            return false;
          } // eslint-disable-line no-restricted-syntax
          if (
            typeof Object.keys === "function" &&
            Object.keys(obj).length !== 0
          ) {
            return false;
          }

          if (
            typeof Object.getOwnPropertyNames === "function" &&
            Object.getOwnPropertyNames(obj).length !== 0
          ) {
            return false;
          }

          var syms = Object.getOwnPropertySymbols(obj);
          if (syms.length !== 1 || syms[0] !== sym) {
            return false;
          }

          if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
            return false;
          }

          if (typeof Object.getOwnPropertyDescriptor === "function") {
            var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
            if (descriptor.value !== symVal || descriptor.enumerable !== true) {
              return false;
            }
          }

          return true;
        };

        /***/
      },

    /***/ "./node_modules/has/src/index.js":
      /*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var bind = __webpack_require__(
          /*! function-bind */ "./node_modules/function-bind/index.js",
        );

        module.exports = bind.call(
          Function.call,
          Object.prototype.hasOwnProperty,
        );

        /***/
      },

    /***/ "./node_modules/hyphenate-style-name/index.js":
      /*!****************************************************!*\
  !*** ./node_modules/hyphenate-style-name/index.js ***!
  \****************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* eslint-disable no-var, prefer-template */
        var uppercasePattern = /[A-Z]/g;
        var msPattern = /^ms-/;
        var cache = {};

        function toHyphenLower(match) {
          return "-" + match.toLowerCase();
        }

        function hyphenateStyleName(name) {
          if (cache.hasOwnProperty(name)) {
            return cache[name];
          }

          var hName = name.replace(uppercasePattern, toHyphenLower);
          return (cache[name] = msPattern.test(hName) ? "-" + hName : hName);
        }

        /* harmony default export */ __webpack_exports__[
          "default"
        ] = hyphenateStyleName;

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/crossFade.js":
      /*!************************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/crossFade.js ***!
  \************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = crossFade;

        var _isPrefixedValue = __webpack_require__(
          /*! css-in-js-utils/lib/isPrefixedValue */ "./node_modules/css-in-js-utils/lib/isPrefixedValue.js",
        );

        var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // http://caniuse.com/#search=cross-fade
        var prefixes = ["-webkit-", ""];
        function crossFade(property, value) {
          if (
            typeof value === "string" &&
            !(0, _isPrefixedValue2.default)(value) &&
            value.indexOf("cross-fade(") > -1
          ) {
            return prefixes.map(function(prefix) {
              return value.replace(/cross-fade\(/g, prefix + "cross-fade(");
            });
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/cursor.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/cursor.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = cursor;
        var prefixes = ["-webkit-", "-moz-", ""];

        var values = {
          "zoom-in": true,
          "zoom-out": true,
          grab: true,
          grabbing: true,
        };

        function cursor(property, value) {
          if (property === "cursor" && values.hasOwnProperty(value)) {
            return prefixes.map(function(prefix) {
              return prefix + value;
            });
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/filter.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/filter.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = filter;

        var _isPrefixedValue = __webpack_require__(
          /*! css-in-js-utils/lib/isPrefixedValue */ "./node_modules/css-in-js-utils/lib/isPrefixedValue.js",
        );

        var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // http://caniuse.com/#feat=css-filter-function
        var prefixes = ["-webkit-", ""];
        function filter(property, value) {
          if (
            typeof value === "string" &&
            !(0, _isPrefixedValue2.default)(value) &&
            value.indexOf("filter(") > -1
          ) {
            return prefixes.map(function(prefix) {
              return value.replace(/filter\(/g, prefix + "filter(");
            });
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/flex.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/flex.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = flex;
        var values = {
          flex: [
            "-webkit-box",
            "-moz-box",
            "-ms-flexbox",
            "-webkit-flex",
            "flex",
          ],
          "inline-flex": [
            "-webkit-inline-box",
            "-moz-inline-box",
            "-ms-inline-flexbox",
            "-webkit-inline-flex",
            "inline-flex",
          ],
        };

        function flex(property, value) {
          if (property === "display" && values.hasOwnProperty(value)) {
            return values[value];
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/flexboxOld.js":
      /*!*************************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/flexboxOld.js ***!
  \*************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = flexboxOld;
        var alternativeValues = {
          "space-around": "justify",
          "space-between": "justify",
          "flex-start": "start",
          "flex-end": "end",
          "wrap-reverse": "multiple",
          wrap: "multiple",
        };

        var alternativeProps = {
          alignItems: "WebkitBoxAlign",
          justifyContent: "WebkitBoxPack",
          flexWrap: "WebkitBoxLines",
        };

        function flexboxOld(property, value, style) {
          if (property === "flexDirection" && typeof value === "string") {
            if (value.indexOf("column") > -1) {
              style.WebkitBoxOrient = "vertical";
            } else {
              style.WebkitBoxOrient = "horizontal";
            }
            if (value.indexOf("reverse") > -1) {
              style.WebkitBoxDirection = "reverse";
            } else {
              style.WebkitBoxDirection = "normal";
            }
          }
          if (alternativeProps.hasOwnProperty(property)) {
            style[alternativeProps[property]] =
              alternativeValues[value] || value;
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/gradient.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/gradient.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = gradient;

        var _isPrefixedValue = __webpack_require__(
          /*! css-in-js-utils/lib/isPrefixedValue */ "./node_modules/css-in-js-utils/lib/isPrefixedValue.js",
        );

        var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var prefixes = ["-webkit-", "-moz-", ""];

        var values = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;

        function gradient(property, value) {
          if (
            typeof value === "string" &&
            !(0, _isPrefixedValue2.default)(value) &&
            values.test(value)
          ) {
            return prefixes.map(function(prefix) {
              return prefix + value;
            });
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/imageSet.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/imageSet.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = imageSet;

        var _isPrefixedValue = __webpack_require__(
          /*! css-in-js-utils/lib/isPrefixedValue */ "./node_modules/css-in-js-utils/lib/isPrefixedValue.js",
        );

        var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // http://caniuse.com/#feat=css-image-set
        var prefixes = ["-webkit-", ""];
        function imageSet(property, value) {
          if (
            typeof value === "string" &&
            !(0, _isPrefixedValue2.default)(value) &&
            value.indexOf("image-set(") > -1
          ) {
            return prefixes.map(function(prefix) {
              return value.replace(/image-set\(/g, prefix + "image-set(");
            });
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/position.js":
      /*!***********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/position.js ***!
  \***********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = position;
        function position(property, value) {
          if (property === "position" && value === "sticky") {
            return ["-webkit-sticky", "sticky"];
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/sizing.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/sizing.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = sizing;
        var prefixes = ["-webkit-", "-moz-", ""];

        var properties = {
          maxHeight: true,
          maxWidth: true,
          width: true,
          height: true,
          columnWidth: true,
          minWidth: true,
          minHeight: true,
        };
        var values = {
          "min-content": true,
          "max-content": true,
          "fill-available": true,
          "fit-content": true,
          "contain-floats": true,
        };

        function sizing(property, value) {
          if (
            properties.hasOwnProperty(property) &&
            values.hasOwnProperty(value)
          ) {
            return prefixes.map(function(prefix) {
              return prefix + value;
            });
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/plugins/transition.js":
      /*!*************************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/plugins/transition.js ***!
  \*************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = transition;

        var _hyphenateProperty = __webpack_require__(
          /*! css-in-js-utils/lib/hyphenateProperty */ "./node_modules/css-in-js-utils/lib/hyphenateProperty.js",
        );

        var _hyphenateProperty2 = _interopRequireDefault(_hyphenateProperty);

        var _isPrefixedValue = __webpack_require__(
          /*! css-in-js-utils/lib/isPrefixedValue */ "./node_modules/css-in-js-utils/lib/isPrefixedValue.js",
        );

        var _isPrefixedValue2 = _interopRequireDefault(_isPrefixedValue);

        var _capitalizeString = __webpack_require__(
          /*! ../../utils/capitalizeString */ "./node_modules/inline-style-prefixer/utils/capitalizeString.js",
        );

        var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var properties = {
          transition: true,
          transitionProperty: true,
          WebkitTransition: true,
          WebkitTransitionProperty: true,
          MozTransition: true,
          MozTransitionProperty: true,
        };

        var prefixMapping = {
          Webkit: "-webkit-",
          Moz: "-moz-",
          ms: "-ms-",
        };

        function prefixValue(value, propertyPrefixMap) {
          if ((0, _isPrefixedValue2.default)(value)) {
            return value;
          }

          // only split multi values, not cubic beziers
          var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);

          for (var i = 0, len = multipleValues.length; i < len; ++i) {
            var singleValue = multipleValues[i];
            var values = [singleValue];
            for (var property in propertyPrefixMap) {
              var dashCaseProperty = (0, _hyphenateProperty2.default)(property);

              if (
                singleValue.indexOf(dashCaseProperty) > -1 &&
                dashCaseProperty !== "order"
              ) {
                var prefixes = propertyPrefixMap[property];
                for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {
                  // join all prefixes and create a new value
                  values.unshift(
                    singleValue.replace(
                      dashCaseProperty,
                      prefixMapping[prefixes[j]] + dashCaseProperty,
                    ),
                  );
                }
              }
            }

            multipleValues[i] = values.join(",");
          }

          return multipleValues.join(",");
        }

        function transition(property, value, style, propertyPrefixMap) {
          // also check for already prefixed transitions
          if (
            typeof value === "string" &&
            properties.hasOwnProperty(property)
          ) {
            var outputValue = prefixValue(value, propertyPrefixMap);
            // if the property is already prefixed
            var webkitOutput = outputValue
              .split(/,(?![^()]*(?:\([^()]*\))?\))/g)
              .filter(function(val) {
                return !/-moz-|-ms-/.test(val);
              })
              .join(",");

            if (property.indexOf("Webkit") > -1) {
              return webkitOutput;
            }

            var mozOutput = outputValue
              .split(/,(?![^()]*(?:\([^()]*\))?\))/g)
              .filter(function(val) {
                return !/-webkit-|-ms-/.test(val);
              })
              .join(",");

            if (property.indexOf("Moz") > -1) {
              return mozOutput;
            }

            style[
              "Webkit" + (0, _capitalizeString2.default)(property)
            ] = webkitOutput;
            style[
              "Moz" + (0, _capitalizeString2.default)(property)
            ] = mozOutput;
            return outputValue;
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/static/staticData.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/static/staticData.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var w = ["Webkit"];
        var m = ["Moz"];
        var ms = ["ms"];
        var wm = ["Webkit", "Moz"];
        var wms = ["Webkit", "ms"];
        var wmms = ["Webkit", "Moz", "ms"];

        exports.default = {
          plugins: [],
          prefixMap: {
            appearance: wm,
            userSelect: wmms,
            textEmphasisPosition: w,
            textEmphasis: w,
            textEmphasisStyle: w,
            textEmphasisColor: w,
            boxDecorationBreak: w,
            clipPath: w,
            maskImage: w,
            maskMode: w,
            maskRepeat: w,
            maskPosition: w,
            maskClip: w,
            maskOrigin: w,
            maskSize: w,
            maskComposite: w,
            mask: w,
            maskBorderSource: w,
            maskBorderMode: w,
            maskBorderSlice: w,
            maskBorderWidth: w,
            maskBorderOutset: w,
            maskBorderRepeat: w,
            maskBorder: w,
            maskType: w,
            textDecorationStyle: w,
            textDecorationSkip: w,
            textDecorationLine: w,
            textDecorationColor: w,
            filter: w,
            fontFeatureSettings: w,
            breakAfter: wmms,
            breakBefore: wmms,
            breakInside: wmms,
            columnCount: wm,
            columnFill: wm,
            columnGap: wm,
            columnRule: wm,
            columnRuleColor: wm,
            columnRuleStyle: wm,
            columnRuleWidth: wm,
            columns: wm,
            columnSpan: wm,
            columnWidth: wm,
            writingMode: wms,
            flex: w,
            flexBasis: w,
            flexDirection: w,
            flexGrow: w,
            flexFlow: w,
            flexShrink: w,
            flexWrap: w,
            alignContent: w,
            alignItems: w,
            alignSelf: w,
            justifyContent: w,
            order: w,
            transform: w,
            transformOrigin: w,
            transformOriginX: w,
            transformOriginY: w,
            backfaceVisibility: w,
            perspective: w,
            perspectiveOrigin: w,
            transformStyle: w,
            transformOriginZ: w,
            animation: w,
            animationDelay: w,
            animationDirection: w,
            animationFillMode: w,
            animationDuration: w,
            animationIterationCount: w,
            animationName: w,
            animationPlayState: w,
            animationTimingFunction: w,
            backdropFilter: w,
            fontKerning: w,
            scrollSnapType: wms,
            scrollSnapPointsX: wms,
            scrollSnapPointsY: wms,
            scrollSnapDestination: wms,
            scrollSnapCoordinate: wms,
            shapeImageThreshold: w,
            shapeImageMargin: w,
            shapeImageOutside: w,
            hyphens: wmms,
            flowInto: wms,
            flowFrom: wms,
            regionFragment: wms,
            textAlignLast: m,
            tabSize: m,
            wrapFlow: ms,
            wrapThrough: ms,
            wrapMargin: ms,
            gridTemplateColumns: ms,
            gridTemplateRows: ms,
            gridTemplateAreas: ms,
            gridTemplate: ms,
            gridAutoColumns: ms,
            gridAutoRows: ms,
            gridAutoFlow: ms,
            grid: ms,
            gridRowStart: ms,
            gridColumnStart: ms,
            gridRowEnd: ms,
            gridRow: ms,
            gridColumn: ms,
            gridColumnEnd: ms,
            gridColumnGap: ms,
            gridRowGap: ms,
            gridArea: ms,
            gridGap: ms,
            textSizeAdjust: wms,
            borderImage: w,
            borderImageOutset: w,
            borderImageRepeat: w,
            borderImageSlice: w,
            borderImageSource: w,
            borderImageWidth: w,
            transitionDelay: w,
            transitionDuration: w,
            transitionProperty: w,
            transitionTimingFunction: w,
          },
        };
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/utils/capitalizeString.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/utils/capitalizeString.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = capitalizeString;
        function capitalizeString(str) {
          return str.charAt(0).toUpperCase() + str.slice(1);
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/utils/prefixProperty.js":
      /*!********************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/utils/prefixProperty.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = prefixProperty;

        var _capitalizeString = __webpack_require__(
          /*! ./capitalizeString */ "./node_modules/inline-style-prefixer/utils/capitalizeString.js",
        );

        var _capitalizeString2 = _interopRequireDefault(_capitalizeString);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function prefixProperty(prefixProperties, property, style) {
          if (prefixProperties.hasOwnProperty(property)) {
            var requiredPrefixes = prefixProperties[property];
            for (var i = 0, len = requiredPrefixes.length; i < len; ++i) {
              style[
                requiredPrefixes[i] + (0, _capitalizeString2.default)(property)
              ] = style[property];
            }
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/inline-style-prefixer/utils/prefixValue.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/inline-style-prefixer/utils/prefixValue.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = prefixValue;
        function prefixValue(plugins, property, value, style, metaData) {
          for (var i = 0, len = plugins.length; i < len; ++i) {
            var processedValue = plugins[i](property, value, style, metaData);

            // we can stop processing if a value is returned
            // as all plugin criteria are unique
            if (processedValue) {
              return processedValue;
            }
          }
        }
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/lodash.throttle/index.js":
      /*!***********************************************!*\
  !*** ./node_modules/lodash.throttle/index.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(global) {
          /**
           * lodash (Custom Build) <https://lodash.com/>
           * Build: `lodash modularize exports="npm" -o ./`
           * Copyright jQuery Foundation and other contributors <https://jquery.org/>
           * Released under MIT license <https://lodash.com/license>
           * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
           * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
           */

          /** Used as the `TypeError` message for "Functions" methods. */
          var FUNC_ERROR_TEXT = "Expected a function";

          /** Used as references for various `Number` constants. */
          var NAN = 0 / 0;

          /** `Object#toString` result references. */
          var symbolTag = "[object Symbol]";

          /** Used to match leading and trailing whitespace. */
          var reTrim = /^\s+|\s+$/g;

          /** Used to detect bad signed hexadecimal string values. */
          var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

          /** Used to detect binary string values. */
          var reIsBinary = /^0b[01]+$/i;

          /** Used to detect octal string values. */
          var reIsOctal = /^0o[0-7]+$/i;

          /** Built-in method references without a dependency on `root`. */
          var freeParseInt = parseInt;

          /** Detect free variable `global` from Node.js. */
          var freeGlobal =
            typeof global == "object" &&
            global &&
            global.Object === Object &&
            global;

          /** Detect free variable `self`. */
          var freeSelf =
            typeof self == "object" && self && self.Object === Object && self;

          /** Used as a reference to the global object. */
          var root = freeGlobal || freeSelf || Function("return this")();

          /** Used for built-in method references. */
          var objectProto = Object.prototype;

          /**
           * Used to resolve the
           * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
           * of values.
           */
          var objectToString = objectProto.toString;

          /* Built-in method references for those with the same name as other `lodash` methods. */
          var nativeMax = Math.max,
            nativeMin = Math.min;

          /**
           * Gets the timestamp of the number of milliseconds that have elapsed since
           * the Unix epoch (1 January 1970 00:00:00 UTC).
           *
           * @static
           * @memberOf _
           * @since 2.4.0
           * @category Date
           * @returns {number} Returns the timestamp.
           * @example
           *
           * _.defer(function(stamp) {
           *   console.log(_.now() - stamp);
           * }, _.now());
           * // => Logs the number of milliseconds it took for the deferred invocation.
           */
          var now = function() {
            return root.Date.now();
          };

          /**
           * Creates a debounced function that delays invoking `func` until after `wait`
           * milliseconds have elapsed since the last time the debounced function was
           * invoked. The debounced function comes with a `cancel` method to cancel
           * delayed `func` invocations and a `flush` method to immediately invoke them.
           * Provide `options` to indicate whether `func` should be invoked on the
           * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
           * with the last arguments provided to the debounced function. Subsequent
           * calls to the debounced function return the result of the last `func`
           * invocation.
           *
           * **Note:** If `leading` and `trailing` options are `true`, `func` is
           * invoked on the trailing edge of the timeout only if the debounced function
           * is invoked more than once during the `wait` timeout.
           *
           * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
           * until to the next tick, similar to `setTimeout` with a timeout of `0`.
           *
           * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
           * for details over the differences between `_.debounce` and `_.throttle`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to debounce.
           * @param {number} [wait=0] The number of milliseconds to delay.
           * @param {Object} [options={}] The options object.
           * @param {boolean} [options.leading=false]
           *  Specify invoking on the leading edge of the timeout.
           * @param {number} [options.maxWait]
           *  The maximum time `func` is allowed to be delayed before it's invoked.
           * @param {boolean} [options.trailing=true]
           *  Specify invoking on the trailing edge of the timeout.
           * @returns {Function} Returns the new debounced function.
           * @example
           *
           * // Avoid costly calculations while the window size is in flux.
           * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
           *
           * // Invoke `sendMail` when clicked, debouncing subsequent calls.
           * jQuery(element).on('click', _.debounce(sendMail, 300, {
           *   'leading': true,
           *   'trailing': false
           * }));
           *
           * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
           * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
           * var source = new EventSource('/stream');
           * jQuery(source).on('message', debounced);
           *
           * // Cancel the trailing debounced invocation.
           * jQuery(window).on('popstate', debounced.cancel);
           */
          function debounce(func, wait, options) {
            var lastArgs,
              lastThis,
              maxWait,
              result,
              timerId,
              lastCallTime,
              lastInvokeTime = 0,
              leading = false,
              maxing = false,
              trailing = true;

            if (typeof func != "function") {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
              leading = !!options.leading;
              maxing = "maxWait" in options;
              maxWait = maxing
                ? nativeMax(toNumber(options.maxWait) || 0, wait)
                : maxWait;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }

            function invokeFunc(time) {
              var args = lastArgs,
                thisArg = lastThis;

              lastArgs = lastThis = undefined;
              lastInvokeTime = time;
              result = func.apply(thisArg, args);
              return result;
            }

            function leadingEdge(time) {
              // Reset any `maxWait` timer.
              lastInvokeTime = time;
              // Start the timer for the trailing edge.
              timerId = setTimeout(timerExpired, wait);
              // Invoke the leading edge.
              return leading ? invokeFunc(time) : result;
            }

            function remainingWait(time) {
              var timeSinceLastCall = time - lastCallTime,
                timeSinceLastInvoke = time - lastInvokeTime,
                result = wait - timeSinceLastCall;

              return maxing
                ? nativeMin(result, maxWait - timeSinceLastInvoke)
                : result;
            }

            function shouldInvoke(time) {
              var timeSinceLastCall = time - lastCallTime,
                timeSinceLastInvoke = time - lastInvokeTime;

              // Either this is the first call, activity has stopped and we're at the
              // trailing edge, the system time has gone backwards and we're treating
              // it as the trailing edge, or we've hit the `maxWait` limit.
              return (
                lastCallTime === undefined ||
                timeSinceLastCall >= wait ||
                timeSinceLastCall < 0 ||
                (maxing && timeSinceLastInvoke >= maxWait)
              );
            }

            function timerExpired() {
              var time = now();
              if (shouldInvoke(time)) {
                return trailingEdge(time);
              }
              // Restart the timer.
              timerId = setTimeout(timerExpired, remainingWait(time));
            }

            function trailingEdge(time) {
              timerId = undefined;

              // Only invoke if we have `lastArgs` which means `func` has been
              // debounced at least once.
              if (trailing && lastArgs) {
                return invokeFunc(time);
              }
              lastArgs = lastThis = undefined;
              return result;
            }

            function cancel() {
              if (timerId !== undefined) {
                clearTimeout(timerId);
              }
              lastInvokeTime = 0;
              lastArgs = lastCallTime = lastThis = timerId = undefined;
            }

            function flush() {
              return timerId === undefined ? result : trailingEdge(now());
            }

            function debounced() {
              var time = now(),
                isInvoking = shouldInvoke(time);

              lastArgs = arguments;
              lastThis = this;
              lastCallTime = time;

              if (isInvoking) {
                if (timerId === undefined) {
                  return leadingEdge(lastCallTime);
                }
                if (maxing) {
                  // Handle invocations in a tight loop.
                  timerId = setTimeout(timerExpired, wait);
                  return invokeFunc(lastCallTime);
                }
              }
              if (timerId === undefined) {
                timerId = setTimeout(timerExpired, wait);
              }
              return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
          }

          /**
           * Creates a throttled function that only invokes `func` at most once per
           * every `wait` milliseconds. The throttled function comes with a `cancel`
           * method to cancel delayed `func` invocations and a `flush` method to
           * immediately invoke them. Provide `options` to indicate whether `func`
           * should be invoked on the leading and/or trailing edge of the `wait`
           * timeout. The `func` is invoked with the last arguments provided to the
           * throttled function. Subsequent calls to the throttled function return the
           * result of the last `func` invocation.
           *
           * **Note:** If `leading` and `trailing` options are `true`, `func` is
           * invoked on the trailing edge of the timeout only if the throttled function
           * is invoked more than once during the `wait` timeout.
           *
           * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
           * until to the next tick, similar to `setTimeout` with a timeout of `0`.
           *
           * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
           * for details over the differences between `_.throttle` and `_.debounce`.
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Function
           * @param {Function} func The function to throttle.
           * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
           * @param {Object} [options={}] The options object.
           * @param {boolean} [options.leading=true]
           *  Specify invoking on the leading edge of the timeout.
           * @param {boolean} [options.trailing=true]
           *  Specify invoking on the trailing edge of the timeout.
           * @returns {Function} Returns the new throttled function.
           * @example
           *
           * // Avoid excessively updating the position while scrolling.
           * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
           *
           * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
           * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
           * jQuery(element).on('click', throttled);
           *
           * // Cancel the trailing throttled invocation.
           * jQuery(window).on('popstate', throttled.cancel);
           */
          function throttle(func, wait, options) {
            var leading = true,
              trailing = true;

            if (typeof func != "function") {
              throw new TypeError(FUNC_ERROR_TEXT);
            }
            if (isObject(options)) {
              leading = "leading" in options ? !!options.leading : leading;
              trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
              leading: leading,
              maxWait: wait,
              trailing: trailing,
            });
          }

          /**
           * Checks if `value` is the
           * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
           * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
           *
           * @static
           * @memberOf _
           * @since 0.1.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is an object, else `false`.
           * @example
           *
           * _.isObject({});
           * // => true
           *
           * _.isObject([1, 2, 3]);
           * // => true
           *
           * _.isObject(_.noop);
           * // => true
           *
           * _.isObject(null);
           * // => false
           */
          function isObject(value) {
            var type = typeof value;
            return !!value && (type == "object" || type == "function");
          }

          /**
           * Checks if `value` is object-like. A value is object-like if it's not `null`
           * and has a `typeof` result of "object".
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
           * @example
           *
           * _.isObjectLike({});
           * // => true
           *
           * _.isObjectLike([1, 2, 3]);
           * // => true
           *
           * _.isObjectLike(_.noop);
           * // => false
           *
           * _.isObjectLike(null);
           * // => false
           */
          function isObjectLike(value) {
            return !!value && typeof value == "object";
          }

          /**
           * Checks if `value` is classified as a `Symbol` primitive or object.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to check.
           * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
           * @example
           *
           * _.isSymbol(Symbol.iterator);
           * // => true
           *
           * _.isSymbol('abc');
           * // => false
           */
          function isSymbol(value) {
            return (
              typeof value == "symbol" ||
              (isObjectLike(value) && objectToString.call(value) == symbolTag)
            );
          }

          /**
           * Converts `value` to a number.
           *
           * @static
           * @memberOf _
           * @since 4.0.0
           * @category Lang
           * @param {*} value The value to process.
           * @returns {number} Returns the number.
           * @example
           *
           * _.toNumber(3.2);
           * // => 3.2
           *
           * _.toNumber(Number.MIN_VALUE);
           * // => 5e-324
           *
           * _.toNumber(Infinity);
           * // => Infinity
           *
           * _.toNumber('3.2');
           * // => 3.2
           */
          function toNumber(value) {
            if (typeof value == "number") {
              return value;
            }
            if (isSymbol(value)) {
              return NAN;
            }
            if (isObject(value)) {
              var other =
                typeof value.valueOf == "function" ? value.valueOf() : value;
              value = isObject(other) ? other + "" : other;
            }
            if (typeof value != "string") {
              return value === 0 ? value : +value;
            }
            value = value.replace(reTrim, "");
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value)
              ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
              : reIsBadHex.test(value)
              ? NAN
              : +value;
          }

          module.exports = throttle;

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js",
          ),
        ));

        /***/
      },

    /***/ "./node_modules/lottie-web/build/player/lottie.js":
      /*!********************************************************!*\
  !*** ./node_modules/lottie-web/build/player/lottie.js ***!
  \********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_RESULT__;
        typeof navigator !== "undefined" &&
          (function(root, factory) {
            if (true) {
              !((__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                return factory(root);
              }.call(exports, __webpack_require__, exports, module)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            } else {
            }
          })(window || {}, function(window) {
            "use strict";
            var svgNS = "http://www.w3.org/2000/svg";

            var locationHref = "";

            var initialDefaultFrame = -999999;

            var subframeEnabled = true;
            var expressionsPlugin;
            var isSafari = /^((?!chrome|android).)*safari/i.test(
              navigator.userAgent,
            );
            var cachedColors = {};
            var bm_rounder = Math.round;
            var bm_rnd;
            var bm_pow = Math.pow;
            var bm_sqrt = Math.sqrt;
            var bm_abs = Math.abs;
            var bm_floor = Math.floor;
            var bm_max = Math.max;
            var bm_min = Math.min;
            var blitter = 10;

            var BMMath = {};
            (function() {
              var propertyNames = [
                "abs",
                "acos",
                "acosh",
                "asin",
                "asinh",
                "atan",
                "atanh",
                "atan2",
                "ceil",
                "cbrt",
                "expm1",
                "clz32",
                "cos",
                "cosh",
                "exp",
                "floor",
                "fround",
                "hypot",
                "imul",
                "log",
                "log1p",
                "log2",
                "log10",
                "max",
                "min",
                "pow",
                "random",
                "round",
                "sign",
                "sin",
                "sinh",
                "sqrt",
                "tan",
                "tanh",
                "trunc",
                "E",
                "LN10",
                "LN2",
                "LOG10E",
                "LOG2E",
                "PI",
                "SQRT1_2",
                "SQRT2",
              ];
              var i,
                len = propertyNames.length;
              for (i = 0; i < len; i += 1) {
                BMMath[propertyNames[i]] = Math[propertyNames[i]];
              }
            })();

            function ProjectInterface() {
              return {};
            }

            BMMath.random = Math.random;
            BMMath.abs = function(val) {
              var tOfVal = typeof val;
              if (tOfVal === "object" && val.length) {
                var absArr = createSizedArray(val.length);
                var i,
                  len = val.length;
                for (i = 0; i < len; i += 1) {
                  absArr[i] = Math.abs(val[i]);
                }
                return absArr;
              }
              return Math.abs(val);
            };
            var defaultCurveSegments = 150;
            var degToRads = Math.PI / 180;
            var roundCorner = 0.5519;

            function roundValues(flag) {
              if (flag) {
                bm_rnd = Math.round;
              } else {
                bm_rnd = function(val) {
                  return val;
                };
              }
            }
            roundValues(false);

            function styleDiv(element) {
              element.style.position = "absolute";
              element.style.top = 0;
              element.style.left = 0;
              element.style.display = "block";
              element.style.transformOrigin = element.style.webkitTransformOrigin =
                "0 0";
              element.style.backfaceVisibility = element.style.webkitBackfaceVisibility =
                "visible";
              element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle =
                "preserve-3d";
            }

            function BMEnterFrameEvent(n, c, t, d) {
              this.type = n;
              this.currentTime = c;
              this.totalTime = t;
              this.direction = d < 0 ? -1 : 1;
            }

            function BMCompleteEvent(n, d) {
              this.type = n;
              this.direction = d < 0 ? -1 : 1;
            }

            function BMCompleteLoopEvent(n, c, t, d) {
              this.type = n;
              this.currentLoop = t;
              this.totalLoops = c;
              this.direction = d < 0 ? -1 : 1;
            }

            function BMSegmentStartEvent(n, f, t) {
              this.type = n;
              this.firstFrame = f;
              this.totalFrames = t;
            }

            function BMDestroyEvent(n, t) {
              this.type = n;
              this.target = t;
            }

            var createElementID = (function() {
              var _count = 0;
              return function createID() {
                return "__lottie_element_" + ++_count;
              };
            })();

            function HSVtoRGB(h, s, v) {
              var r, g, b, i, f, p, q, t;
              i = Math.floor(h * 6);
              f = h * 6 - i;
              p = v * (1 - s);
              q = v * (1 - f * s);
              t = v * (1 - (1 - f) * s);
              switch (i % 6) {
                case 0:
                  r = v;
                  g = t;
                  b = p;
                  break;
                case 1:
                  r = q;
                  g = v;
                  b = p;
                  break;
                case 2:
                  r = p;
                  g = v;
                  b = t;
                  break;
                case 3:
                  r = p;
                  g = q;
                  b = v;
                  break;
                case 4:
                  r = t;
                  g = p;
                  b = v;
                  break;
                case 5:
                  r = v;
                  g = p;
                  b = q;
                  break;
              }
              return [r, g, b];
            }

            function RGBtoHSV(r, g, b) {
              var max = Math.max(r, g, b),
                min = Math.min(r, g, b),
                d = max - min,
                h,
                s = max === 0 ? 0 : d / max,
                v = max / 255;

              switch (max) {
                case min:
                  h = 0;
                  break;
                case r:
                  h = g - b + d * (g < b ? 6 : 0);
                  h /= 6 * d;
                  break;
                case g:
                  h = b - r + d * 2;
                  h /= 6 * d;
                  break;
                case b:
                  h = r - g + d * 4;
                  h /= 6 * d;
                  break;
              }

              return [h, s, v];
            }

            function addSaturationToRGB(color, offset) {
              var hsv = RGBtoHSV(
                color[0] * 255,
                color[1] * 255,
                color[2] * 255,
              );
              hsv[1] += offset;
              if (hsv[1] > 1) {
                hsv[1] = 1;
              } else if (hsv[1] <= 0) {
                hsv[1] = 0;
              }
              return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
            }

            function addBrightnessToRGB(color, offset) {
              var hsv = RGBtoHSV(
                color[0] * 255,
                color[1] * 255,
                color[2] * 255,
              );
              hsv[2] += offset;
              if (hsv[2] > 1) {
                hsv[2] = 1;
              } else if (hsv[2] < 0) {
                hsv[2] = 0;
              }
              return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
            }

            function addHueToRGB(color, offset) {
              var hsv = RGBtoHSV(
                color[0] * 255,
                color[1] * 255,
                color[2] * 255,
              );
              hsv[0] += offset / 360;
              if (hsv[0] > 1) {
                hsv[0] -= 1;
              } else if (hsv[0] < 0) {
                hsv[0] += 1;
              }
              return HSVtoRGB(hsv[0], hsv[1], hsv[2]);
            }

            var rgbToHex = (function() {
              var colorMap = [];
              var i;
              var hex;
              for (i = 0; i < 256; i += 1) {
                hex = i.toString(16);
                colorMap[i] = hex.length == 1 ? "0" + hex : hex;
              }

              return function(r, g, b) {
                if (r < 0) {
                  r = 0;
                }
                if (g < 0) {
                  g = 0;
                }
                if (b < 0) {
                  b = 0;
                }
                return "#" + colorMap[r] + colorMap[g] + colorMap[b];
              };
            })();
            function BaseEvent() {}
            BaseEvent.prototype = {
              triggerEvent: function(eventName, args) {
                if (this._cbs[eventName]) {
                  var len = this._cbs[eventName].length;
                  for (var i = 0; i < len; i++) {
                    this._cbs[eventName][i](args);
                  }
                }
              },
              addEventListener: function(eventName, callback) {
                if (!this._cbs[eventName]) {
                  this._cbs[eventName] = [];
                }
                this._cbs[eventName].push(callback);

                return function() {
                  this.removeEventListener(eventName, callback);
                }.bind(this);
              },
              removeEventListener: function(eventName, callback) {
                if (!callback) {
                  this._cbs[eventName] = null;
                } else if (this._cbs[eventName]) {
                  var i = 0,
                    len = this._cbs[eventName].length;
                  while (i < len) {
                    if (this._cbs[eventName][i] === callback) {
                      this._cbs[eventName].splice(i, 1);
                      i -= 1;
                      len -= 1;
                    }
                    i += 1;
                  }
                  if (!this._cbs[eventName].length) {
                    this._cbs[eventName] = null;
                  }
                }
              },
            };
            var createTypedArray = (function() {
              function createRegularArray(type, len) {
                var i = 0,
                  arr = [],
                  value;
                switch (type) {
                  case "int16":
                  case "uint8c":
                    value = 1;
                    break;
                  default:
                    value = 1.1;
                    break;
                }
                for (i = 0; i < len; i += 1) {
                  arr.push(value);
                }
                return arr;
              }
              function createTypedArray(type, len) {
                if (type === "float32") {
                  return new Float32Array(len);
                } else if (type === "int16") {
                  return new Int16Array(len);
                } else if (type === "uint8c") {
                  return new Uint8ClampedArray(len);
                }
              }
              if (
                typeof Uint8ClampedArray === "function" &&
                typeof Float32Array === "function"
              ) {
                return createTypedArray;
              } else {
                return createRegularArray;
              }
            })();

            function createSizedArray(len) {
              return Array.apply(null, { length: len });
            }
            function createNS(type) {
              //return {appendChild:function(){},setAttribute:function(){},style:{}}
              return document.createElementNS(svgNS, type);
            }
            function createTag(type) {
              //return {appendChild:function(){},setAttribute:function(){},style:{}}
              return document.createElement(type);
            }
            function DynamicPropertyContainer() {}
            DynamicPropertyContainer.prototype = {
              addDynamicProperty: function(prop) {
                if (this.dynamicProperties.indexOf(prop) === -1) {
                  this.dynamicProperties.push(prop);
                  this.container.addDynamicProperty(this);
                  this._isAnimated = true;
                }
              },
              iterateDynamicProperties: function() {
                this._mdf = false;
                var i,
                  len = this.dynamicProperties.length;
                for (i = 0; i < len; i += 1) {
                  this.dynamicProperties[i].getValue();
                  if (this.dynamicProperties[i]._mdf) {
                    this._mdf = true;
                  }
                }
              },
              initDynamicPropertyContainer: function(container) {
                this.container = container;
                this.dynamicProperties = [];
                this._mdf = false;
                this._isAnimated = false;
              },
            };
            var getBlendMode = (function() {
              var blendModeEnums = {
                0: "source-over",
                1: "multiply",
                2: "screen",
                3: "overlay",
                4: "darken",
                5: "lighten",
                6: "color-dodge",
                7: "color-burn",
                8: "hard-light",
                9: "soft-light",
                10: "difference",
                11: "exclusion",
                12: "hue",
                13: "saturation",
                14: "color",
                15: "luminosity",
              };

              return function(mode) {
                return blendModeEnums[mode] || "";
              };
            })();
            /*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */

            /**
             * 2D transformation matrix object initialized with identity matrix.
             *
             * The matrix can synchronize a canvas context by supplying the context
             * as an argument, or later apply current absolute transform to an
             * existing context.
             *
             * All values are handled as floating point values.
             *
             * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix
             * @prop {number} a - scale x
             * @prop {number} b - shear y
             * @prop {number} c - shear x
             * @prop {number} d - scale y
             * @prop {number} e - translate x
             * @prop {number} f - translate y
             * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context
             * @constructor
             */

            var Matrix = (function() {
              var _cos = Math.cos;
              var _sin = Math.sin;
              var _tan = Math.tan;
              var _rnd = Math.round;

              function reset() {
                this.props[0] = 1;
                this.props[1] = 0;
                this.props[2] = 0;
                this.props[3] = 0;
                this.props[4] = 0;
                this.props[5] = 1;
                this.props[6] = 0;
                this.props[7] = 0;
                this.props[8] = 0;
                this.props[9] = 0;
                this.props[10] = 1;
                this.props[11] = 0;
                this.props[12] = 0;
                this.props[13] = 0;
                this.props[14] = 0;
                this.props[15] = 1;
                return this;
              }

              function rotate(angle) {
                if (angle === 0) {
                  return this;
                }
                var mCos = _cos(angle);
                var mSin = _sin(angle);
                return this._t(
                  mCos,
                  -mSin,
                  0,
                  0,
                  mSin,
                  mCos,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  1,
                );
              }

              function rotateX(angle) {
                if (angle === 0) {
                  return this;
                }
                var mCos = _cos(angle);
                var mSin = _sin(angle);
                return this._t(
                  1,
                  0,
                  0,
                  0,
                  0,
                  mCos,
                  -mSin,
                  0,
                  0,
                  mSin,
                  mCos,
                  0,
                  0,
                  0,
                  0,
                  1,
                );
              }

              function rotateY(angle) {
                if (angle === 0) {
                  return this;
                }
                var mCos = _cos(angle);
                var mSin = _sin(angle);
                return this._t(
                  mCos,
                  0,
                  mSin,
                  0,
                  0,
                  1,
                  0,
                  0,
                  -mSin,
                  0,
                  mCos,
                  0,
                  0,
                  0,
                  0,
                  1,
                );
              }

              function rotateZ(angle) {
                if (angle === 0) {
                  return this;
                }
                var mCos = _cos(angle);
                var mSin = _sin(angle);
                return this._t(
                  mCos,
                  -mSin,
                  0,
                  0,
                  mSin,
                  mCos,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  1,
                );
              }

              function shear(sx, sy) {
                return this._t(1, sy, sx, 1, 0, 0);
              }

              function skew(ax, ay) {
                return this.shear(_tan(ax), _tan(ay));
              }

              function skewFromAxis(ax, angle) {
                var mCos = _cos(angle);
                var mSin = _sin(angle);
                return this._t(
                  mCos,
                  mSin,
                  0,
                  0,
                  -mSin,
                  mCos,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  0,
                  0,
                  0,
                  1,
                )
                  ._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                  ._t(
                    mCos,
                    -mSin,
                    0,
                    0,
                    mSin,
                    mCos,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                  );
                //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
              }

              function scale(sx, sy, sz) {
                if (!sz && sz !== 0) {
                  sz = 1;
                }
                if (sx === 1 && sy === 1 && sz === 1) {
                  return this;
                }
                return this._t(
                  sx,
                  0,
                  0,
                  0,
                  0,
                  sy,
                  0,
                  0,
                  0,
                  0,
                  sz,
                  0,
                  0,
                  0,
                  0,
                  1,
                );
              }

              function setTransform(
                a,
                b,
                c,
                d,
                e,
                f,
                g,
                h,
                i,
                j,
                k,
                l,
                m,
                n,
                o,
                p,
              ) {
                this.props[0] = a;
                this.props[1] = b;
                this.props[2] = c;
                this.props[3] = d;
                this.props[4] = e;
                this.props[5] = f;
                this.props[6] = g;
                this.props[7] = h;
                this.props[8] = i;
                this.props[9] = j;
                this.props[10] = k;
                this.props[11] = l;
                this.props[12] = m;
                this.props[13] = n;
                this.props[14] = o;
                this.props[15] = p;
                return this;
              }

              function translate(tx, ty, tz) {
                tz = tz || 0;
                if (tx !== 0 || ty !== 0 || tz !== 0) {
                  return this._t(
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    tx,
                    ty,
                    tz,
                    1,
                  );
                }
                return this;
              }

              function transform(
                a2,
                b2,
                c2,
                d2,
                e2,
                f2,
                g2,
                h2,
                i2,
                j2,
                k2,
                l2,
                m2,
                n2,
                o2,
                p2,
              ) {
                var _p = this.props;

                if (
                  a2 === 1 &&
                  b2 === 0 &&
                  c2 === 0 &&
                  d2 === 0 &&
                  e2 === 0 &&
                  f2 === 1 &&
                  g2 === 0 &&
                  h2 === 0 &&
                  i2 === 0 &&
                  j2 === 0 &&
                  k2 === 1 &&
                  l2 === 0
                ) {
                  //NOTE: commenting this condition because TurboFan deoptimizes code when present
                  //if(m2 !== 0 || n2 !== 0 || o2 !== 0){
                  _p[12] = _p[12] * a2 + _p[15] * m2;
                  _p[13] = _p[13] * f2 + _p[15] * n2;
                  _p[14] = _p[14] * k2 + _p[15] * o2;
                  _p[15] = _p[15] * p2;
                  //}
                  this._identityCalculated = false;
                  return this;
                }

                var a1 = _p[0];
                var b1 = _p[1];
                var c1 = _p[2];
                var d1 = _p[3];
                var e1 = _p[4];
                var f1 = _p[5];
                var g1 = _p[6];
                var h1 = _p[7];
                var i1 = _p[8];
                var j1 = _p[9];
                var k1 = _p[10];
                var l1 = _p[11];
                var m1 = _p[12];
                var n1 = _p[13];
                var o1 = _p[14];
                var p1 = _p[15];

                /* matrix order (canvas compatible):
                 * ace
                 * bdf
                 * 001
                 */
                _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
                _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;
                _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;
                _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;

                _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;
                _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;
                _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;
                _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;

                _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;
                _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;
                _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;
                _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;

                _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;
                _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;
                _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;
                _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;

                this._identityCalculated = false;
                return this;
              }

              function isIdentity() {
                if (!this._identityCalculated) {
                  this._identity = !(
                    this.props[0] !== 1 ||
                    this.props[1] !== 0 ||
                    this.props[2] !== 0 ||
                    this.props[3] !== 0 ||
                    this.props[4] !== 0 ||
                    this.props[5] !== 1 ||
                    this.props[6] !== 0 ||
                    this.props[7] !== 0 ||
                    this.props[8] !== 0 ||
                    this.props[9] !== 0 ||
                    this.props[10] !== 1 ||
                    this.props[11] !== 0 ||
                    this.props[12] !== 0 ||
                    this.props[13] !== 0 ||
                    this.props[14] !== 0 ||
                    this.props[15] !== 1
                  );
                  this._identityCalculated = true;
                }
                return this._identity;
              }

              function equals(matr) {
                var i = 0;
                while (i < 16) {
                  if (matr.props[i] !== this.props[i]) {
                    return false;
                  }
                  i += 1;
                }
                return true;
              }

              function clone(matr) {
                var i;
                for (i = 0; i < 16; i += 1) {
                  matr.props[i] = this.props[i];
                }
              }

              function cloneFromProps(props) {
                var i;
                for (i = 0; i < 16; i += 1) {
                  this.props[i] = props[i];
                }
              }

              function applyToPoint(x, y, z) {
                return {
                  x:
                    x * this.props[0] +
                    y * this.props[4] +
                    z * this.props[8] +
                    this.props[12],
                  y:
                    x * this.props[1] +
                    y * this.props[5] +
                    z * this.props[9] +
                    this.props[13],
                  z:
                    x * this.props[2] +
                    y * this.props[6] +
                    z * this.props[10] +
                    this.props[14],
                };
                /*return {
         x: x * me.a + y * me.c + me.e,
         y: x * me.b + y * me.d + me.f
         };*/
              }
              function applyToX(x, y, z) {
                return (
                  x * this.props[0] +
                  y * this.props[4] +
                  z * this.props[8] +
                  this.props[12]
                );
              }
              function applyToY(x, y, z) {
                return (
                  x * this.props[1] +
                  y * this.props[5] +
                  z * this.props[9] +
                  this.props[13]
                );
              }
              function applyToZ(x, y, z) {
                return (
                  x * this.props[2] +
                  y * this.props[6] +
                  z * this.props[10] +
                  this.props[14]
                );
              }

              function inversePoint(pt) {
                var determinant =
                  this.props[0] * this.props[5] - this.props[1] * this.props[4];
                var a = this.props[5] / determinant;
                var b = -this.props[1] / determinant;
                var c = -this.props[4] / determinant;
                var d = this.props[0] / determinant;
                var e =
                  (this.props[4] * this.props[13] -
                    this.props[5] * this.props[12]) /
                  determinant;
                var f =
                  -(
                    this.props[0] * this.props[13] -
                    this.props[1] * this.props[12]
                  ) / determinant;
                return [
                  pt[0] * a + pt[1] * c + e,
                  pt[0] * b + pt[1] * d + f,
                  0,
                ];
              }

              function inversePoints(pts) {
                var i,
                  len = pts.length,
                  retPts = [];
                for (i = 0; i < len; i += 1) {
                  retPts[i] = inversePoint(pts[i]);
                }
                return retPts;
              }

              function applyToTriplePoints(pt1, pt2, pt3) {
                var arr = createTypedArray("float32", 6);
                if (this.isIdentity()) {
                  arr[0] = pt1[0];
                  arr[1] = pt1[1];
                  arr[2] = pt2[0];
                  arr[3] = pt2[1];
                  arr[4] = pt3[0];
                  arr[5] = pt3[1];
                } else {
                  var p0 = this.props[0],
                    p1 = this.props[1],
                    p4 = this.props[4],
                    p5 = this.props[5],
                    p12 = this.props[12],
                    p13 = this.props[13];
                  arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;
                  arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;
                  arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;
                  arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;
                  arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;
                  arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;
                }
                return arr;
              }

              function applyToPointArray(x, y, z) {
                var arr;
                if (this.isIdentity()) {
                  arr = [x, y, z];
                } else {
                  arr = [
                    x * this.props[0] +
                      y * this.props[4] +
                      z * this.props[8] +
                      this.props[12],
                    x * this.props[1] +
                      y * this.props[5] +
                      z * this.props[9] +
                      this.props[13],
                    x * this.props[2] +
                      y * this.props[6] +
                      z * this.props[10] +
                      this.props[14],
                  ];
                }
                return arr;
              }

              function applyToPointStringified(x, y) {
                if (this.isIdentity()) {
                  return x + "," + y;
                }
                var _p = this.props;
                return (
                  Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 +
                  "," +
                  Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100
                );
              }

              function toCSS() {
                //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
                /*if(this.isIdentity()) {
            return '';
        }*/
                var i = 0;
                var props = this.props;
                var cssValue = "matrix3d(";
                var v = 10000;
                while (i < 16) {
                  cssValue += _rnd(props[i] * v) / v;
                  cssValue += i === 15 ? ")" : ",";
                  i += 1;
                }
                return cssValue;
              }

              function roundMatrixProperty(val) {
                var v = 10000;
                if (
                  (val < 0.000001 && val > 0) ||
                  (val > -0.000001 && val < 0)
                ) {
                  return _rnd(val * v) / v;
                }
                return val;
              }

              function to2dCSS() {
                //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.
                /*if(this.isIdentity()) {
            return '';
        }*/
                var props = this.props;
                var _a = roundMatrixProperty(props[0]);
                var _b = roundMatrixProperty(props[1]);
                var _c = roundMatrixProperty(props[4]);
                var _d = roundMatrixProperty(props[5]);
                var _e = roundMatrixProperty(props[12]);
                var _f = roundMatrixProperty(props[13]);
                return (
                  "matrix(" +
                  _a +
                  "," +
                  _b +
                  "," +
                  _c +
                  "," +
                  _d +
                  "," +
                  _e +
                  "," +
                  _f +
                  ")"
                );
              }

              return function() {
                this.reset = reset;
                this.rotate = rotate;
                this.rotateX = rotateX;
                this.rotateY = rotateY;
                this.rotateZ = rotateZ;
                this.skew = skew;
                this.skewFromAxis = skewFromAxis;
                this.shear = shear;
                this.scale = scale;
                this.setTransform = setTransform;
                this.translate = translate;
                this.transform = transform;
                this.applyToPoint = applyToPoint;
                this.applyToX = applyToX;
                this.applyToY = applyToY;
                this.applyToZ = applyToZ;
                this.applyToPointArray = applyToPointArray;
                this.applyToTriplePoints = applyToTriplePoints;
                this.applyToPointStringified = applyToPointStringified;
                this.toCSS = toCSS;
                this.to2dCSS = to2dCSS;
                this.clone = clone;
                this.cloneFromProps = cloneFromProps;
                this.equals = equals;
                this.inversePoints = inversePoints;
                this.inversePoint = inversePoint;
                this._t = this.transform;
                this.isIdentity = isIdentity;
                this._identity = true;
                this._identityCalculated = false;

                this.props = createTypedArray("float32", 16);
                this.reset();
              };
            })();

            /*
 Copyright 2014 David Bau.

 Permission is hereby granted, free of charge, to any person obtaining
 a copy of this software and associated documentation files (the
 "Software"), to deal in the Software without restriction, including
 without limitation the rights to use, copy, modify, merge, publish,
 distribute, sublicense, and/or sell copies of the Software, and to
 permit persons to whom the Software is furnished to do so, subject to
 the following conditions:

 The above copyright notice and this permission notice shall be
 included in all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 */

            (function(pool, math) {
              //
              // The following constants are related to IEEE 754 limits.
              //
              var global = this,
                width = 256, // each RC4 output is 0 <= x < 256
                chunks = 6, // at least six RC4 outputs for each double
                digits = 52, // there are 52 significant digits in a double
                rngname = "random", // rngname: name for Math.random and Math.seedrandom
                startdenom = math.pow(width, chunks),
                significance = math.pow(2, digits),
                overflow = significance * 2,
                mask = width - 1,
                nodecrypto; // node.js crypto module, initialized at the bottom.

              //
              // seedrandom()
              // This is the seedrandom function described above.
              //
              function seedrandom(seed, options, callback) {
                var key = [];
                options = options === true ? { entropy: true } : options || {};

                // Flatten the seed string or build one from local entropy if needed.
                var shortseed = mixkey(
                  flatten(
                    options.entropy
                      ? [seed, tostring(pool)]
                      : seed === null
                      ? autoseed()
                      : seed,
                    3,
                  ),
                  key,
                );

                // Use the seed to initialize an ARC4 generator.
                var arc4 = new ARC4(key);

                // This function returns a random double in [0, 1) that contains
                // randomness in every bit of the mantissa of the IEEE 754 value.
                var prng = function() {
                  var n = arc4.g(chunks), // Start with a numerator n < 2 ^ 48
                    d = startdenom, //   and denominator d = 2 ^ 48.
                    x = 0; //   and no 'extra last byte'.
                  while (n < significance) {
                    // Fill up all significant digits by
                    n = (n + x) * width; //   shifting numerator and
                    d *= width; //   denominator and generating a
                    x = arc4.g(1); //   new least-significant-byte.
                  }
                  while (n >= overflow) {
                    // To avoid rounding up, before adding
                    n /= 2; //   last byte, shift everything
                    d /= 2; //   right using integer math until
                    x >>>= 1; //   we have exactly the desired bits.
                  }
                  return (n + x) / d; // Form the number within [0, 1).
                };

                prng.int32 = function() {
                  return arc4.g(4) | 0;
                };
                prng.quick = function() {
                  return arc4.g(4) / 0x100000000;
                };
                prng.double = prng;

                // Mix the randomness into accumulated entropy.
                mixkey(tostring(arc4.S), pool);

                // Calling convention: what to return as a function of prng, seed, is_math.
                return (options.pass ||
                  callback ||
                  function(prng, seed, is_math_call, state) {
                    if (state) {
                      // Load the arc4 state from the given state if it has an S array.
                      if (state.S) {
                        copy(state, arc4);
                      }
                      // Only provide the .state method if requested via options.state.
                      prng.state = function() {
                        return copy(arc4, {});
                      };
                    }

                    // If called as a method of Math (Math.seedrandom()), mutate
                    // Math.random because that is how seedrandom.js has worked since v1.0.
                    if (is_math_call) {
                      math[rngname] = prng;
                      return seed;
                    }

                    // Otherwise, it is a newer calling convention, so return the
                    // prng directly.
                    else return prng;
                  })(prng, shortseed, "global" in options ? options.global : this == math, options.state);
              }
              math["seed" + rngname] = seedrandom;

              //
              // ARC4
              //
              // An ARC4 implementation.  The constructor takes a key in the form of
              // an array of at most (width) integers that should be 0 <= x < (width).
              //
              // The g(count) method returns a pseudorandom integer that concatenates
              // the next (count) outputs from ARC4.  Its return value is a number x
              // that is in the range 0 <= x < (width ^ count).
              //
              function ARC4(key) {
                var t,
                  keylen = key.length,
                  me = this,
                  i = 0,
                  j = (me.i = me.j = 0),
                  s = (me.S = []);

                // The empty key [] is treated as [0].
                if (!keylen) {
                  key = [keylen++];
                }

                // Set up S using the standard key scheduling algorithm.
                while (i < width) {
                  s[i] = i++;
                }
                for (i = 0; i < width; i++) {
                  s[i] = s[(j = mask & (j + key[i % keylen] + (t = s[i])))];
                  s[j] = t;
                }

                // The "g" method returns the next (count) outputs as one number.
                me.g = function(count) {
                  // Using instance members instead of closure state nearly doubles speed.
                  var t,
                    r = 0,
                    i = me.i,
                    j = me.j,
                    s = me.S;
                  while (count--) {
                    t = s[(i = mask & (i + 1))];
                    r =
                      r * width +
                      s[mask & ((s[i] = s[(j = mask & (j + t))]) + (s[j] = t))];
                  }
                  me.i = i;
                  me.j = j;
                  return r;
                  // For robust unpredictability, the function call below automatically
                  // discards an initial batch of values.  This is called RC4-drop[256].
                  // See http://google.com/search?q=rsa+fluhrer+response&btnI
                };
              }

              //
              // copy()
              // Copies internal state of ARC4 to or from a plain object.
              //
              function copy(f, t) {
                t.i = f.i;
                t.j = f.j;
                t.S = f.S.slice();
                return t;
              }

              //
              // flatten()
              // Converts an object tree to nested arrays of strings.
              //
              function flatten(obj, depth) {
                var result = [],
                  typ = typeof obj,
                  prop;
                if (depth && typ == "object") {
                  for (prop in obj) {
                    try {
                      result.push(flatten(obj[prop], depth - 1));
                    } catch (e) {}
                  }
                }
                return result.length
                  ? result
                  : typ == "string"
                  ? obj
                  : obj + "\0";
              }

              //
              // mixkey()
              // Mixes a string seed into a key that is an array of integers, and
              // returns a shortened string seed that is equivalent to the result key.
              //
              function mixkey(seed, key) {
                var stringseed = seed + "",
                  smear,
                  j = 0;
                while (j < stringseed.length) {
                  key[mask & j] =
                    mask &
                    ((smear ^= key[mask & j] * 19) +
                      stringseed.charCodeAt(j++));
                }
                return tostring(key);
              }

              //
              // autoseed()
              // Returns an object for autoseeding, using window.crypto and Node crypto
              // module if available.
              //
              function autoseed() {
                try {
                  if (nodecrypto) {
                    return tostring(nodecrypto.randomBytes(width));
                  }
                  var out = new Uint8Array(width);
                  (global.crypto || global.msCrypto).getRandomValues(out);
                  return tostring(out);
                } catch (e) {
                  var browser = global.navigator,
                    plugins = browser && browser.plugins;
                  return [
                    +new Date(),
                    global,
                    plugins,
                    global.screen,
                    tostring(pool),
                  ];
                }
              }

              //
              // tostring()
              // Converts an array of charcodes to a string
              //
              function tostring(a) {
                return String.fromCharCode.apply(0, a);
              }

              //
              // When seedrandom.js is loaded, we immediately mix a few bits
              // from the built-in RNG into the entropy pool.  Because we do
              // not want to interfere with deterministic PRNG state later,
              // seedrandom will not call math.random on its own again after
              // initialization.
              //
              mixkey(math.random(), pool);

              //
              // Nodejs and AMD support: export the implementation as a module using
              // either convention.
              //

              // End anonymous scope, and pass initial values.
            })(
              [], // pool: entropy pool starts empty
              BMMath, // math: package containing random, pow, and seedrandom
            );
            var BezierFactory = (function() {
              /**
               * BezierEasing - use bezier curve for transition easing function
               * by Gaëtan Renaudeau 2014 - 2015 – MIT License
               *
               * Credits: is based on Firefox's nsSMILKeySpline.cpp
               * Usage:
               * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])
               * spline.get(x) => returns the easing value | x must be in [0, 1] range
               *
               */

              var ob = {};
              ob.getBezierEasing = getBezierEasing;
              var beziers = {};

              function getBezierEasing(a, b, c, d, nm) {
                var str =
                  nm ||
                  ("bez_" + a + "_" + b + "_" + c + "_" + d).replace(
                    /\./g,
                    "p",
                  );
                if (beziers[str]) {
                  return beziers[str];
                }
                var bezEasing = new BezierEasing([a, b, c, d]);
                beziers[str] = bezEasing;
                return bezEasing;
              }

              // These values are established by empiricism with tests (tradeoff: performance VS precision)
              var NEWTON_ITERATIONS = 4;
              var NEWTON_MIN_SLOPE = 0.001;
              var SUBDIVISION_PRECISION = 0.0000001;
              var SUBDIVISION_MAX_ITERATIONS = 10;

              var kSplineTableSize = 11;
              var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);

              var float32ArraySupported = typeof Float32Array === "function";

              function A(aA1, aA2) {
                return 1.0 - 3.0 * aA2 + 3.0 * aA1;
              }
              function B(aA1, aA2) {
                return 3.0 * aA2 - 6.0 * aA1;
              }
              function C(aA1) {
                return 3.0 * aA1;
              }

              // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.
              function calcBezier(aT, aA1, aA2) {
                return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;
              }

              // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.
              function getSlope(aT, aA1, aA2) {
                return (
                  3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1)
                );
              }

              function binarySubdivide(aX, aA, aB, mX1, mX2) {
                var currentX,
                  currentT,
                  i = 0;
                do {
                  currentT = aA + (aB - aA) / 2.0;
                  currentX = calcBezier(currentT, mX1, mX2) - aX;
                  if (currentX > 0.0) {
                    aB = currentT;
                  } else {
                    aA = currentT;
                  }
                } while (
                  Math.abs(currentX) > SUBDIVISION_PRECISION &&
                  ++i < SUBDIVISION_MAX_ITERATIONS
                );
                return currentT;
              }

              function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {
                for (var i = 0; i < NEWTON_ITERATIONS; ++i) {
                  var currentSlope = getSlope(aGuessT, mX1, mX2);
                  if (currentSlope === 0.0) return aGuessT;
                  var currentX = calcBezier(aGuessT, mX1, mX2) - aX;
                  aGuessT -= currentX / currentSlope;
                }
                return aGuessT;
              }

              /**
               * points is an array of [ mX1, mY1, mX2, mY2 ]
               */
              function BezierEasing(points) {
                this._p = points;
                this._mSampleValues = float32ArraySupported
                  ? new Float32Array(kSplineTableSize)
                  : new Array(kSplineTableSize);
                this._precomputed = false;

                this.get = this.get.bind(this);
              }

              BezierEasing.prototype = {
                get: function(x) {
                  var mX1 = this._p[0],
                    mY1 = this._p[1],
                    mX2 = this._p[2],
                    mY2 = this._p[3];
                  if (!this._precomputed) this._precompute();
                  if (mX1 === mY1 && mX2 === mY2) return x; // linear
                  // Because JavaScript number are imprecise, we should guarantee the extremes are right.
                  if (x === 0) return 0;
                  if (x === 1) return 1;
                  return calcBezier(this._getTForX(x), mY1, mY2);
                },

                // Private part

                _precompute: function() {
                  var mX1 = this._p[0],
                    mY1 = this._p[1],
                    mX2 = this._p[2],
                    mY2 = this._p[3];
                  this._precomputed = true;
                  if (mX1 !== mY1 || mX2 !== mY2) this._calcSampleValues();
                },

                _calcSampleValues: function() {
                  var mX1 = this._p[0],
                    mX2 = this._p[2];
                  for (var i = 0; i < kSplineTableSize; ++i) {
                    this._mSampleValues[i] = calcBezier(
                      i * kSampleStepSize,
                      mX1,
                      mX2,
                    );
                  }
                },

                /**
                 * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.
                 */
                _getTForX: function(aX) {
                  var mX1 = this._p[0],
                    mX2 = this._p[2],
                    mSampleValues = this._mSampleValues;

                  var intervalStart = 0.0;
                  var currentSample = 1;
                  var lastSample = kSplineTableSize - 1;

                  for (
                    ;
                    currentSample !== lastSample &&
                    mSampleValues[currentSample] <= aX;
                    ++currentSample
                  ) {
                    intervalStart += kSampleStepSize;
                  }
                  --currentSample;

                  // Interpolate to provide an initial guess for t
                  var dist =
                    (aX - mSampleValues[currentSample]) /
                    (mSampleValues[currentSample + 1] -
                      mSampleValues[currentSample]);
                  var guessForT = intervalStart + dist * kSampleStepSize;

                  var initialSlope = getSlope(guessForT, mX1, mX2);
                  if (initialSlope >= NEWTON_MIN_SLOPE) {
                    return newtonRaphsonIterate(aX, guessForT, mX1, mX2);
                  } else if (initialSlope === 0.0) {
                    return guessForT;
                  } else {
                    return binarySubdivide(
                      aX,
                      intervalStart,
                      intervalStart + kSampleStepSize,
                      mX1,
                      mX2,
                    );
                  }
                },
              };

              return ob;
            })();
            (function() {
              var lastTime = 0;
              var vendors = ["ms", "moz", "webkit", "o"];
              for (
                var x = 0;
                x < vendors.length && !window.requestAnimationFrame;
                ++x
              ) {
                window.requestAnimationFrame =
                  window[vendors[x] + "RequestAnimationFrame"];
                window.cancelAnimationFrame =
                  window[vendors[x] + "CancelAnimationFrame"] ||
                  window[vendors[x] + "CancelRequestAnimationFrame"];
              }
              if (!window.requestAnimationFrame)
                window.requestAnimationFrame = function(callback, element) {
                  var currTime = new Date().getTime();
                  var timeToCall = Math.max(0, 16 - (currTime - lastTime));
                  var id = setTimeout(function() {
                    callback(currTime + timeToCall);
                  }, timeToCall);
                  lastTime = currTime + timeToCall;
                  return id;
                };
              if (!window.cancelAnimationFrame)
                window.cancelAnimationFrame = function(id) {
                  clearTimeout(id);
                };
            })();

            function extendPrototype(sources, destination) {
              var i,
                len = sources.length,
                sourcePrototype;
              for (i = 0; i < len; i += 1) {
                sourcePrototype = sources[i].prototype;
                for (var attr in sourcePrototype) {
                  if (sourcePrototype.hasOwnProperty(attr))
                    destination.prototype[attr] = sourcePrototype[attr];
                }
              }
            }

            function getDescriptor(object, prop) {
              return Object.getOwnPropertyDescriptor(object, prop);
            }

            function createProxyFunction(prototype) {
              function ProxyFunction() {}
              ProxyFunction.prototype = prototype;
              return ProxyFunction;
            }
            function bezFunction() {
              var easingFunctions = [];
              var math = Math;

              function pointOnLine2D(x1, y1, x2, y2, x3, y3) {
                var det1 =
                  x1 * y2 + y1 * x3 + x2 * y3 - x3 * y2 - y3 * x1 - x2 * y1;
                return det1 > -0.001 && det1 < 0.001;
              }

              function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {
                if (z1 === 0 && z2 === 0 && z3 === 0) {
                  return pointOnLine2D(x1, y1, x2, y2, x3, y3);
                }
                var dist1 = Math.sqrt(
                  Math.pow(x2 - x1, 2) +
                    Math.pow(y2 - y1, 2) +
                    Math.pow(z2 - z1, 2),
                );
                var dist2 = Math.sqrt(
                  Math.pow(x3 - x1, 2) +
                    Math.pow(y3 - y1, 2) +
                    Math.pow(z3 - z1, 2),
                );
                var dist3 = Math.sqrt(
                  Math.pow(x3 - x2, 2) +
                    Math.pow(y3 - y2, 2) +
                    Math.pow(z3 - z2, 2),
                );
                var diffDist;
                if (dist1 > dist2) {
                  if (dist1 > dist3) {
                    diffDist = dist1 - dist2 - dist3;
                  } else {
                    diffDist = dist3 - dist2 - dist1;
                  }
                } else if (dist3 > dist2) {
                  diffDist = dist3 - dist2 - dist1;
                } else {
                  diffDist = dist2 - dist1 - dist3;
                }
                return diffDist > -0.0001 && diffDist < 0.0001;
              }

              var getBezierLength = (function() {
                return function(pt1, pt2, pt3, pt4) {
                  var curveSegments = defaultCurveSegments;
                  var k;
                  var i, len;
                  var ptCoord,
                    perc,
                    addedLength = 0;
                  var ptDistance;
                  var point = [],
                    lastPoint = [];
                  var lengthData = bezier_length_pool.newElement();
                  len = pt3.length;
                  for (k = 0; k < curveSegments; k += 1) {
                    perc = k / (curveSegments - 1);
                    ptDistance = 0;
                    for (i = 0; i < len; i += 1) {
                      ptCoord =
                        bm_pow(1 - perc, 3) * pt1[i] +
                        3 * bm_pow(1 - perc, 2) * perc * pt3[i] +
                        3 * (1 - perc) * bm_pow(perc, 2) * pt4[i] +
                        bm_pow(perc, 3) * pt2[i];
                      point[i] = ptCoord;
                      if (lastPoint[i] !== null) {
                        ptDistance += bm_pow(point[i] - lastPoint[i], 2);
                      }
                      lastPoint[i] = point[i];
                    }
                    if (ptDistance) {
                      ptDistance = bm_sqrt(ptDistance);
                      addedLength += ptDistance;
                    }
                    lengthData.percents[k] = perc;
                    lengthData.lengths[k] = addedLength;
                  }
                  lengthData.addedLength = addedLength;
                  return lengthData;
                };
              })();

              function getSegmentsLength(shapeData) {
                var segmentsLength = segments_length_pool.newElement();
                var closed = shapeData.c;
                var pathV = shapeData.v;
                var pathO = shapeData.o;
                var pathI = shapeData.i;
                var i,
                  len = shapeData._length;
                var lengths = segmentsLength.lengths;
                var totalLength = 0;
                for (i = 0; i < len - 1; i += 1) {
                  lengths[i] = getBezierLength(
                    pathV[i],
                    pathV[i + 1],
                    pathO[i],
                    pathI[i + 1],
                  );
                  totalLength += lengths[i].addedLength;
                }
                if (closed && len) {
                  lengths[i] = getBezierLength(
                    pathV[i],
                    pathV[0],
                    pathO[i],
                    pathI[0],
                  );
                  totalLength += lengths[i].addedLength;
                }
                segmentsLength.totalLength = totalLength;
                return segmentsLength;
              }

              function BezierData(length) {
                this.segmentLength = 0;
                this.points = new Array(length);
              }

              function PointData(partial, point) {
                this.partialLength = partial;
                this.point = point;
              }

              var buildBezierData = (function() {
                var storedData = {};

                return function(pt1, pt2, pt3, pt4) {
                  var bezierName = (
                    pt1[0] +
                    "_" +
                    pt1[1] +
                    "_" +
                    pt2[0] +
                    "_" +
                    pt2[1] +
                    "_" +
                    pt3[0] +
                    "_" +
                    pt3[1] +
                    "_" +
                    pt4[0] +
                    "_" +
                    pt4[1]
                  ).replace(/\./g, "p");
                  if (!storedData[bezierName]) {
                    var curveSegments = defaultCurveSegments;
                    var k, i, len;
                    var ptCoord,
                      perc,
                      addedLength = 0;
                    var ptDistance;
                    var point,
                      lastPoint = null;
                    if (
                      pt1.length === 2 &&
                      (pt1[0] != pt2[0] || pt1[1] != pt2[1]) &&
                      pointOnLine2D(
                        pt1[0],
                        pt1[1],
                        pt2[0],
                        pt2[1],
                        pt1[0] + pt3[0],
                        pt1[1] + pt3[1],
                      ) &&
                      pointOnLine2D(
                        pt1[0],
                        pt1[1],
                        pt2[0],
                        pt2[1],
                        pt2[0] + pt4[0],
                        pt2[1] + pt4[1],
                      )
                    ) {
                      curveSegments = 2;
                    }
                    var bezierData = new BezierData(curveSegments);
                    len = pt3.length;
                    for (k = 0; k < curveSegments; k += 1) {
                      point = createSizedArray(len);
                      perc = k / (curveSegments - 1);
                      ptDistance = 0;
                      for (i = 0; i < len; i += 1) {
                        ptCoord =
                          bm_pow(1 - perc, 3) * pt1[i] +
                          3 * bm_pow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) +
                          3 * (1 - perc) * bm_pow(perc, 2) * (pt2[i] + pt4[i]) +
                          bm_pow(perc, 3) * pt2[i];
                        point[i] = ptCoord;
                        if (lastPoint !== null) {
                          ptDistance += bm_pow(point[i] - lastPoint[i], 2);
                        }
                      }
                      ptDistance = bm_sqrt(ptDistance);
                      addedLength += ptDistance;
                      bezierData.points[k] = new PointData(ptDistance, point);
                      lastPoint = point;
                    }
                    bezierData.segmentLength = addedLength;
                    storedData[bezierName] = bezierData;
                  }
                  return storedData[bezierName];
                };
              })();

              function getDistancePerc(perc, bezierData) {
                var percents = bezierData.percents;
                var lengths = bezierData.lengths;
                var len = percents.length;
                var initPos = bm_floor((len - 1) * perc);
                var lengthPos = perc * bezierData.addedLength;
                var lPerc = 0;
                if (
                  initPos === len - 1 ||
                  initPos === 0 ||
                  lengthPos === lengths[initPos]
                ) {
                  return percents[initPos];
                } else {
                  var dir = lengths[initPos] > lengthPos ? -1 : 1;
                  var flag = true;
                  while (flag) {
                    if (
                      lengths[initPos] <= lengthPos &&
                      lengths[initPos + 1] > lengthPos
                    ) {
                      lPerc =
                        (lengthPos - lengths[initPos]) /
                        (lengths[initPos + 1] - lengths[initPos]);
                      flag = false;
                    } else {
                      initPos += dir;
                    }
                    if (initPos < 0 || initPos >= len - 1) {
                      //FIX for TypedArrays that don't store floating point values with enough accuracy
                      if (initPos === len - 1) {
                        return percents[initPos];
                      }
                      flag = false;
                    }
                  }
                  return (
                    percents[initPos] +
                    (percents[initPos + 1] - percents[initPos]) * lPerc
                  );
                }
              }

              function getPointInSegment(
                pt1,
                pt2,
                pt3,
                pt4,
                percent,
                bezierData,
              ) {
                var t1 = getDistancePerc(percent, bezierData);
                var u0 = 1;
                var u1 = 1 - t1;
                var ptX =
                  Math.round(
                    (u1 * u1 * u1 * pt1[0] +
                      (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] +
                      (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] +
                      t1 * t1 * t1 * pt2[0]) *
                      1000,
                  ) / 1000;
                var ptY =
                  Math.round(
                    (u1 * u1 * u1 * pt1[1] +
                      (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] +
                      (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] +
                      t1 * t1 * t1 * pt2[1]) *
                      1000,
                  ) / 1000;
                return [ptX, ptY];
              }

              function getSegmentArray() {}

              var bezier_segment_points = createTypedArray("float32", 8);

              function getNewSegment(
                pt1,
                pt2,
                pt3,
                pt4,
                startPerc,
                endPerc,
                bezierData,
              ) {
                startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;
                var t0 = getDistancePerc(startPerc, bezierData);
                endPerc = endPerc > 1 ? 1 : endPerc;
                var t1 = getDistancePerc(endPerc, bezierData);
                var i,
                  len = pt1.length;
                var u0 = 1 - t0;
                var u1 = 1 - t1;
                var u0u0u0 = u0 * u0 * u0;
                var t0u0u0_3 = t0 * u0 * u0 * 3;
                var t0t0u0_3 = t0 * t0 * u0 * 3;
                var t0t0t0 = t0 * t0 * t0;
                //
                var u0u0u1 = u0 * u0 * u1;
                var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1;
                var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1;
                var t0t0t1 = t0 * t0 * t1;
                //
                var u0u1u1 = u0 * u1 * u1;
                var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1;
                var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1;
                var t0t1t1 = t0 * t1 * t1;
                //
                var u1u1u1 = u1 * u1 * u1;
                var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1;
                var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1;
                var t1t1t1 = t1 * t1 * t1;
                for (i = 0; i < len; i += 1) {
                  bezier_segment_points[i * 4] =
                    Math.round(
                      (u0u0u0 * pt1[i] +
                        t0u0u0_3 * pt3[i] +
                        t0t0u0_3 * pt4[i] +
                        t0t0t0 * pt2[i]) *
                        1000,
                    ) / 1000;
                  bezier_segment_points[i * 4 + 1] =
                    Math.round(
                      (u0u0u1 * pt1[i] +
                        t0u0u1_3 * pt3[i] +
                        t0t0u1_3 * pt4[i] +
                        t0t0t1 * pt2[i]) *
                        1000,
                    ) / 1000;
                  bezier_segment_points[i * 4 + 2] =
                    Math.round(
                      (u0u1u1 * pt1[i] +
                        t0u1u1_3 * pt3[i] +
                        t0t1u1_3 * pt4[i] +
                        t0t1t1 * pt2[i]) *
                        1000,
                    ) / 1000;
                  bezier_segment_points[i * 4 + 3] =
                    Math.round(
                      (u1u1u1 * pt1[i] +
                        t1u1u1_3 * pt3[i] +
                        t1t1u1_3 * pt4[i] +
                        t1t1t1 * pt2[i]) *
                        1000,
                    ) / 1000;
                }

                return bezier_segment_points;
              }

              return {
                getSegmentsLength: getSegmentsLength,
                getNewSegment: getNewSegment,
                getPointInSegment: getPointInSegment,
                buildBezierData: buildBezierData,
                pointOnLine2D: pointOnLine2D,
                pointOnLine3D: pointOnLine3D,
              };
            }

            var bez = bezFunction();
            function dataFunctionManager() {
              //var tCanvasHelper = createTag('canvas').getContext('2d');

              function completeLayers(layers, comps, fontManager) {
                var layerData;
                var animArray, lastFrame;
                var i,
                  len = layers.length;
                var j, jLen, k, kLen;
                for (i = 0; i < len; i += 1) {
                  layerData = layers[i];
                  if (!("ks" in layerData) || layerData.completed) {
                    continue;
                  }
                  layerData.completed = true;
                  if (layerData.tt) {
                    layers[i - 1].td = layerData.tt;
                  }
                  animArray = [];
                  lastFrame = -1;
                  if (layerData.hasMask) {
                    var maskProps = layerData.masksProperties;
                    jLen = maskProps.length;
                    for (j = 0; j < jLen; j += 1) {
                      if (maskProps[j].pt.k.i) {
                        convertPathsToAbsoluteValues(maskProps[j].pt.k);
                      } else {
                        kLen = maskProps[j].pt.k.length;
                        for (k = 0; k < kLen; k += 1) {
                          if (maskProps[j].pt.k[k].s) {
                            convertPathsToAbsoluteValues(
                              maskProps[j].pt.k[k].s[0],
                            );
                          }
                          if (maskProps[j].pt.k[k].e) {
                            convertPathsToAbsoluteValues(
                              maskProps[j].pt.k[k].e[0],
                            );
                          }
                        }
                      }
                    }
                  }
                  if (layerData.ty === 0) {
                    layerData.layers = findCompLayers(layerData.refId, comps);
                    completeLayers(layerData.layers, comps, fontManager);
                  } else if (layerData.ty === 4) {
                    completeShapes(layerData.shapes);
                  } else if (layerData.ty == 5) {
                    completeText(layerData, fontManager);
                  }
                }
              }

              function findCompLayers(id, comps) {
                var i = 0,
                  len = comps.length;
                while (i < len) {
                  if (comps[i].id === id) {
                    if (!comps[i].layers.__used) {
                      comps[i].layers.__used = true;
                      return comps[i].layers;
                    }
                    return JSON.parse(JSON.stringify(comps[i].layers));
                  }
                  i += 1;
                }
              }

              function completeShapes(arr) {
                var i,
                  len = arr.length;
                var j, jLen;
                var hasPaths = false;
                for (i = len - 1; i >= 0; i -= 1) {
                  if (arr[i].ty == "sh") {
                    if (arr[i].ks.k.i) {
                      convertPathsToAbsoluteValues(arr[i].ks.k);
                    } else {
                      jLen = arr[i].ks.k.length;
                      for (j = 0; j < jLen; j += 1) {
                        if (arr[i].ks.k[j].s) {
                          convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);
                        }
                        if (arr[i].ks.k[j].e) {
                          convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);
                        }
                      }
                    }
                    hasPaths = true;
                  } else if (arr[i].ty == "gr") {
                    completeShapes(arr[i].it);
                  }
                }
                /*if(hasPaths){
            //mx: distance
            //ss: sensitivity
            //dc: decay
            arr.splice(arr.length-1,0,{
                "ty": "ms",
                "mx":20,
                "ss":10,
                 "dc":0.001,
                "maxDist":200
            });
        }*/
              }

              function convertPathsToAbsoluteValues(path) {
                var i,
                  len = path.i.length;
                for (i = 0; i < len; i += 1) {
                  path.i[i][0] += path.v[i][0];
                  path.i[i][1] += path.v[i][1];
                  path.o[i][0] += path.v[i][0];
                  path.o[i][1] += path.v[i][1];
                }
              }

              function checkVersion(minimum, animVersionString) {
                var animVersion = animVersionString
                  ? animVersionString.split(".")
                  : [100, 100, 100];
                if (minimum[0] > animVersion[0]) {
                  return true;
                } else if (animVersion[0] > minimum[0]) {
                  return false;
                }
                if (minimum[1] > animVersion[1]) {
                  return true;
                } else if (animVersion[1] > minimum[1]) {
                  return false;
                }
                if (minimum[2] > animVersion[2]) {
                  return true;
                } else if (animVersion[2] > minimum[2]) {
                  return false;
                }
              }

              var checkText = (function() {
                var minimumVersion = [4, 4, 14];

                function updateTextLayer(textLayer) {
                  var documentData = textLayer.t.d;
                  textLayer.t.d = {
                    k: [
                      {
                        s: documentData,
                        t: 0,
                      },
                    ],
                  };
                }

                function iterateLayers(layers) {
                  var i,
                    len = layers.length;
                  for (i = 0; i < len; i += 1) {
                    if (layers[i].ty === 5) {
                      updateTextLayer(layers[i]);
                    }
                  }
                }

                return function(animationData) {
                  if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                      var i,
                        len = animationData.assets.length;
                      for (i = 0; i < len; i += 1) {
                        if (animationData.assets[i].layers) {
                          iterateLayers(animationData.assets[i].layers);
                        }
                      }
                    }
                  }
                };
              })();

              var checkChars = (function() {
                var minimumVersion = [4, 7, 99];
                return function(animationData) {
                  if (
                    animationData.chars &&
                    !checkVersion(minimumVersion, animationData.v)
                  ) {
                    var i,
                      len = animationData.chars.length,
                      j,
                      jLen,
                      k,
                      kLen;
                    var pathData, paths;
                    for (i = 0; i < len; i += 1) {
                      if (
                        animationData.chars[i].data &&
                        animationData.chars[i].data.shapes
                      ) {
                        paths = animationData.chars[i].data.shapes[0].it;
                        jLen = paths.length;

                        for (j = 0; j < jLen; j += 1) {
                          pathData = paths[j].ks.k;
                          if (!pathData.__converted) {
                            convertPathsToAbsoluteValues(paths[j].ks.k);
                            pathData.__converted = true;
                          }
                        }
                      }
                    }
                  }
                };
              })();

              var checkColors = (function() {
                var minimumVersion = [4, 1, 9];

                function iterateShapes(shapes) {
                  var i,
                    len = shapes.length;
                  var j, jLen;
                  for (i = 0; i < len; i += 1) {
                    if (shapes[i].ty === "gr") {
                      iterateShapes(shapes[i].it);
                    } else if (shapes[i].ty === "fl" || shapes[i].ty === "st") {
                      if (shapes[i].c.k && shapes[i].c.k[0].i) {
                        jLen = shapes[i].c.k.length;
                        for (j = 0; j < jLen; j += 1) {
                          if (shapes[i].c.k[j].s) {
                            shapes[i].c.k[j].s[0] /= 255;
                            shapes[i].c.k[j].s[1] /= 255;
                            shapes[i].c.k[j].s[2] /= 255;
                            shapes[i].c.k[j].s[3] /= 255;
                          }
                          if (shapes[i].c.k[j].e) {
                            shapes[i].c.k[j].e[0] /= 255;
                            shapes[i].c.k[j].e[1] /= 255;
                            shapes[i].c.k[j].e[2] /= 255;
                            shapes[i].c.k[j].e[3] /= 255;
                          }
                        }
                      } else {
                        shapes[i].c.k[0] /= 255;
                        shapes[i].c.k[1] /= 255;
                        shapes[i].c.k[2] /= 255;
                        shapes[i].c.k[3] /= 255;
                      }
                    }
                  }
                }

                function iterateLayers(layers) {
                  var i,
                    len = layers.length;
                  for (i = 0; i < len; i += 1) {
                    if (layers[i].ty === 4) {
                      iterateShapes(layers[i].shapes);
                    }
                  }
                }

                return function(animationData) {
                  if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                      var i,
                        len = animationData.assets.length;
                      for (i = 0; i < len; i += 1) {
                        if (animationData.assets[i].layers) {
                          iterateLayers(animationData.assets[i].layers);
                        }
                      }
                    }
                  }
                };
              })();

              var checkShapes = (function() {
                var minimumVersion = [4, 4, 18];

                function completeShapes(arr) {
                  var i,
                    len = arr.length;
                  var j, jLen;
                  var hasPaths = false;
                  for (i = len - 1; i >= 0; i -= 1) {
                    if (arr[i].ty == "sh") {
                      if (arr[i].ks.k.i) {
                        arr[i].ks.k.c = arr[i].closed;
                      } else {
                        jLen = arr[i].ks.k.length;
                        for (j = 0; j < jLen; j += 1) {
                          if (arr[i].ks.k[j].s) {
                            arr[i].ks.k[j].s[0].c = arr[i].closed;
                          }
                          if (arr[i].ks.k[j].e) {
                            arr[i].ks.k[j].e[0].c = arr[i].closed;
                          }
                        }
                      }
                      hasPaths = true;
                    } else if (arr[i].ty == "gr") {
                      completeShapes(arr[i].it);
                    }
                  }
                }

                function iterateLayers(layers) {
                  var layerData;
                  var i,
                    len = layers.length;
                  var j, jLen, k, kLen;
                  for (i = 0; i < len; i += 1) {
                    layerData = layers[i];
                    if (layerData.hasMask) {
                      var maskProps = layerData.masksProperties;
                      jLen = maskProps.length;
                      for (j = 0; j < jLen; j += 1) {
                        if (maskProps[j].pt.k.i) {
                          maskProps[j].pt.k.c = maskProps[j].cl;
                        } else {
                          kLen = maskProps[j].pt.k.length;
                          for (k = 0; k < kLen; k += 1) {
                            if (maskProps[j].pt.k[k].s) {
                              maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;
                            }
                            if (maskProps[j].pt.k[k].e) {
                              maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;
                            }
                          }
                        }
                      }
                    }
                    if (layerData.ty === 4) {
                      completeShapes(layerData.shapes);
                    }
                  }
                }

                return function(animationData) {
                  if (checkVersion(minimumVersion, animationData.v)) {
                    iterateLayers(animationData.layers);
                    if (animationData.assets) {
                      var i,
                        len = animationData.assets.length;
                      for (i = 0; i < len; i += 1) {
                        if (animationData.assets[i].layers) {
                          iterateLayers(animationData.assets[i].layers);
                        }
                      }
                    }
                  }
                };
              })();

              function completeData(animationData, fontManager) {
                if (animationData.__complete) {
                  return;
                }
                checkColors(animationData);
                checkText(animationData);
                checkChars(animationData);
                checkShapes(animationData);
                completeLayers(
                  animationData.layers,
                  animationData.assets,
                  fontManager,
                );
                animationData.__complete = true;
                //blitAnimation(animationData, animationData.assets, fontManager);
              }

              function completeText(data, fontManager) {
                if (data.t.a.length === 0 && !("m" in data.t.p)) {
                  data.singleShape = true;
                }
              }

              var moduleOb = {};
              moduleOb.completeData = completeData;

              return moduleOb;
            }

            var dataManager = dataFunctionManager();
            var FontManager = (function() {
              var maxWaitingTime = 5000;
              var emptyChar = {
                w: 0,
                size: 0,
                shapes: [],
              };
              var combinedCharacters = [];
              //Hindi characters
              combinedCharacters = combinedCharacters.concat([
                2304,
                2305,
                2306,
                2307,
                2362,
                2363,
                2364,
                2364,
                2366,
                2367,
                2368,
                2369,
                2370,
                2371,
                2372,
                2373,
                2374,
                2375,
                2376,
                2377,
                2378,
                2379,
                2380,
                2381,
                2382,
                2383,
                2387,
                2388,
                2389,
                2390,
                2391,
                2402,
                2403,
              ]);

              function setUpNode(font, family) {
                var parentNode = createTag("span");
                parentNode.style.fontFamily = family;
                var node = createTag("span");
                // Characters that vary significantly among different fonts
                node.innerHTML = "giItT1WQy@!-/#";
                // Visible - so we can measure it - but not on the screen
                parentNode.style.position = "absolute";
                parentNode.style.left = "-10000px";
                parentNode.style.top = "-10000px";
                // Large font size makes even subtle changes obvious
                parentNode.style.fontSize = "300px";
                // Reset any font properties
                parentNode.style.fontVariant = "normal";
                parentNode.style.fontStyle = "normal";
                parentNode.style.fontWeight = "normal";
                parentNode.style.letterSpacing = "0";
                parentNode.appendChild(node);
                document.body.appendChild(parentNode);

                // Remember width with no applied web font
                var width = node.offsetWidth;
                node.style.fontFamily = font + ", " + family;
                return { node: node, w: width, parent: parentNode };
              }

              function checkLoadedFonts() {
                var i,
                  len = this.fonts.length;
                var node, w;
                var loadedCount = len;
                for (i = 0; i < len; i += 1) {
                  if (this.fonts[i].loaded) {
                    loadedCount -= 1;
                    continue;
                  }
                  if (
                    this.fonts[i].fOrigin === "n" ||
                    this.fonts[i].origin === 0
                  ) {
                    this.fonts[i].loaded = true;
                  } else {
                    node = this.fonts[i].monoCase.node;
                    w = this.fonts[i].monoCase.w;
                    if (node.offsetWidth !== w) {
                      loadedCount -= 1;
                      this.fonts[i].loaded = true;
                    } else {
                      node = this.fonts[i].sansCase.node;
                      w = this.fonts[i].sansCase.w;
                      if (node.offsetWidth !== w) {
                        loadedCount -= 1;
                        this.fonts[i].loaded = true;
                      }
                    }
                    if (this.fonts[i].loaded) {
                      this.fonts[i].sansCase.parent.parentNode.removeChild(
                        this.fonts[i].sansCase.parent,
                      );
                      this.fonts[i].monoCase.parent.parentNode.removeChild(
                        this.fonts[i].monoCase.parent,
                      );
                    }
                  }
                }

                if (
                  loadedCount !== 0 &&
                  Date.now() - this.initTime < maxWaitingTime
                ) {
                  setTimeout(this.checkLoadedFonts.bind(this), 20);
                } else {
                  setTimeout(
                    function() {
                      this.isLoaded = true;
                    }.bind(this),
                    0,
                  );
                }
              }

              function createHelper(def, fontData) {
                var tHelper = createNS("text");
                tHelper.style.fontSize = "100px";
                //tHelper.style.fontFamily = fontData.fFamily;
                tHelper.setAttribute("font-family", fontData.fFamily);
                tHelper.setAttribute("font-style", fontData.fStyle);
                tHelper.setAttribute("font-weight", fontData.fWeight);
                tHelper.textContent = "1";
                if (fontData.fClass) {
                  tHelper.style.fontFamily = "inherit";
                  tHelper.setAttribute("class", fontData.fClass);
                } else {
                  tHelper.style.fontFamily = fontData.fFamily;
                }
                def.appendChild(tHelper);
                var tCanvasHelper = createTag("canvas").getContext("2d");
                tCanvasHelper.font =
                  fontData.fWeight +
                  " " +
                  fontData.fStyle +
                  " 100px " +
                  fontData.fFamily;
                //tCanvasHelper.font = ' 100px '+ fontData.fFamily;
                return tHelper;
              }

              function addFonts(fontData, defs) {
                if (!fontData) {
                  this.isLoaded = true;
                  return;
                }
                if (this.chars) {
                  this.isLoaded = true;
                  this.fonts = fontData.list;
                  return;
                }

                var fontArr = fontData.list;
                var i,
                  len = fontArr.length;
                var _pendingFonts = len;
                for (i = 0; i < len; i += 1) {
                  var shouldLoadFont = true;
                  var loadedSelector;
                  var j;
                  fontArr[i].loaded = false;
                  fontArr[i].monoCase = setUpNode(
                    fontArr[i].fFamily,
                    "monospace",
                  );
                  fontArr[i].sansCase = setUpNode(
                    fontArr[i].fFamily,
                    "sans-serif",
                  );
                  if (!fontArr[i].fPath) {
                    fontArr[i].loaded = true;
                    _pendingFonts -= 1;
                  } else if (
                    fontArr[i].fOrigin === "p" ||
                    fontArr[i].origin === 3
                  ) {
                    loadedSelector = document.querySelectorAll(
                      'style[f-forigin="p"][f-family="' +
                        fontArr[i].fFamily +
                        '"], style[f-origin="3"][f-family="' +
                        fontArr[i].fFamily +
                        '"]',
                    );

                    if (loadedSelector.length > 0) {
                      shouldLoadFont = false;
                    }

                    if (shouldLoadFont) {
                      var s = createTag("style");
                      s.setAttribute("f-forigin", fontArr[i].fOrigin);
                      s.setAttribute("f-origin", fontArr[i].origin);
                      s.setAttribute("f-family", fontArr[i].fFamily);
                      s.type = "text/css";
                      s.innerHTML =
                        "@font-face {" +
                        "font-family: " +
                        fontArr[i].fFamily +
                        "; font-style: normal; src: url('" +
                        fontArr[i].fPath +
                        "');}";
                      defs.appendChild(s);
                    }
                  } else if (
                    fontArr[i].fOrigin === "g" ||
                    fontArr[i].origin === 1
                  ) {
                    loadedSelector = document.querySelectorAll(
                      'link[f-forigin="g"], link[f-origin="1"]',
                    );

                    for (j = 0; j < loadedSelector.length; j++) {
                      if (
                        loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1
                      ) {
                        // Font is already loaded
                        shouldLoadFont = false;
                      }
                    }

                    if (shouldLoadFont) {
                      var l = createTag("link");
                      l.setAttribute("f-forigin", fontArr[i].fOrigin);
                      l.setAttribute("f-origin", fontArr[i].origin);
                      l.type = "text/css";
                      l.rel = "stylesheet";
                      l.href = fontArr[i].fPath;
                      document.body.appendChild(l);
                    }
                  } else if (
                    fontArr[i].fOrigin === "t" ||
                    fontArr[i].origin === 2
                  ) {
                    loadedSelector = document.querySelectorAll(
                      'script[f-forigin="t"], script[f-origin="2"]',
                    );

                    for (j = 0; j < loadedSelector.length; j++) {
                      if (fontArr[i].fPath === loadedSelector[j].src) {
                        // Font is already loaded
                        shouldLoadFont = false;
                      }
                    }

                    if (shouldLoadFont) {
                      var sc = createTag("link");
                      sc.setAttribute("f-forigin", fontArr[i].fOrigin);
                      sc.setAttribute("f-origin", fontArr[i].origin);
                      sc.setAttribute("rel", "stylesheet");
                      sc.setAttribute("href", fontArr[i].fPath);
                      defs.appendChild(sc);
                    }
                  }
                  fontArr[i].helper = createHelper(defs, fontArr[i]);
                  fontArr[i].cache = {};
                  this.fonts.push(fontArr[i]);
                }
                if (_pendingFonts === 0) {
                  this.isLoaded = true;
                } else {
                  //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.
                  //Adding this timeout seems to fix it
                  setTimeout(this.checkLoadedFonts.bind(this), 100);
                }
              }

              function addChars(chars) {
                if (!chars) {
                  return;
                }
                if (!this.chars) {
                  this.chars = [];
                }
                var i,
                  len = chars.length;
                var j,
                  jLen = this.chars.length,
                  found;
                for (i = 0; i < len; i += 1) {
                  j = 0;
                  found = false;
                  while (j < jLen) {
                    if (
                      this.chars[j].style === chars[i].style &&
                      this.chars[j].fFamily === chars[i].fFamily &&
                      this.chars[j].ch === chars[i].ch
                    ) {
                      found = true;
                    }
                    j += 1;
                  }
                  if (!found) {
                    this.chars.push(chars[i]);
                    jLen += 1;
                  }
                }
              }

              function getCharData(char, style, font) {
                var i = 0,
                  len = this.chars.length;
                while (i < len) {
                  if (
                    this.chars[i].ch === char &&
                    this.chars[i].style === style &&
                    this.chars[i].fFamily === font
                  ) {
                    return this.chars[i];
                  }
                  i += 1;
                }
                if (
                  ((typeof char === "string" && char.charCodeAt(0) !== 13) ||
                    !char) &&
                  console &&
                  console.warn
                ) {
                  console.warn(
                    "Missing character from exported characters list: ",
                    char,
                    style,
                    font,
                  );
                }
                return emptyChar;
              }

              function measureText(char, fontName, size) {
                var fontData = this.getFontByName(fontName);
                var index = char.charCodeAt(0);
                if (!fontData.cache[index + 1]) {
                  var tHelper = fontData.helper;
                  //Canvas version
                  //fontData.cache[index] = tHelper.measureText(char).width / 100;
                  //SVG version
                  //console.log(tHelper.getBBox().width)
                  if (char === " ") {
                    tHelper.textContent = "|" + char + "|";
                    var doubleSize = tHelper.getComputedTextLength();
                    tHelper.textContent = "||";
                    var singleSize = tHelper.getComputedTextLength();
                    fontData.cache[index + 1] = (doubleSize - singleSize) / 100;
                  } else {
                    tHelper.textContent = char;
                    fontData.cache[index + 1] =
                      tHelper.getComputedTextLength() / 100;
                  }
                }
                return fontData.cache[index + 1] * size;
              }

              function getFontByName(name) {
                var i = 0,
                  len = this.fonts.length;
                while (i < len) {
                  if (this.fonts[i].fName === name) {
                    return this.fonts[i];
                  }
                  i += 1;
                }
                return this.fonts[0];
              }

              function getCombinedCharacterCodes() {
                return combinedCharacters;
              }

              function loaded() {
                return this.isLoaded;
              }

              var Font = function() {
                this.fonts = [];
                this.chars = null;
                this.typekitLoaded = 0;
                this.isLoaded = false;
                this.initTime = Date.now();
              };
              //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it.
              Font.getCombinedCharacterCodes = getCombinedCharacterCodes;

              Font.prototype.addChars = addChars;
              Font.prototype.addFonts = addFonts;
              Font.prototype.getCharData = getCharData;
              Font.prototype.getFontByName = getFontByName;
              Font.prototype.measureText = measureText;
              Font.prototype.checkLoadedFonts = checkLoadedFonts;
              Font.prototype.loaded = loaded;

              return Font;
            })();
            var PropertyFactory = (function() {
              var initFrame = initialDefaultFrame;
              var math_abs = Math.abs;

              function interpolateValue(frameNum, caching) {
                var offsetTime = this.offsetTime;
                var newValue;
                if (this.propType === "multidimensional") {
                  newValue = createTypedArray("float32", this.pv.length);
                }
                var iterationIndex = caching.lastIndex;
                var i = iterationIndex;
                var len = this.keyframes.length - 1,
                  flag = true;
                var keyData, nextKeyData;

                while (flag) {
                  keyData = this.keyframes[i];
                  nextKeyData = this.keyframes[i + 1];
                  if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {
                    if (keyData.h) {
                      keyData = nextKeyData;
                    }
                    iterationIndex = 0;
                    break;
                  }
                  if (nextKeyData.t - offsetTime > frameNum) {
                    iterationIndex = i;
                    break;
                  }
                  if (i < len - 1) {
                    i += 1;
                  } else {
                    iterationIndex = 0;
                    flag = false;
                  }
                }

                var k, kLen, perc, jLen, j, fnc;
                var nextKeyTime = nextKeyData.t - offsetTime;
                var keyTime = keyData.t - offsetTime;
                var endValue;
                if (keyData.to) {
                  if (!keyData.bezierData) {
                    keyData.bezierData = bez.buildBezierData(
                      keyData.s,
                      nextKeyData.s || keyData.e,
                      keyData.to,
                      keyData.ti,
                    );
                  }
                  var bezierData = keyData.bezierData;
                  if (frameNum >= nextKeyTime || frameNum < keyTime) {
                    var ind =
                      frameNum >= nextKeyTime
                        ? bezierData.points.length - 1
                        : 0;
                    kLen = bezierData.points[ind].point.length;
                    for (k = 0; k < kLen; k += 1) {
                      newValue[k] = bezierData.points[ind].point[k];
                    }
                    // caching._lastKeyframeIndex = -1;
                  } else {
                    if (keyData.__fnct) {
                      fnc = keyData.__fnct;
                    } else {
                      fnc = BezierFactory.getBezierEasing(
                        keyData.o.x,
                        keyData.o.y,
                        keyData.i.x,
                        keyData.i.y,
                        keyData.n,
                      ).get;
                      keyData.__fnct = fnc;
                    }
                    perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));
                    var distanceInLine = bezierData.segmentLength * perc;

                    var segmentPerc;
                    var addedLength =
                      caching.lastFrame < frameNum &&
                      caching._lastKeyframeIndex === i
                        ? caching._lastAddedLength
                        : 0;
                    j =
                      caching.lastFrame < frameNum &&
                      caching._lastKeyframeIndex === i
                        ? caching._lastPoint
                        : 0;
                    flag = true;
                    jLen = bezierData.points.length;
                    while (flag) {
                      addedLength += bezierData.points[j].partialLength;
                      if (
                        distanceInLine === 0 ||
                        perc === 0 ||
                        j === bezierData.points.length - 1
                      ) {
                        kLen = bezierData.points[j].point.length;
                        for (k = 0; k < kLen; k += 1) {
                          newValue[k] = bezierData.points[j].point[k];
                        }
                        break;
                      } else if (
                        distanceInLine >= addedLength &&
                        distanceInLine <
                          addedLength + bezierData.points[j + 1].partialLength
                      ) {
                        segmentPerc =
                          (distanceInLine - addedLength) /
                          bezierData.points[j + 1].partialLength;
                        kLen = bezierData.points[j].point.length;
                        for (k = 0; k < kLen; k += 1) {
                          newValue[k] =
                            bezierData.points[j].point[k] +
                            (bezierData.points[j + 1].point[k] -
                              bezierData.points[j].point[k]) *
                              segmentPerc;
                        }
                        break;
                      }
                      if (j < jLen - 1) {
                        j += 1;
                      } else {
                        flag = false;
                      }
                    }
                    caching._lastPoint = j;
                    caching._lastAddedLength =
                      addedLength - bezierData.points[j].partialLength;
                    caching._lastKeyframeIndex = i;
                  }
                } else {
                  var outX, outY, inX, inY, keyValue;
                  len = keyData.s.length;
                  endValue = nextKeyData.s || keyData.e;
                  if (this.sh && keyData.h !== 1) {
                    if (frameNum >= nextKeyTime) {
                      newValue[0] = endValue[0];
                      newValue[1] = endValue[1];
                      newValue[2] = endValue[2];
                    } else if (frameNum <= keyTime) {
                      newValue[0] = keyData.s[0];
                      newValue[1] = keyData.s[1];
                      newValue[2] = keyData.s[2];
                    } else {
                      var quatStart = createQuaternion(keyData.s);
                      var quatEnd = createQuaternion(endValue);
                      var time = (frameNum - keyTime) / (nextKeyTime - keyTime);
                      quaternionToEuler(
                        newValue,
                        slerp(quatStart, quatEnd, time),
                      );
                    }
                  } else {
                    for (i = 0; i < len; i += 1) {
                      if (keyData.h !== 1) {
                        if (frameNum >= nextKeyTime) {
                          perc = 1;
                        } else if (frameNum < keyTime) {
                          perc = 0;
                        } else {
                          if (keyData.o.x.constructor === Array) {
                            if (!keyData.__fnct) {
                              keyData.__fnct = [];
                            }
                            if (!keyData.__fnct[i]) {
                              outX =
                                typeof keyData.o.x[i] === "undefined"
                                  ? keyData.o.x[0]
                                  : keyData.o.x[i];
                              outY =
                                typeof keyData.o.y[i] === "undefined"
                                  ? keyData.o.y[0]
                                  : keyData.o.y[i];
                              inX =
                                typeof keyData.i.x[i] === "undefined"
                                  ? keyData.i.x[0]
                                  : keyData.i.x[i];
                              inY =
                                typeof keyData.i.y[i] === "undefined"
                                  ? keyData.i.y[0]
                                  : keyData.i.y[i];
                              fnc = BezierFactory.getBezierEasing(
                                outX,
                                outY,
                                inX,
                                inY,
                              ).get;
                              keyData.__fnct[i] = fnc;
                            } else {
                              fnc = keyData.__fnct[i];
                            }
                          } else {
                            if (!keyData.__fnct) {
                              outX = keyData.o.x;
                              outY = keyData.o.y;
                              inX = keyData.i.x;
                              inY = keyData.i.y;
                              fnc = BezierFactory.getBezierEasing(
                                outX,
                                outY,
                                inX,
                                inY,
                              ).get;
                              keyData.__fnct = fnc;
                            } else {
                              fnc = keyData.__fnct;
                            }
                          }
                          perc = fnc(
                            (frameNum - keyTime) / (nextKeyTime - keyTime),
                          );
                        }
                      }

                      endValue = nextKeyData.s || keyData.e;
                      keyValue =
                        keyData.h === 1
                          ? keyData.s[i]
                          : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;

                      if (len === 1) {
                        newValue = keyValue;
                      } else {
                        newValue[i] = keyValue;
                      }
                    }
                  }
                }
                caching.lastIndex = iterationIndex;
                return newValue;
              }

              //based on @Toji's https://github.com/toji/gl-matrix/
              function slerp(a, b, t) {
                var out = [];
                var ax = a[0],
                  ay = a[1],
                  az = a[2],
                  aw = a[3],
                  bx = b[0],
                  by = b[1],
                  bz = b[2],
                  bw = b[3];

                var omega, cosom, sinom, scale0, scale1;

                cosom = ax * bx + ay * by + az * bz + aw * bw;
                if (cosom < 0.0) {
                  cosom = -cosom;
                  bx = -bx;
                  by = -by;
                  bz = -bz;
                  bw = -bw;
                }
                if (1.0 - cosom > 0.000001) {
                  omega = Math.acos(cosom);
                  sinom = Math.sin(omega);
                  scale0 = Math.sin((1.0 - t) * omega) / sinom;
                  scale1 = Math.sin(t * omega) / sinom;
                } else {
                  scale0 = 1.0 - t;
                  scale1 = t;
                }
                out[0] = scale0 * ax + scale1 * bx;
                out[1] = scale0 * ay + scale1 * by;
                out[2] = scale0 * az + scale1 * bz;
                out[3] = scale0 * aw + scale1 * bw;

                return out;
              }

              function quaternionToEuler(out, quat) {
                var qx = quat[0];
                var qy = quat[1];
                var qz = quat[2];
                var qw = quat[3];
                var heading = Math.atan2(
                  2 * qy * qw - 2 * qx * qz,
                  1 - 2 * qy * qy - 2 * qz * qz,
                );
                var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);
                var bank = Math.atan2(
                  2 * qx * qw - 2 * qy * qz,
                  1 - 2 * qx * qx - 2 * qz * qz,
                );
                out[0] = heading / degToRads;
                out[1] = attitude / degToRads;
                out[2] = bank / degToRads;
              }

              function createQuaternion(values) {
                var heading = values[0] * degToRads;
                var attitude = values[1] * degToRads;
                var bank = values[2] * degToRads;
                var c1 = Math.cos(heading / 2);
                var c2 = Math.cos(attitude / 2);
                var c3 = Math.cos(bank / 2);
                var s1 = Math.sin(heading / 2);
                var s2 = Math.sin(attitude / 2);
                var s3 = Math.sin(bank / 2);
                var w = c1 * c2 * c3 - s1 * s2 * s3;
                var x = s1 * s2 * c3 + c1 * c2 * s3;
                var y = s1 * c2 * c3 + c1 * s2 * s3;
                var z = c1 * s2 * c3 - s1 * c2 * s3;

                return [x, y, z, w];
              }

              function getValueAtCurrentTime() {
                var frameNum = this.comp.renderedFrame - this.offsetTime;
                var initTime = this.keyframes[0].t - this.offsetTime;
                var endTime =
                  this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                if (
                  !(
                    frameNum === this._caching.lastFrame ||
                    (this._caching.lastFrame !== initFrame &&
                      ((this._caching.lastFrame >= endTime &&
                        frameNum >= endTime) ||
                        (this._caching.lastFrame < initTime &&
                          frameNum < initTime)))
                  )
                ) {
                  if (this._caching.lastFrame >= frameNum) {
                    this._caching._lastKeyframeIndex = -1;
                    this._caching.lastIndex = 0;
                  }

                  var renderResult = this.interpolateValue(
                    frameNum,
                    this._caching,
                  );
                  this.pv = renderResult;
                }
                this._caching.lastFrame = frameNum;
                return this.pv;
              }

              function setVValue(val) {
                var multipliedValue;
                if (this.propType === "unidimensional") {
                  multipliedValue = val * this.mult;
                  if (math_abs(this.v - multipliedValue) > 0.00001) {
                    this.v = multipliedValue;
                    this._mdf = true;
                  }
                } else {
                  var i = 0,
                    len = this.v.length;
                  while (i < len) {
                    multipliedValue = val[i] * this.mult;
                    if (math_abs(this.v[i] - multipliedValue) > 0.00001) {
                      this.v[i] = multipliedValue;
                      this._mdf = true;
                    }
                    i += 1;
                  }
                }
              }

              function processEffectsSequence() {
                if (
                  this.elem.globalData.frameId === this.frameId ||
                  !this.effectsSequence.length
                ) {
                  return;
                }
                if (this.lock) {
                  this.setVValue(this.pv);
                  return;
                }
                this.lock = true;
                this._mdf = this._isFirstFrame;
                var multipliedValue;
                var i,
                  len = this.effectsSequence.length;
                var finalValue = this.kf ? this.pv : this.data.k;
                for (i = 0; i < len; i += 1) {
                  finalValue = this.effectsSequence[i](finalValue);
                }
                this.setVValue(finalValue);
                this._isFirstFrame = false;
                this.lock = false;
                this.frameId = this.elem.globalData.frameId;
              }

              function addEffect(effectFunction) {
                this.effectsSequence.push(effectFunction);
                this.container.addDynamicProperty(this);
              }

              function ValueProperty(elem, data, mult, container) {
                this.propType = "unidimensional";
                this.mult = mult || 1;
                this.data = data;
                this.v = mult ? data.k * mult : data.k;
                this.pv = data.k;
                this._mdf = false;
                this.elem = elem;
                this.container = container;
                this.comp = elem.comp;
                this.k = false;
                this.kf = false;
                this.vel = 0;
                this.effectsSequence = [];
                this._isFirstFrame = true;
                this.getValue = processEffectsSequence;
                this.setVValue = setVValue;
                this.addEffect = addEffect;
              }

              function MultiDimensionalProperty(elem, data, mult, container) {
                this.propType = "multidimensional";
                this.mult = mult || 1;
                this.data = data;
                this._mdf = false;
                this.elem = elem;
                this.container = container;
                this.comp = elem.comp;
                this.k = false;
                this.kf = false;
                this.frameId = -1;
                var i,
                  len = data.k.length;
                this.v = createTypedArray("float32", len);
                this.pv = createTypedArray("float32", len);
                var arr = createTypedArray("float32", len);
                this.vel = createTypedArray("float32", len);
                for (i = 0; i < len; i += 1) {
                  this.v[i] = data.k[i] * this.mult;
                  this.pv[i] = data.k[i];
                }
                this._isFirstFrame = true;
                this.effectsSequence = [];
                this.getValue = processEffectsSequence;
                this.setVValue = setVValue;
                this.addEffect = addEffect;
              }

              function KeyframedValueProperty(elem, data, mult, container) {
                this.propType = "unidimensional";
                this.keyframes = data.k;
                this.offsetTime = elem.data.st;
                this.frameId = -1;
                this._caching = {
                  lastFrame: initFrame,
                  lastIndex: 0,
                  value: 0,
                  _lastKeyframeIndex: -1,
                };
                this.k = true;
                this.kf = true;
                this.data = data;
                this.mult = mult || 1;
                this.elem = elem;
                this.container = container;
                this.comp = elem.comp;
                this.v = initFrame;
                this.pv = initFrame;
                this._isFirstFrame = true;
                this.getValue = processEffectsSequence;
                this.setVValue = setVValue;
                this.interpolateValue = interpolateValue;
                this.effectsSequence = [getValueAtCurrentTime.bind(this)];
                this.addEffect = addEffect;
              }

              function KeyframedMultidimensionalProperty(
                elem,
                data,
                mult,
                container,
              ) {
                this.propType = "multidimensional";
                var i,
                  len = data.k.length;
                var s, e, to, ti;
                for (i = 0; i < len - 1; i += 1) {
                  if (data.k[i].to && data.k[i].s && data.k[i].e) {
                    s = data.k[i].s;
                    e = data.k[i].e;
                    to = data.k[i].to;
                    ti = data.k[i].ti;
                    if (
                      (s.length === 2 &&
                        !(s[0] === e[0] && s[1] === e[1]) &&
                        bez.pointOnLine2D(
                          s[0],
                          s[1],
                          e[0],
                          e[1],
                          s[0] + to[0],
                          s[1] + to[1],
                        ) &&
                        bez.pointOnLine2D(
                          s[0],
                          s[1],
                          e[0],
                          e[1],
                          e[0] + ti[0],
                          e[1] + ti[1],
                        )) ||
                      (s.length === 3 &&
                        !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) &&
                        bez.pointOnLine3D(
                          s[0],
                          s[1],
                          s[2],
                          e[0],
                          e[1],
                          e[2],
                          s[0] + to[0],
                          s[1] + to[1],
                          s[2] + to[2],
                        ) &&
                        bez.pointOnLine3D(
                          s[0],
                          s[1],
                          s[2],
                          e[0],
                          e[1],
                          e[2],
                          e[0] + ti[0],
                          e[1] + ti[1],
                          e[2] + ti[2],
                        ))
                    ) {
                      data.k[i].to = null;
                      data.k[i].ti = null;
                    }
                    if (
                      s[0] === e[0] &&
                      s[1] === e[1] &&
                      to[0] === 0 &&
                      to[1] === 0 &&
                      ti[0] === 0 &&
                      ti[1] === 0
                    ) {
                      if (
                        s.length === 2 ||
                        (s[2] === e[2] && to[2] === 0 && ti[2] === 0)
                      ) {
                        data.k[i].to = null;
                        data.k[i].ti = null;
                      }
                    }
                  }
                }
                this.effectsSequence = [getValueAtCurrentTime.bind(this)];
                this.keyframes = data.k;
                this.offsetTime = elem.data.st;
                this.k = true;
                this.kf = true;
                this._isFirstFrame = true;
                this.mult = mult || 1;
                this.elem = elem;
                this.container = container;
                this.comp = elem.comp;
                this.getValue = processEffectsSequence;
                this.setVValue = setVValue;
                this.interpolateValue = interpolateValue;
                this.frameId = -1;
                var arrLen = data.k[0].s.length;
                this.v = createTypedArray("float32", arrLen);
                this.pv = createTypedArray("float32", arrLen);
                for (i = 0; i < arrLen; i += 1) {
                  this.v[i] = initFrame;
                  this.pv[i] = initFrame;
                }
                this._caching = {
                  lastFrame: initFrame,
                  lastIndex: 0,
                  value: createTypedArray("float32", arrLen),
                };
                this.addEffect = addEffect;
              }

              function getProp(elem, data, type, mult, container) {
                var p;
                if (!data.k.length) {
                  p = new ValueProperty(elem, data, mult, container);
                } else if (typeof data.k[0] === "number") {
                  p = new MultiDimensionalProperty(elem, data, mult, container);
                } else {
                  switch (type) {
                    case 0:
                      p = new KeyframedValueProperty(
                        elem,
                        data,
                        mult,
                        container,
                      );
                      break;
                    case 1:
                      p = new KeyframedMultidimensionalProperty(
                        elem,
                        data,
                        mult,
                        container,
                      );
                      break;
                  }
                }
                if (p.effectsSequence.length) {
                  container.addDynamicProperty(p);
                }
                return p;
              }

              var ob = {
                getProp: getProp,
              };
              return ob;
            })();
            var TransformPropertyFactory = (function() {
              function applyToMatrix(mat) {
                var _mdf = this._mdf;
                this.iterateDynamicProperties();
                this._mdf = this._mdf || _mdf;
                if (this.a) {
                  mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
                }
                if (this.s) {
                  mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
                }
                if (this.sk) {
                  mat.skewFromAxis(-this.sk.v, this.sa.v);
                }
                if (this.r) {
                  mat.rotate(-this.r.v);
                } else {
                  mat
                    .rotateZ(-this.rz.v)
                    .rotateY(this.ry.v)
                    .rotateX(this.rx.v)
                    .rotateZ(-this.or.v[2])
                    .rotateY(this.or.v[1])
                    .rotateX(this.or.v[0]);
                }
                if (this.data.p.s) {
                  if (this.data.p.z) {
                    mat.translate(this.px.v, this.py.v, -this.pz.v);
                  } else {
                    mat.translate(this.px.v, this.py.v, 0);
                  }
                } else {
                  mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                }
              }
              function processKeys(forceRender) {
                if (this.elem.globalData.frameId === this.frameId) {
                  return;
                }
                if (this._isDirty) {
                  this.precalculateMatrix();
                  this._isDirty = false;
                }

                this.iterateDynamicProperties();

                if (this._mdf || forceRender) {
                  this.v.cloneFromProps(this.pre.props);
                  if (this.appliedTransformations < 1) {
                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
                  }
                  if (this.appliedTransformations < 2) {
                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
                  }
                  if (this.sk && this.appliedTransformations < 3) {
                    this.v.skewFromAxis(-this.sk.v, this.sa.v);
                  }
                  if (this.r && this.appliedTransformations < 4) {
                    this.v.rotate(-this.r.v);
                  } else if (!this.r && this.appliedTransformations < 4) {
                    this.v
                      .rotateZ(-this.rz.v)
                      .rotateY(this.ry.v)
                      .rotateX(this.rx.v)
                      .rotateZ(-this.or.v[2])
                      .rotateY(this.or.v[1])
                      .rotateX(this.or.v[0]);
                  }
                  if (this.autoOriented) {
                    var v1,
                      v2,
                      frameRate = this.elem.globalData.frameRate;
                    if (this.p && this.p.keyframes && this.p.getValueAtTime) {
                      if (
                        this.p._caching.lastFrame + this.p.offsetTime <=
                        this.p.keyframes[0].t
                      ) {
                        v1 = this.p.getValueAtTime(
                          (this.p.keyframes[0].t + 0.01) / frameRate,
                          0,
                        );
                        v2 = this.p.getValueAtTime(
                          this.p.keyframes[0].t / frameRate,
                          0,
                        );
                      } else if (
                        this.p._caching.lastFrame + this.p.offsetTime >=
                        this.p.keyframes[this.p.keyframes.length - 1].t
                      ) {
                        v1 = this.p.getValueAtTime(
                          this.p.keyframes[this.p.keyframes.length - 1].t /
                            frameRate,
                          0,
                        );
                        v2 = this.p.getValueAtTime(
                          (this.p.keyframes[this.p.keyframes.length - 1].t -
                            0.01) /
                            frameRate,
                          0,
                        );
                      } else {
                        v1 = this.p.pv;
                        v2 = this.p.getValueAtTime(
                          (this.p._caching.lastFrame +
                            this.p.offsetTime -
                            0.01) /
                            frameRate,
                          this.p.offsetTime,
                        );
                      }
                    } else if (
                      this.px &&
                      this.px.keyframes &&
                      this.py.keyframes &&
                      this.px.getValueAtTime &&
                      this.py.getValueAtTime
                    ) {
                      v1 = [];
                      v2 = [];
                      var px = this.px,
                        py = this.py,
                        frameRate;
                      if (
                        px._caching.lastFrame + px.offsetTime <=
                        px.keyframes[0].t
                      ) {
                        v1[0] = px.getValueAtTime(
                          (px.keyframes[0].t + 0.01) / frameRate,
                          0,
                        );
                        v1[1] = py.getValueAtTime(
                          (py.keyframes[0].t + 0.01) / frameRate,
                          0,
                        );
                        v2[0] = px.getValueAtTime(
                          px.keyframes[0].t / frameRate,
                          0,
                        );
                        v2[1] = py.getValueAtTime(
                          py.keyframes[0].t / frameRate,
                          0,
                        );
                      } else if (
                        px._caching.lastFrame + px.offsetTime >=
                        px.keyframes[px.keyframes.length - 1].t
                      ) {
                        v1[0] = px.getValueAtTime(
                          px.keyframes[px.keyframes.length - 1].t / frameRate,
                          0,
                        );
                        v1[1] = py.getValueAtTime(
                          py.keyframes[py.keyframes.length - 1].t / frameRate,
                          0,
                        );
                        v2[0] = px.getValueAtTime(
                          (px.keyframes[px.keyframes.length - 1].t - 0.01) /
                            frameRate,
                          0,
                        );
                        v2[1] = py.getValueAtTime(
                          (py.keyframes[py.keyframes.length - 1].t - 0.01) /
                            frameRate,
                          0,
                        );
                      } else {
                        v1 = [px.pv, py.pv];
                        v2[0] = px.getValueAtTime(
                          (px._caching.lastFrame + px.offsetTime - 0.01) /
                            frameRate,
                          px.offsetTime,
                        );
                        v2[1] = py.getValueAtTime(
                          (py._caching.lastFrame + py.offsetTime - 0.01) /
                            frameRate,
                          py.offsetTime,
                        );
                      }
                    }
                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));
                  }
                  if (this.data.p && this.data.p.s) {
                    if (this.data.p.z) {
                      this.v.translate(this.px.v, this.py.v, -this.pz.v);
                    } else {
                      this.v.translate(this.px.v, this.py.v, 0);
                    }
                  } else {
                    this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                  }
                }
                this.frameId = this.elem.globalData.frameId;
              }

              function precalculateMatrix() {
                if (!this.a.k) {
                  this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);
                  this.appliedTransformations = 1;
                } else {
                  return;
                }
                if (!this.s.effectsSequence.length) {
                  this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);
                  this.appliedTransformations = 2;
                } else {
                  return;
                }
                if (this.sk) {
                  if (
                    !this.sk.effectsSequence.length &&
                    !this.sa.effectsSequence.length
                  ) {
                    this.pre.skewFromAxis(-this.sk.v, this.sa.v);
                    this.appliedTransformations = 3;
                  } else {
                    return;
                  }
                }
                if (this.r) {
                  if (!this.r.effectsSequence.length) {
                    this.pre.rotate(-this.r.v);
                    this.appliedTransformations = 4;
                  } else {
                    return;
                  }
                } else if (
                  !this.rz.effectsSequence.length &&
                  !this.ry.effectsSequence.length &&
                  !this.rx.effectsSequence.length &&
                  !this.or.effectsSequence.length
                ) {
                  this.pre
                    .rotateZ(-this.rz.v)
                    .rotateY(this.ry.v)
                    .rotateX(this.rx.v)
                    .rotateZ(-this.or.v[2])
                    .rotateY(this.or.v[1])
                    .rotateX(this.or.v[0]);
                  this.appliedTransformations = 4;
                }
              }

              function autoOrient() {
                //
                //var prevP = this.getValueAtTime();
              }

              function addDynamicProperty(prop) {
                this._addDynamicProperty(prop);
                this.elem.addDynamicProperty(prop);
                this._isDirty = true;
              }

              function TransformProperty(elem, data, container) {
                this.elem = elem;
                this.frameId = -1;
                this.propType = "transform";
                this.data = data;
                this.v = new Matrix();
                //Precalculated matrix with non animated properties
                this.pre = new Matrix();
                this.appliedTransformations = 0;
                this.initDynamicPropertyContainer(container || elem);
                if (data.p && data.p.s) {
                  this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);
                  this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);
                  if (data.p.z) {
                    this.pz = PropertyFactory.getProp(
                      elem,
                      data.p.z,
                      0,
                      0,
                      this,
                    );
                  }
                } else {
                  this.p = PropertyFactory.getProp(
                    elem,
                    data.p || { k: [0, 0, 0] },
                    1,
                    0,
                    this,
                  );
                }
                if (data.rx) {
                  this.rx = PropertyFactory.getProp(
                    elem,
                    data.rx,
                    0,
                    degToRads,
                    this,
                  );
                  this.ry = PropertyFactory.getProp(
                    elem,
                    data.ry,
                    0,
                    degToRads,
                    this,
                  );
                  this.rz = PropertyFactory.getProp(
                    elem,
                    data.rz,
                    0,
                    degToRads,
                    this,
                  );
                  if (data.or.k[0].ti) {
                    var i,
                      len = data.or.k.length;
                    for (i = 0; i < len; i += 1) {
                      data.or.k[i].to = data.or.k[i].ti = null;
                    }
                  }
                  this.or = PropertyFactory.getProp(
                    elem,
                    data.or,
                    1,
                    degToRads,
                    this,
                  );
                  //sh Indicates it needs to be capped between -180 and 180
                  this.or.sh = true;
                } else {
                  this.r = PropertyFactory.getProp(
                    elem,
                    data.r || { k: 0 },
                    0,
                    degToRads,
                    this,
                  );
                }
                if (data.sk) {
                  this.sk = PropertyFactory.getProp(
                    elem,
                    data.sk,
                    0,
                    degToRads,
                    this,
                  );
                  this.sa = PropertyFactory.getProp(
                    elem,
                    data.sa,
                    0,
                    degToRads,
                    this,
                  );
                }
                this.a = PropertyFactory.getProp(
                  elem,
                  data.a || { k: [0, 0, 0] },
                  1,
                  0,
                  this,
                );
                this.s = PropertyFactory.getProp(
                  elem,
                  data.s || { k: [100, 100, 100] },
                  1,
                  0.01,
                  this,
                );
                // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.
                if (data.o) {
                  this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);
                } else {
                  this.o = { _mdf: false, v: 1 };
                }
                this._isDirty = true;
                if (!this.dynamicProperties.length) {
                  this.getValue(true);
                }
              }

              TransformProperty.prototype = {
                applyToMatrix: applyToMatrix,
                getValue: processKeys,
                precalculateMatrix: precalculateMatrix,
                autoOrient: autoOrient,
              };

              extendPrototype([DynamicPropertyContainer], TransformProperty);
              TransformProperty.prototype.addDynamicProperty = addDynamicProperty;
              TransformProperty.prototype._addDynamicProperty =
                DynamicPropertyContainer.prototype.addDynamicProperty;

              function getTransformProperty(elem, data, container) {
                return new TransformProperty(elem, data, container);
              }

              return {
                getTransformProperty: getTransformProperty,
              };
            })();
            function ShapePath() {
              this.c = false;
              this._length = 0;
              this._maxLength = 8;
              this.v = createSizedArray(this._maxLength);
              this.o = createSizedArray(this._maxLength);
              this.i = createSizedArray(this._maxLength);
            }

            ShapePath.prototype.setPathData = function(closed, len) {
              this.c = closed;
              this.setLength(len);
              var i = 0;
              while (i < len) {
                this.v[i] = point_pool.newElement();
                this.o[i] = point_pool.newElement();
                this.i[i] = point_pool.newElement();
                i += 1;
              }
            };

            ShapePath.prototype.setLength = function(len) {
              while (this._maxLength < len) {
                this.doubleArrayLength();
              }
              this._length = len;
            };

            ShapePath.prototype.doubleArrayLength = function() {
              this.v = this.v.concat(createSizedArray(this._maxLength));
              this.i = this.i.concat(createSizedArray(this._maxLength));
              this.o = this.o.concat(createSizedArray(this._maxLength));
              this._maxLength *= 2;
            };

            ShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {
              var arr;
              this._length = Math.max(this._length, pos + 1);
              if (this._length >= this._maxLength) {
                this.doubleArrayLength();
              }
              switch (type) {
                case "v":
                  arr = this.v;
                  break;
                case "i":
                  arr = this.i;
                  break;
                case "o":
                  arr = this.o;
                  break;
              }
              if (!arr[pos] || (arr[pos] && !replace)) {
                arr[pos] = point_pool.newElement();
              }
              arr[pos][0] = x;
              arr[pos][1] = y;
            };

            ShapePath.prototype.setTripleAt = function(
              vX,
              vY,
              oX,
              oY,
              iX,
              iY,
              pos,
              replace,
            ) {
              this.setXYAt(vX, vY, "v", pos, replace);
              this.setXYAt(oX, oY, "o", pos, replace);
              this.setXYAt(iX, iY, "i", pos, replace);
            };

            ShapePath.prototype.reverse = function() {
              var newPath = new ShapePath();
              newPath.setPathData(this.c, this._length);
              var vertices = this.v,
                outPoints = this.o,
                inPoints = this.i;
              var init = 0;
              if (this.c) {
                newPath.setTripleAt(
                  vertices[0][0],
                  vertices[0][1],
                  inPoints[0][0],
                  inPoints[0][1],
                  outPoints[0][0],
                  outPoints[0][1],
                  0,
                  false,
                );
                init = 1;
              }
              var cnt = this._length - 1;
              var len = this._length;

              var i;
              for (i = init; i < len; i += 1) {
                newPath.setTripleAt(
                  vertices[cnt][0],
                  vertices[cnt][1],
                  inPoints[cnt][0],
                  inPoints[cnt][1],
                  outPoints[cnt][0],
                  outPoints[cnt][1],
                  i,
                  false,
                );
                cnt -= 1;
              }
              return newPath;
            };
            var ShapePropertyFactory = (function() {
              var initFrame = -999999;

              function interpolateShape(frameNum, previousValue, caching) {
                var iterationIndex = caching.lastIndex;
                var keyPropS,
                  keyPropE,
                  isHold,
                  j,
                  k,
                  jLen,
                  kLen,
                  perc,
                  vertexValue;
                var kf = this.keyframes;
                if (frameNum < kf[0].t - this.offsetTime) {
                  keyPropS = kf[0].s[0];
                  isHold = true;
                  iterationIndex = 0;
                } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {
                  keyPropS = kf[kf.length - 1].s
                    ? kf[kf.length - 1].s[0]
                    : kf[kf.length - 2].e[0];
                  /*if(kf[kf.length - 1].s){
                keyPropS = kf[kf.length - 1].s[0];
            }else{
                keyPropS = kf[kf.length - 2].e[0];
            }*/
                  isHold = true;
                } else {
                  var i = iterationIndex;
                  var len = kf.length - 1,
                    flag = true,
                    keyData,
                    nextKeyData;
                  while (flag) {
                    keyData = kf[i];
                    nextKeyData = kf[i + 1];
                    if (nextKeyData.t - this.offsetTime > frameNum) {
                      break;
                    }
                    if (i < len - 1) {
                      i += 1;
                    } else {
                      flag = false;
                    }
                  }
                  isHold = keyData.h === 1;
                  iterationIndex = i;
                  if (!isHold) {
                    if (frameNum >= nextKeyData.t - this.offsetTime) {
                      perc = 1;
                    } else if (frameNum < keyData.t - this.offsetTime) {
                      perc = 0;
                    } else {
                      var fnc;
                      if (keyData.__fnct) {
                        fnc = keyData.__fnct;
                      } else {
                        fnc = BezierFactory.getBezierEasing(
                          keyData.o.x,
                          keyData.o.y,
                          keyData.i.x,
                          keyData.i.y,
                        ).get;
                        keyData.__fnct = fnc;
                      }
                      perc = fnc(
                        (frameNum - (keyData.t - this.offsetTime)) /
                          (nextKeyData.t -
                            this.offsetTime -
                            (keyData.t - this.offsetTime)),
                      );
                    }
                    keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];
                  }
                  keyPropS = keyData.s[0];
                }
                jLen = previousValue._length;
                kLen = keyPropS.i[0].length;
                caching.lastIndex = iterationIndex;

                for (j = 0; j < jLen; j += 1) {
                  for (k = 0; k < kLen; k += 1) {
                    vertexValue = isHold
                      ? keyPropS.i[j][k]
                      : keyPropS.i[j][k] +
                        (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;
                    previousValue.i[j][k] = vertexValue;
                    vertexValue = isHold
                      ? keyPropS.o[j][k]
                      : keyPropS.o[j][k] +
                        (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;
                    previousValue.o[j][k] = vertexValue;
                    vertexValue = isHold
                      ? keyPropS.v[j][k]
                      : keyPropS.v[j][k] +
                        (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;
                    previousValue.v[j][k] = vertexValue;
                  }
                }
              }

              function interpolateShapeCurrentTime() {
                var frameNum = this.comp.renderedFrame - this.offsetTime;
                var initTime = this.keyframes[0].t - this.offsetTime;
                var endTime =
                  this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                var lastFrame = this._caching.lastFrame;
                if (
                  !(
                    lastFrame !== initFrame &&
                    ((lastFrame < initTime && frameNum < initTime) ||
                      (lastFrame > endTime && frameNum > endTime))
                  )
                ) {
                  ////
                  this._caching.lastIndex =
                    lastFrame < frameNum ? this._caching.lastIndex : 0;
                  this.interpolateShape(frameNum, this.pv, this._caching);
                  ////
                }
                this._caching.lastFrame = frameNum;
                return this.pv;
              }

              function resetShape() {
                this.paths = this.localShapeCollection;
              }

              function shapesEqual(shape1, shape2) {
                if (
                  shape1._length !== shape2._length ||
                  shape1.c !== shape2.c
                ) {
                  return false;
                }
                var i,
                  len = shape1._length;
                for (i = 0; i < len; i += 1) {
                  if (
                    shape1.v[i][0] !== shape2.v[i][0] ||
                    shape1.v[i][1] !== shape2.v[i][1] ||
                    shape1.o[i][0] !== shape2.o[i][0] ||
                    shape1.o[i][1] !== shape2.o[i][1] ||
                    shape1.i[i][0] !== shape2.i[i][0] ||
                    shape1.i[i][1] !== shape2.i[i][1]
                  ) {
                    return false;
                  }
                }
                return true;
              }

              function setVValue(newPath) {
                if (!shapesEqual(this.v, newPath)) {
                  this.v = shape_pool.clone(newPath);
                  this.localShapeCollection.releaseShapes();
                  this.localShapeCollection.addShape(this.v);
                  this._mdf = true;
                  this.paths = this.localShapeCollection;
                }
              }

              function processEffectsSequence() {
                if (
                  this.elem.globalData.frameId === this.frameId ||
                  !this.effectsSequence.length
                ) {
                  return;
                }
                if (this.lock) {
                  this.setVValue(this.pv);
                  return;
                }
                this.lock = true;
                this._mdf = false;
                var finalValue = this.kf
                  ? this.pv
                  : this.data.ks
                  ? this.data.ks.k
                  : this.data.pt.k;
                var i,
                  len = this.effectsSequence.length;
                for (i = 0; i < len; i += 1) {
                  finalValue = this.effectsSequence[i](finalValue);
                }
                this.setVValue(finalValue);
                this.lock = false;
                this.frameId = this.elem.globalData.frameId;
              }

              function ShapeProperty(elem, data, type) {
                this.propType = "shape";
                this.comp = elem.comp;
                this.container = elem;
                this.elem = elem;
                this.data = data;
                this.k = false;
                this.kf = false;
                this._mdf = false;
                var pathData = type === 3 ? data.pt.k : data.ks.k;
                this.v = shape_pool.clone(pathData);
                this.pv = shape_pool.clone(this.v);
                this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                this.paths = this.localShapeCollection;
                this.paths.addShape(this.v);
                this.reset = resetShape;
                this.effectsSequence = [];
              }

              function addEffect(effectFunction) {
                this.effectsSequence.push(effectFunction);
                this.container.addDynamicProperty(this);
              }

              ShapeProperty.prototype.interpolateShape = interpolateShape;
              ShapeProperty.prototype.getValue = processEffectsSequence;
              ShapeProperty.prototype.setVValue = setVValue;
              ShapeProperty.prototype.addEffect = addEffect;

              function KeyframedShapeProperty(elem, data, type) {
                this.propType = "shape";
                this.comp = elem.comp;
                this.elem = elem;
                this.container = elem;
                this.offsetTime = elem.data.st;
                this.keyframes = type === 3 ? data.pt.k : data.ks.k;
                this.k = true;
                this.kf = true;
                var i,
                  len = this.keyframes[0].s[0].i.length;
                var jLen = this.keyframes[0].s[0].i[0].length;
                this.v = shape_pool.newElement();
                this.v.setPathData(this.keyframes[0].s[0].c, len);
                this.pv = shape_pool.clone(this.v);
                this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                this.paths = this.localShapeCollection;
                this.paths.addShape(this.v);
                this.lastFrame = initFrame;
                this.reset = resetShape;
                this._caching = { lastFrame: initFrame, lastIndex: 0 };
                this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];
              }
              KeyframedShapeProperty.prototype.getValue = processEffectsSequence;
              KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;
              KeyframedShapeProperty.prototype.setVValue = setVValue;
              KeyframedShapeProperty.prototype.addEffect = addEffect;

              var EllShapeProperty = (function() {
                var cPoint = roundCorner;

                function EllShapeProperty(elem, data) {
                  /*this.v = {
                v: createSizedArray(4),
                i: createSizedArray(4),
                o: createSizedArray(4),
                c: true
            };*/
                  this.v = shape_pool.newElement();
                  this.v.setPathData(true, 4);
                  this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                  this.paths = this.localShapeCollection;
                  this.localShapeCollection.addShape(this.v);
                  this.d = data.d;
                  this.elem = elem;
                  this.comp = elem.comp;
                  this.frameId = -1;
                  this.initDynamicPropertyContainer(elem);
                  this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
                  this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);
                  if (this.dynamicProperties.length) {
                    this.k = true;
                  } else {
                    this.k = false;
                    this.convertEllToPath();
                  }
                }

                EllShapeProperty.prototype = {
                  reset: resetShape,
                  getValue: function() {
                    if (this.elem.globalData.frameId === this.frameId) {
                      return;
                    }
                    this.frameId = this.elem.globalData.frameId;
                    this.iterateDynamicProperties();

                    if (this._mdf) {
                      this.convertEllToPath();
                    }
                  },
                  convertEllToPath: function() {
                    var p0 = this.p.v[0],
                      p1 = this.p.v[1],
                      s0 = this.s.v[0] / 2,
                      s1 = this.s.v[1] / 2;
                    var _cw = this.d !== 3;
                    var _v = this.v;
                    _v.v[0][0] = p0;
                    _v.v[0][1] = p1 - s1;
                    _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;
                    _v.v[1][1] = p1;
                    _v.v[2][0] = p0;
                    _v.v[2][1] = p1 + s1;
                    _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;
                    _v.v[3][1] = p1;
                    _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                    _v.i[0][1] = p1 - s1;
                    _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;
                    _v.i[1][1] = p1 - s1 * cPoint;
                    _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                    _v.i[2][1] = p1 + s1;
                    _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;
                    _v.i[3][1] = p1 + s1 * cPoint;
                    _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;
                    _v.o[0][1] = p1 - s1;
                    _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;
                    _v.o[1][1] = p1 + s1 * cPoint;
                    _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;
                    _v.o[2][1] = p1 + s1;
                    _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;
                    _v.o[3][1] = p1 - s1 * cPoint;
                  },
                };

                extendPrototype([DynamicPropertyContainer], EllShapeProperty);

                return EllShapeProperty;
              })();

              var StarShapeProperty = (function() {
                function StarShapeProperty(elem, data) {
                  this.v = shape_pool.newElement();
                  this.v.setPathData(true, 0);
                  this.elem = elem;
                  this.comp = elem.comp;
                  this.data = data;
                  this.frameId = -1;
                  this.d = data.d;
                  this.initDynamicPropertyContainer(elem);
                  if (data.sy === 1) {
                    this.ir = PropertyFactory.getProp(
                      elem,
                      data.ir,
                      0,
                      0,
                      this,
                    );
                    this.is = PropertyFactory.getProp(
                      elem,
                      data.is,
                      0,
                      0.01,
                      this,
                    );
                    this.convertToPath = this.convertStarToPath;
                  } else {
                    this.convertToPath = this.convertPolygonToPath;
                  }
                  this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);
                  this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
                  this.r = PropertyFactory.getProp(
                    elem,
                    data.r,
                    0,
                    degToRads,
                    this,
                  );
                  this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);
                  this.os = PropertyFactory.getProp(
                    elem,
                    data.os,
                    0,
                    0.01,
                    this,
                  );
                  this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                  this.localShapeCollection.addShape(this.v);
                  this.paths = this.localShapeCollection;
                  if (this.dynamicProperties.length) {
                    this.k = true;
                  } else {
                    this.k = false;
                    this.convertToPath();
                  }
                }

                StarShapeProperty.prototype = {
                  reset: resetShape,
                  getValue: function() {
                    if (this.elem.globalData.frameId === this.frameId) {
                      return;
                    }
                    this.frameId = this.elem.globalData.frameId;
                    this.iterateDynamicProperties();
                    if (this._mdf) {
                      this.convertToPath();
                    }
                  },
                  convertStarToPath: function() {
                    var numPts = Math.floor(this.pt.v) * 2;
                    var angle = (Math.PI * 2) / numPts;
                    /*this.v.v.length = numPts;
                this.v.i.length = numPts;
                this.v.o.length = numPts;*/
                    var longFlag = true;
                    var longRad = this.or.v;
                    var shortRad = this.ir.v;
                    var longRound = this.os.v;
                    var shortRound = this.is.v;
                    var longPerimSegment =
                      (2 * Math.PI * longRad) / (numPts * 2);
                    var shortPerimSegment =
                      (2 * Math.PI * shortRad) / (numPts * 2);
                    var i,
                      rad,
                      roundness,
                      perimSegment,
                      currentAng = -Math.PI / 2;
                    currentAng += this.r.v;
                    var dir = this.data.d === 3 ? -1 : 1;
                    this.v._length = 0;
                    for (i = 0; i < numPts; i += 1) {
                      rad = longFlag ? longRad : shortRad;
                      roundness = longFlag ? longRound : shortRound;
                      perimSegment = longFlag
                        ? longPerimSegment
                        : shortPerimSegment;
                      var x = rad * Math.cos(currentAng);
                      var y = rad * Math.sin(currentAng);
                      var ox =
                        x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
                      var oy =
                        x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
                      x += +this.p.v[0];
                      y += +this.p.v[1];
                      this.v.setTripleAt(
                        x,
                        y,
                        x - ox * perimSegment * roundness * dir,
                        y - oy * perimSegment * roundness * dir,
                        x + ox * perimSegment * roundness * dir,
                        y + oy * perimSegment * roundness * dir,
                        i,
                        true,
                      );

                      /*this.v.v[i] = [x,y];
                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];
                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];
                    this.v._length = numPts;*/
                      longFlag = !longFlag;
                      currentAng += angle * dir;
                    }
                  },
                  convertPolygonToPath: function() {
                    var numPts = Math.floor(this.pt.v);
                    var angle = (Math.PI * 2) / numPts;
                    var rad = this.or.v;
                    var roundness = this.os.v;
                    var perimSegment = (2 * Math.PI * rad) / (numPts * 4);
                    var i,
                      currentAng = -Math.PI / 2;
                    var dir = this.data.d === 3 ? -1 : 1;
                    currentAng += this.r.v;
                    this.v._length = 0;
                    for (i = 0; i < numPts; i += 1) {
                      var x = rad * Math.cos(currentAng);
                      var y = rad * Math.sin(currentAng);
                      var ox =
                        x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);
                      var oy =
                        x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);
                      x += +this.p.v[0];
                      y += +this.p.v[1];
                      this.v.setTripleAt(
                        x,
                        y,
                        x - ox * perimSegment * roundness * dir,
                        y - oy * perimSegment * roundness * dir,
                        x + ox * perimSegment * roundness * dir,
                        y + oy * perimSegment * roundness * dir,
                        i,
                        true,
                      );
                      currentAng += angle * dir;
                    }
                    this.paths.length = 0;
                    this.paths[0] = this.v;
                  },
                };
                extendPrototype([DynamicPropertyContainer], StarShapeProperty);

                return StarShapeProperty;
              })();

              var RectShapeProperty = (function() {
                function RectShapeProperty(elem, data) {
                  this.v = shape_pool.newElement();
                  this.v.c = true;
                  this.localShapeCollection = shapeCollection_pool.newShapeCollection();
                  this.localShapeCollection.addShape(this.v);
                  this.paths = this.localShapeCollection;
                  this.elem = elem;
                  this.comp = elem.comp;
                  this.frameId = -1;
                  this.d = data.d;
                  this.initDynamicPropertyContainer(elem);
                  this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);
                  this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);
                  this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);
                  if (this.dynamicProperties.length) {
                    this.k = true;
                  } else {
                    this.k = false;
                    this.convertRectToPath();
                  }
                }

                RectShapeProperty.prototype = {
                  convertRectToPath: function() {
                    var p0 = this.p.v[0],
                      p1 = this.p.v[1],
                      v0 = this.s.v[0] / 2,
                      v1 = this.s.v[1] / 2;
                    var round = bm_min(v0, v1, this.r.v);
                    var cPoint = round * (1 - roundCorner);
                    this.v._length = 0;

                    if (this.d === 2 || this.d === 1) {
                      this.v.setTripleAt(
                        p0 + v0,
                        p1 - v1 + round,
                        p0 + v0,
                        p1 - v1 + round,
                        p0 + v0,
                        p1 - v1 + cPoint,
                        0,
                        true,
                      );
                      this.v.setTripleAt(
                        p0 + v0,
                        p1 + v1 - round,
                        p0 + v0,
                        p1 + v1 - cPoint,
                        p0 + v0,
                        p1 + v1 - round,
                        1,
                        true,
                      );
                      if (round !== 0) {
                        this.v.setTripleAt(
                          p0 + v0 - round,
                          p1 + v1,
                          p0 + v0 - round,
                          p1 + v1,
                          p0 + v0 - cPoint,
                          p1 + v1,
                          2,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0 + round,
                          p1 + v1,
                          p0 - v0 + cPoint,
                          p1 + v1,
                          p0 - v0 + round,
                          p1 + v1,
                          3,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 + v1 - round,
                          p0 - v0,
                          p1 + v1 - round,
                          p0 - v0,
                          p1 + v1 - cPoint,
                          4,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 - v1 + round,
                          p0 - v0,
                          p1 - v1 + cPoint,
                          p0 - v0,
                          p1 - v1 + round,
                          5,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0 + round,
                          p1 - v1,
                          p0 - v0 + round,
                          p1 - v1,
                          p0 - v0 + cPoint,
                          p1 - v1,
                          6,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 + v0 - round,
                          p1 - v1,
                          p0 + v0 - cPoint,
                          p1 - v1,
                          p0 + v0 - round,
                          p1 - v1,
                          7,
                          true,
                        );
                      } else {
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 + v1,
                          p0 - v0 + cPoint,
                          p1 + v1,
                          p0 - v0,
                          p1 + v1,
                          2,
                        );
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 - v1,
                          p0 - v0,
                          p1 - v1 + cPoint,
                          p0 - v0,
                          p1 - v1,
                          3,
                        );
                      }
                    } else {
                      this.v.setTripleAt(
                        p0 + v0,
                        p1 - v1 + round,
                        p0 + v0,
                        p1 - v1 + cPoint,
                        p0 + v0,
                        p1 - v1 + round,
                        0,
                        true,
                      );
                      if (round !== 0) {
                        this.v.setTripleAt(
                          p0 + v0 - round,
                          p1 - v1,
                          p0 + v0 - round,
                          p1 - v1,
                          p0 + v0 - cPoint,
                          p1 - v1,
                          1,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0 + round,
                          p1 - v1,
                          p0 - v0 + cPoint,
                          p1 - v1,
                          p0 - v0 + round,
                          p1 - v1,
                          2,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 - v1 + round,
                          p0 - v0,
                          p1 - v1 + round,
                          p0 - v0,
                          p1 - v1 + cPoint,
                          3,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 + v1 - round,
                          p0 - v0,
                          p1 + v1 - cPoint,
                          p0 - v0,
                          p1 + v1 - round,
                          4,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0 + round,
                          p1 + v1,
                          p0 - v0 + round,
                          p1 + v1,
                          p0 - v0 + cPoint,
                          p1 + v1,
                          5,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 + v0 - round,
                          p1 + v1,
                          p0 + v0 - cPoint,
                          p1 + v1,
                          p0 + v0 - round,
                          p1 + v1,
                          6,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 + v0,
                          p1 + v1 - round,
                          p0 + v0,
                          p1 + v1 - round,
                          p0 + v0,
                          p1 + v1 - cPoint,
                          7,
                          true,
                        );
                      } else {
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 - v1,
                          p0 - v0 + cPoint,
                          p1 - v1,
                          p0 - v0,
                          p1 - v1,
                          1,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 - v0,
                          p1 + v1,
                          p0 - v0,
                          p1 + v1 - cPoint,
                          p0 - v0,
                          p1 + v1,
                          2,
                          true,
                        );
                        this.v.setTripleAt(
                          p0 + v0,
                          p1 + v1,
                          p0 + v0 - cPoint,
                          p1 + v1,
                          p0 + v0,
                          p1 + v1,
                          3,
                          true,
                        );
                      }
                    }
                  },
                  getValue: function(frameNum) {
                    if (this.elem.globalData.frameId === this.frameId) {
                      return;
                    }
                    this.frameId = this.elem.globalData.frameId;
                    this.iterateDynamicProperties();
                    if (this._mdf) {
                      this.convertRectToPath();
                    }
                  },
                  reset: resetShape,
                };
                extendPrototype([DynamicPropertyContainer], RectShapeProperty);

                return RectShapeProperty;
              })();

              function getShapeProp(elem, data, type) {
                var prop;
                if (type === 3 || type === 4) {
                  var dataProp = type === 3 ? data.pt : data.ks;
                  var keys = dataProp.k;
                  if (keys.length) {
                    prop = new KeyframedShapeProperty(elem, data, type);
                  } else {
                    prop = new ShapeProperty(elem, data, type);
                  }
                } else if (type === 5) {
                  prop = new RectShapeProperty(elem, data);
                } else if (type === 6) {
                  prop = new EllShapeProperty(elem, data);
                } else if (type === 7) {
                  prop = new StarShapeProperty(elem, data);
                }
                if (prop.k) {
                  elem.addDynamicProperty(prop);
                }
                return prop;
              }

              function getConstructorFunction() {
                return ShapeProperty;
              }

              function getKeyframedConstructorFunction() {
                return KeyframedShapeProperty;
              }

              var ob = {};
              ob.getShapeProp = getShapeProp;
              ob.getConstructorFunction = getConstructorFunction;
              ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;
              return ob;
            })();
            var ShapeModifiers = (function() {
              var ob = {};
              var modifiers = {};
              ob.registerModifier = registerModifier;
              ob.getModifier = getModifier;

              function registerModifier(nm, factory) {
                if (!modifiers[nm]) {
                  modifiers[nm] = factory;
                }
              }

              function getModifier(nm, elem, data) {
                return new modifiers[nm](elem, data);
              }

              return ob;
            })();

            function ShapeModifier() {}
            ShapeModifier.prototype.initModifierProperties = function() {};
            ShapeModifier.prototype.addShapeToModifier = function() {};
            ShapeModifier.prototype.addShape = function(data) {
              if (!this.closed) {
                var shapeData = {
                  shape: data.sh,
                  data: data,
                  localShapeCollection: shapeCollection_pool.newShapeCollection(),
                };
                this.shapes.push(shapeData);
                this.addShapeToModifier(shapeData);
                if (this._isAnimated) {
                  data.setAsAnimated();
                }
              }
            };
            ShapeModifier.prototype.init = function(elem, data) {
              this.shapes = [];
              this.elem = elem;
              this.initDynamicPropertyContainer(elem);
              this.initModifierProperties(elem, data);
              this.frameId = initialDefaultFrame;
              this.closed = false;
              this.k = false;
              if (this.dynamicProperties.length) {
                this.k = true;
              } else {
                this.getValue(true);
              }
            };
            ShapeModifier.prototype.processKeys = function() {
              if (this.elem.globalData.frameId === this.frameId) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
            };

            extendPrototype([DynamicPropertyContainer], ShapeModifier);
            function TrimModifier() {}
            extendPrototype([ShapeModifier], TrimModifier);
            TrimModifier.prototype.initModifierProperties = function(
              elem,
              data,
            ) {
              this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);
              this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);
              this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);
              this.sValue = 0;
              this.eValue = 0;
              this.getValue = this.processKeys;
              this.m = data.m;
              this._isAnimated =
                !!this.s.effectsSequence.length ||
                !!this.e.effectsSequence.length ||
                !!this.o.effectsSequence.length;
            };

            TrimModifier.prototype.addShapeToModifier = function(shapeData) {
              shapeData.pathsData = [];
            };

            TrimModifier.prototype.calculateShapeEdges = function(
              s,
              e,
              shapeLength,
              addedLength,
              totalModifierLength,
            ) {
              var segments = [];
              if (e <= 1) {
                segments.push({
                  s: s,
                  e: e,
                });
              } else if (s >= 1) {
                segments.push({
                  s: s - 1,
                  e: e - 1,
                });
              } else {
                segments.push({
                  s: s,
                  e: 1,
                });
                segments.push({
                  s: 0,
                  e: e - 1,
                });
              }
              var shapeSegments = [];
              var i,
                len = segments.length,
                segmentOb;
              for (i = 0; i < len; i += 1) {
                segmentOb = segments[i];
                if (
                  segmentOb.e * totalModifierLength < addedLength ||
                  segmentOb.s * totalModifierLength > addedLength + shapeLength
                ) {
                } else {
                  var shapeS, shapeE;
                  if (segmentOb.s * totalModifierLength <= addedLength) {
                    shapeS = 0;
                  } else {
                    shapeS =
                      (segmentOb.s * totalModifierLength - addedLength) /
                      shapeLength;
                  }
                  if (
                    segmentOb.e * totalModifierLength >=
                    addedLength + shapeLength
                  ) {
                    shapeE = 1;
                  } else {
                    shapeE =
                      (segmentOb.e * totalModifierLength - addedLength) /
                      shapeLength;
                  }
                  shapeSegments.push([shapeS, shapeE]);
                }
              }
              if (!shapeSegments.length) {
                shapeSegments.push([0, 0]);
              }
              return shapeSegments;
            };

            TrimModifier.prototype.releasePathsData = function(pathsData) {
              var i,
                len = pathsData.length;
              for (i = 0; i < len; i += 1) {
                segments_length_pool.release(pathsData[i]);
              }
              pathsData.length = 0;
              return pathsData;
            };

            TrimModifier.prototype.processShapes = function(_isFirstFrame) {
              var s, e;
              if (this._mdf || _isFirstFrame) {
                var o = (this.o.v % 360) / 360;
                if (o < 0) {
                  o += 1;
                }
                s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;
                e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;
                if (s === e) {
                }
                if (s > e) {
                  var _s = s;
                  s = e;
                  e = _s;
                }
                s = Math.round(s * 10000) * 0.0001;
                e = Math.round(e * 10000) * 0.0001;
                this.sValue = s;
                this.eValue = e;
              } else {
                s = this.sValue;
                e = this.eValue;
              }
              var shapePaths;
              var i,
                len = this.shapes.length,
                j,
                jLen;
              var pathsData,
                pathData,
                totalShapeLength,
                totalModifierLength = 0;

              if (e === s) {
                for (i = 0; i < len; i += 1) {
                  this.shapes[i].localShapeCollection.releaseShapes();
                  this.shapes[i].shape._mdf = true;
                  this.shapes[i].shape.paths = this.shapes[
                    i
                  ].localShapeCollection;
                }
              } else if (!((e === 1 && s === 0) || (e === 0 && s === 1))) {
                var segments = [],
                  shapeData,
                  localShapeCollection;
                for (i = 0; i < len; i += 1) {
                  shapeData = this.shapes[i];
                  // if shape hasn't changed and trim properties haven't changed, cached previous path can be used
                  if (
                    !shapeData.shape._mdf &&
                    !this._mdf &&
                    !_isFirstFrame &&
                    this.m !== 2
                  ) {
                    shapeData.shape.paths = shapeData.localShapeCollection;
                  } else {
                    shapePaths = shapeData.shape.paths;
                    jLen = shapePaths._length;
                    totalShapeLength = 0;
                    if (!shapeData.shape._mdf && shapeData.pathsData.length) {
                      totalShapeLength = shapeData.totalShapeLength;
                    } else {
                      pathsData = this.releasePathsData(shapeData.pathsData);
                      for (j = 0; j < jLen; j += 1) {
                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);
                        pathsData.push(pathData);
                        totalShapeLength += pathData.totalLength;
                      }
                      shapeData.totalShapeLength = totalShapeLength;
                      shapeData.pathsData = pathsData;
                    }

                    totalModifierLength += totalShapeLength;
                    shapeData.shape._mdf = true;
                  }
                }
                var shapeS = s,
                  shapeE = e,
                  addedLength = 0,
                  edges;
                for (i = len - 1; i >= 0; i -= 1) {
                  shapeData = this.shapes[i];
                  if (shapeData.shape._mdf) {
                    localShapeCollection = shapeData.localShapeCollection;
                    localShapeCollection.releaseShapes();
                    //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group
                    if (this.m === 2 && len > 1) {
                      edges = this.calculateShapeEdges(
                        s,
                        e,
                        shapeData.totalShapeLength,
                        addedLength,
                        totalModifierLength,
                      );
                      addedLength += shapeData.totalShapeLength;
                    } else {
                      edges = [[shapeS, shapeE]];
                    }
                    jLen = edges.length;
                    for (j = 0; j < jLen; j += 1) {
                      shapeS = edges[j][0];
                      shapeE = edges[j][1];
                      segments.length = 0;
                      if (shapeE <= 1) {
                        segments.push({
                          s: shapeData.totalShapeLength * shapeS,
                          e: shapeData.totalShapeLength * shapeE,
                        });
                      } else if (shapeS >= 1) {
                        segments.push({
                          s: shapeData.totalShapeLength * (shapeS - 1),
                          e: shapeData.totalShapeLength * (shapeE - 1),
                        });
                      } else {
                        segments.push({
                          s: shapeData.totalShapeLength * shapeS,
                          e: shapeData.totalShapeLength,
                        });
                        segments.push({
                          s: 0,
                          e: shapeData.totalShapeLength * (shapeE - 1),
                        });
                      }
                      var newShapesData = this.addShapes(
                        shapeData,
                        segments[0],
                      );
                      if (segments[0].s !== segments[0].e) {
                        if (segments.length > 1) {
                          var lastShapeInCollection =
                            shapeData.shape.paths.shapes[
                              shapeData.shape.paths._length - 1
                            ];
                          if (lastShapeInCollection.c) {
                            var lastShape = newShapesData.pop();
                            this.addPaths(newShapesData, localShapeCollection);
                            newShapesData = this.addShapes(
                              shapeData,
                              segments[1],
                              lastShape,
                            );
                          } else {
                            this.addPaths(newShapesData, localShapeCollection);
                            newShapesData = this.addShapes(
                              shapeData,
                              segments[1],
                            );
                          }
                        }
                        this.addPaths(newShapesData, localShapeCollection);
                      }
                    }
                    shapeData.shape.paths = localShapeCollection;
                  }
                }
              } else if (this._mdf) {
                for (i = 0; i < len; i += 1) {
                  //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.
                  //Don't remove this even if it's losing cached info.
                  this.shapes[i].pathsData.length = 0;
                  this.shapes[i].shape._mdf = true;
                }
              }
            };

            TrimModifier.prototype.addPaths = function(
              newPaths,
              localShapeCollection,
            ) {
              var i,
                len = newPaths.length;
              for (i = 0; i < len; i += 1) {
                localShapeCollection.addShape(newPaths[i]);
              }
            };

            TrimModifier.prototype.addSegment = function(
              pt1,
              pt2,
              pt3,
              pt4,
              shapePath,
              pos,
              newShape,
            ) {
              shapePath.setXYAt(pt2[0], pt2[1], "o", pos);
              shapePath.setXYAt(pt3[0], pt3[1], "i", pos + 1);
              if (newShape) {
                shapePath.setXYAt(pt1[0], pt1[1], "v", pos);
              }
              shapePath.setXYAt(pt4[0], pt4[1], "v", pos + 1);
            };

            TrimModifier.prototype.addSegmentFromArray = function(
              points,
              shapePath,
              pos,
              newShape,
            ) {
              shapePath.setXYAt(points[1], points[5], "o", pos);
              shapePath.setXYAt(points[2], points[6], "i", pos + 1);
              if (newShape) {
                shapePath.setXYAt(points[0], points[4], "v", pos);
              }
              shapePath.setXYAt(points[3], points[7], "v", pos + 1);
            };

            TrimModifier.prototype.addShapes = function(
              shapeData,
              shapeSegment,
              shapePath,
            ) {
              var pathsData = shapeData.pathsData;
              var shapePaths = shapeData.shape.paths.shapes;
              var i,
                len = shapeData.shape.paths._length,
                j,
                jLen;
              var addedLength = 0;
              var currentLengthData, segmentCount;
              var lengths;
              var segment;
              var shapes = [];
              var initPos;
              var newShape = true;
              if (!shapePath) {
                shapePath = shape_pool.newElement();
                segmentCount = 0;
                initPos = 0;
              } else {
                segmentCount = shapePath._length;
                initPos = shapePath._length;
              }
              shapes.push(shapePath);
              for (i = 0; i < len; i += 1) {
                lengths = pathsData[i].lengths;
                shapePath.c = shapePaths[i].c;
                jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;
                for (j = 1; j < jLen; j += 1) {
                  currentLengthData = lengths[j - 1];
                  if (
                    addedLength + currentLengthData.addedLength <
                    shapeSegment.s
                  ) {
                    addedLength += currentLengthData.addedLength;
                    shapePath.c = false;
                  } else if (addedLength > shapeSegment.e) {
                    shapePath.c = false;
                    break;
                  } else {
                    if (
                      shapeSegment.s <= addedLength &&
                      shapeSegment.e >=
                        addedLength + currentLengthData.addedLength
                    ) {
                      this.addSegment(
                        shapePaths[i].v[j - 1],
                        shapePaths[i].o[j - 1],
                        shapePaths[i].i[j],
                        shapePaths[i].v[j],
                        shapePath,
                        segmentCount,
                        newShape,
                      );
                      newShape = false;
                    } else {
                      segment = bez.getNewSegment(
                        shapePaths[i].v[j - 1],
                        shapePaths[i].v[j],
                        shapePaths[i].o[j - 1],
                        shapePaths[i].i[j],
                        (shapeSegment.s - addedLength) /
                          currentLengthData.addedLength,
                        (shapeSegment.e - addedLength) /
                          currentLengthData.addedLength,
                        lengths[j - 1],
                      );
                      this.addSegmentFromArray(
                        segment,
                        shapePath,
                        segmentCount,
                        newShape,
                      );
                      // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                      newShape = false;
                      shapePath.c = false;
                    }
                    addedLength += currentLengthData.addedLength;
                    segmentCount += 1;
                  }
                }
                if (shapePaths[i].c && lengths.length) {
                  currentLengthData = lengths[j - 1];
                  if (addedLength <= shapeSegment.e) {
                    var segmentLength = lengths[j - 1].addedLength;
                    if (
                      shapeSegment.s <= addedLength &&
                      shapeSegment.e >= addedLength + segmentLength
                    ) {
                      this.addSegment(
                        shapePaths[i].v[j - 1],
                        shapePaths[i].o[j - 1],
                        shapePaths[i].i[0],
                        shapePaths[i].v[0],
                        shapePath,
                        segmentCount,
                        newShape,
                      );
                      newShape = false;
                    } else {
                      segment = bez.getNewSegment(
                        shapePaths[i].v[j - 1],
                        shapePaths[i].v[0],
                        shapePaths[i].o[j - 1],
                        shapePaths[i].i[0],
                        (shapeSegment.s - addedLength) / segmentLength,
                        (shapeSegment.e - addedLength) / segmentLength,
                        lengths[j - 1],
                      );
                      this.addSegmentFromArray(
                        segment,
                        shapePath,
                        segmentCount,
                        newShape,
                      );
                      // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);
                      newShape = false;
                      shapePath.c = false;
                    }
                  } else {
                    shapePath.c = false;
                  }
                  addedLength += currentLengthData.addedLength;
                  segmentCount += 1;
                }
                if (shapePath._length) {
                  shapePath.setXYAt(
                    shapePath.v[initPos][0],
                    shapePath.v[initPos][1],
                    "i",
                    initPos,
                  );
                  shapePath.setXYAt(
                    shapePath.v[shapePath._length - 1][0],
                    shapePath.v[shapePath._length - 1][1],
                    "o",
                    shapePath._length - 1,
                  );
                }
                if (addedLength > shapeSegment.e) {
                  break;
                }
                if (i < len - 1) {
                  shapePath = shape_pool.newElement();
                  newShape = true;
                  shapes.push(shapePath);
                  segmentCount = 0;
                }
              }
              return shapes;
            };

            ShapeModifiers.registerModifier("tm", TrimModifier);
            function RoundCornersModifier() {}
            extendPrototype([ShapeModifier], RoundCornersModifier);
            RoundCornersModifier.prototype.initModifierProperties = function(
              elem,
              data,
            ) {
              this.getValue = this.processKeys;
              this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);
              this._isAnimated = !!this.rd.effectsSequence.length;
            };

            RoundCornersModifier.prototype.processPath = function(path, round) {
              var cloned_path = shape_pool.newElement();
              cloned_path.c = path.c;
              var i,
                len = path._length;
              var currentV,
                currentI,
                currentO,
                closerV,
                newV,
                newO,
                newI,
                distance,
                newPosPerc,
                index = 0;
              var vX, vY, oX, oY, iX, iY;
              for (i = 0; i < len; i += 1) {
                currentV = path.v[i];
                currentO = path.o[i];
                currentI = path.i[i];
                if (
                  currentV[0] === currentO[0] &&
                  currentV[1] === currentO[1] &&
                  currentV[0] === currentI[0] &&
                  currentV[1] === currentI[1]
                ) {
                  if ((i === 0 || i === len - 1) && !path.c) {
                    cloned_path.setTripleAt(
                      currentV[0],
                      currentV[1],
                      currentO[0],
                      currentO[1],
                      currentI[0],
                      currentI[1],
                      index,
                    );
                    /*cloned_path.v[index] = currentV;
                cloned_path.o[index] = currentO;
                cloned_path.i[index] = currentI;*/
                    index += 1;
                  } else {
                    if (i === 0) {
                      closerV = path.v[len - 1];
                    } else {
                      closerV = path.v[i - 1];
                    }
                    distance = Math.sqrt(
                      Math.pow(currentV[0] - closerV[0], 2) +
                        Math.pow(currentV[1] - closerV[1], 2),
                    );
                    newPosPerc = distance
                      ? Math.min(distance / 2, round) / distance
                      : 0;
                    vX = iX =
                      currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
                    vY = iY =
                      currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;
                    oX = vX - (vX - currentV[0]) * roundCorner;
                    oY = vY - (vY - currentV[1]) * roundCorner;
                    cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);
                    index += 1;

                    if (i === len - 1) {
                      closerV = path.v[0];
                    } else {
                      closerV = path.v[i + 1];
                    }
                    distance = Math.sqrt(
                      Math.pow(currentV[0] - closerV[0], 2) +
                        Math.pow(currentV[1] - closerV[1], 2),
                    );
                    newPosPerc = distance
                      ? Math.min(distance / 2, round) / distance
                      : 0;
                    vX = oX =
                      currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;
                    vY = oY =
                      currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;
                    iX = vX - (vX - currentV[0]) * roundCorner;
                    iY = vY - (vY - currentV[1]) * roundCorner;
                    cloned_path.setTripleAt(vX, vY, oX, oY, iX, iY, index);
                    index += 1;
                  }
                } else {
                  cloned_path.setTripleAt(
                    path.v[i][0],
                    path.v[i][1],
                    path.o[i][0],
                    path.o[i][1],
                    path.i[i][0],
                    path.i[i][1],
                    index,
                  );
                  index += 1;
                }
              }
              return cloned_path;
            };

            RoundCornersModifier.prototype.processShapes = function(
              _isFirstFrame,
            ) {
              var shapePaths;
              var i,
                len = this.shapes.length;
              var j, jLen;
              var rd = this.rd.v;

              if (rd !== 0) {
                var shapeData, newPaths, localShapeCollection;
                for (i = 0; i < len; i += 1) {
                  shapeData = this.shapes[i];
                  newPaths = shapeData.shape.paths;
                  localShapeCollection = shapeData.localShapeCollection;
                  if (
                    !(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)
                  ) {
                    localShapeCollection.releaseShapes();
                    shapeData.shape._mdf = true;
                    shapePaths = shapeData.shape.paths.shapes;
                    jLen = shapeData.shape.paths._length;
                    for (j = 0; j < jLen; j += 1) {
                      localShapeCollection.addShape(
                        this.processPath(shapePaths[j], rd),
                      );
                    }
                  }
                  shapeData.shape.paths = shapeData.localShapeCollection;
                }
              }
              if (!this.dynamicProperties.length) {
                this._mdf = false;
              }
            };

            ShapeModifiers.registerModifier("rd", RoundCornersModifier);
            function RepeaterModifier() {}
            extendPrototype([ShapeModifier], RepeaterModifier);

            RepeaterModifier.prototype.initModifierProperties = function(
              elem,
              data,
            ) {
              this.getValue = this.processKeys;
              this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);
              this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);
              this.tr = TransformPropertyFactory.getTransformProperty(
                elem,
                data.tr,
                this,
              );
              this.so = PropertyFactory.getProp(
                elem,
                data.tr.so,
                0,
                0.01,
                this,
              );
              this.eo = PropertyFactory.getProp(
                elem,
                data.tr.eo,
                0,
                0.01,
                this,
              );
              this.data = data;
              if (!this.dynamicProperties.length) {
                this.getValue(true);
              }
              this._isAnimated = !!this.dynamicProperties.length;
              this.pMatrix = new Matrix();
              this.rMatrix = new Matrix();
              this.sMatrix = new Matrix();
              this.tMatrix = new Matrix();
              this.matrix = new Matrix();
            };

            RepeaterModifier.prototype.applyTransforms = function(
              pMatrix,
              rMatrix,
              sMatrix,
              transform,
              perc,
              inv,
            ) {
              var dir = inv ? -1 : 1;
              var scaleX =
                transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);
              var scaleY =
                transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);
              pMatrix.translate(
                transform.p.v[0] * dir * perc,
                transform.p.v[1] * dir * perc,
                transform.p.v[2],
              );
              rMatrix.translate(
                -transform.a.v[0],
                -transform.a.v[1],
                transform.a.v[2],
              );
              rMatrix.rotate(-transform.r.v * dir * perc);
              rMatrix.translate(
                transform.a.v[0],
                transform.a.v[1],
                transform.a.v[2],
              );
              sMatrix.translate(
                -transform.a.v[0],
                -transform.a.v[1],
                transform.a.v[2],
              );
              sMatrix.scale(
                inv ? 1 / scaleX : scaleX,
                inv ? 1 / scaleY : scaleY,
              );
              sMatrix.translate(
                transform.a.v[0],
                transform.a.v[1],
                transform.a.v[2],
              );
            };

            RepeaterModifier.prototype.init = function(
              elem,
              arr,
              pos,
              elemsData,
            ) {
              this.elem = elem;
              this.arr = arr;
              this.pos = pos;
              this.elemsData = elemsData;
              this._currentCopies = 0;
              this._elements = [];
              this._groups = [];
              this.frameId = -1;
              this.initDynamicPropertyContainer(elem);
              this.initModifierProperties(elem, arr[pos]);
              var cont = 0;
              while (pos > 0) {
                pos -= 1;
                //this._elements.unshift(arr.splice(pos,1)[0]);
                this._elements.unshift(arr[pos]);
                cont += 1;
              }
              if (this.dynamicProperties.length) {
                this.k = true;
              } else {
                this.getValue(true);
              }
            };

            RepeaterModifier.prototype.resetElements = function(elements) {
              var i,
                len = elements.length;
              for (i = 0; i < len; i += 1) {
                elements[i]._processed = false;
                if (elements[i].ty === "gr") {
                  this.resetElements(elements[i].it);
                }
              }
            };

            RepeaterModifier.prototype.cloneElements = function(elements) {
              var i,
                len = elements.length;
              var newElements = JSON.parse(JSON.stringify(elements));
              this.resetElements(newElements);
              return newElements;
            };

            RepeaterModifier.prototype.changeGroupRender = function(
              elements,
              renderFlag,
            ) {
              var i,
                len = elements.length;
              for (i = 0; i < len; i += 1) {
                elements[i]._render = renderFlag;
                if (elements[i].ty === "gr") {
                  this.changeGroupRender(elements[i].it, renderFlag);
                }
              }
            };

            RepeaterModifier.prototype.processShapes = function(_isFirstFrame) {
              var items, itemsTransform, i, dir, cont;
              if (this._mdf || _isFirstFrame) {
                var copies = Math.ceil(this.c.v);
                if (this._groups.length < copies) {
                  while (this._groups.length < copies) {
                    var group = {
                      it: this.cloneElements(this._elements),
                      ty: "gr",
                    };
                    group.it.push({
                      a: { a: 0, ix: 1, k: [0, 0] },
                      nm: "Transform",
                      o: { a: 0, ix: 7, k: 100 },
                      p: { a: 0, ix: 2, k: [0, 0] },
                      r: {
                        a: 1,
                        ix: 6,
                        k: [{ s: 0, e: 0, t: 0 }, { s: 0, e: 0, t: 1 }],
                      },
                      s: { a: 0, ix: 3, k: [100, 100] },
                      sa: { a: 0, ix: 5, k: 0 },
                      sk: { a: 0, ix: 4, k: 0 },
                      ty: "tr",
                    });

                    this.arr.splice(0, 0, group);
                    this._groups.splice(0, 0, group);
                    this._currentCopies += 1;
                  }
                  this.elem.reloadShapes();
                }
                cont = 0;
                var renderFlag;
                for (i = 0; i <= this._groups.length - 1; i += 1) {
                  renderFlag = cont < copies;
                  this._groups[i]._render = renderFlag;
                  this.changeGroupRender(this._groups[i].it, renderFlag);
                  cont += 1;
                }

                this._currentCopies = copies;
                ////

                var offset = this.o.v;
                var offsetModulo = offset % 1;
                var roundOffset =
                  offset > 0 ? Math.floor(offset) : Math.ceil(offset);
                var k;
                var tMat = this.tr.v.props;
                var pProps = this.pMatrix.props;
                var rProps = this.rMatrix.props;
                var sProps = this.sMatrix.props;
                this.pMatrix.reset();
                this.rMatrix.reset();
                this.sMatrix.reset();
                this.tMatrix.reset();
                this.matrix.reset();
                var iteration = 0;

                if (offset > 0) {
                  while (iteration < roundOffset) {
                    this.applyTransforms(
                      this.pMatrix,
                      this.rMatrix,
                      this.sMatrix,
                      this.tr,
                      1,
                      false,
                    );
                    iteration += 1;
                  }
                  if (offsetModulo) {
                    this.applyTransforms(
                      this.pMatrix,
                      this.rMatrix,
                      this.sMatrix,
                      this.tr,
                      offsetModulo,
                      false,
                    );
                    iteration += offsetModulo;
                  }
                } else if (offset < 0) {
                  while (iteration > roundOffset) {
                    this.applyTransforms(
                      this.pMatrix,
                      this.rMatrix,
                      this.sMatrix,
                      this.tr,
                      1,
                      true,
                    );
                    iteration -= 1;
                  }
                  if (offsetModulo) {
                    this.applyTransforms(
                      this.pMatrix,
                      this.rMatrix,
                      this.sMatrix,
                      this.tr,
                      -offsetModulo,
                      true,
                    );
                    iteration -= offsetModulo;
                  }
                }
                i = this.data.m === 1 ? 0 : this._currentCopies - 1;
                dir = this.data.m === 1 ? 1 : -1;
                cont = this._currentCopies;
                var j, jLen;
                while (cont) {
                  items = this.elemsData[i].it;
                  itemsTransform =
                    items[items.length - 1].transform.mProps.v.props;
                  jLen = itemsTransform.length;
                  items[items.length - 1].transform.mProps._mdf = true;
                  items[items.length - 1].transform.op._mdf = true;
                  items[items.length - 1].transform.op.v =
                    this.so.v +
                    (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));
                  if (iteration !== 0) {
                    if (
                      (i !== 0 && dir === 1) ||
                      (i !== this._currentCopies - 1 && dir === -1)
                    ) {
                      this.applyTransforms(
                        this.pMatrix,
                        this.rMatrix,
                        this.sMatrix,
                        this.tr,
                        1,
                        false,
                      );
                    }
                    this.matrix.transform(
                      rProps[0],
                      rProps[1],
                      rProps[2],
                      rProps[3],
                      rProps[4],
                      rProps[5],
                      rProps[6],
                      rProps[7],
                      rProps[8],
                      rProps[9],
                      rProps[10],
                      rProps[11],
                      rProps[12],
                      rProps[13],
                      rProps[14],
                      rProps[15],
                    );
                    this.matrix.transform(
                      sProps[0],
                      sProps[1],
                      sProps[2],
                      sProps[3],
                      sProps[4],
                      sProps[5],
                      sProps[6],
                      sProps[7],
                      sProps[8],
                      sProps[9],
                      sProps[10],
                      sProps[11],
                      sProps[12],
                      sProps[13],
                      sProps[14],
                      sProps[15],
                    );
                    this.matrix.transform(
                      pProps[0],
                      pProps[1],
                      pProps[2],
                      pProps[3],
                      pProps[4],
                      pProps[5],
                      pProps[6],
                      pProps[7],
                      pProps[8],
                      pProps[9],
                      pProps[10],
                      pProps[11],
                      pProps[12],
                      pProps[13],
                      pProps[14],
                      pProps[15],
                    );

                    for (j = 0; j < jLen; j += 1) {
                      itemsTransform[j] = this.matrix.props[j];
                    }
                    this.matrix.reset();
                  } else {
                    this.matrix.reset();
                    for (j = 0; j < jLen; j += 1) {
                      itemsTransform[j] = this.matrix.props[j];
                    }
                  }
                  iteration += 1;
                  cont -= 1;
                  i += dir;
                }
              } else {
                cont = this._currentCopies;
                i = 0;
                dir = 1;
                while (cont) {
                  items = this.elemsData[i].it;
                  itemsTransform =
                    items[items.length - 1].transform.mProps.v.props;
                  items[items.length - 1].transform.mProps._mdf = false;
                  items[items.length - 1].transform.op._mdf = false;
                  cont -= 1;
                  i += dir;
                }
              }
            };

            RepeaterModifier.prototype.addShape = function() {};

            ShapeModifiers.registerModifier("rp", RepeaterModifier);
            function ShapeCollection() {
              this._length = 0;
              this._maxLength = 4;
              this.shapes = createSizedArray(this._maxLength);
            }

            ShapeCollection.prototype.addShape = function(shapeData) {
              if (this._length === this._maxLength) {
                this.shapes = this.shapes.concat(
                  createSizedArray(this._maxLength),
                );
                this._maxLength *= 2;
              }
              this.shapes[this._length] = shapeData;
              this._length += 1;
            };

            ShapeCollection.prototype.releaseShapes = function() {
              var i;
              for (i = 0; i < this._length; i += 1) {
                shape_pool.release(this.shapes[i]);
              }
              this._length = 0;
            };
            function DashProperty(elem, data, renderer, container) {
              this.elem = elem;
              this.frameId = -1;
              this.dataProps = createSizedArray(data.length);
              this.renderer = renderer;
              this.k = false;
              this.dashStr = "";
              this.dashArray = createTypedArray(
                "float32",
                data.length ? data.length - 1 : 0,
              );
              this.dashoffset = createTypedArray("float32", 1);
              this.initDynamicPropertyContainer(container);
              var i,
                len = data.length || 0,
                prop;
              for (i = 0; i < len; i += 1) {
                prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);
                this.k = prop.k || this.k;
                this.dataProps[i] = { n: data[i].n, p: prop };
              }
              if (!this.k) {
                this.getValue(true);
              }
              this._isAnimated = this.k;
            }

            DashProperty.prototype.getValue = function(forceRender) {
              if (
                this.elem.globalData.frameId === this.frameId &&
                !forceRender
              ) {
                return;
              }
              this.frameId = this.elem.globalData.frameId;
              this.iterateDynamicProperties();
              this._mdf = this._mdf || forceRender;
              if (this._mdf) {
                var i = 0,
                  len = this.dataProps.length;
                if (this.renderer === "svg") {
                  this.dashStr = "";
                }
                for (i = 0; i < len; i += 1) {
                  if (this.dataProps[i].n != "o") {
                    if (this.renderer === "svg") {
                      this.dashStr += " " + this.dataProps[i].p.v;
                    } else {
                      this.dashArray[i] = this.dataProps[i].p.v;
                    }
                  } else {
                    this.dashoffset[0] = this.dataProps[i].p.v;
                  }
                }
              }
            };
            extendPrototype([DynamicPropertyContainer], DashProperty);
            function GradientProperty(elem, data, container) {
              this.data = data;
              this.c = createTypedArray("uint8c", data.p * 4);
              var cLength = data.k.k[0].s
                ? data.k.k[0].s.length - data.p * 4
                : data.k.k.length - data.p * 4;
              this.o = createTypedArray("float32", cLength);
              this._cmdf = false;
              this._omdf = false;
              this._collapsable = this.checkCollapsable();
              this._hasOpacity = cLength;
              this.initDynamicPropertyContainer(container);
              this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);
              this.k = this.prop.k;
              this.getValue(true);
            }

            GradientProperty.prototype.comparePoints = function(
              values,
              points,
            ) {
              var i = 0,
                len = this.o.length / 2,
                diff;
              while (i < len) {
                diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);
                if (diff > 0.01) {
                  return false;
                }
                i += 1;
              }
              return true;
            };

            GradientProperty.prototype.checkCollapsable = function() {
              if (this.o.length / 2 !== this.c.length / 4) {
                return false;
              }
              if (this.data.k.k[0].s) {
                var i = 0,
                  len = this.data.k.k.length;
                while (i < len) {
                  if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {
                    return false;
                  }
                  i += 1;
                }
              } else if (!this.comparePoints(this.data.k.k, this.data.p)) {
                return false;
              }
              return true;
            };

            GradientProperty.prototype.getValue = function(forceRender) {
              this.prop.getValue();
              this._mdf = false;
              this._cmdf = false;
              this._omdf = false;
              if (this.prop._mdf || forceRender) {
                var i,
                  len = this.data.p * 4;
                var mult, val;
                for (i = 0; i < len; i += 1) {
                  mult = i % 4 === 0 ? 100 : 255;
                  val = Math.round(this.prop.v[i] * mult);
                  if (this.c[i] !== val) {
                    this.c[i] = val;
                    this._cmdf = !forceRender;
                  }
                }
                if (this.o.length) {
                  len = this.prop.v.length;
                  for (i = this.data.p * 4; i < len; i += 1) {
                    mult = i % 2 === 0 ? 100 : 1;
                    val =
                      i % 2 === 0
                        ? Math.round(this.prop.v[i] * 100)
                        : this.prop.v[i];
                    if (this.o[i - this.data.p * 4] !== val) {
                      this.o[i - this.data.p * 4] = val;
                      this._omdf = !forceRender;
                    }
                  }
                }
                this._mdf = !forceRender;
              }
            };

            extendPrototype([DynamicPropertyContainer], GradientProperty);
            var buildShapeString = function(pathNodes, length, closed, mat) {
              if (length === 0) {
                return "";
              }
              var _o = pathNodes.o;
              var _i = pathNodes.i;
              var _v = pathNodes.v;
              var i,
                shapeString =
                  " M" + mat.applyToPointStringified(_v[0][0], _v[0][1]);
              for (i = 1; i < length; i += 1) {
                shapeString +=
                  " C" +
                  mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +
                  " " +
                  mat.applyToPointStringified(_i[i][0], _i[i][1]) +
                  " " +
                  mat.applyToPointStringified(_v[i][0], _v[i][1]);
              }
              if (closed && length) {
                shapeString +=
                  " C" +
                  mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) +
                  " " +
                  mat.applyToPointStringified(_i[0][0], _i[0][1]) +
                  " " +
                  mat.applyToPointStringified(_v[0][0], _v[0][1]);
                shapeString += "z";
              }
              return shapeString;
            };
            var ImagePreloader = (function() {
              var proxyImage = (function() {
                var canvas = createTag("canvas");
                canvas.width = 1;
                canvas.height = 1;
                var ctx = canvas.getContext("2d");
                ctx.fillStyle = "#FF0000";
                ctx.fillRect(0, 0, 1, 1);
                return canvas;
              })();

              function imageLoaded() {
                this.loadedAssets += 1;
                if (this.loadedAssets === this.totalImages) {
                  if (this.imagesLoadedCb) {
                    this.imagesLoadedCb(null);
                  }
                }
              }

              function getAssetsPath(assetData, assetsPath, original_path) {
                var path = "";
                if (assetData.e) {
                  path = assetData.p;
                } else if (assetsPath) {
                  var imagePath = assetData.p;
                  if (imagePath.indexOf("images/") !== -1) {
                    imagePath = imagePath.split("/")[1];
                  }
                  path = assetsPath + imagePath;
                } else {
                  path = original_path;
                  path += assetData.u ? assetData.u : "";
                  path += assetData.p;
                }
                return path;
              }

              function createImageData(assetData) {
                var path = getAssetsPath(assetData, this.assetsPath, this.path);
                var img = createTag("img");
                img.crossOrigin = "anonymous";
                img.addEventListener(
                  "load",
                  this._imageLoaded.bind(this),
                  false,
                );
                img.addEventListener(
                  "error",
                  function() {
                    ob.img = proxyImage;
                    this._imageLoaded();
                  }.bind(this),
                  false,
                );
                img.src = path;
                var ob = {
                  img: img,
                  assetData: assetData,
                };
                return ob;
              }

              function loadAssets(assets, cb) {
                this.imagesLoadedCb = cb;
                var i,
                  len = assets.length;
                for (i = 0; i < len; i += 1) {
                  if (!assets[i].layers) {
                    this.totalImages += 1;
                    this.images.push(this._createImageData(assets[i]));
                  }
                }
              }

              function setPath(path) {
                this.path = path || "";
              }

              function setAssetsPath(path) {
                this.assetsPath = path || "";
              }

              function getImage(assetData) {
                var i = 0,
                  len = this.images.length;
                while (i < len) {
                  if (this.images[i].assetData === assetData) {
                    return this.images[i].img;
                  }
                  i += 1;
                }
              }

              function destroy() {
                this.imagesLoadedCb = null;
                this.images.length = 0;
              }

              function loaded() {
                return this.totalImages === this.loadedAssets;
              }

              return function ImagePreloader() {
                this.loadAssets = loadAssets;
                this.setAssetsPath = setAssetsPath;
                this.setPath = setPath;
                this.loaded = loaded;
                this.destroy = destroy;
                this.getImage = getImage;
                this._createImageData = createImageData;
                this._imageLoaded = imageLoaded;
                this.assetsPath = "";
                this.path = "";
                this.totalImages = 0;
                this.loadedAssets = 0;
                this.imagesLoadedCb = null;
                this.images = [];
              };
            })();
            var featureSupport = (function() {
              var ob = {
                maskType: true,
              };
              if (
                /MSIE 10/i.test(navigator.userAgent) ||
                /MSIE 9/i.test(navigator.userAgent) ||
                /rv:11.0/i.test(navigator.userAgent) ||
                /Edge\/\d./i.test(navigator.userAgent)
              ) {
                ob.maskType = false;
              }
              return ob;
            })();
            var filtersFactory = (function() {
              var ob = {};
              ob.createFilter = createFilter;
              ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;

              function createFilter(filId) {
                var fil = createNS("filter");
                fil.setAttribute("id", filId);
                fil.setAttribute("filterUnits", "objectBoundingBox");
                fil.setAttribute("x", "0%");
                fil.setAttribute("y", "0%");
                fil.setAttribute("width", "100%");
                fil.setAttribute("height", "100%");
                return fil;
              }

              function createAlphaToLuminanceFilter() {
                var feColorMatrix = createNS("feColorMatrix");
                feColorMatrix.setAttribute("type", "matrix");
                feColorMatrix.setAttribute(
                  "color-interpolation-filters",
                  "sRGB",
                );
                feColorMatrix.setAttribute(
                  "values",
                  "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1",
                );
                return feColorMatrix;
              }

              return ob;
            })();
            var assetLoader = (function() {
              function formatResponse(xhr) {
                if (xhr.response && typeof xhr.response === "object") {
                  return xhr.response;
                } else if (xhr.response && typeof xhr.response === "string") {
                  return JSON.parse(xhr.response);
                } else if (xhr.responseText) {
                  return JSON.parse(xhr.responseText);
                }
              }

              function loadAsset(path, callback, errorCallback) {
                var response;
                var xhr = new XMLHttpRequest();
                xhr.open("GET", path, true);
                // set responseType after calling open or IE will break.
                try {
                  // This crashes on Android WebView prior to KitKat
                  xhr.responseType = "json";
                } catch (err) {}
                xhr.send();
                xhr.onreadystatechange = function() {
                  if (xhr.readyState == 4) {
                    if (xhr.status == 200) {
                      response = formatResponse(xhr);
                      callback(response);
                    } else {
                      try {
                        response = formatResponse(xhr);
                        callback(response);
                      } catch (err) {
                        if (errorCallback) {
                          errorCallback(err);
                        }
                      }
                    }
                  }
                };
              }
              return {
                load: loadAsset,
              };
            })();

            function TextAnimatorProperty(textData, renderType, elem) {
              this._isFirstFrame = true;
              this._hasMaskedPath = false;
              this._frameId = -1;
              this._textData = textData;
              this._renderType = renderType;
              this._elem = elem;
              this._animatorsData = createSizedArray(this._textData.a.length);
              this._pathData = {};
              this._moreOptions = {
                alignment: {},
              };
              this.renderedLetters = [];
              this.lettersChangedFlag = false;
              this.initDynamicPropertyContainer(elem);
            }

            TextAnimatorProperty.prototype.searchProperties = function() {
              var i,
                len = this._textData.a.length,
                animatorProps;
              var getProp = PropertyFactory.getProp;
              for (i = 0; i < len; i += 1) {
                animatorProps = this._textData.a[i];
                this._animatorsData[i] = new TextAnimatorDataProperty(
                  this._elem,
                  animatorProps,
                  this,
                );
              }
              if (this._textData.p && "m" in this._textData.p) {
                this._pathData = {
                  f: getProp(this._elem, this._textData.p.f, 0, 0, this),
                  l: getProp(this._elem, this._textData.p.l, 0, 0, this),
                  r: this._textData.p.r,
                  m: this._elem.maskManager.getMaskProperty(this._textData.p.m),
                };
                this._hasMaskedPath = true;
              } else {
                this._hasMaskedPath = false;
              }
              this._moreOptions.alignment = getProp(
                this._elem,
                this._textData.m.a,
                1,
                0,
                this,
              );
            };

            TextAnimatorProperty.prototype.getMeasures = function(
              documentData,
              lettersChangedFlag,
            ) {
              this.lettersChangedFlag = lettersChangedFlag;
              if (
                !this._mdf &&
                !this._isFirstFrame &&
                !lettersChangedFlag &&
                (!this._hasMaskedPath || !this._pathData.m._mdf)
              ) {
                return;
              }
              this._isFirstFrame = false;
              var alignment = this._moreOptions.alignment.v;
              var animators = this._animatorsData;
              var textData = this._textData;
              var matrixHelper = this.mHelper;
              var renderType = this._renderType;
              var renderedLettersCount = this.renderedLetters.length;
              var data = this.data;
              var xPos, yPos;
              var i, len;
              var letters = documentData.l,
                pathInfo,
                currentLength,
                currentPoint,
                segmentLength,
                flag,
                pointInd,
                segmentInd,
                prevPoint,
                points,
                segments,
                partialLength,
                totalLength,
                perc,
                tanAngle,
                mask;
              if (this._hasMaskedPath) {
                mask = this._pathData.m;
                if (!this._pathData.n || this._pathData._mdf) {
                  var paths = mask.v;
                  if (this._pathData.r) {
                    paths = paths.reverse();
                  }
                  // TODO: release bezier data cached from previous pathInfo: this._pathData.pi
                  pathInfo = {
                    tLength: 0,
                    segments: [],
                  };
                  len = paths._length - 1;
                  var bezierData;
                  totalLength = 0;
                  for (i = 0; i < len; i += 1) {
                    bezierData = bez.buildBezierData(
                      paths.v[i],
                      paths.v[i + 1],
                      [
                        paths.o[i][0] - paths.v[i][0],
                        paths.o[i][1] - paths.v[i][1],
                      ],
                      [
                        paths.i[i + 1][0] - paths.v[i + 1][0],
                        paths.i[i + 1][1] - paths.v[i + 1][1],
                      ],
                    );
                    pathInfo.tLength += bezierData.segmentLength;
                    pathInfo.segments.push(bezierData);
                    totalLength += bezierData.segmentLength;
                  }
                  i = len;
                  if (mask.v.c) {
                    bezierData = bez.buildBezierData(
                      paths.v[i],
                      paths.v[0],
                      [
                        paths.o[i][0] - paths.v[i][0],
                        paths.o[i][1] - paths.v[i][1],
                      ],
                      [
                        paths.i[0][0] - paths.v[0][0],
                        paths.i[0][1] - paths.v[0][1],
                      ],
                    );
                    pathInfo.tLength += bezierData.segmentLength;
                    pathInfo.segments.push(bezierData);
                    totalLength += bezierData.segmentLength;
                  }
                  this._pathData.pi = pathInfo;
                }
                pathInfo = this._pathData.pi;

                currentLength = this._pathData.f.v;
                segmentInd = 0;
                pointInd = 1;
                segmentLength = 0;
                flag = true;
                segments = pathInfo.segments;
                if (currentLength < 0 && mask.v.c) {
                  if (pathInfo.tLength < Math.abs(currentLength)) {
                    currentLength = -Math.abs(currentLength) % pathInfo.tLength;
                  }
                  segmentInd = segments.length - 1;
                  points = segments[segmentInd].points;
                  pointInd = points.length - 1;
                  while (currentLength < 0) {
                    currentLength += points[pointInd].partialLength;
                    pointInd -= 1;
                    if (pointInd < 0) {
                      segmentInd -= 1;
                      points = segments[segmentInd].points;
                      pointInd = points.length - 1;
                    }
                  }
                }
                points = segments[segmentInd].points;
                prevPoint = points[pointInd - 1];
                currentPoint = points[pointInd];
                partialLength = currentPoint.partialLength;
              }

              len = letters.length;
              xPos = 0;
              yPos = 0;
              var yOff = documentData.finalSize * 1.2 * 0.714;
              var firstLine = true;
              var animatorProps, animatorSelector;
              var j, jLen;
              var letterValue;

              jLen = animators.length;
              var lastLetter;

              var mult,
                ind = -1,
                offf,
                xPathPos,
                yPathPos;
              var initPathPos = currentLength,
                initSegmentInd = segmentInd,
                initPointInd = pointInd,
                currentLine = -1;
              var elemOpacity;
              var sc, sw, fc, k;
              var lineLength = 0;
              var letterSw,
                letterSc,
                letterFc,
                letterM = "",
                letterP = this.defaultPropsArray,
                letterO;

              //
              if (documentData.j === 2 || documentData.j === 1) {
                var animatorJustifyOffset = 0;
                var animatorFirstCharOffset = 0;
                var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;
                var lastIndex = 0;
                var isNewLine = true;

                for (i = 0; i < len; i += 1) {
                  if (letters[i].n) {
                    if (animatorJustifyOffset) {
                      animatorJustifyOffset += animatorFirstCharOffset;
                    }
                    while (lastIndex < i) {
                      letters[
                        lastIndex
                      ].animatorJustifyOffset = animatorJustifyOffset;
                      lastIndex += 1;
                    }
                    animatorJustifyOffset = 0;
                    isNewLine = true;
                  } else {
                    for (j = 0; j < jLen; j += 1) {
                      animatorProps = animators[j].a;
                      if (animatorProps.t.propType) {
                        if (isNewLine && documentData.j === 2) {
                          animatorFirstCharOffset +=
                            animatorProps.t.v * justifyOffsetMult;
                        }
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(
                          letters[i].anIndexes[j],
                          textData.a[j].s.totalChars,
                        );
                        if (mult.length) {
                          animatorJustifyOffset +=
                            animatorProps.t.v * mult[0] * justifyOffsetMult;
                        } else {
                          animatorJustifyOffset +=
                            animatorProps.t.v * mult * justifyOffsetMult;
                        }
                      }
                    }
                    isNewLine = false;
                  }
                }
                if (animatorJustifyOffset) {
                  animatorJustifyOffset += animatorFirstCharOffset;
                }
                while (lastIndex < i) {
                  letters[
                    lastIndex
                  ].animatorJustifyOffset = animatorJustifyOffset;
                  lastIndex += 1;
                }
              }
              //

              for (i = 0; i < len; i += 1) {
                matrixHelper.reset();
                elemOpacity = 1;
                if (letters[i].n) {
                  xPos = 0;
                  yPos += documentData.yOffset;
                  yPos += firstLine ? 1 : 0;
                  currentLength = initPathPos;
                  firstLine = false;
                  lineLength = 0;
                  if (this._hasMaskedPath) {
                    segmentInd = initSegmentInd;
                    pointInd = initPointInd;
                    points = segments[segmentInd].points;
                    prevPoint = points[pointInd - 1];
                    currentPoint = points[pointInd];
                    partialLength = currentPoint.partialLength;
                    segmentLength = 0;
                  }
                  letterO = letterSw = letterFc = letterM = "";
                  letterP = this.defaultPropsArray;
                } else {
                  if (this._hasMaskedPath) {
                    if (currentLine !== letters[i].line) {
                      switch (documentData.j) {
                        case 1:
                          currentLength +=
                            totalLength -
                            documentData.lineWidths[letters[i].line];
                          break;
                        case 2:
                          currentLength +=
                            (totalLength -
                              documentData.lineWidths[letters[i].line]) /
                            2;
                          break;
                      }
                      currentLine = letters[i].line;
                    }
                    if (ind !== letters[i].ind) {
                      if (letters[ind]) {
                        currentLength += letters[ind].extra;
                      }
                      currentLength += letters[i].an / 2;
                      ind = letters[i].ind;
                    }
                    currentLength += (alignment[0] * letters[i].an) / 200;
                    var animatorOffset = 0;
                    for (j = 0; j < jLen; j += 1) {
                      animatorProps = animators[j].a;
                      if (animatorProps.p.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(
                          letters[i].anIndexes[j],
                          textData.a[j].s.totalChars,
                        );
                        if (mult.length) {
                          animatorOffset += animatorProps.p.v[0] * mult[0];
                        } else {
                          animatorOffset += animatorProps.p.v[0] * mult;
                        }
                      }
                      if (animatorProps.a.propType) {
                        animatorSelector = animators[j].s;
                        mult = animatorSelector.getMult(
                          letters[i].anIndexes[j],
                          textData.a[j].s.totalChars,
                        );
                        if (mult.length) {
                          animatorOffset += animatorProps.a.v[0] * mult[0];
                        } else {
                          animatorOffset += animatorProps.a.v[0] * mult;
                        }
                      }
                    }
                    flag = true;
                    while (flag) {
                      if (
                        segmentLength + partialLength >=
                          currentLength + animatorOffset ||
                        !points
                      ) {
                        perc =
                          (currentLength + animatorOffset - segmentLength) /
                          currentPoint.partialLength;
                        xPathPos =
                          prevPoint.point[0] +
                          (currentPoint.point[0] - prevPoint.point[0]) * perc;
                        yPathPos =
                          prevPoint.point[1] +
                          (currentPoint.point[1] - prevPoint.point[1]) * perc;
                        matrixHelper.translate(
                          (-alignment[0] * letters[i].an) / 200,
                          -((alignment[1] * yOff) / 100),
                        );
                        flag = false;
                      } else if (points) {
                        segmentLength += currentPoint.partialLength;
                        pointInd += 1;
                        if (pointInd >= points.length) {
                          pointInd = 0;
                          segmentInd += 1;
                          if (!segments[segmentInd]) {
                            if (mask.v.c) {
                              pointInd = 0;
                              segmentInd = 0;
                              points = segments[segmentInd].points;
                            } else {
                              segmentLength -= currentPoint.partialLength;
                              points = null;
                            }
                          } else {
                            points = segments[segmentInd].points;
                          }
                        }
                        if (points) {
                          prevPoint = currentPoint;
                          currentPoint = points[pointInd];
                          partialLength = currentPoint.partialLength;
                        }
                      }
                    }
                    offf = letters[i].an / 2 - letters[i].add;
                    matrixHelper.translate(-offf, 0, 0);
                  } else {
                    offf = letters[i].an / 2 - letters[i].add;
                    matrixHelper.translate(-offf, 0, 0);

                    // Grouping alignment
                    matrixHelper.translate(
                      (-alignment[0] * letters[i].an) / 200,
                      (-alignment[1] * yOff) / 100,
                      0,
                    );
                  }

                  lineLength += letters[i].l / 2;
                  for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.t.propType) {
                      animatorSelector = animators[j].s;
                      mult = animatorSelector.getMult(
                        letters[i].anIndexes[j],
                        textData.a[j].s.totalChars,
                      );
                      //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean "isNewLine"
                      if (xPos !== 0 || documentData.j !== 0) {
                        if (this._hasMaskedPath) {
                          if (mult.length) {
                            currentLength += animatorProps.t.v * mult[0];
                          } else {
                            currentLength += animatorProps.t.v * mult;
                          }
                        } else {
                          if (mult.length) {
                            xPos += animatorProps.t.v * mult[0];
                          } else {
                            xPos += animatorProps.t.v * mult;
                          }
                        }
                      }
                    }
                  }
                  lineLength += letters[i].l / 2;
                  if (documentData.strokeWidthAnim) {
                    sw = documentData.sw || 0;
                  }
                  if (documentData.strokeColorAnim) {
                    if (documentData.sc) {
                      sc = [
                        documentData.sc[0],
                        documentData.sc[1],
                        documentData.sc[2],
                      ];
                    } else {
                      sc = [0, 0, 0];
                    }
                  }
                  if (documentData.fillColorAnim && documentData.fc) {
                    fc = [
                      documentData.fc[0],
                      documentData.fc[1],
                      documentData.fc[2],
                    ];
                  }
                  for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.a.propType) {
                      animatorSelector = animators[j].s;
                      mult = animatorSelector.getMult(
                        letters[i].anIndexes[j],
                        textData.a[j].s.totalChars,
                      );

                      if (mult.length) {
                        matrixHelper.translate(
                          -animatorProps.a.v[0] * mult[0],
                          -animatorProps.a.v[1] * mult[1],
                          animatorProps.a.v[2] * mult[2],
                        );
                      } else {
                        matrixHelper.translate(
                          -animatorProps.a.v[0] * mult,
                          -animatorProps.a.v[1] * mult,
                          animatorProps.a.v[2] * mult,
                        );
                      }
                    }
                  }
                  for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    if (animatorProps.s.propType) {
                      animatorSelector = animators[j].s;
                      mult = animatorSelector.getMult(
                        letters[i].anIndexes[j],
                        textData.a[j].s.totalChars,
                      );
                      if (mult.length) {
                        matrixHelper.scale(
                          1 + (animatorProps.s.v[0] - 1) * mult[0],
                          1 + (animatorProps.s.v[1] - 1) * mult[1],
                          1,
                        );
                      } else {
                        matrixHelper.scale(
                          1 + (animatorProps.s.v[0] - 1) * mult,
                          1 + (animatorProps.s.v[1] - 1) * mult,
                          1,
                        );
                      }
                    }
                  }
                  for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;
                    animatorSelector = animators[j].s;
                    mult = animatorSelector.getMult(
                      letters[i].anIndexes[j],
                      textData.a[j].s.totalChars,
                    );
                    if (animatorProps.sk.propType) {
                      if (mult.length) {
                        matrixHelper.skewFromAxis(
                          -animatorProps.sk.v * mult[0],
                          animatorProps.sa.v * mult[1],
                        );
                      } else {
                        matrixHelper.skewFromAxis(
                          -animatorProps.sk.v * mult,
                          animatorProps.sa.v * mult,
                        );
                      }
                    }
                    if (animatorProps.r.propType) {
                      if (mult.length) {
                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);
                      } else {
                        matrixHelper.rotateZ(-animatorProps.r.v * mult);
                      }
                    }
                    if (animatorProps.ry.propType) {
                      if (mult.length) {
                        matrixHelper.rotateY(animatorProps.ry.v * mult[1]);
                      } else {
                        matrixHelper.rotateY(animatorProps.ry.v * mult);
                      }
                    }
                    if (animatorProps.rx.propType) {
                      if (mult.length) {
                        matrixHelper.rotateX(animatorProps.rx.v * mult[0]);
                      } else {
                        matrixHelper.rotateX(animatorProps.rx.v * mult);
                      }
                    }
                    if (animatorProps.o.propType) {
                      if (mult.length) {
                        elemOpacity +=
                          (animatorProps.o.v * mult[0] - elemOpacity) * mult[0];
                      } else {
                        elemOpacity +=
                          (animatorProps.o.v * mult - elemOpacity) * mult;
                      }
                    }
                    if (
                      documentData.strokeWidthAnim &&
                      animatorProps.sw.propType
                    ) {
                      if (mult.length) {
                        sw += animatorProps.sw.v * mult[0];
                      } else {
                        sw += animatorProps.sw.v * mult;
                      }
                    }
                    if (
                      documentData.strokeColorAnim &&
                      animatorProps.sc.propType
                    ) {
                      for (k = 0; k < 3; k += 1) {
                        if (mult.length) {
                          sc[k] =
                            sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult[0];
                        } else {
                          sc[k] =
                            sc[k] + (animatorProps.sc.v[k] - sc[k]) * mult;
                        }
                      }
                    }
                    if (documentData.fillColorAnim && documentData.fc) {
                      if (animatorProps.fc.propType) {
                        for (k = 0; k < 3; k += 1) {
                          if (mult.length) {
                            fc[k] =
                              fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult[0];
                          } else {
                            fc[k] =
                              fc[k] + (animatorProps.fc.v[k] - fc[k]) * mult;
                          }
                        }
                      }
                      if (animatorProps.fh.propType) {
                        if (mult.length) {
                          fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);
                        } else {
                          fc = addHueToRGB(fc, animatorProps.fh.v * mult);
                        }
                      }
                      if (animatorProps.fs.propType) {
                        if (mult.length) {
                          fc = addSaturationToRGB(
                            fc,
                            animatorProps.fs.v * mult[0],
                          );
                        } else {
                          fc = addSaturationToRGB(
                            fc,
                            animatorProps.fs.v * mult,
                          );
                        }
                      }
                      if (animatorProps.fb.propType) {
                        if (mult.length) {
                          fc = addBrightnessToRGB(
                            fc,
                            animatorProps.fb.v * mult[0],
                          );
                        } else {
                          fc = addBrightnessToRGB(
                            fc,
                            animatorProps.fb.v * mult,
                          );
                        }
                      }
                    }
                  }

                  for (j = 0; j < jLen; j += 1) {
                    animatorProps = animators[j].a;

                    if (animatorProps.p.propType) {
                      animatorSelector = animators[j].s;
                      mult = animatorSelector.getMult(
                        letters[i].anIndexes[j],
                        textData.a[j].s.totalChars,
                      );
                      if (this._hasMaskedPath) {
                        if (mult.length) {
                          matrixHelper.translate(
                            0,
                            animatorProps.p.v[1] * mult[0],
                            -animatorProps.p.v[2] * mult[1],
                          );
                        } else {
                          matrixHelper.translate(
                            0,
                            animatorProps.p.v[1] * mult,
                            -animatorProps.p.v[2] * mult,
                          );
                        }
                      } else {
                        if (mult.length) {
                          matrixHelper.translate(
                            animatorProps.p.v[0] * mult[0],
                            animatorProps.p.v[1] * mult[1],
                            -animatorProps.p.v[2] * mult[2],
                          );
                        } else {
                          matrixHelper.translate(
                            animatorProps.p.v[0] * mult,
                            animatorProps.p.v[1] * mult,
                            -animatorProps.p.v[2] * mult,
                          );
                        }
                      }
                    }
                  }
                  if (documentData.strokeWidthAnim) {
                    letterSw = sw < 0 ? 0 : sw;
                  }
                  if (documentData.strokeColorAnim) {
                    letterSc =
                      "rgb(" +
                      Math.round(sc[0] * 255) +
                      "," +
                      Math.round(sc[1] * 255) +
                      "," +
                      Math.round(sc[2] * 255) +
                      ")";
                  }
                  if (documentData.fillColorAnim && documentData.fc) {
                    letterFc =
                      "rgb(" +
                      Math.round(fc[0] * 255) +
                      "," +
                      Math.round(fc[1] * 255) +
                      "," +
                      Math.round(fc[2] * 255) +
                      ")";
                  }

                  if (this._hasMaskedPath) {
                    matrixHelper.translate(0, -documentData.ls);

                    matrixHelper.translate(
                      0,
                      (alignment[1] * yOff) / 100 + yPos,
                      0,
                    );
                    if (textData.p.p) {
                      tanAngle =
                        (currentPoint.point[1] - prevPoint.point[1]) /
                        (currentPoint.point[0] - prevPoint.point[0]);
                      var rot = (Math.atan(tanAngle) * 180) / Math.PI;
                      if (currentPoint.point[0] < prevPoint.point[0]) {
                        rot += 180;
                      }
                      matrixHelper.rotate((-rot * Math.PI) / 180);
                    }
                    matrixHelper.translate(xPathPos, yPathPos, 0);
                    currentLength -= (alignment[0] * letters[i].an) / 200;
                    if (letters[i + 1] && ind !== letters[i + 1].ind) {
                      currentLength += letters[i].an / 2;
                      currentLength +=
                        (documentData.tr / 1000) * documentData.finalSize;
                    }
                  } else {
                    matrixHelper.translate(xPos, yPos, 0);

                    if (documentData.ps) {
                      //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);
                      matrixHelper.translate(
                        documentData.ps[0],
                        documentData.ps[1] + documentData.ascent,
                        0,
                      );
                    }
                    switch (documentData.j) {
                      case 1:
                        matrixHelper.translate(
                          letters[i].animatorJustifyOffset +
                            documentData.justifyOffset +
                            (documentData.boxWidth -
                              documentData.lineWidths[letters[i].line]),
                          0,
                          0,
                        );
                        break;
                      case 2:
                        matrixHelper.translate(
                          letters[i].animatorJustifyOffset +
                            documentData.justifyOffset +
                            (documentData.boxWidth -
                              documentData.lineWidths[letters[i].line]) /
                              2,
                          0,
                          0,
                        );
                        break;
                    }
                    matrixHelper.translate(0, -documentData.ls);
                    matrixHelper.translate(offf, 0, 0);
                    matrixHelper.translate(
                      (alignment[0] * letters[i].an) / 200,
                      (alignment[1] * yOff) / 100,
                      0,
                    );
                    xPos +=
                      letters[i].l +
                      (documentData.tr / 1000) * documentData.finalSize;
                  }
                  if (renderType === "html") {
                    letterM = matrixHelper.toCSS();
                  } else if (renderType === "svg") {
                    letterM = matrixHelper.to2dCSS();
                  } else {
                    letterP = [
                      matrixHelper.props[0],
                      matrixHelper.props[1],
                      matrixHelper.props[2],
                      matrixHelper.props[3],
                      matrixHelper.props[4],
                      matrixHelper.props[5],
                      matrixHelper.props[6],
                      matrixHelper.props[7],
                      matrixHelper.props[8],
                      matrixHelper.props[9],
                      matrixHelper.props[10],
                      matrixHelper.props[11],
                      matrixHelper.props[12],
                      matrixHelper.props[13],
                      matrixHelper.props[14],
                      matrixHelper.props[15],
                    ];
                  }
                  letterO = elemOpacity;
                }

                if (renderedLettersCount <= i) {
                  letterValue = new LetterProps(
                    letterO,
                    letterSw,
                    letterSc,
                    letterFc,
                    letterM,
                    letterP,
                  );
                  this.renderedLetters.push(letterValue);
                  renderedLettersCount += 1;
                  this.lettersChangedFlag = true;
                } else {
                  letterValue = this.renderedLetters[i];
                  this.lettersChangedFlag =
                    letterValue.update(
                      letterO,
                      letterSw,
                      letterSc,
                      letterFc,
                      letterM,
                      letterP,
                    ) || this.lettersChangedFlag;
                }
              }
            };

            TextAnimatorProperty.prototype.getValue = function() {
              if (this._elem.globalData.frameId === this._frameId) {
                return;
              }
              this._frameId = this._elem.globalData.frameId;
              this.iterateDynamicProperties();
            };

            TextAnimatorProperty.prototype.mHelper = new Matrix();
            TextAnimatorProperty.prototype.defaultPropsArray = [];
            extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
            function TextAnimatorDataProperty(elem, animatorProps, container) {
              var defaultData = { propType: false };
              var getProp = PropertyFactory.getProp;
              var textAnimator_animatables = animatorProps.a;
              this.a = {
                r: textAnimator_animatables.r
                  ? getProp(
                      elem,
                      textAnimator_animatables.r,
                      0,
                      degToRads,
                      container,
                    )
                  : defaultData,
                rx: textAnimator_animatables.rx
                  ? getProp(
                      elem,
                      textAnimator_animatables.rx,
                      0,
                      degToRads,
                      container,
                    )
                  : defaultData,
                ry: textAnimator_animatables.ry
                  ? getProp(
                      elem,
                      textAnimator_animatables.ry,
                      0,
                      degToRads,
                      container,
                    )
                  : defaultData,
                sk: textAnimator_animatables.sk
                  ? getProp(
                      elem,
                      textAnimator_animatables.sk,
                      0,
                      degToRads,
                      container,
                    )
                  : defaultData,
                sa: textAnimator_animatables.sa
                  ? getProp(
                      elem,
                      textAnimator_animatables.sa,
                      0,
                      degToRads,
                      container,
                    )
                  : defaultData,
                s: textAnimator_animatables.s
                  ? getProp(
                      elem,
                      textAnimator_animatables.s,
                      1,
                      0.01,
                      container,
                    )
                  : defaultData,
                a: textAnimator_animatables.a
                  ? getProp(elem, textAnimator_animatables.a, 1, 0, container)
                  : defaultData,
                o: textAnimator_animatables.o
                  ? getProp(
                      elem,
                      textAnimator_animatables.o,
                      0,
                      0.01,
                      container,
                    )
                  : defaultData,
                p: textAnimator_animatables.p
                  ? getProp(elem, textAnimator_animatables.p, 1, 0, container)
                  : defaultData,
                sw: textAnimator_animatables.sw
                  ? getProp(elem, textAnimator_animatables.sw, 0, 0, container)
                  : defaultData,
                sc: textAnimator_animatables.sc
                  ? getProp(elem, textAnimator_animatables.sc, 1, 0, container)
                  : defaultData,
                fc: textAnimator_animatables.fc
                  ? getProp(elem, textAnimator_animatables.fc, 1, 0, container)
                  : defaultData,
                fh: textAnimator_animatables.fh
                  ? getProp(elem, textAnimator_animatables.fh, 0, 0, container)
                  : defaultData,
                fs: textAnimator_animatables.fs
                  ? getProp(
                      elem,
                      textAnimator_animatables.fs,
                      0,
                      0.01,
                      container,
                    )
                  : defaultData,
                fb: textAnimator_animatables.fb
                  ? getProp(
                      elem,
                      textAnimator_animatables.fb,
                      0,
                      0.01,
                      container,
                    )
                  : defaultData,
                t: textAnimator_animatables.t
                  ? getProp(elem, textAnimator_animatables.t, 0, 0, container)
                  : defaultData,
              };

              this.s = TextSelectorProp.getTextSelectorProp(
                elem,
                animatorProps.s,
                container,
              );
              this.s.t = animatorProps.s.t;
            }
            function LetterProps(o, sw, sc, fc, m, p) {
              this.o = o;
              this.sw = sw;
              this.sc = sc;
              this.fc = fc;
              this.m = m;
              this.p = p;
              this._mdf = {
                o: true,
                sw: !!sw,
                sc: !!sc,
                fc: !!fc,
                m: true,
                p: true,
              };
            }

            LetterProps.prototype.update = function(o, sw, sc, fc, m, p) {
              this._mdf.o = false;
              this._mdf.sw = false;
              this._mdf.sc = false;
              this._mdf.fc = false;
              this._mdf.m = false;
              this._mdf.p = false;
              var updated = false;

              if (this.o !== o) {
                this.o = o;
                this._mdf.o = true;
                updated = true;
              }
              if (this.sw !== sw) {
                this.sw = sw;
                this._mdf.sw = true;
                updated = true;
              }
              if (this.sc !== sc) {
                this.sc = sc;
                this._mdf.sc = true;
                updated = true;
              }
              if (this.fc !== fc) {
                this.fc = fc;
                this._mdf.fc = true;
                updated = true;
              }
              if (this.m !== m) {
                this.m = m;
                this._mdf.m = true;
                updated = true;
              }
              if (
                p.length &&
                (this.p[0] !== p[0] ||
                  this.p[1] !== p[1] ||
                  this.p[4] !== p[4] ||
                  this.p[5] !== p[5] ||
                  this.p[12] !== p[12] ||
                  this.p[13] !== p[13])
              ) {
                this.p = p;
                this._mdf.p = true;
                updated = true;
              }
              return updated;
            };
            function TextProperty(elem, data) {
              this._frameId = initialDefaultFrame;
              this.pv = "";
              this.v = "";
              this.kf = false;
              this._isFirstFrame = true;
              this._mdf = false;
              this.data = data;
              this.elem = elem;
              this.comp = this.elem.comp;
              this.keysIndex = 0;
              this.canResize = false;
              this.minimumFontSize = 1;
              this.effectsSequence = [];
              this.currentData = {
                ascent: 0,
                boxWidth: this.defaultBoxWidth,
                f: "",
                fStyle: "",
                fWeight: "",
                fc: "",
                j: "",
                justifyOffset: "",
                l: [],
                lh: 0,
                lineWidths: [],
                ls: "",
                of: "",
                s: "",
                sc: "",
                sw: 0,
                t: 0,
                tr: 0,
                sz: 0,
                ps: null,
                fillColorAnim: false,
                strokeColorAnim: false,
                strokeWidthAnim: false,
                yOffset: 0,
                finalSize: 0,
                finalText: [],
                finalLineHeight: 0,
                __complete: false,
              };
              this.copyData(this.currentData, this.data.d.k[0].s);

              if (!this.searchProperty()) {
                this.completeTextData(this.currentData);
              }
            }

            TextProperty.prototype.defaultBoxWidth = [0, 0];

            TextProperty.prototype.copyData = function(obj, data) {
              for (var s in data) {
                if (data.hasOwnProperty(s)) {
                  obj[s] = data[s];
                }
              }
              return obj;
            };

            TextProperty.prototype.setCurrentData = function(data) {
              if (!data.__complete) {
                this.completeTextData(data);
              }
              this.currentData = data;
              this.currentData.boxWidth =
                this.currentData.boxWidth || this.defaultBoxWidth;
              this._mdf = true;
            };

            TextProperty.prototype.searchProperty = function() {
              return this.searchKeyframes();
            };

            TextProperty.prototype.searchKeyframes = function() {
              this.kf = this.data.d.k.length > 1;
              if (this.kf) {
                this.addEffect(this.getKeyframeValue.bind(this));
              }
              return this.kf;
            };

            TextProperty.prototype.addEffect = function(effectFunction) {
              this.effectsSequence.push(effectFunction);
              this.elem.addDynamicProperty(this);
            };

            TextProperty.prototype.getValue = function(_finalValue) {
              if (
                (this.elem.globalData.frameId === this.frameId ||
                  !this.effectsSequence.length) &&
                !_finalValue
              ) {
                return;
              }
              this.currentData.t = this.data.d.k[this.keysIndex].s.t;
              var currentValue = this.currentData;
              var currentIndex = this.keysIndex;
              if (this.lock) {
                this.setCurrentData(this.currentData);
                return;
              }
              this.lock = true;
              this._mdf = false;
              var multipliedValue;
              var i,
                len = this.effectsSequence.length;
              var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;
              for (i = 0; i < len; i += 1) {
                //Checking if index changed to prevent creating a new object every time the expression updates.
                if (currentIndex !== this.keysIndex) {
                  finalValue = this.effectsSequence[i](
                    finalValue,
                    finalValue.t,
                  );
                } else {
                  finalValue = this.effectsSequence[i](
                    this.currentData,
                    finalValue.t,
                  );
                }
              }
              if (currentValue !== finalValue) {
                this.setCurrentData(finalValue);
              }
              this.pv = this.v = this.currentData;
              this.lock = false;
              this.frameId = this.elem.globalData.frameId;
            };

            TextProperty.prototype.getKeyframeValue = function() {
              var textKeys = this.data.d.k,
                textDocumentData;
              var frameNum = this.elem.comp.renderedFrame;
              var i = 0,
                len = textKeys.length;
              while (i <= len - 1) {
                textDocumentData = textKeys[i].s;
                if (i === len - 1 || textKeys[i + 1].t > frameNum) {
                  break;
                }
                i += 1;
              }
              if (this.keysIndex !== i) {
                this.keysIndex = i;
              }
              return this.data.d.k[this.keysIndex].s;
            };

            TextProperty.prototype.buildFinalText = function(text) {
              var combinedCharacters = FontManager.getCombinedCharacterCodes();
              var charactersArray = [];
              var i = 0,
                len = text.length;
              while (i < len) {
                if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {
                  charactersArray[charactersArray.length - 1] += text.charAt(i);
                } else {
                  charactersArray.push(text.charAt(i));
                }
                i += 1;
              }
              return charactersArray;
            };

            TextProperty.prototype.completeTextData = function(documentData) {
              documentData.__complete = true;
              var fontManager = this.elem.globalData.fontManager;
              var data = this.data;
              var letters = [];
              var i, len;
              var newLineFlag,
                index = 0,
                val;
              var anchorGrouping = data.m.g;
              var currentSize = 0,
                currentPos = 0,
                currentLine = 0,
                lineWidths = [];
              var lineWidth = 0;
              var maxLineWidth = 0;
              var j, jLen;
              var fontData = fontManager.getFontByName(documentData.f);
              var charData,
                cLength = 0;
              var styles = fontData.fStyle ? fontData.fStyle.split(" ") : [];

              var fWeight = "normal",
                fStyle = "normal";
              len = styles.length;
              var styleName;
              for (i = 0; i < len; i += 1) {
                styleName = styles[i].toLowerCase();
                switch (styleName) {
                  case "italic":
                    fStyle = "italic";
                    break;
                  case "bold":
                    fWeight = "700";
                    break;
                  case "black":
                    fWeight = "900";
                    break;
                  case "medium":
                    fWeight = "500";
                    break;
                  case "regular":
                  case "normal":
                    fWeight = "400";
                    break;
                  case "light":
                  case "thin":
                    fWeight = "200";
                    break;
                }
              }
              documentData.fWeight = fontData.fWeight || fWeight;
              documentData.fStyle = fStyle;
              documentData.finalSize = documentData.s;
              documentData.finalText = this.buildFinalText(documentData.t);
              len = documentData.finalText.length;
              documentData.finalLineHeight = documentData.lh;
              var trackingOffset =
                (documentData.tr / 1000) * documentData.finalSize;
              var charCode;
              if (documentData.sz) {
                var flag = true;
                var boxWidth = documentData.sz[0];
                var boxHeight = documentData.sz[1];
                var currentHeight, finalText;
                while (flag) {
                  finalText = this.buildFinalText(documentData.t);
                  currentHeight = 0;
                  lineWidth = 0;
                  len = finalText.length;
                  trackingOffset =
                    (documentData.tr / 1000) * documentData.finalSize;
                  var lastSpaceIndex = -1;
                  for (i = 0; i < len; i += 1) {
                    charCode = finalText[i].charCodeAt(0);
                    newLineFlag = false;
                    if (finalText[i] === " ") {
                      lastSpaceIndex = i;
                    } else if (charCode === 13 || charCode === 3) {
                      lineWidth = 0;
                      newLineFlag = true;
                      currentHeight +=
                        documentData.finalLineHeight ||
                        documentData.finalSize * 1.2;
                    }
                    if (fontManager.chars) {
                      charData = fontManager.getCharData(
                        finalText[i],
                        fontData.fStyle,
                        fontData.fFamily,
                      );
                      cLength = newLineFlag
                        ? 0
                        : (charData.w * documentData.finalSize) / 100;
                    } else {
                      //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;
                      cLength = fontManager.measureText(
                        finalText[i],
                        documentData.f,
                        documentData.finalSize,
                      );
                    }
                    if (
                      lineWidth + cLength > boxWidth &&
                      finalText[i] !== " "
                    ) {
                      if (lastSpaceIndex === -1) {
                        len += 1;
                      } else {
                        i = lastSpaceIndex;
                      }
                      currentHeight +=
                        documentData.finalLineHeight ||
                        documentData.finalSize * 1.2;
                      finalText.splice(i, lastSpaceIndex === i ? 1 : 0, "\r");
                      //finalText = finalText.substr(0,i) + "\r" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);
                      lastSpaceIndex = -1;
                      lineWidth = 0;
                    } else {
                      lineWidth += cLength;
                      lineWidth += trackingOffset;
                    }
                  }
                  currentHeight +=
                    (fontData.ascent * documentData.finalSize) / 100;
                  if (
                    this.canResize &&
                    documentData.finalSize > this.minimumFontSize &&
                    boxHeight < currentHeight
                  ) {
                    documentData.finalSize -= 1;
                    documentData.finalLineHeight =
                      (documentData.finalSize * documentData.lh) /
                      documentData.s;
                  } else {
                    documentData.finalText = finalText;
                    len = documentData.finalText.length;
                    flag = false;
                  }
                }
              }
              lineWidth = -trackingOffset;
              cLength = 0;
              var uncollapsedSpaces = 0;
              var currentChar;
              for (i = 0; i < len; i += 1) {
                newLineFlag = false;
                currentChar = documentData.finalText[i];
                charCode = currentChar.charCodeAt(0);
                if (currentChar === " ") {
                  val = "\u00A0";
                } else if (charCode === 13 || charCode === 3) {
                  uncollapsedSpaces = 0;
                  lineWidths.push(lineWidth);
                  maxLineWidth =
                    lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
                  lineWidth = -2 * trackingOffset;
                  val = "";
                  newLineFlag = true;
                  currentLine += 1;
                } else {
                  val = documentData.finalText[i];
                }
                if (fontManager.chars) {
                  charData = fontManager.getCharData(
                    currentChar,
                    fontData.fStyle,
                    fontManager.getFontByName(documentData.f).fFamily,
                  );
                  cLength = newLineFlag
                    ? 0
                    : (charData.w * documentData.finalSize) / 100;
                } else {
                  //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);
                  //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;
                  cLength = fontManager.measureText(
                    val,
                    documentData.f,
                    documentData.finalSize,
                  );
                }

                //
                if (currentChar === " ") {
                  uncollapsedSpaces += cLength + trackingOffset;
                } else {
                  lineWidth += cLength + trackingOffset + uncollapsedSpaces;
                  uncollapsedSpaces = 0;
                }
                letters.push({
                  l: cLength,
                  an: cLength,
                  add: currentSize,
                  n: newLineFlag,
                  anIndexes: [],
                  val: val,
                  line: currentLine,
                  animatorJustifyOffset: 0,
                });
                if (anchorGrouping == 2) {
                  currentSize += cLength;
                  if (val === "" || val === "\u00A0" || i === len - 1) {
                    if (val === "" || val === "\u00A0") {
                      currentSize -= cLength;
                    }
                    while (currentPos <= i) {
                      letters[currentPos].an = currentSize;
                      letters[currentPos].ind = index;
                      letters[currentPos].extra = cLength;
                      currentPos += 1;
                    }
                    index += 1;
                    currentSize = 0;
                  }
                } else if (anchorGrouping == 3) {
                  currentSize += cLength;
                  if (val === "" || i === len - 1) {
                    if (val === "") {
                      currentSize -= cLength;
                    }
                    while (currentPos <= i) {
                      letters[currentPos].an = currentSize;
                      letters[currentPos].ind = index;
                      letters[currentPos].extra = cLength;
                      currentPos += 1;
                    }
                    currentSize = 0;
                    index += 1;
                  }
                } else {
                  letters[index].ind = index;
                  letters[index].extra = 0;
                  index += 1;
                }
              }
              documentData.l = letters;
              maxLineWidth =
                lineWidth > maxLineWidth ? lineWidth : maxLineWidth;
              lineWidths.push(lineWidth);
              if (documentData.sz) {
                documentData.boxWidth = documentData.sz[0];
                documentData.justifyOffset = 0;
              } else {
                documentData.boxWidth = maxLineWidth;
                switch (documentData.j) {
                  case 1:
                    documentData.justifyOffset = -documentData.boxWidth;
                    break;
                  case 2:
                    documentData.justifyOffset = -documentData.boxWidth / 2;
                    break;
                  default:
                    documentData.justifyOffset = 0;
                }
              }
              documentData.lineWidths = lineWidths;

              var animators = data.a,
                animatorData,
                letterData;
              jLen = animators.length;
              var based,
                ind,
                indexes = [];
              for (j = 0; j < jLen; j += 1) {
                animatorData = animators[j];
                if (animatorData.a.sc) {
                  documentData.strokeColorAnim = true;
                }
                if (animatorData.a.sw) {
                  documentData.strokeWidthAnim = true;
                }
                if (
                  animatorData.a.fc ||
                  animatorData.a.fh ||
                  animatorData.a.fs ||
                  animatorData.a.fb
                ) {
                  documentData.fillColorAnim = true;
                }
                ind = 0;
                based = animatorData.s.b;
                for (i = 0; i < len; i += 1) {
                  letterData = letters[i];
                  letterData.anIndexes[j] = ind;
                  if (
                    (based == 1 && letterData.val !== "") ||
                    (based == 2 &&
                      letterData.val !== "" &&
                      letterData.val !== "\u00A0") ||
                    (based == 3 &&
                      (letterData.n ||
                        letterData.val == "\u00A0" ||
                        i == len - 1)) ||
                    (based == 4 && (letterData.n || i == len - 1))
                  ) {
                    if (animatorData.s.rn === 1) {
                      indexes.push(ind);
                    }
                    ind += 1;
                  }
                }
                data.a[j].s.totalChars = ind;
                var currentInd = -1,
                  newInd;
                if (animatorData.s.rn === 1) {
                  for (i = 0; i < len; i += 1) {
                    letterData = letters[i];
                    if (currentInd != letterData.anIndexes[j]) {
                      currentInd = letterData.anIndexes[j];
                      newInd = indexes.splice(
                        Math.floor(Math.random() * indexes.length),
                        1,
                      )[0];
                    }
                    letterData.anIndexes[j] = newInd;
                  }
                }
              }
              documentData.yOffset =
                documentData.finalLineHeight || documentData.finalSize * 1.2;
              documentData.ls = documentData.ls || 0;
              documentData.ascent =
                (fontData.ascent * documentData.finalSize) / 100;
            };

            TextProperty.prototype.updateDocumentData = function(
              newData,
              index,
            ) {
              index = index === undefined ? this.keysIndex : index;
              var dData = this.copyData({}, this.data.d.k[index].s);
              dData = this.copyData(dData, newData);
              this.data.d.k[index].s = dData;
              this.recalculate(index);
              this.elem.addDynamicProperty(this);
            };

            TextProperty.prototype.recalculate = function(index) {
              var dData = this.data.d.k[index].s;
              dData.__complete = false;
              this.keysIndex = 0;
              this._isFirstFrame = true;
              this.getValue(dData);
            };

            TextProperty.prototype.canResizeFont = function(_canResize) {
              this.canResize = _canResize;
              this.recalculate(this.keysIndex);
              this.elem.addDynamicProperty(this);
            };

            TextProperty.prototype.setMinimumFontSize = function(_fontValue) {
              this.minimumFontSize = Math.floor(_fontValue) || 1;
              this.recalculate(this.keysIndex);
              this.elem.addDynamicProperty(this);
            };

            var TextSelectorProp = (function() {
              var max = Math.max;
              var min = Math.min;
              var floor = Math.floor;

              function TextSelectorProp(elem, data) {
                this._currentTextLength = -1;
                this.k = false;
                this.data = data;
                this.elem = elem;
                this.comp = elem.comp;
                this.finalS = 0;
                this.finalE = 0;
                this.initDynamicPropertyContainer(elem);
                this.s = PropertyFactory.getProp(
                  elem,
                  data.s || { k: 0 },
                  0,
                  0,
                  this,
                );
                if ("e" in data) {
                  this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);
                } else {
                  this.e = { v: 100 };
                }
                this.o = PropertyFactory.getProp(
                  elem,
                  data.o || { k: 0 },
                  0,
                  0,
                  this,
                );
                this.xe = PropertyFactory.getProp(
                  elem,
                  data.xe || { k: 0 },
                  0,
                  0,
                  this,
                );
                this.ne = PropertyFactory.getProp(
                  elem,
                  data.ne || { k: 0 },
                  0,
                  0,
                  this,
                );
                this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);
                if (!this.dynamicProperties.length) {
                  this.getValue();
                }
              }

              TextSelectorProp.prototype = {
                getMult: function(ind) {
                  if (
                    this._currentTextLength !==
                    this.elem.textProperty.currentData.l.length
                  ) {
                    this.getValue();
                  }
                  //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);
                  var easer = BezierFactory.getBezierEasing(
                    this.ne.v / 100,
                    0,
                    1 - this.xe.v / 100,
                    1,
                  ).get;
                  var mult = 0;
                  var s = this.finalS;
                  var e = this.finalE;
                  var type = this.data.sh;
                  if (type == 2) {
                    if (e === s) {
                      mult = ind >= e ? 1 : 0;
                    } else {
                      mult = max(
                        0,
                        min(0.5 / (e - s) + (ind - s) / (e - s), 1),
                      );
                    }
                    mult = easer(mult);
                  } else if (type == 3) {
                    if (e === s) {
                      mult = ind >= e ? 0 : 1;
                    } else {
                      mult =
                        1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));
                    }

                    mult = easer(mult);
                  } else if (type == 4) {
                    if (e === s) {
                      mult = 0;
                    } else {
                      mult = max(
                        0,
                        min(0.5 / (e - s) + (ind - s) / (e - s), 1),
                      );
                      if (mult < 0.5) {
                        mult *= 2;
                      } else {
                        mult = 1 - 2 * (mult - 0.5);
                      }
                    }
                    mult = easer(mult);
                  } else if (type == 5) {
                    if (e === s) {
                      mult = 0;
                    } else {
                      var tot = e - s;
                      /*ind += 0.5;
                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/
                      ind = min(max(0, ind + 0.5 - s), e - s);
                      var x = -tot / 2 + ind;
                      var a = tot / 2;
                      mult = Math.sqrt(1 - (x * x) / (a * a));
                    }
                    mult = easer(mult);
                  } else if (type == 6) {
                    if (e === s) {
                      mult = 0;
                    } else {
                      ind = min(max(0, ind + 0.5 - s), e - s);
                      mult =
                        (1 +
                          Math.cos(Math.PI + (Math.PI * 2 * ind) / (e - s))) /
                        2;
                      /*
                     ind = Math.min(Math.max(s,ind),e-1);
                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;
                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/
                    }
                    mult = easer(mult);
                  } else {
                    if (ind >= floor(s)) {
                      if (ind - s < 0) {
                        mult = 1 - (s - ind);
                      } else {
                        mult = max(0, min(e - ind, 1));
                      }
                    }
                    mult = easer(mult);
                  }
                  return mult * this.a.v;
                },
                getValue: function(newCharsFlag) {
                  this.iterateDynamicProperties();
                  this._mdf = newCharsFlag || this._mdf;
                  this._currentTextLength =
                    this.elem.textProperty.currentData.l.length || 0;
                  if (newCharsFlag && this.data.r === 2) {
                    this.e.v = this._currentTextLength;
                  }
                  var divisor =
                    this.data.r === 2 ? 1 : 100 / this.data.totalChars;
                  var o = this.o.v / divisor;
                  var s = this.s.v / divisor + o;
                  var e = this.e.v / divisor + o;
                  if (s > e) {
                    var _s = s;
                    s = e;
                    e = _s;
                  }
                  this.finalS = s;
                  this.finalE = e;
                },
              };
              extendPrototype([DynamicPropertyContainer], TextSelectorProp);

              function getTextSelectorProp(elem, data, arr) {
                return new TextSelectorProp(elem, data, arr);
              }

              return {
                getTextSelectorProp: getTextSelectorProp,
              };
            })();

            var pool_factory = (function() {
              return function(initialLength, _create, _release, _clone) {
                var _length = 0;
                var _maxLength = initialLength;
                var pool = createSizedArray(_maxLength);

                var ob = {
                  newElement: newElement,
                  release: release,
                };

                function newElement() {
                  var element;
                  if (_length) {
                    _length -= 1;
                    element = pool[_length];
                  } else {
                    element = _create();
                  }
                  return element;
                }

                function release(element) {
                  if (_length === _maxLength) {
                    pool = pooling.double(pool);
                    _maxLength = _maxLength * 2;
                  }
                  if (_release) {
                    _release(element);
                  }
                  pool[_length] = element;
                  _length += 1;
                }

                function clone() {
                  var clonedElement = newElement();
                  return _clone(clonedElement);
                }

                return ob;
              };
            })();

            var pooling = (function() {
              function double(arr) {
                return arr.concat(createSizedArray(arr.length));
              }

              return {
                double: double,
              };
            })();
            var point_pool = (function() {
              function create() {
                return createTypedArray("float32", 2);
              }
              return pool_factory(8, create);
            })();
            var shape_pool = (function() {
              function create() {
                return new ShapePath();
              }

              function release(shapePath) {
                var len = shapePath._length,
                  i;
                for (i = 0; i < len; i += 1) {
                  point_pool.release(shapePath.v[i]);
                  point_pool.release(shapePath.i[i]);
                  point_pool.release(shapePath.o[i]);
                  shapePath.v[i] = null;
                  shapePath.i[i] = null;
                  shapePath.o[i] = null;
                }
                shapePath._length = 0;
                shapePath.c = false;
              }

              function clone(shape) {
                var cloned = factory.newElement();
                var i,
                  len =
                    shape._length === undefined
                      ? shape.v.length
                      : shape._length;
                cloned.setLength(len);
                cloned.c = shape.c;
                var pt;

                for (i = 0; i < len; i += 1) {
                  cloned.setTripleAt(
                    shape.v[i][0],
                    shape.v[i][1],
                    shape.o[i][0],
                    shape.o[i][1],
                    shape.i[i][0],
                    shape.i[i][1],
                    i,
                  );
                }
                return cloned;
              }

              var factory = pool_factory(4, create, release);
              factory.clone = clone;

              return factory;
            })();
            var shapeCollection_pool = (function() {
              var ob = {
                newShapeCollection: newShapeCollection,
                release: release,
              };

              var _length = 0;
              var _maxLength = 4;
              var pool = createSizedArray(_maxLength);

              function newShapeCollection() {
                var shapeCollection;
                if (_length) {
                  _length -= 1;
                  shapeCollection = pool[_length];
                } else {
                  shapeCollection = new ShapeCollection();
                }
                return shapeCollection;
              }

              function release(shapeCollection) {
                var i,
                  len = shapeCollection._length;
                for (i = 0; i < len; i += 1) {
                  shape_pool.release(shapeCollection.shapes[i]);
                }
                shapeCollection._length = 0;

                if (_length === _maxLength) {
                  pool = pooling.double(pool);
                  _maxLength = _maxLength * 2;
                }
                pool[_length] = shapeCollection;
                _length += 1;
              }

              return ob;
            })();
            var segments_length_pool = (function() {
              function create() {
                return {
                  lengths: [],
                  totalLength: 0,
                };
              }

              function release(element) {
                var i,
                  len = element.lengths.length;
                for (i = 0; i < len; i += 1) {
                  bezier_length_pool.release(element.lengths[i]);
                }
                element.lengths.length = 0;
              }

              return pool_factory(8, create, release);
            })();
            var bezier_length_pool = (function() {
              function create() {
                return {
                  addedLength: 0,
                  percents: createTypedArray("float32", defaultCurveSegments),
                  lengths: createTypedArray("float32", defaultCurveSegments),
                };
              }
              return pool_factory(8, create);
            })();
            function BaseRenderer() {}
            BaseRenderer.prototype.checkLayers = function(num) {
              var i,
                len = this.layers.length,
                data;
              this.completeLayers = true;
              for (i = len - 1; i >= 0; i--) {
                if (!this.elements[i]) {
                  data = this.layers[i];
                  if (
                    data.ip - data.st <= num - this.layers[i].st &&
                    data.op - data.st > num - this.layers[i].st
                  ) {
                    this.buildItem(i);
                  }
                }
                this.completeLayers = this.elements[i]
                  ? this.completeLayers
                  : false;
              }
              this.checkPendingElements();
            };

            BaseRenderer.prototype.createItem = function(layer) {
              switch (layer.ty) {
                case 2:
                  return this.createImage(layer);
                case 0:
                  return this.createComp(layer);
                case 1:
                  return this.createSolid(layer);
                case 3:
                  return this.createNull(layer);
                case 4:
                  return this.createShape(layer);
                case 5:
                  return this.createText(layer);
                case 13:
                  return this.createCamera(layer);
              }
              return this.createNull(layer);
            };

            BaseRenderer.prototype.createCamera = function() {
              throw new Error(
                "You're using a 3d camera. Try the html renderer.",
              );
            };

            BaseRenderer.prototype.buildAllItems = function() {
              var i,
                len = this.layers.length;
              for (i = 0; i < len; i += 1) {
                this.buildItem(i);
              }
              this.checkPendingElements();
            };

            BaseRenderer.prototype.includeLayers = function(newLayers) {
              this.completeLayers = false;
              var i,
                len = newLayers.length;
              var j,
                jLen = this.layers.length;
              for (i = 0; i < len; i += 1) {
                j = 0;
                while (j < jLen) {
                  if (this.layers[j].id == newLayers[i].id) {
                    this.layers[j] = newLayers[i];
                    break;
                  }
                  j += 1;
                }
              }
            };

            BaseRenderer.prototype.setProjectInterface = function(pInterface) {
              this.globalData.projectInterface = pInterface;
            };

            BaseRenderer.prototype.initItems = function() {
              if (!this.globalData.progressiveLoad) {
                this.buildAllItems();
              }
            };
            BaseRenderer.prototype.buildElementParenting = function(
              element,
              parentName,
              hierarchy,
            ) {
              var elements = this.elements;
              var layers = this.layers;
              var i = 0,
                len = layers.length;
              while (i < len) {
                if (layers[i].ind == parentName) {
                  if (!elements[i] || elements[i] === true) {
                    this.buildItem(i);
                    this.addPendingElement(element);
                  } else {
                    hierarchy.push(elements[i]);
                    elements[i].setAsParent();
                    if (layers[i].parent !== undefined) {
                      this.buildElementParenting(
                        element,
                        layers[i].parent,
                        hierarchy,
                      );
                    } else {
                      element.setHierarchy(hierarchy);
                    }
                  }
                }
                i += 1;
              }
            };

            BaseRenderer.prototype.addPendingElement = function(element) {
              this.pendingElements.push(element);
            };

            BaseRenderer.prototype.searchExtraCompositions = function(assets) {
              var i,
                len = assets.length;
              for (i = 0; i < len; i += 1) {
                if (assets[i].xt) {
                  var comp = this.createComp(assets[i]);
                  comp.initExpressions();
                  this.globalData.projectInterface.registerComposition(comp);
                }
              }
            };

            BaseRenderer.prototype.setupGlobalData = function(
              animData,
              fontsContainer,
            ) {
              this.globalData.fontManager = new FontManager();
              this.globalData.fontManager.addChars(animData.chars);
              this.globalData.fontManager.addFonts(
                animData.fonts,
                fontsContainer,
              );
              this.globalData.getAssetData = this.animationItem.getAssetData.bind(
                this.animationItem,
              );
              this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(
                this.animationItem,
              );
              this.globalData.imageLoader = this.animationItem.imagePreloader;
              this.globalData.frameId = 0;
              this.globalData.frameRate = animData.fr;
              this.globalData.nm = animData.nm;
              this.globalData.compSize = {
                w: animData.w,
                h: animData.h,
              };
            };
            function SVGRenderer(animationItem, config) {
              this.animationItem = animationItem;
              this.layers = null;
              this.renderedFrame = -1;
              this.svgElement = createNS("svg");
              var ariaLabel = "";
              if (config && config.title) {
                var titleElement = createNS("title");
                var titleId = createElementID();
                titleElement.setAttribute("id", titleId);
                titleElement.textContent = config.title;
                this.svgElement.appendChild(titleElement);
                ariaLabel += titleId;
              }
              if (config && config.description) {
                var descElement = createNS("desc");
                var descId = createElementID();
                descElement.setAttribute("id", descId);
                descElement.textContent = config.description;
                this.svgElement.appendChild(descElement);
                ariaLabel += " " + descId;
              }
              if (ariaLabel) {
                this.svgElement.setAttribute("aria-labelledby", ariaLabel);
              }
              var defs = createNS("defs");
              this.svgElement.appendChild(defs);
              var maskElement = createNS("g");
              this.svgElement.appendChild(maskElement);
              this.layerElement = maskElement;
              this.renderConfig = {
                preserveAspectRatio:
                  (config && config.preserveAspectRatio) || "xMidYMid meet",
                imagePreserveAspectRatio:
                  (config && config.imagePreserveAspectRatio) ||
                  "xMidYMid slice",
                progressiveLoad: (config && config.progressiveLoad) || false,
                hideOnTransparent:
                  config && config.hideOnTransparent === false ? false : true,
                viewBoxOnly: (config && config.viewBoxOnly) || false,
                viewBoxSize: (config && config.viewBoxSize) || false,
                className: (config && config.className) || "",
              };

              this.globalData = {
                _mdf: false,
                frameNum: -1,
                defs: defs,
                renderConfig: this.renderConfig,
              };
              this.elements = [];
              this.pendingElements = [];
              this.destroyed = false;
              this.rendererType = "svg";
            }

            extendPrototype([BaseRenderer], SVGRenderer);

            SVGRenderer.prototype.createNull = function(data) {
              return new NullElement(data, this.globalData, this);
            };

            SVGRenderer.prototype.createShape = function(data) {
              return new SVGShapeElement(data, this.globalData, this);
            };

            SVGRenderer.prototype.createText = function(data) {
              return new SVGTextElement(data, this.globalData, this);
            };

            SVGRenderer.prototype.createImage = function(data) {
              return new IImageElement(data, this.globalData, this);
            };

            SVGRenderer.prototype.createComp = function(data) {
              return new SVGCompElement(data, this.globalData, this);
            };

            SVGRenderer.prototype.createSolid = function(data) {
              return new ISolidElement(data, this.globalData, this);
            };

            SVGRenderer.prototype.configAnimation = function(animData) {
              this.svgElement.setAttribute(
                "xmlns",
                "http://www.w3.org/2000/svg",
              );
              if (this.renderConfig.viewBoxSize) {
                this.svgElement.setAttribute(
                  "viewBox",
                  this.renderConfig.viewBoxSize,
                );
              } else {
                this.svgElement.setAttribute(
                  "viewBox",
                  "0 0 " + animData.w + " " + animData.h,
                );
              }

              if (!this.renderConfig.viewBoxOnly) {
                this.svgElement.setAttribute("width", animData.w);
                this.svgElement.setAttribute("height", animData.h);
                this.svgElement.style.width = "100%";
                this.svgElement.style.height = "100%";
                this.svgElement.style.transform = "translate3d(0,0,0)";
              }
              if (this.renderConfig.className) {
                this.svgElement.setAttribute(
                  "class",
                  this.renderConfig.className,
                );
              }
              this.svgElement.setAttribute(
                "preserveAspectRatio",
                this.renderConfig.preserveAspectRatio,
              );
              //this.layerElement.style.transform = 'translate3d(0,0,0)';
              //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = "0px 0px 0px";
              this.animationItem.wrapper.appendChild(this.svgElement);
              //Mask animation
              var defs = this.globalData.defs;

              this.setupGlobalData(animData, defs);
              this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
              this.data = animData;

              var maskElement = createNS("clipPath");
              var rect = createNS("rect");
              rect.setAttribute("width", animData.w);
              rect.setAttribute("height", animData.h);
              rect.setAttribute("x", 0);
              rect.setAttribute("y", 0);
              var maskId = createElementID();
              maskElement.setAttribute("id", maskId);
              maskElement.appendChild(rect);
              this.layerElement.setAttribute(
                "clip-path",
                "url(" + locationHref + "#" + maskId + ")",
              );

              defs.appendChild(maskElement);
              this.layers = animData.layers;
              this.elements = createSizedArray(animData.layers.length);
            };

            SVGRenderer.prototype.destroy = function() {
              this.animationItem.wrapper.innerHTML = "";
              this.layerElement = null;
              this.globalData.defs = null;
              var i,
                len = this.layers ? this.layers.length : 0;
              for (i = 0; i < len; i++) {
                if (this.elements[i]) {
                  this.elements[i].destroy();
                }
              }
              this.elements.length = 0;
              this.destroyed = true;
              this.animationItem = null;
            };

            SVGRenderer.prototype.updateContainerSize = function() {};

            SVGRenderer.prototype.buildItem = function(pos) {
              var elements = this.elements;
              if (elements[pos] || this.layers[pos].ty == 99) {
                return;
              }
              elements[pos] = true;
              var element = this.createItem(this.layers[pos]);

              elements[pos] = element;
              if (expressionsPlugin) {
                if (this.layers[pos].ty === 0) {
                  this.globalData.projectInterface.registerComposition(element);
                }
                element.initExpressions();
              }
              this.appendElementInPos(element, pos);
              if (this.layers[pos].tt) {
                if (
                  !this.elements[pos - 1] ||
                  this.elements[pos - 1] === true
                ) {
                  this.buildItem(pos - 1);
                  this.addPendingElement(element);
                } else {
                  element.setMatte(elements[pos - 1].layerId);
                }
              }
            };

            SVGRenderer.prototype.checkPendingElements = function() {
              while (this.pendingElements.length) {
                var element = this.pendingElements.pop();
                element.checkParenting();
                if (element.data.tt) {
                  var i = 0,
                    len = this.elements.length;
                  while (i < len) {
                    if (this.elements[i] === element) {
                      element.setMatte(this.elements[i - 1].layerId);
                      break;
                    }
                    i += 1;
                  }
                }
              }
            };

            SVGRenderer.prototype.renderFrame = function(num) {
              if (this.renderedFrame === num || this.destroyed) {
                return;
              }
              if (num === null) {
                num = this.renderedFrame;
              } else {
                this.renderedFrame = num;
              }
              // console.log('-------');
              // console.log('FRAME ',num);
              this.globalData.frameNum = num;
              this.globalData.frameId += 1;
              this.globalData.projectInterface.currentFrame = num;
              this.globalData._mdf = false;
              var i,
                len = this.layers.length;
              if (!this.completeLayers) {
                this.checkLayers(num);
              }
              for (i = len - 1; i >= 0; i--) {
                if (this.completeLayers || this.elements[i]) {
                  this.elements[i].prepareFrame(num - this.layers[i].st);
                }
              }
              if (this.globalData._mdf) {
                for (i = 0; i < len; i += 1) {
                  if (this.completeLayers || this.elements[i]) {
                    this.elements[i].renderFrame();
                  }
                }
              }
            };

            SVGRenderer.prototype.appendElementInPos = function(element, pos) {
              var newElement = element.getBaseElement();
              if (!newElement) {
                return;
              }
              var i = 0;
              var nextElement;
              while (i < pos) {
                if (
                  this.elements[i] &&
                  this.elements[i] !== true &&
                  this.elements[i].getBaseElement()
                ) {
                  nextElement = this.elements[i].getBaseElement();
                }
                i += 1;
              }
              if (nextElement) {
                this.layerElement.insertBefore(newElement, nextElement);
              } else {
                this.layerElement.appendChild(newElement);
              }
            };

            SVGRenderer.prototype.hide = function() {
              this.layerElement.style.display = "none";
            };

            SVGRenderer.prototype.show = function() {
              this.layerElement.style.display = "block";
            };

            function CanvasRenderer(animationItem, config) {
              this.animationItem = animationItem;
              this.renderConfig = {
                clearCanvas:
                  config && config.clearCanvas !== undefined
                    ? config.clearCanvas
                    : true,
                context: (config && config.context) || null,
                progressiveLoad: (config && config.progressiveLoad) || false,
                preserveAspectRatio:
                  (config && config.preserveAspectRatio) || "xMidYMid meet",
                imagePreserveAspectRatio:
                  (config && config.imagePreserveAspectRatio) ||
                  "xMidYMid slice",
                className: (config && config.className) || "",
              };
              this.renderConfig.dpr = (config && config.dpr) || 1;
              if (this.animationItem.wrapper) {
                this.renderConfig.dpr =
                  (config && config.dpr) || window.devicePixelRatio || 1;
              }
              this.renderedFrame = -1;
              this.globalData = {
                frameNum: -1,
                _mdf: false,
                renderConfig: this.renderConfig,
                currentGlobalAlpha: -1,
              };
              this.contextData = new CVContextData();
              this.elements = [];
              this.pendingElements = [];
              this.transformMat = new Matrix();
              this.completeLayers = false;
              this.rendererType = "canvas";
            }
            extendPrototype([BaseRenderer], CanvasRenderer);

            CanvasRenderer.prototype.createShape = function(data) {
              return new CVShapeElement(data, this.globalData, this);
            };

            CanvasRenderer.prototype.createText = function(data) {
              return new CVTextElement(data, this.globalData, this);
            };

            CanvasRenderer.prototype.createImage = function(data) {
              return new CVImageElement(data, this.globalData, this);
            };

            CanvasRenderer.prototype.createComp = function(data) {
              return new CVCompElement(data, this.globalData, this);
            };

            CanvasRenderer.prototype.createSolid = function(data) {
              return new CVSolidElement(data, this.globalData, this);
            };

            CanvasRenderer.prototype.createNull =
              SVGRenderer.prototype.createNull;

            CanvasRenderer.prototype.ctxTransform = function(props) {
              if (
                props[0] === 1 &&
                props[1] === 0 &&
                props[4] === 0 &&
                props[5] === 1 &&
                props[12] === 0 &&
                props[13] === 0
              ) {
                return;
              }
              if (!this.renderConfig.clearCanvas) {
                this.canvasContext.transform(
                  props[0],
                  props[1],
                  props[4],
                  props[5],
                  props[12],
                  props[13],
                );
                return;
              }
              this.transformMat.cloneFromProps(props);
              var cProps = this.contextData.cTr.props;
              this.transformMat.transform(
                cProps[0],
                cProps[1],
                cProps[2],
                cProps[3],
                cProps[4],
                cProps[5],
                cProps[6],
                cProps[7],
                cProps[8],
                cProps[9],
                cProps[10],
                cProps[11],
                cProps[12],
                cProps[13],
                cProps[14],
                cProps[15],
              );
              //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);
              this.contextData.cTr.cloneFromProps(this.transformMat.props);
              var trProps = this.contextData.cTr.props;
              this.canvasContext.setTransform(
                trProps[0],
                trProps[1],
                trProps[4],
                trProps[5],
                trProps[12],
                trProps[13],
              );
            };

            CanvasRenderer.prototype.ctxOpacity = function(op) {
              /*if(op === 1){
        return;
    }*/
              if (!this.renderConfig.clearCanvas) {
                this.canvasContext.globalAlpha *= op < 0 ? 0 : op;
                this.globalData.currentGlobalAlpha = this.contextData.cO;
                return;
              }
              this.contextData.cO *= op < 0 ? 0 : op;
              if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {
                this.canvasContext.globalAlpha = this.contextData.cO;
                this.globalData.currentGlobalAlpha = this.contextData.cO;
              }
            };

            CanvasRenderer.prototype.reset = function() {
              if (!this.renderConfig.clearCanvas) {
                this.canvasContext.restore();
                return;
              }
              this.contextData.reset();
            };

            CanvasRenderer.prototype.save = function(actionFlag) {
              if (!this.renderConfig.clearCanvas) {
                this.canvasContext.save();
                return;
              }
              if (actionFlag) {
                this.canvasContext.save();
              }
              var props = this.contextData.cTr.props;
              if (this.contextData._length <= this.contextData.cArrPos) {
                this.contextData.duplicate();
              }
              var i,
                arr = this.contextData.saved[this.contextData.cArrPos];
              for (i = 0; i < 16; i += 1) {
                arr[i] = props[i];
              }
              this.contextData.savedOp[
                this.contextData.cArrPos
              ] = this.contextData.cO;
              this.contextData.cArrPos += 1;
            };

            CanvasRenderer.prototype.restore = function(actionFlag) {
              if (!this.renderConfig.clearCanvas) {
                this.canvasContext.restore();
                return;
              }
              if (actionFlag) {
                this.canvasContext.restore();
                this.globalData.blendMode = "source-over";
              }
              this.contextData.cArrPos -= 1;
              var popped = this.contextData.saved[this.contextData.cArrPos];
              var i,
                arr = this.contextData.cTr.props;
              for (i = 0; i < 16; i += 1) {
                arr[i] = popped[i];
              }
              this.canvasContext.setTransform(
                popped[0],
                popped[1],
                popped[4],
                popped[5],
                popped[12],
                popped[13],
              );
              popped = this.contextData.savedOp[this.contextData.cArrPos];
              this.contextData.cO = popped;
              if (this.globalData.currentGlobalAlpha !== popped) {
                this.canvasContext.globalAlpha = popped;
                this.globalData.currentGlobalAlpha = popped;
              }
            };

            CanvasRenderer.prototype.configAnimation = function(animData) {
              if (this.animationItem.wrapper) {
                this.animationItem.container = createTag("canvas");
                this.animationItem.container.style.width = "100%";
                this.animationItem.container.style.height = "100%";
                //this.animationItem.container.style.transform = 'translate3d(0,0,0)';
                //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';
                this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style[
                  "-webkit-transform"
                ] = "0px 0px 0px";
                this.animationItem.wrapper.appendChild(
                  this.animationItem.container,
                );
                this.canvasContext = this.animationItem.container.getContext(
                  "2d",
                );
                if (this.renderConfig.className) {
                  this.animationItem.container.setAttribute(
                    "class",
                    this.renderConfig.className,
                  );
                }
              } else {
                this.canvasContext = this.renderConfig.context;
              }
              this.data = animData;
              this.layers = animData.layers;
              this.transformCanvas = {
                w: animData.w,
                h: animData.h,
                sx: 0,
                sy: 0,
                tx: 0,
                ty: 0,
              };
              this.setupGlobalData(animData, document.body);
              this.globalData.canvasContext = this.canvasContext;
              this.globalData.renderer = this;
              this.globalData.isDashed = false;
              this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;
              this.globalData.transformCanvas = this.transformCanvas;
              this.elements = createSizedArray(animData.layers.length);

              this.updateContainerSize();
            };

            CanvasRenderer.prototype.updateContainerSize = function() {
              this.reset();
              var elementWidth, elementHeight;
              if (this.animationItem.wrapper && this.animationItem.container) {
                elementWidth = this.animationItem.wrapper.offsetWidth;
                elementHeight = this.animationItem.wrapper.offsetHeight;
                this.animationItem.container.setAttribute(
                  "width",
                  elementWidth * this.renderConfig.dpr,
                );
                this.animationItem.container.setAttribute(
                  "height",
                  elementHeight * this.renderConfig.dpr,
                );
              } else {
                elementWidth =
                  this.canvasContext.canvas.width * this.renderConfig.dpr;
                elementHeight =
                  this.canvasContext.canvas.height * this.renderConfig.dpr;
              }
              var elementRel, animationRel;
              if (
                this.renderConfig.preserveAspectRatio.indexOf("meet") !== -1 ||
                this.renderConfig.preserveAspectRatio.indexOf("slice") !== -1
              ) {
                var par = this.renderConfig.preserveAspectRatio.split(" ");
                var fillType = par[1] || "meet";
                var pos = par[0] || "xMidYMid";
                var xPos = pos.substr(0, 4);
                var yPos = pos.substr(4);
                elementRel = elementWidth / elementHeight;
                animationRel = this.transformCanvas.w / this.transformCanvas.h;
                if (
                  (animationRel > elementRel && fillType === "meet") ||
                  (animationRel < elementRel && fillType === "slice")
                ) {
                  this.transformCanvas.sx =
                    elementWidth /
                    (this.transformCanvas.w / this.renderConfig.dpr);
                  this.transformCanvas.sy =
                    elementWidth /
                    (this.transformCanvas.w / this.renderConfig.dpr);
                } else {
                  this.transformCanvas.sx =
                    elementHeight /
                    (this.transformCanvas.h / this.renderConfig.dpr);
                  this.transformCanvas.sy =
                    elementHeight /
                    (this.transformCanvas.h / this.renderConfig.dpr);
                }

                if (
                  xPos === "xMid" &&
                  ((animationRel < elementRel && fillType === "meet") ||
                    (animationRel > elementRel && fillType === "slice"))
                ) {
                  this.transformCanvas.tx =
                    ((elementWidth -
                      this.transformCanvas.w *
                        (elementHeight / this.transformCanvas.h)) /
                      2) *
                    this.renderConfig.dpr;
                } else if (
                  xPos === "xMax" &&
                  ((animationRel < elementRel && fillType === "meet") ||
                    (animationRel > elementRel && fillType === "slice"))
                ) {
                  this.transformCanvas.tx =
                    (elementWidth -
                      this.transformCanvas.w *
                        (elementHeight / this.transformCanvas.h)) *
                    this.renderConfig.dpr;
                } else {
                  this.transformCanvas.tx = 0;
                }
                if (
                  yPos === "YMid" &&
                  ((animationRel > elementRel && fillType === "meet") ||
                    (animationRel < elementRel && fillType === "slice"))
                ) {
                  this.transformCanvas.ty =
                    ((elementHeight -
                      this.transformCanvas.h *
                        (elementWidth / this.transformCanvas.w)) /
                      2) *
                    this.renderConfig.dpr;
                } else if (
                  yPos === "YMax" &&
                  ((animationRel > elementRel && fillType === "meet") ||
                    (animationRel < elementRel && fillType === "slice"))
                ) {
                  this.transformCanvas.ty =
                    (elementHeight -
                      this.transformCanvas.h *
                        (elementWidth / this.transformCanvas.w)) *
                    this.renderConfig.dpr;
                } else {
                  this.transformCanvas.ty = 0;
                }
              } else if (this.renderConfig.preserveAspectRatio == "none") {
                this.transformCanvas.sx =
                  elementWidth /
                  (this.transformCanvas.w / this.renderConfig.dpr);
                this.transformCanvas.sy =
                  elementHeight /
                  (this.transformCanvas.h / this.renderConfig.dpr);
                this.transformCanvas.tx = 0;
                this.transformCanvas.ty = 0;
              } else {
                this.transformCanvas.sx = this.renderConfig.dpr;
                this.transformCanvas.sy = this.renderConfig.dpr;
                this.transformCanvas.tx = 0;
                this.transformCanvas.ty = 0;
              }
              this.transformCanvas.props = [
                this.transformCanvas.sx,
                0,
                0,
                0,
                0,
                this.transformCanvas.sy,
                0,
                0,
                0,
                0,
                1,
                0,
                this.transformCanvas.tx,
                this.transformCanvas.ty,
                0,
                1,
              ];
              /*var i, len = this.elements.length;
    for(i=0;i<len;i+=1){
        if(this.elements[i] && this.elements[i].data.ty === 0){
            this.elements[i].resize(this.globalData.transformCanvas);
        }
    }*/
              this.ctxTransform(this.transformCanvas.props);
              this.canvasContext.beginPath();
              this.canvasContext.rect(
                0,
                0,
                this.transformCanvas.w,
                this.transformCanvas.h,
              );
              this.canvasContext.closePath();
              this.canvasContext.clip();

              this.renderFrame(this.renderedFrame, true);
            };

            CanvasRenderer.prototype.destroy = function() {
              if (this.renderConfig.clearCanvas) {
                this.animationItem.wrapper.innerHTML = "";
              }
              var i,
                len = this.layers ? this.layers.length : 0;
              for (i = len - 1; i >= 0; i -= 1) {
                if (this.elements[i]) {
                  this.elements[i].destroy();
                }
              }
              this.elements.length = 0;
              this.globalData.canvasContext = null;
              this.animationItem.container = null;
              this.destroyed = true;
            };

            CanvasRenderer.prototype.renderFrame = function(num, forceRender) {
              if (
                (this.renderedFrame === num &&
                  this.renderConfig.clearCanvas === true &&
                  !forceRender) ||
                this.destroyed ||
                num === -1
              ) {
                return;
              }
              this.renderedFrame = num;
              this.globalData.frameNum = num - this.animationItem._isFirstFrame;
              this.globalData.frameId += 1;
              this.globalData._mdf =
                !this.renderConfig.clearCanvas || forceRender;
              this.globalData.projectInterface.currentFrame = num;

              // console.log('--------');
              // console.log('NEW: ',num);
              var i,
                len = this.layers.length;
              if (!this.completeLayers) {
                this.checkLayers(num);
              }

              for (i = 0; i < len; i++) {
                if (this.completeLayers || this.elements[i]) {
                  this.elements[i].prepareFrame(num - this.layers[i].st);
                }
              }
              if (this.globalData._mdf) {
                if (this.renderConfig.clearCanvas === true) {
                  this.canvasContext.clearRect(
                    0,
                    0,
                    this.transformCanvas.w,
                    this.transformCanvas.h,
                  );
                } else {
                  this.save();
                }
                for (i = len - 1; i >= 0; i -= 1) {
                  if (this.completeLayers || this.elements[i]) {
                    this.elements[i].renderFrame();
                  }
                }
                if (this.renderConfig.clearCanvas !== true) {
                  this.restore();
                }
              }
            };

            CanvasRenderer.prototype.buildItem = function(pos) {
              var elements = this.elements;
              if (elements[pos] || this.layers[pos].ty == 99) {
                return;
              }
              var element = this.createItem(
                this.layers[pos],
                this,
                this.globalData,
              );
              elements[pos] = element;
              element.initExpressions();
              /*if(this.layers[pos].ty === 0){
        element.resize(this.globalData.transformCanvas);
    }*/
            };

            CanvasRenderer.prototype.checkPendingElements = function() {
              while (this.pendingElements.length) {
                var element = this.pendingElements.pop();
                element.checkParenting();
              }
            };

            CanvasRenderer.prototype.hide = function() {
              this.animationItem.container.style.display = "none";
            };

            CanvasRenderer.prototype.show = function() {
              this.animationItem.container.style.display = "block";
            };

            function HybridRenderer(animationItem, config) {
              this.animationItem = animationItem;
              this.layers = null;
              this.renderedFrame = -1;
              this.renderConfig = {
                className: (config && config.className) || "",
                imagePreserveAspectRatio:
                  (config && config.imagePreserveAspectRatio) ||
                  "xMidYMid slice",
                hideOnTransparent:
                  config && config.hideOnTransparent === false ? false : true,
              };
              this.globalData = {
                _mdf: false,
                frameNum: -1,
                renderConfig: this.renderConfig,
              };
              this.pendingElements = [];
              this.elements = [];
              this.threeDElements = [];
              this.destroyed = false;
              this.camera = null;
              this.supports3d = true;
              this.rendererType = "html";
            }

            extendPrototype([BaseRenderer], HybridRenderer);

            HybridRenderer.prototype.buildItem =
              SVGRenderer.prototype.buildItem;

            HybridRenderer.prototype.checkPendingElements = function() {
              while (this.pendingElements.length) {
                var element = this.pendingElements.pop();
                element.checkParenting();
              }
            };

            HybridRenderer.prototype.appendElementInPos = function(
              element,
              pos,
            ) {
              var newDOMElement = element.getBaseElement();
              if (!newDOMElement) {
                return;
              }
              var layer = this.layers[pos];
              if (!layer.ddd || !this.supports3d) {
                if (this.threeDElements) {
                  this.addTo3dContainer(newDOMElement, pos);
                } else {
                  var i = 0;
                  var nextDOMElement, nextLayer, tmpDOMElement;
                  while (i < pos) {
                    if (
                      this.elements[i] &&
                      this.elements[i] !== true &&
                      this.elements[i].getBaseElement
                    ) {
                      nextLayer = this.elements[i];
                      tmpDOMElement = this.layers[i].ddd
                        ? this.getThreeDContainerByPos(i)
                        : nextLayer.getBaseElement();
                      nextDOMElement = tmpDOMElement || nextDOMElement;
                    }
                    i += 1;
                  }
                  if (nextDOMElement) {
                    if (!layer.ddd || !this.supports3d) {
                      this.layerElement.insertBefore(
                        newDOMElement,
                        nextDOMElement,
                      );
                    }
                  } else {
                    if (!layer.ddd || !this.supports3d) {
                      this.layerElement.appendChild(newDOMElement);
                    }
                  }
                }
              } else {
                this.addTo3dContainer(newDOMElement, pos);
              }
            };

            HybridRenderer.prototype.createShape = function(data) {
              if (!this.supports3d) {
                return new SVGShapeElement(data, this.globalData, this);
              }
              return new HShapeElement(data, this.globalData, this);
            };

            HybridRenderer.prototype.createText = function(data) {
              if (!this.supports3d) {
                return new SVGTextElement(data, this.globalData, this);
              }
              return new HTextElement(data, this.globalData, this);
            };

            HybridRenderer.prototype.createCamera = function(data) {
              this.camera = new HCameraElement(data, this.globalData, this);
              return this.camera;
            };

            HybridRenderer.prototype.createImage = function(data) {
              if (!this.supports3d) {
                return new IImageElement(data, this.globalData, this);
              }
              return new HImageElement(data, this.globalData, this);
            };

            HybridRenderer.prototype.createComp = function(data) {
              if (!this.supports3d) {
                return new SVGCompElement(data, this.globalData, this);
              }
              return new HCompElement(data, this.globalData, this);
            };

            HybridRenderer.prototype.createSolid = function(data) {
              if (!this.supports3d) {
                return new ISolidElement(data, this.globalData, this);
              }
              return new HSolidElement(data, this.globalData, this);
            };

            HybridRenderer.prototype.createNull =
              SVGRenderer.prototype.createNull;

            HybridRenderer.prototype.getThreeDContainerByPos = function(pos) {
              var i = 0,
                len = this.threeDElements.length;
              while (i < len) {
                if (
                  this.threeDElements[i].startPos <= pos &&
                  this.threeDElements[i].endPos >= pos
                ) {
                  return this.threeDElements[i].perspectiveElem;
                }
                i += 1;
              }
            };

            HybridRenderer.prototype.createThreeDContainer = function(
              pos,
              type,
            ) {
              var perspectiveElem = createTag("div");
              styleDiv(perspectiveElem);
              var container = createTag("div");
              styleDiv(container);
              if (type === "3d") {
                perspectiveElem.style.width = this.globalData.compSize.w + "px";
                perspectiveElem.style.height =
                  this.globalData.compSize.h + "px";
                perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin =
                  "50% 50%";
                container.style.transform = container.style.webkitTransform =
                  "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
              }

              perspectiveElem.appendChild(container);
              //this.resizerElem.appendChild(perspectiveElem);
              var threeDContainerData = {
                container: container,
                perspectiveElem: perspectiveElem,
                startPos: pos,
                endPos: pos,
                type: type,
              };
              this.threeDElements.push(threeDContainerData);
              return threeDContainerData;
            };

            HybridRenderer.prototype.build3dContainers = function() {
              var i,
                len = this.layers.length;
              var lastThreeDContainerData;
              var currentContainer = "";
              for (i = 0; i < len; i += 1) {
                if (this.layers[i].ddd && this.layers[i].ty !== 3) {
                  if (currentContainer !== "3d") {
                    currentContainer = "3d";
                    lastThreeDContainerData = this.createThreeDContainer(
                      i,
                      "3d",
                    );
                  }
                  lastThreeDContainerData.endPos = Math.max(
                    lastThreeDContainerData.endPos,
                    i,
                  );
                } else {
                  if (currentContainer !== "2d") {
                    currentContainer = "2d";
                    lastThreeDContainerData = this.createThreeDContainer(
                      i,
                      "2d",
                    );
                  }
                  lastThreeDContainerData.endPos = Math.max(
                    lastThreeDContainerData.endPos,
                    i,
                  );
                }
              }
              len = this.threeDElements.length;
              for (i = len - 1; i >= 0; i--) {
                this.resizerElem.appendChild(
                  this.threeDElements[i].perspectiveElem,
                );
              }
            };

            HybridRenderer.prototype.addTo3dContainer = function(elem, pos) {
              var i = 0,
                len = this.threeDElements.length;
              while (i < len) {
                if (pos <= this.threeDElements[i].endPos) {
                  var j = this.threeDElements[i].startPos;
                  var nextElement;
                  while (j < pos) {
                    if (this.elements[j] && this.elements[j].getBaseElement) {
                      nextElement = this.elements[j].getBaseElement();
                    }
                    j += 1;
                  }
                  if (nextElement) {
                    this.threeDElements[i].container.insertBefore(
                      elem,
                      nextElement,
                    );
                  } else {
                    this.threeDElements[i].container.appendChild(elem);
                  }
                  break;
                }
                i += 1;
              }
            };

            HybridRenderer.prototype.configAnimation = function(animData) {
              var resizerElem = createTag("div");
              var wrapper = this.animationItem.wrapper;
              resizerElem.style.width = animData.w + "px";
              resizerElem.style.height = animData.h + "px";
              this.resizerElem = resizerElem;
              styleDiv(resizerElem);
              resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle =
                "flat";
              if (this.renderConfig.className) {
                resizerElem.setAttribute("class", this.renderConfig.className);
              }
              wrapper.appendChild(resizerElem);

              resizerElem.style.overflow = "hidden";
              var svg = createNS("svg");
              svg.setAttribute("width", "1");
              svg.setAttribute("height", "1");
              styleDiv(svg);
              this.resizerElem.appendChild(svg);
              var defs = createNS("defs");
              svg.appendChild(defs);
              this.data = animData;
              //Mask animation
              this.setupGlobalData(animData, svg);
              this.globalData.defs = defs;
              this.layers = animData.layers;
              this.layerElement = this.resizerElem;
              this.build3dContainers();
              this.updateContainerSize();
            };

            HybridRenderer.prototype.destroy = function() {
              this.animationItem.wrapper.innerHTML = "";
              this.animationItem.container = null;
              this.globalData.defs = null;
              var i,
                len = this.layers ? this.layers.length : 0;
              for (i = 0; i < len; i++) {
                this.elements[i].destroy();
              }
              this.elements.length = 0;
              this.destroyed = true;
              this.animationItem = null;
            };

            HybridRenderer.prototype.updateContainerSize = function() {
              var elementWidth = this.animationItem.wrapper.offsetWidth;
              var elementHeight = this.animationItem.wrapper.offsetHeight;
              var elementRel = elementWidth / elementHeight;
              var animationRel =
                this.globalData.compSize.w / this.globalData.compSize.h;
              var sx, sy, tx, ty;
              if (animationRel > elementRel) {
                sx = elementWidth / this.globalData.compSize.w;
                sy = elementWidth / this.globalData.compSize.w;
                tx = 0;
                ty =
                  (elementHeight -
                    this.globalData.compSize.h *
                      (elementWidth / this.globalData.compSize.w)) /
                  2;
              } else {
                sx = elementHeight / this.globalData.compSize.h;
                sy = elementHeight / this.globalData.compSize.h;
                tx =
                  (elementWidth -
                    this.globalData.compSize.w *
                      (elementHeight / this.globalData.compSize.h)) /
                  2;
                ty = 0;
              }
              this.resizerElem.style.transform = this.resizerElem.style.webkitTransform =
                "matrix3d(" +
                sx +
                ",0,0,0,0," +
                sy +
                ",0,0,0,0,1,0," +
                tx +
                "," +
                ty +
                ",0,1)";
            };

            HybridRenderer.prototype.renderFrame =
              SVGRenderer.prototype.renderFrame;

            HybridRenderer.prototype.hide = function() {
              this.resizerElem.style.display = "none";
            };

            HybridRenderer.prototype.show = function() {
              this.resizerElem.style.display = "block";
            };

            HybridRenderer.prototype.initItems = function() {
              this.buildAllItems();
              if (this.camera) {
                this.camera.setup();
              } else {
                var cWidth = this.globalData.compSize.w;
                var cHeight = this.globalData.compSize.h;
                var i,
                  len = this.threeDElements.length;
                for (i = 0; i < len; i += 1) {
                  this.threeDElements[
                    i
                  ].perspectiveElem.style.perspective = this.threeDElements[
                    i
                  ].perspectiveElem.style.webkitPerspective =
                    Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) +
                    "px";
                }
              }
            };

            HybridRenderer.prototype.searchExtraCompositions = function(
              assets,
            ) {
              var i,
                len = assets.length;
              var floatingContainer = createTag("div");
              for (i = 0; i < len; i += 1) {
                if (assets[i].xt) {
                  var comp = this.createComp(
                    assets[i],
                    floatingContainer,
                    this.globalData.comp,
                    null,
                  );
                  comp.initExpressions();
                  this.globalData.projectInterface.registerComposition(comp);
                }
              }
            };

            function MaskElement(data, element, globalData) {
              this.data = data;
              this.element = element;
              this.globalData = globalData;
              this.storedData = [];
              this.masksProperties = this.data.masksProperties || [];
              this.maskElement = null;
              var defs = this.globalData.defs;
              var i,
                len = this.masksProperties ? this.masksProperties.length : 0;
              this.viewData = createSizedArray(len);
              this.solidPath = "";

              var path,
                properties = this.masksProperties;
              var count = 0;
              var currentMasks = [];
              var j, jLen;
              var layerId = createElementID();
              var rect, expansor, feMorph, x;
              var maskType = "clipPath",
                maskRef = "clip-path";
              for (i = 0; i < len; i++) {
                if (
                  (properties[i].mode !== "a" && properties[i].mode !== "n") ||
                  properties[i].inv ||
                  properties[i].o.k !== 100 ||
                  properties[i].o.x
                ) {
                  maskType = "mask";
                  maskRef = "mask";
                }

                if (
                  (properties[i].mode == "s" || properties[i].mode == "i") &&
                  count === 0
                ) {
                  rect = createNS("rect");
                  rect.setAttribute("fill", "#ffffff");
                  rect.setAttribute("width", this.element.comp.data.w || 0);
                  rect.setAttribute("height", this.element.comp.data.h || 0);
                  currentMasks.push(rect);
                } else {
                  rect = null;
                }

                path = createNS("path");
                if (properties[i].mode == "n") {
                  // TODO move this to a factory or to a constructor
                  this.viewData[i] = {
                    op: PropertyFactory.getProp(
                      this.element,
                      properties[i].o,
                      0,
                      0.01,
                      this.element,
                    ),
                    prop: ShapePropertyFactory.getShapeProp(
                      this.element,
                      properties[i],
                      3,
                    ),
                    elem: path,
                    lastPath: "",
                  };
                  defs.appendChild(path);
                  continue;
                }
                count += 1;

                path.setAttribute(
                  "fill",
                  properties[i].mode === "s" ? "#000000" : "#ffffff",
                );
                path.setAttribute("clip-rule", "nonzero");
                var filterID;

                if (properties[i].x.k !== 0) {
                  maskType = "mask";
                  maskRef = "mask";
                  x = PropertyFactory.getProp(
                    this.element,
                    properties[i].x,
                    0,
                    null,
                    this.element,
                  );
                  filterID = createElementID();
                  expansor = createNS("filter");
                  expansor.setAttribute("id", filterID);
                  feMorph = createNS("feMorphology");
                  feMorph.setAttribute("operator", "erode");
                  feMorph.setAttribute("in", "SourceGraphic");
                  feMorph.setAttribute("radius", "0");
                  expansor.appendChild(feMorph);
                  defs.appendChild(expansor);
                  path.setAttribute(
                    "stroke",
                    properties[i].mode === "s" ? "#000000" : "#ffffff",
                  );
                } else {
                  feMorph = null;
                  x = null;
                }

                // TODO move this to a factory or to a constructor
                this.storedData[i] = {
                  elem: path,
                  x: x,
                  expan: feMorph,
                  lastPath: "",
                  lastOperator: "",
                  filterId: filterID,
                  lastRadius: 0,
                };
                if (properties[i].mode == "i") {
                  jLen = currentMasks.length;
                  var g = createNS("g");
                  for (j = 0; j < jLen; j += 1) {
                    g.appendChild(currentMasks[j]);
                  }
                  var mask = createNS("mask");
                  mask.setAttribute("mask-type", "alpha");
                  mask.setAttribute("id", layerId + "_" + count);
                  mask.appendChild(path);
                  defs.appendChild(mask);
                  g.setAttribute(
                    "mask",
                    "url(" + locationHref + "#" + layerId + "_" + count + ")",
                  );

                  currentMasks.length = 0;
                  currentMasks.push(g);
                } else {
                  currentMasks.push(path);
                }
                if (properties[i].inv && !this.solidPath) {
                  this.solidPath = this.createLayerSolidPath();
                }
                // TODO move this to a factory or to a constructor
                this.viewData[i] = {
                  elem: path,
                  lastPath: "",
                  op: PropertyFactory.getProp(
                    this.element,
                    properties[i].o,
                    0,
                    0.01,
                    this.element,
                  ),
                  prop: ShapePropertyFactory.getShapeProp(
                    this.element,
                    properties[i],
                    3,
                  ),
                  invRect: rect,
                };
                if (!this.viewData[i].prop.k) {
                  this.drawPath(
                    properties[i],
                    this.viewData[i].prop.v,
                    this.viewData[i],
                  );
                }
              }

              this.maskElement = createNS(maskType);

              len = currentMasks.length;
              for (i = 0; i < len; i += 1) {
                this.maskElement.appendChild(currentMasks[i]);
              }

              if (count > 0) {
                this.maskElement.setAttribute("id", layerId);
                this.element.maskedElement.setAttribute(
                  maskRef,
                  "url(" + locationHref + "#" + layerId + ")",
                );
                defs.appendChild(this.maskElement);
              }
              if (this.viewData.length) {
                this.element.addRenderableComponent(this);
              }
            }

            MaskElement.prototype.getMaskProperty = function(pos) {
              return this.viewData[pos].prop;
            };

            MaskElement.prototype.renderFrame = function(isFirstFrame) {
              var finalMat = this.element.finalTransform.mat;
              var i,
                len = this.masksProperties.length;
              for (i = 0; i < len; i++) {
                if (this.viewData[i].prop._mdf || isFirstFrame) {
                  this.drawPath(
                    this.masksProperties[i],
                    this.viewData[i].prop.v,
                    this.viewData[i],
                  );
                }
                if (this.viewData[i].op._mdf || isFirstFrame) {
                  this.viewData[i].elem.setAttribute(
                    "fill-opacity",
                    this.viewData[i].op.v,
                  );
                }
                if (this.masksProperties[i].mode !== "n") {
                  if (
                    this.viewData[i].invRect &&
                    (this.element.finalTransform.mProp._mdf || isFirstFrame)
                  ) {
                    this.viewData[i].invRect.setAttribute(
                      "x",
                      -finalMat.props[12],
                    );
                    this.viewData[i].invRect.setAttribute(
                      "y",
                      -finalMat.props[13],
                    );
                  }
                  if (
                    this.storedData[i].x &&
                    (this.storedData[i].x._mdf || isFirstFrame)
                  ) {
                    var feMorph = this.storedData[i].expan;
                    if (this.storedData[i].x.v < 0) {
                      if (this.storedData[i].lastOperator !== "erode") {
                        this.storedData[i].lastOperator = "erode";
                        this.storedData[i].elem.setAttribute(
                          "filter",
                          "url(" +
                            locationHref +
                            "#" +
                            this.storedData[i].filterId +
                            ")",
                        );
                      }
                      feMorph.setAttribute("radius", -this.storedData[i].x.v);
                    } else {
                      if (this.storedData[i].lastOperator !== "dilate") {
                        this.storedData[i].lastOperator = "dilate";
                        this.storedData[i].elem.setAttribute("filter", null);
                      }
                      this.storedData[i].elem.setAttribute(
                        "stroke-width",
                        this.storedData[i].x.v * 2,
                      );
                    }
                  }
                }
              }
            };

            MaskElement.prototype.getMaskelement = function() {
              return this.maskElement;
            };

            MaskElement.prototype.createLayerSolidPath = function() {
              var path = "M0,0 ";
              path += " h" + this.globalData.compSize.w;
              path += " v" + this.globalData.compSize.h;
              path += " h-" + this.globalData.compSize.w;
              path += " v-" + this.globalData.compSize.h + " ";
              return path;
            };

            MaskElement.prototype.drawPath = function(
              pathData,
              pathNodes,
              viewData,
            ) {
              var pathString =
                " M" + pathNodes.v[0][0] + "," + pathNodes.v[0][1];
              var i, len;
              len = pathNodes._length;
              for (i = 1; i < len; i += 1) {
                //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[i][0]+','+pathNodes.i[i][1] + " "+pathNodes.v[i][0]+','+pathNodes.v[i][1];
                pathString +=
                  " C" +
                  pathNodes.o[i - 1][0] +
                  "," +
                  pathNodes.o[i - 1][1] +
                  " " +
                  pathNodes.i[i][0] +
                  "," +
                  pathNodes.i[i][1] +
                  " " +
                  pathNodes.v[i][0] +
                  "," +
                  pathNodes.v[i][1];
              }
              //pathString += " C"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + " "+pathNodes.i[0][0]+','+pathNodes.i[0][1] + " "+pathNodes.v[0][0]+','+pathNodes.v[0][1];
              if (pathNodes.c && len > 1) {
                pathString +=
                  " C" +
                  pathNodes.o[i - 1][0] +
                  "," +
                  pathNodes.o[i - 1][1] +
                  " " +
                  pathNodes.i[0][0] +
                  "," +
                  pathNodes.i[0][1] +
                  " " +
                  pathNodes.v[0][0] +
                  "," +
                  pathNodes.v[0][1];
              }
              //pathNodes.__renderedString = pathString;

              if (viewData.lastPath !== pathString) {
                var pathShapeValue = "";
                if (viewData.elem) {
                  if (pathNodes.c) {
                    pathShapeValue = pathData.inv
                      ? this.solidPath + pathString
                      : pathString;
                  }
                  viewData.elem.setAttribute("d", pathShapeValue);
                }
                viewData.lastPath = pathString;
              }
            };

            MaskElement.prototype.destroy = function() {
              this.element = null;
              this.globalData = null;
              this.maskElement = null;
              this.data = null;
              this.masksProperties = null;
            };

            /**
             * @file
             * Handles AE's layer parenting property.
             *
             */

            function HierarchyElement() {}

            HierarchyElement.prototype = {
              /**
               * @function
               * Initializes hierarchy properties
               *
               */
              initHierarchy: function() {
                //element's parent list
                this.hierarchy = [];
                //if element is parent of another layer _isParent will be true
                this._isParent = false;
                this.checkParenting();
              },
              /**
               * @function
               * Sets layer's hierarchy.
               * @param {array} hierarch
               * layer's parent list
               *
               */

              setHierarchy: function(hierarchy) {
                this.hierarchy = hierarchy;
              },
              /**
               * @function
               * Sets layer as parent.
               *
               */

              setAsParent: function() {
                this._isParent = true;
              },
              /**
               * @function
               * Searches layer's parenting chain
               *
               */

              checkParenting: function() {
                if (this.data.parent !== undefined) {
                  this.comp.buildElementParenting(this, this.data.parent, []);
                }
              },
            };
            /**
             * @file
             * Handles element's layer frame update.
             * Checks layer in point and out point
             *
             */

            function FrameElement() {}

            FrameElement.prototype = {
              /**
               * @function
               * Initializes frame related properties.
               *
               */
              initFrame: function() {
                //set to true when inpoint is rendered
                this._isFirstFrame = false;
                //list of animated properties
                this.dynamicProperties = [];
                // If layer has been modified in current tick this will be true
                this._mdf = false;
              },
              /**
               * @function
               * Calculates all dynamic values
               *
               * @param {number} num
               * current frame number in Layer's time
               * @param {boolean} isVisible
               * if layers is currently in range
               *
               */
              prepareProperties: function(num, isVisible) {
                var i,
                  len = this.dynamicProperties.length;
                for (i = 0; i < len; i += 1) {
                  if (
                    isVisible ||
                    (this._isParent &&
                      this.dynamicProperties[i].propType === "transform")
                  ) {
                    this.dynamicProperties[i].getValue();
                    if (this.dynamicProperties[i]._mdf) {
                      this.globalData._mdf = true;
                      this._mdf = true;
                    }
                  }
                }
              },
              addDynamicProperty: function(prop) {
                if (this.dynamicProperties.indexOf(prop) === -1) {
                  this.dynamicProperties.push(prop);
                }
              },
            };
            function TransformElement() {}

            TransformElement.prototype = {
              initTransform: function() {
                this.finalTransform = {
                  mProp: this.data.ks
                    ? TransformPropertyFactory.getTransformProperty(
                        this,
                        this.data.ks,
                        this,
                      )
                    : { o: 0 },
                  _matMdf: false,
                  _opMdf: false,
                  mat: new Matrix(),
                };
                if (this.data.ao) {
                  this.finalTransform.mProp.autoOriented = true;
                }

                //TODO: check TYPE 11: Guided elements
                if (this.data.ty !== 11) {
                  //this.createElements();
                }
              },
              renderTransform: function() {
                this.finalTransform._opMdf =
                  this.finalTransform.mProp.o._mdf || this._isFirstFrame;
                this.finalTransform._matMdf =
                  this.finalTransform.mProp._mdf || this._isFirstFrame;

                if (this.hierarchy) {
                  var mat;
                  var finalMat = this.finalTransform.mat;
                  var i = 0,
                    len = this.hierarchy.length;
                  //Checking if any of the transformation matrices in the hierarchy chain has changed.
                  if (!this.finalTransform._matMdf) {
                    while (i < len) {
                      if (this.hierarchy[i].finalTransform.mProp._mdf) {
                        this.finalTransform._matMdf = true;
                        break;
                      }
                      i += 1;
                    }
                  }

                  if (this.finalTransform._matMdf) {
                    mat = this.finalTransform.mProp.v.props;
                    finalMat.cloneFromProps(mat);
                    for (i = 0; i < len; i += 1) {
                      mat = this.hierarchy[i].finalTransform.mProp.v.props;
                      finalMat.transform(
                        mat[0],
                        mat[1],
                        mat[2],
                        mat[3],
                        mat[4],
                        mat[5],
                        mat[6],
                        mat[7],
                        mat[8],
                        mat[9],
                        mat[10],
                        mat[11],
                        mat[12],
                        mat[13],
                        mat[14],
                        mat[15],
                      );
                    }
                  }
                }
              },
              globalToLocal: function(pt) {
                var transforms = [];
                transforms.push(this.finalTransform);
                var flag = true;
                var comp = this.comp;
                while (flag) {
                  if (comp.finalTransform) {
                    if (comp.data.hasMask) {
                      transforms.splice(0, 0, comp.finalTransform);
                    }
                    comp = comp.comp;
                  } else {
                    flag = false;
                  }
                }
                var i,
                  len = transforms.length,
                  ptNew;
                for (i = 0; i < len; i += 1) {
                  ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);
                  //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);
                  pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];
                }
                return pt;
              },
              mHelper: new Matrix(),
            };
            function RenderableElement() {}

            RenderableElement.prototype = {
              initRenderable: function() {
                //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange
                this.isInRange = false;
                //layer's display state
                this.hidden = false;
                // If layer's transparency equals 0, it can be hidden
                this.isTransparent = false;
                //list of animated components
                this.renderableComponents = [];
              },
              addRenderableComponent: function(component) {
                if (this.renderableComponents.indexOf(component) === -1) {
                  this.renderableComponents.push(component);
                }
              },
              removeRenderableComponent: function(component) {
                if (this.renderableComponents.indexOf(component) !== -1) {
                  this.renderableComponents.splice(
                    this.renderableComponents.indexOf(component),
                    1,
                  );
                }
              },
              prepareRenderableFrame: function(num) {
                this.checkLayerLimits(num);
              },
              checkTransparency: function() {
                if (this.finalTransform.mProp.o.v <= 0) {
                  if (
                    !this.isTransparent &&
                    this.globalData.renderConfig.hideOnTransparent
                  ) {
                    this.isTransparent = true;
                    this.hide();
                  }
                } else if (this.isTransparent) {
                  this.isTransparent = false;
                  this.show();
                }
              },
              /**
               * @function
               * Initializes frame related properties.
               *
               * @param {number} num
               * current frame number in Layer's time
               *
               */
              checkLayerLimits: function(num) {
                if (
                  this.data.ip - this.data.st <= num &&
                  this.data.op - this.data.st > num
                ) {
                  if (this.isInRange !== true) {
                    this.globalData._mdf = true;
                    this._mdf = true;
                    this.isInRange = true;
                    this.show();
                  }
                } else {
                  if (this.isInRange !== false) {
                    this.globalData._mdf = true;
                    this.isInRange = false;
                    this.hide();
                  }
                }
              },
              renderRenderable: function() {
                var i,
                  len = this.renderableComponents.length;
                for (i = 0; i < len; i += 1) {
                  this.renderableComponents[i].renderFrame(this._isFirstFrame);
                }
                /*this.maskManager.renderFrame(this.finalTransform.mat);
        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/
              },
              sourceRectAtTime: function() {
                return {
                  top: 0,
                  left: 0,
                  width: 100,
                  height: 100,
                };
              },
              getLayerSize: function() {
                if (this.data.ty === 5) {
                  return {
                    w: this.data.textData.width,
                    h: this.data.textData.height,
                  };
                } else {
                  return { w: this.data.width, h: this.data.height };
                }
              },
            };
            function RenderableDOMElement() {}

            (function() {
              var _prototype = {
                initElement: function(data, globalData, comp) {
                  this.initFrame();
                  this.initBaseData(data, globalData, comp);
                  this.initTransform(data, globalData, comp);
                  this.initHierarchy();
                  this.initRenderable();
                  this.initRendererElement();
                  this.createContainerElements();
                  this.createRenderableComponents();
                  this.createContent();
                  this.hide();
                },
                hide: function() {
                  if (!this.hidden && (!this.isInRange || this.isTransparent)) {
                    var elem = this.baseElement || this.layerElement;
                    elem.style.display = "none";
                    this.hidden = true;
                  }
                },
                show: function() {
                  if (this.isInRange && !this.isTransparent) {
                    if (!this.data.hd) {
                      var elem = this.baseElement || this.layerElement;
                      elem.style.display = "block";
                    }
                    this.hidden = false;
                    this._isFirstFrame = true;
                  }
                },
                renderFrame: function() {
                  //If it is exported as hidden (data.hd === true) no need to render
                  //If it is not visible no need to render
                  if (this.data.hd || this.hidden) {
                    return;
                  }
                  this.renderTransform();
                  this.renderRenderable();
                  this.renderElement();
                  this.renderInnerContent();
                  if (this._isFirstFrame) {
                    this._isFirstFrame = false;
                  }
                },
                renderInnerContent: function() {},
                prepareFrame: function(num) {
                  this._mdf = false;
                  this.prepareRenderableFrame(num);
                  this.prepareProperties(num, this.isInRange);
                  this.checkTransparency();
                },
                destroy: function() {
                  this.innerElem = null;
                  this.destroyBaseElement();
                },
              };
              extendPrototype(
                [RenderableElement, createProxyFunction(_prototype)],
                RenderableDOMElement,
              );
            })();
            function ProcessedElement(element, position) {
              this.elem = element;
              this.pos = position;
            }
            function SVGStyleData(data, level) {
              this.data = data;
              this.type = data.ty;
              this.d = "";
              this.lvl = level;
              this._mdf = false;
              this.closed = data.hd === true;
              this.pElem = createNS("path");
              this.msElem = null;
            }

            SVGStyleData.prototype.reset = function() {
              this.d = "";
              this._mdf = false;
            };
            function SVGShapeData(transformers, level, shape) {
              this.caches = [];
              this.styles = [];
              this.transformers = transformers;
              this.lStr = "";
              this.sh = shape;
              this.lvl = level;
              //TODO find if there are some cases where _isAnimated can be false.
              // For now, since shapes add up with other shapes. They have to be calculated every time.
              // One way of finding out is checking if all styles associated to this shape depend only of this shape
              this._isAnimated = !!shape.k;
              // TODO: commenting this for now since all shapes are animated
              var i = 0,
                len = transformers.length;
              while (i < len) {
                if (transformers[i].mProps.dynamicProperties.length) {
                  this._isAnimated = true;
                  break;
                }
                i += 1;
              }
            }

            SVGShapeData.prototype.setAsAnimated = function() {
              this._isAnimated = true;
            };
            function SVGTransformData(mProps, op, container) {
              this.transform = {
                mProps: mProps,
                op: op,
                container: container,
              };
              this.elements = [];
              this._isAnimated =
                this.transform.mProps.dynamicProperties.length ||
                this.transform.op.effectsSequence.length;
            }
            function SVGStrokeStyleData(elem, data, styleOb) {
              this.initDynamicPropertyContainer(elem);
              this.getValue = this.iterateDynamicProperties;
              this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
              this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
              this.d = new DashProperty(elem, data.d || {}, "svg", this);
              this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
              this.style = styleOb;
              this._isAnimated = !!this._isAnimated;
            }

            extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
            function SVGFillStyleData(elem, data, styleOb) {
              this.initDynamicPropertyContainer(elem);
              this.getValue = this.iterateDynamicProperties;
              this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
              this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);
              this.style = styleOb;
            }

            extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
            function SVGGradientFillStyleData(elem, data, styleOb) {
              this.initDynamicPropertyContainer(elem);
              this.getValue = this.iterateDynamicProperties;
              this.initGradientData(elem, data, styleOb);
            }

            SVGGradientFillStyleData.prototype.initGradientData = function(
              elem,
              data,
              styleOb,
            ) {
              this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);
              this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);
              this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);
              this.h = PropertyFactory.getProp(
                elem,
                data.h || { k: 0 },
                0,
                0.01,
                this,
              );
              this.a = PropertyFactory.getProp(
                elem,
                data.a || { k: 0 },
                0,
                degToRads,
                this,
              );
              this.g = new GradientProperty(elem, data.g, this);
              this.style = styleOb;
              this.stops = [];
              this.setGradientData(styleOb.pElem, data);
              this.setGradientOpacity(data, styleOb);
              this._isAnimated = !!this._isAnimated;
            };

            SVGGradientFillStyleData.prototype.setGradientData = function(
              pathElement,
              data,
            ) {
              var gradientId = createElementID();
              var gfill = createNS(
                data.t === 1 ? "linearGradient" : "radialGradient",
              );
              gfill.setAttribute("id", gradientId);
              gfill.setAttribute("spreadMethod", "pad");
              gfill.setAttribute("gradientUnits", "userSpaceOnUse");
              var stops = [];
              var stop, j, jLen;
              jLen = data.g.p * 4;
              for (j = 0; j < jLen; j += 4) {
                stop = createNS("stop");
                gfill.appendChild(stop);
                stops.push(stop);
              }
              pathElement.setAttribute(
                data.ty === "gf" ? "fill" : "stroke",
                "url(" + locationHref + "#" + gradientId + ")",
              );

              this.gf = gfill;
              this.cst = stops;
            };

            SVGGradientFillStyleData.prototype.setGradientOpacity = function(
              data,
              styleOb,
            ) {
              if (this.g._hasOpacity && !this.g._collapsable) {
                var stop, j, jLen;
                var mask = createNS("mask");
                var maskElement = createNS("path");
                mask.appendChild(maskElement);
                var opacityId = createElementID();
                var maskId = createElementID();
                mask.setAttribute("id", maskId);
                var opFill = createNS(
                  data.t === 1 ? "linearGradient" : "radialGradient",
                );
                opFill.setAttribute("id", opacityId);
                opFill.setAttribute("spreadMethod", "pad");
                opFill.setAttribute("gradientUnits", "userSpaceOnUse");
                jLen = data.g.k.k[0].s
                  ? data.g.k.k[0].s.length
                  : data.g.k.k.length;
                var stops = this.stops;
                for (j = data.g.p * 4; j < jLen; j += 2) {
                  stop = createNS("stop");
                  stop.setAttribute("stop-color", "rgb(255,255,255)");
                  opFill.appendChild(stop);
                  stops.push(stop);
                }
                maskElement.setAttribute(
                  data.ty === "gf" ? "fill" : "stroke",
                  "url(" + locationHref + "#" + opacityId + ")",
                );
                this.of = opFill;
                this.ms = mask;
                this.ost = stops;
                this.maskId = maskId;
                styleOb.msElem = maskElement;
              }
            };

            extendPrototype(
              [DynamicPropertyContainer],
              SVGGradientFillStyleData,
            );
            function SVGGradientStrokeStyleData(elem, data, styleOb) {
              this.initDynamicPropertyContainer(elem);
              this.getValue = this.iterateDynamicProperties;
              this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);
              this.d = new DashProperty(elem, data.d || {}, "svg", this);
              this.initGradientData(elem, data, styleOb);
              this._isAnimated = !!this._isAnimated;
            }

            extendPrototype(
              [SVGGradientFillStyleData, DynamicPropertyContainer],
              SVGGradientStrokeStyleData,
            );
            function ShapeGroupData() {
              this.it = [];
              this.prevViewData = [];
              this.gr = createNS("g");
            }
            var SVGElementsRenderer = (function() {
              var _identityMatrix = new Matrix();
              var _matrixHelper = new Matrix();

              var ob = {
                createRenderFunction: createRenderFunction,
              };

              function createRenderFunction(data) {
                var ty = data.ty;
                switch (data.ty) {
                  case "fl":
                    return renderFill;
                  case "gf":
                    return renderGradient;
                  case "gs":
                    return renderGradientStroke;
                  case "st":
                    return renderStroke;
                  case "sh":
                  case "el":
                  case "rc":
                  case "sr":
                    return renderPath;
                  case "tr":
                    return renderContentTransform;
                }
              }

              function renderContentTransform(
                styleData,
                itemData,
                isFirstFrame,
              ) {
                if (isFirstFrame || itemData.transform.op._mdf) {
                  itemData.transform.container.setAttribute(
                    "opacity",
                    itemData.transform.op.v,
                  );
                }
                if (isFirstFrame || itemData.transform.mProps._mdf) {
                  itemData.transform.container.setAttribute(
                    "transform",
                    itemData.transform.mProps.v.to2dCSS(),
                  );
                }
              }

              function renderPath(styleData, itemData, isFirstFrame) {
                var j,
                  jLen,
                  pathStringTransformed,
                  redraw,
                  pathNodes,
                  l,
                  lLen = itemData.styles.length;
                var lvl = itemData.lvl;
                var paths, mat, props, iterations, k;
                for (l = 0; l < lLen; l += 1) {
                  redraw = itemData.sh._mdf || isFirstFrame;
                  if (itemData.styles[l].lvl < lvl) {
                    mat = _matrixHelper.reset();
                    iterations = lvl - itemData.styles[l].lvl;
                    k = itemData.transformers.length - 1;
                    while (!redraw && iterations > 0) {
                      redraw = itemData.transformers[k].mProps._mdf || redraw;
                      iterations--;
                      k--;
                    }
                    if (redraw) {
                      iterations = lvl - itemData.styles[l].lvl;
                      k = itemData.transformers.length - 1;
                      while (iterations > 0) {
                        props = itemData.transformers[k].mProps.v.props;
                        mat.transform(
                          props[0],
                          props[1],
                          props[2],
                          props[3],
                          props[4],
                          props[5],
                          props[6],
                          props[7],
                          props[8],
                          props[9],
                          props[10],
                          props[11],
                          props[12],
                          props[13],
                          props[14],
                          props[15],
                        );
                        iterations--;
                        k--;
                      }
                    }
                  } else {
                    mat = _identityMatrix;
                  }
                  paths = itemData.sh.paths;
                  jLen = paths._length;
                  if (redraw) {
                    pathStringTransformed = "";
                    for (j = 0; j < jLen; j += 1) {
                      pathNodes = paths.shapes[j];
                      if (pathNodes && pathNodes._length) {
                        pathStringTransformed += buildShapeString(
                          pathNodes,
                          pathNodes._length,
                          pathNodes.c,
                          mat,
                        );
                      }
                    }
                    itemData.caches[l] = pathStringTransformed;
                  } else {
                    pathStringTransformed = itemData.caches[l];
                  }
                  itemData.styles[l].d +=
                    styleData.hd === true ? "" : pathStringTransformed;
                  itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;
                }
              }

              function renderFill(styleData, itemData, isFirstFrame) {
                var styleElem = itemData.style;

                if (itemData.c._mdf || isFirstFrame) {
                  styleElem.pElem.setAttribute(
                    "fill",
                    "rgb(" +
                      bm_floor(itemData.c.v[0]) +
                      "," +
                      bm_floor(itemData.c.v[1]) +
                      "," +
                      bm_floor(itemData.c.v[2]) +
                      ")",
                  );
                }
                if (itemData.o._mdf || isFirstFrame) {
                  styleElem.pElem.setAttribute("fill-opacity", itemData.o.v);
                }
              }

              function renderGradientStroke(styleData, itemData, isFirstFrame) {
                renderGradient(styleData, itemData, isFirstFrame);
                renderStroke(styleData, itemData, isFirstFrame);
              }

              function renderGradient(styleData, itemData, isFirstFrame) {
                var gfill = itemData.gf;
                var hasOpacity = itemData.g._hasOpacity;
                var pt1 = itemData.s.v,
                  pt2 = itemData.e.v;

                if (itemData.o._mdf || isFirstFrame) {
                  var attr =
                    styleData.ty === "gf" ? "fill-opacity" : "stroke-opacity";
                  itemData.style.pElem.setAttribute(attr, itemData.o.v);
                }
                if (itemData.s._mdf || isFirstFrame) {
                  var attr1 = styleData.t === 1 ? "x1" : "cx";
                  var attr2 = attr1 === "x1" ? "y1" : "cy";
                  gfill.setAttribute(attr1, pt1[0]);
                  gfill.setAttribute(attr2, pt1[1]);
                  if (hasOpacity && !itemData.g._collapsable) {
                    itemData.of.setAttribute(attr1, pt1[0]);
                    itemData.of.setAttribute(attr2, pt1[1]);
                  }
                }
                var stops, i, len, stop;
                if (itemData.g._cmdf || isFirstFrame) {
                  stops = itemData.cst;
                  var cValues = itemData.g.c;
                  len = stops.length;
                  for (i = 0; i < len; i += 1) {
                    stop = stops[i];
                    stop.setAttribute("offset", cValues[i * 4] + "%");
                    stop.setAttribute(
                      "stop-color",
                      "rgb(" +
                        cValues[i * 4 + 1] +
                        "," +
                        cValues[i * 4 + 2] +
                        "," +
                        cValues[i * 4 + 3] +
                        ")",
                    );
                  }
                }
                if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {
                  var oValues = itemData.g.o;
                  if (itemData.g._collapsable) {
                    stops = itemData.cst;
                  } else {
                    stops = itemData.ost;
                  }
                  len = stops.length;
                  for (i = 0; i < len; i += 1) {
                    stop = stops[i];
                    if (!itemData.g._collapsable) {
                      stop.setAttribute("offset", oValues[i * 2] + "%");
                    }
                    stop.setAttribute("stop-opacity", oValues[i * 2 + 1]);
                  }
                }
                if (styleData.t === 1) {
                  if (itemData.e._mdf || isFirstFrame) {
                    gfill.setAttribute("x2", pt2[0]);
                    gfill.setAttribute("y2", pt2[1]);
                    if (hasOpacity && !itemData.g._collapsable) {
                      itemData.of.setAttribute("x2", pt2[0]);
                      itemData.of.setAttribute("y2", pt2[1]);
                    }
                  }
                } else {
                  var rad;
                  if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {
                    rad = Math.sqrt(
                      Math.pow(pt1[0] - pt2[0], 2) +
                        Math.pow(pt1[1] - pt2[1], 2),
                    );
                    gfill.setAttribute("r", rad);
                    if (hasOpacity && !itemData.g._collapsable) {
                      itemData.of.setAttribute("r", rad);
                    }
                  }
                  if (
                    itemData.e._mdf ||
                    itemData.h._mdf ||
                    itemData.a._mdf ||
                    isFirstFrame
                  ) {
                    if (!rad) {
                      rad = Math.sqrt(
                        Math.pow(pt1[0] - pt2[0], 2) +
                          Math.pow(pt1[1] - pt2[1], 2),
                      );
                    }
                    var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);

                    var percent =
                      itemData.h.v >= 1
                        ? 0.99
                        : itemData.h.v <= -1
                        ? -0.99
                        : itemData.h.v;
                    var dist = rad * percent;
                    var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
                    var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
                    gfill.setAttribute("fx", x);
                    gfill.setAttribute("fy", y);
                    if (hasOpacity && !itemData.g._collapsable) {
                      itemData.of.setAttribute("fx", x);
                      itemData.of.setAttribute("fy", y);
                    }
                  }
                  //gfill.setAttribute('fy','200');
                }
              }

              function renderStroke(styleData, itemData, isFirstFrame) {
                var styleElem = itemData.style;
                var d = itemData.d;
                if (d && (d._mdf || isFirstFrame) && d.dashStr) {
                  styleElem.pElem.setAttribute("stroke-dasharray", d.dashStr);
                  styleElem.pElem.setAttribute(
                    "stroke-dashoffset",
                    d.dashoffset[0],
                  );
                }
                if (itemData.c && (itemData.c._mdf || isFirstFrame)) {
                  styleElem.pElem.setAttribute(
                    "stroke",
                    "rgb(" +
                      bm_floor(itemData.c.v[0]) +
                      "," +
                      bm_floor(itemData.c.v[1]) +
                      "," +
                      bm_floor(itemData.c.v[2]) +
                      ")",
                  );
                }
                if (itemData.o._mdf || isFirstFrame) {
                  styleElem.pElem.setAttribute("stroke-opacity", itemData.o.v);
                }
                if (itemData.w._mdf || isFirstFrame) {
                  styleElem.pElem.setAttribute("stroke-width", itemData.w.v);
                  if (styleElem.msElem) {
                    styleElem.msElem.setAttribute("stroke-width", itemData.w.v);
                  }
                }
              }

              return ob;
            })();
            function ShapeTransformManager() {
              this.sequences = {};
              this.sequenceList = [];
              this.transform_key_count = 0;
            }

            ShapeTransformManager.prototype = {
              addTransformSequence: function(transforms) {
                var i,
                  len = transforms.length;
                var key = "_";
                for (i = 0; i < len; i += 1) {
                  key += transforms[i].transform.key + "_";
                }
                var sequence = this.sequences[key];
                if (!sequence) {
                  sequence = {
                    transforms: [].concat(transforms),
                    finalTransform: new Matrix(),
                    _mdf: false,
                  };
                  this.sequences[key] = sequence;
                  this.sequenceList.push(sequence);
                }
                return sequence;
              },
              processSequence: function(sequence, isFirstFrame) {
                var i = 0,
                  len = sequence.transforms.length,
                  _mdf = isFirstFrame;
                while (i < len && !isFirstFrame) {
                  if (sequence.transforms[i].transform.mProps._mdf) {
                    _mdf = true;
                    break;
                  }
                  i += 1;
                }
                if (_mdf) {
                  var props;
                  sequence.finalTransform.reset();
                  for (i = len - 1; i >= 0; i -= 1) {
                    props = sequence.transforms[i].transform.mProps.v.props;
                    sequence.finalTransform.transform(
                      props[0],
                      props[1],
                      props[2],
                      props[3],
                      props[4],
                      props[5],
                      props[6],
                      props[7],
                      props[8],
                      props[9],
                      props[10],
                      props[11],
                      props[12],
                      props[13],
                      props[14],
                      props[15],
                    );
                  }
                }
                sequence._mdf = _mdf;
              },
              processSequences: function(isFirstFrame) {
                var i,
                  len = this.sequenceList.length;
                for (i = 0; i < len; i += 1) {
                  this.processSequence(this.sequenceList[i], isFirstFrame);
                }
              },
              getNewKey: function() {
                return "_" + this.transform_key_count++;
              },
            };
            function CVShapeData(element, data, styles, transformsManager) {
              this.styledShapes = [];
              this.tr = [0, 0, 0, 0, 0, 0];
              var ty = 4;
              if (data.ty == "rc") {
                ty = 5;
              } else if (data.ty == "el") {
                ty = 6;
              } else if (data.ty == "sr") {
                ty = 7;
              }
              this.sh = ShapePropertyFactory.getShapeProp(
                element,
                data,
                ty,
                element,
              );
              var i,
                len = styles.length,
                styledShape;
              for (i = 0; i < len; i += 1) {
                if (!styles[i].closed) {
                  styledShape = {
                    transforms: transformsManager.addTransformSequence(
                      styles[i].transforms,
                    ),
                    trNodes: [],
                  };
                  this.styledShapes.push(styledShape);
                  styles[i].elements.push(styledShape);
                }
              }
            }

            CVShapeData.prototype.setAsAnimated =
              SVGShapeData.prototype.setAsAnimated;
            function BaseElement() {}

            BaseElement.prototype = {
              checkMasks: function() {
                if (!this.data.hasMask) {
                  return false;
                }
                var i = 0,
                  len = this.data.masksProperties.length;
                while (i < len) {
                  if (
                    this.data.masksProperties[i].mode !== "n" &&
                    this.data.masksProperties[i].cl !== false
                  ) {
                    return true;
                  }
                  i += 1;
                }
                return false;
              },
              initExpressions: function() {
                this.layerInterface = LayerExpressionInterface(this);
                if (this.data.hasMask && this.maskManager) {
                  this.layerInterface.registerMaskInterface(this.maskManager);
                }
                var effectsInterface = EffectsExpressionInterface.createEffectsInterface(
                  this,
                  this.layerInterface,
                );
                this.layerInterface.registerEffectsInterface(effectsInterface);

                if (this.data.ty === 0 || this.data.xt) {
                  this.compInterface = CompExpressionInterface(this);
                } else if (this.data.ty === 4) {
                  this.layerInterface.shapeInterface = ShapeExpressionInterface(
                    this.shapesData,
                    this.itemsData,
                    this.layerInterface,
                  );
                  this.layerInterface.content = this.layerInterface.shapeInterface;
                } else if (this.data.ty === 5) {
                  this.layerInterface.textInterface = TextExpressionInterface(
                    this,
                  );
                  this.layerInterface.text = this.layerInterface.textInterface;
                }
              },
              setBlendMode: function() {
                var blendModeValue = getBlendMode(this.data.bm);
                var elem = this.baseElement || this.layerElement;

                elem.style["mix-blend-mode"] = blendModeValue;
              },
              initBaseData: function(data, globalData, comp) {
                this.globalData = globalData;
                this.comp = comp;
                this.data = data;
                this.layerId = createElementID();

                //Stretch factor for old animations missing this property.
                if (!this.data.sr) {
                  this.data.sr = 1;
                }
                // effects manager
                this.effectsManager = new EffectsManager(
                  this.data,
                  this,
                  this.dynamicProperties,
                );
              },
              getType: function() {
                return this.type;
              },
              sourceRectAtTime: function() {},
            };
            function NullElement(data, globalData, comp) {
              this.initFrame();
              this.initBaseData(data, globalData, comp);
              this.initFrame();
              this.initTransform(data, globalData, comp);
              this.initHierarchy();
            }

            NullElement.prototype.prepareFrame = function(num) {
              this.prepareProperties(num, true);
            };

            NullElement.prototype.renderFrame = function() {};

            NullElement.prototype.getBaseElement = function() {
              return null;
            };

            NullElement.prototype.destroy = function() {};

            NullElement.prototype.sourceRectAtTime = function() {};

            NullElement.prototype.hide = function() {};

            extendPrototype(
              [BaseElement, TransformElement, HierarchyElement, FrameElement],
              NullElement,
            );

            function SVGBaseElement() {}

            SVGBaseElement.prototype = {
              initRendererElement: function() {
                this.layerElement = createNS("g");
              },
              createContainerElements: function() {
                this.matteElement = createNS("g");
                this.transformedElement = this.layerElement;
                this.maskedElement = this.layerElement;
                this._sizeChanged = false;
                var layerElementParent = null;
                //If this layer acts as a mask for the following layer
                var filId, fil, gg;
                if (this.data.td) {
                  if (this.data.td == 3 || this.data.td == 1) {
                    var masker = createNS("mask");
                    masker.setAttribute("id", this.layerId);
                    masker.setAttribute(
                      "mask-type",
                      this.data.td == 3 ? "luminance" : "alpha",
                    );
                    masker.appendChild(this.layerElement);
                    layerElementParent = masker;
                    this.globalData.defs.appendChild(masker);
                    // This is only for IE and Edge when mask if of type alpha
                    if (!featureSupport.maskType && this.data.td == 1) {
                      masker.setAttribute("mask-type", "luminance");
                      filId = createElementID();
                      fil = filtersFactory.createFilter(filId);
                      this.globalData.defs.appendChild(fil);
                      fil.appendChild(
                        filtersFactory.createAlphaToLuminanceFilter(),
                      );
                      gg = createNS("g");
                      gg.appendChild(this.layerElement);
                      layerElementParent = gg;
                      masker.appendChild(gg);
                      gg.setAttribute(
                        "filter",
                        "url(" + locationHref + "#" + filId + ")",
                      );
                    }
                  } else if (this.data.td == 2) {
                    var maskGroup = createNS("mask");
                    maskGroup.setAttribute("id", this.layerId);
                    maskGroup.setAttribute("mask-type", "alpha");
                    var maskGrouper = createNS("g");
                    maskGroup.appendChild(maskGrouper);
                    filId = createElementID();
                    fil = filtersFactory.createFilter(filId);
                    ////

                    // This solution doesn't work on Android when meta tag with viewport attribute is set
                    /*var feColorMatrix = createNS('feColorMatrix');
                feColorMatrix.setAttribute('type', 'matrix');
                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');
                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');
                fil.appendChild(feColorMatrix);*/
                    ////
                    var feCTr = createNS("feComponentTransfer");
                    feCTr.setAttribute("in", "SourceGraphic");
                    fil.appendChild(feCTr);
                    var feFunc = createNS("feFuncA");
                    feFunc.setAttribute("type", "table");
                    feFunc.setAttribute("tableValues", "1.0 0.0");
                    feCTr.appendChild(feFunc);
                    ////
                    this.globalData.defs.appendChild(fil);
                    var alphaRect = createNS("rect");
                    alphaRect.setAttribute("width", this.comp.data.w);
                    alphaRect.setAttribute("height", this.comp.data.h);
                    alphaRect.setAttribute("x", "0");
                    alphaRect.setAttribute("y", "0");
                    alphaRect.setAttribute("fill", "#ffffff");
                    alphaRect.setAttribute("opacity", "0");
                    maskGrouper.setAttribute(
                      "filter",
                      "url(" + locationHref + "#" + filId + ")",
                    );
                    maskGrouper.appendChild(alphaRect);
                    maskGrouper.appendChild(this.layerElement);
                    layerElementParent = maskGrouper;
                    if (!featureSupport.maskType) {
                      maskGroup.setAttribute("mask-type", "luminance");
                      fil.appendChild(
                        filtersFactory.createAlphaToLuminanceFilter(),
                      );
                      gg = createNS("g");
                      maskGrouper.appendChild(alphaRect);
                      gg.appendChild(this.layerElement);
                      layerElementParent = gg;
                      maskGrouper.appendChild(gg);
                    }
                    this.globalData.defs.appendChild(maskGroup);
                  }
                } else if (this.data.tt) {
                  this.matteElement.appendChild(this.layerElement);
                  layerElementParent = this.matteElement;
                  this.baseElement = this.matteElement;
                } else {
                  this.baseElement = this.layerElement;
                }
                if (this.data.ln) {
                  this.layerElement.setAttribute("id", this.data.ln);
                }
                if (this.data.cl) {
                  this.layerElement.setAttribute("class", this.data.cl);
                }
                //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped
                if (this.data.ty === 0 && !this.data.hd) {
                  var cp = createNS("clipPath");
                  var pt = createNS("path");
                  pt.setAttribute(
                    "d",
                    "M0,0 L" +
                      this.data.w +
                      ",0" +
                      " L" +
                      this.data.w +
                      "," +
                      this.data.h +
                      " L0," +
                      this.data.h +
                      "z",
                  );
                  var clipId = createElementID();
                  cp.setAttribute("id", clipId);
                  cp.appendChild(pt);
                  this.globalData.defs.appendChild(cp);

                  if (this.checkMasks()) {
                    var cpGroup = createNS("g");
                    cpGroup.setAttribute(
                      "clip-path",
                      "url(" + locationHref + "#" + clipId + ")",
                    );
                    cpGroup.appendChild(this.layerElement);
                    this.transformedElement = cpGroup;
                    if (layerElementParent) {
                      layerElementParent.appendChild(this.transformedElement);
                    } else {
                      this.baseElement = this.transformedElement;
                    }
                  } else {
                    this.layerElement.setAttribute(
                      "clip-path",
                      "url(" + locationHref + "#" + clipId + ")",
                    );
                  }
                }
                if (this.data.bm !== 0) {
                  this.setBlendMode();
                }
              },
              renderElement: function() {
                if (this.finalTransform._matMdf) {
                  this.transformedElement.setAttribute(
                    "transform",
                    this.finalTransform.mat.to2dCSS(),
                  );
                }
                if (this.finalTransform._opMdf) {
                  this.transformedElement.setAttribute(
                    "opacity",
                    this.finalTransform.mProp.o.v,
                  );
                }
              },
              destroyBaseElement: function() {
                this.layerElement = null;
                this.matteElement = null;
                this.maskManager.destroy();
              },
              getBaseElement: function() {
                if (this.data.hd) {
                  return null;
                }
                return this.baseElement;
              },
              createRenderableComponents: function() {
                this.maskManager = new MaskElement(
                  this.data,
                  this,
                  this.globalData,
                );
                this.renderableEffectsManager = new SVGEffects(this);
              },
              setMatte: function(id) {
                if (!this.matteElement) {
                  return;
                }
                this.matteElement.setAttribute(
                  "mask",
                  "url(" + locationHref + "#" + id + ")",
                );
              },
            };
            function IShapeElement() {}

            IShapeElement.prototype = {
              addShapeToModifiers: function(data) {
                var i,
                  len = this.shapeModifiers.length;
                for (i = 0; i < len; i += 1) {
                  this.shapeModifiers[i].addShape(data);
                }
              },
              isShapeInAnimatedModifiers: function(data) {
                var i = 0,
                  len = this.shapeModifiers.length;
                while (i < len) {
                  if (this.shapeModifiers[i].isAnimatedWithShape(data)) {
                    return true;
                  }
                }
                return false;
              },
              renderModifiers: function() {
                if (!this.shapeModifiers.length) {
                  return;
                }
                var i,
                  len = this.shapes.length;
                for (i = 0; i < len; i += 1) {
                  this.shapes[i].sh.reset();
                }

                len = this.shapeModifiers.length;
                for (i = len - 1; i >= 0; i -= 1) {
                  this.shapeModifiers[i].processShapes(this._isFirstFrame);
                }
              },
              lcEnum: {
                "1": "butt",
                "2": "round",
                "3": "square",
              },
              ljEnum: {
                "1": "miter",
                "2": "round",
                "3": "bevel",
              },
              searchProcessedElement: function(elem) {
                var elements = this.processedElements;
                var i = 0,
                  len = elements.length;
                while (i < len) {
                  if (elements[i].elem === elem) {
                    return elements[i].pos;
                  }
                  i += 1;
                }
                return 0;
              },
              addProcessedElement: function(elem, pos) {
                var elements = this.processedElements;
                var i = elements.length;
                while (i) {
                  i -= 1;
                  if (elements[i].elem === elem) {
                    elements[i].pos = pos;
                    return;
                  }
                }
                elements.push(new ProcessedElement(elem, pos));
              },
              prepareFrame: function(num) {
                this.prepareRenderableFrame(num);
                this.prepareProperties(num, this.isInRange);
              },
            };
            function ITextElement() {}

            ITextElement.prototype.initElement = function(
              data,
              globalData,
              comp,
            ) {
              this.lettersChangedFlag = true;
              this.initFrame();
              this.initBaseData(data, globalData, comp);
              this.textProperty = new TextProperty(
                this,
                data.t,
                this.dynamicProperties,
              );
              this.textAnimator = new TextAnimatorProperty(
                data.t,
                this.renderType,
                this,
              );
              this.initTransform(data, globalData, comp);
              this.initHierarchy();
              this.initRenderable();
              this.initRendererElement();
              this.createContainerElements();
              this.createRenderableComponents();
              this.createContent();
              this.hide();
              this.textAnimator.searchProperties(this.dynamicProperties);
            };

            ITextElement.prototype.prepareFrame = function(num) {
              this._mdf = false;
              this.prepareRenderableFrame(num);
              this.prepareProperties(num, this.isInRange);
              if (this.textProperty._mdf || this.textProperty._isFirstFrame) {
                this.buildNewText();
                this.textProperty._isFirstFrame = false;
                this.textProperty._mdf = false;
              }
            };

            ITextElement.prototype.createPathShape = function(
              matrixHelper,
              shapes,
            ) {
              var j,
                jLen = shapes.length;
              var k, kLen, pathNodes;
              var shapeStr = "";
              for (j = 0; j < jLen; j += 1) {
                pathNodes = shapes[j].ks.k;
                shapeStr += buildShapeString(
                  pathNodes,
                  pathNodes.i.length,
                  true,
                  matrixHelper,
                );
              }
              return shapeStr;
            };

            ITextElement.prototype.updateDocumentData = function(
              newData,
              index,
            ) {
              this.textProperty.updateDocumentData(newData, index);
            };

            ITextElement.prototype.canResizeFont = function(_canResize) {
              this.textProperty.canResizeFont(_canResize);
            };

            ITextElement.prototype.setMinimumFontSize = function(_fontSize) {
              this.textProperty.setMinimumFontSize(_fontSize);
            };

            ITextElement.prototype.applyTextPropertiesToMatrix = function(
              documentData,
              matrixHelper,
              lineNumber,
              xPos,
              yPos,
            ) {
              if (documentData.ps) {
                matrixHelper.translate(
                  documentData.ps[0],
                  documentData.ps[1] + documentData.ascent,
                  0,
                );
              }
              matrixHelper.translate(0, -documentData.ls, 0);
              switch (documentData.j) {
                case 1:
                  matrixHelper.translate(
                    documentData.justifyOffset +
                      (documentData.boxWidth -
                        documentData.lineWidths[lineNumber]),
                    0,
                    0,
                  );
                  break;
                case 2:
                  matrixHelper.translate(
                    documentData.justifyOffset +
                      (documentData.boxWidth -
                        documentData.lineWidths[lineNumber]) /
                        2,
                    0,
                    0,
                  );
                  break;
              }
              matrixHelper.translate(xPos, yPos, 0);
            };

            ITextElement.prototype.buildColor = function(colorData) {
              return (
                "rgb(" +
                Math.round(colorData[0] * 255) +
                "," +
                Math.round(colorData[1] * 255) +
                "," +
                Math.round(colorData[2] * 255) +
                ")"
              );
            };

            ITextElement.prototype.emptyProp = new LetterProps();

            ITextElement.prototype.destroy = function() {};
            function ICompElement() {}

            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              ICompElement,
            );

            ICompElement.prototype.initElement = function(
              data,
              globalData,
              comp,
            ) {
              this.initFrame();
              this.initBaseData(data, globalData, comp);
              this.initTransform(data, globalData, comp);
              this.initRenderable();
              this.initHierarchy();
              this.initRendererElement();
              this.createContainerElements();
              this.createRenderableComponents();
              if (this.data.xt || !globalData.progressiveLoad) {
                this.buildAllItems();
              }
              this.hide();
            };

            /*ICompElement.prototype.hide = function(){
    if(!this.hidden){
        this.hideElement();
        var i,len = this.elements.length;
        for( i = 0; i < len; i+=1 ){
            if(this.elements[i]){
                this.elements[i].hide();
            }
        }
    }
};*/

            ICompElement.prototype.prepareFrame = function(num) {
              this._mdf = false;
              this.prepareRenderableFrame(num);
              this.prepareProperties(num, this.isInRange);
              if (!this.isInRange && !this.data.xt) {
                return;
              }

              if (!this.tm._placeholder) {
                var timeRemapped = this.tm.v;
                if (timeRemapped === this.data.op) {
                  timeRemapped = this.data.op - 1;
                }
                this.renderedFrame = timeRemapped;
              } else {
                this.renderedFrame = num / this.data.sr;
              }
              var i,
                len = this.elements.length;
              if (!this.completeLayers) {
                this.checkLayers(this.renderedFrame);
              }
              //This iteration needs to be backwards because of how expressions connect between each other
              for (i = len - 1; i >= 0; i -= 1) {
                if (this.completeLayers || this.elements[i]) {
                  this.elements[i].prepareFrame(
                    this.renderedFrame - this.layers[i].st,
                  );
                  if (this.elements[i]._mdf) {
                    this._mdf = true;
                  }
                }
              }
            };

            ICompElement.prototype.renderInnerContent = function() {
              var i,
                len = this.layers.length;
              for (i = 0; i < len; i += 1) {
                if (this.completeLayers || this.elements[i]) {
                  this.elements[i].renderFrame();
                }
              }
            };

            ICompElement.prototype.setElements = function(elems) {
              this.elements = elems;
            };

            ICompElement.prototype.getElements = function() {
              return this.elements;
            };

            ICompElement.prototype.destroyElements = function() {
              var i,
                len = this.layers.length;
              for (i = 0; i < len; i += 1) {
                if (this.elements[i]) {
                  this.elements[i].destroy();
                }
              }
            };

            ICompElement.prototype.destroy = function() {
              this.destroyElements();
              this.destroyBaseElement();
            };

            function IImageElement(data, globalData, comp) {
              this.assetData = globalData.getAssetData(data.refId);
              this.initElement(data, globalData, comp);
              this.sourceRect = {
                top: 0,
                left: 0,
                width: this.assetData.w,
                height: this.assetData.h,
              };
            }

            extendPrototype(
              [
                BaseElement,
                TransformElement,
                SVGBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              IImageElement,
            );

            IImageElement.prototype.createContent = function() {
              var assetPath = this.globalData.getAssetsPath(this.assetData);

              this.innerElem = createNS("image");
              this.innerElem.setAttribute("width", this.assetData.w + "px");
              this.innerElem.setAttribute("height", this.assetData.h + "px");
              this.innerElem.setAttribute(
                "preserveAspectRatio",
                this.assetData.pr ||
                  this.globalData.renderConfig.imagePreserveAspectRatio,
              );
              this.innerElem.setAttributeNS(
                "http://www.w3.org/1999/xlink",
                "href",
                assetPath,
              );

              this.layerElement.appendChild(this.innerElem);
            };

            IImageElement.prototype.sourceRectAtTime = function() {
              return this.sourceRect;
            };
            function ISolidElement(data, globalData, comp) {
              this.initElement(data, globalData, comp);
            }
            extendPrototype([IImageElement], ISolidElement);

            ISolidElement.prototype.createContent = function() {
              var rect = createNS("rect");
              ////rect.style.width = this.data.sw;
              ////rect.style.height = this.data.sh;
              ////rect.style.fill = this.data.sc;
              rect.setAttribute("width", this.data.sw);
              rect.setAttribute("height", this.data.sh);
              rect.setAttribute("fill", this.data.sc);
              this.layerElement.appendChild(rect);
            };
            function SVGCompElement(data, globalData, comp) {
              this.layers = data.layers;
              this.supports3d = true;
              this.completeLayers = false;
              this.pendingElements = [];
              this.elements = this.layers
                ? createSizedArray(this.layers.length)
                : [];
              //this.layerElement = createNS('g');
              this.initElement(data, globalData, comp);
              this.tm = data.tm
                ? PropertyFactory.getProp(
                    this,
                    data.tm,
                    0,
                    globalData.frameRate,
                    this,
                  )
                : { _placeholder: true };
            }

            extendPrototype(
              [SVGRenderer, ICompElement, SVGBaseElement],
              SVGCompElement,
            );
            function SVGTextElement(data, globalData, comp) {
              this.textSpans = [];
              this.renderType = "svg";
              this.initElement(data, globalData, comp);
            }

            extendPrototype(
              [
                BaseElement,
                TransformElement,
                SVGBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
                ITextElement,
              ],
              SVGTextElement,
            );

            SVGTextElement.prototype.createContent = function() {
              if (this.data.singleShape && !this.globalData.fontManager.chars) {
                this.textContainer = createNS("text");
              }
            };

            SVGTextElement.prototype.buildTextContents = function(textArray) {
              var i = 0,
                len = textArray.length;
              var textContents = [],
                currentTextContent = "";
              while (i < len) {
                if (
                  textArray[i] === String.fromCharCode(13) ||
                  textArray[i] === String.fromCharCode(3)
                ) {
                  textContents.push(currentTextContent);
                  currentTextContent = "";
                } else {
                  currentTextContent += textArray[i];
                }
                i += 1;
              }
              textContents.push(currentTextContent);
              return textContents;
            };

            SVGTextElement.prototype.buildNewText = function() {
              var i, len;

              var documentData = this.textProperty.currentData;
              this.renderedLetters = createSizedArray(
                documentData ? documentData.l.length : 0,
              );
              if (documentData.fc) {
                this.layerElement.setAttribute(
                  "fill",
                  this.buildColor(documentData.fc),
                );
              } else {
                this.layerElement.setAttribute("fill", "rgba(0,0,0,0)");
              }
              if (documentData.sc) {
                this.layerElement.setAttribute(
                  "stroke",
                  this.buildColor(documentData.sc),
                );
                this.layerElement.setAttribute("stroke-width", documentData.sw);
              }
              this.layerElement.setAttribute(
                "font-size",
                documentData.finalSize,
              );
              var fontData = this.globalData.fontManager.getFontByName(
                documentData.f,
              );
              if (fontData.fClass) {
                this.layerElement.setAttribute("class", fontData.fClass);
              } else {
                this.layerElement.setAttribute("font-family", fontData.fFamily);
                var fWeight = documentData.fWeight,
                  fStyle = documentData.fStyle;
                this.layerElement.setAttribute("font-style", fStyle);
                this.layerElement.setAttribute("font-weight", fWeight);
              }
              this.layerElement.setAttribute("arial-label", documentData.t);

              var letters = documentData.l || [];
              var usesGlyphs = !!this.globalData.fontManager.chars;
              len = letters.length;

              var tSpan;
              var matrixHelper = this.mHelper;
              var shapes,
                shapeStr = "",
                singleShape = this.data.singleShape;
              var xPos = 0,
                yPos = 0,
                firstLine = true;
              var trackingOffset =
                (documentData.tr / 1000) * documentData.finalSize;
              if (singleShape && !usesGlyphs && !documentData.sz) {
                var tElement = this.textContainer;
                var justify = "start";
                switch (documentData.j) {
                  case 1:
                    justify = "end";
                    break;
                  case 2:
                    justify = "middle";
                    break;
                }
                tElement.setAttribute("text-anchor", justify);
                tElement.setAttribute("letter-spacing", trackingOffset);
                var textContent = this.buildTextContents(
                  documentData.finalText,
                );
                len = textContent.length;
                yPos = documentData.ps
                  ? documentData.ps[1] + documentData.ascent
                  : 0;
                for (i = 0; i < len; i += 1) {
                  tSpan = this.textSpans[i] || createNS("tspan");
                  tSpan.textContent = textContent[i];
                  tSpan.setAttribute("x", 0);
                  tSpan.setAttribute("y", yPos);
                  tSpan.style.display = "inherit";
                  tElement.appendChild(tSpan);
                  this.textSpans[i] = tSpan;
                  yPos += documentData.finalLineHeight;
                }

                this.layerElement.appendChild(tElement);
              } else {
                var cachedSpansLength = this.textSpans.length;
                var shapeData, charData;
                for (i = 0; i < len; i += 1) {
                  if (!usesGlyphs || !singleShape || i === 0) {
                    tSpan =
                      cachedSpansLength > i
                        ? this.textSpans[i]
                        : createNS(usesGlyphs ? "path" : "text");
                    if (cachedSpansLength <= i) {
                      tSpan.setAttribute("stroke-linecap", "butt");
                      tSpan.setAttribute("stroke-linejoin", "round");
                      tSpan.setAttribute("stroke-miterlimit", "4");
                      this.textSpans[i] = tSpan;
                      this.layerElement.appendChild(tSpan);
                    }
                    tSpan.style.display = "inherit";
                  }

                  matrixHelper.reset();
                  matrixHelper.scale(
                    documentData.finalSize / 100,
                    documentData.finalSize / 100,
                  );
                  if (singleShape) {
                    if (letters[i].n) {
                      xPos = -trackingOffset;
                      yPos += documentData.yOffset;
                      yPos += firstLine ? 1 : 0;
                      firstLine = false;
                    }
                    this.applyTextPropertiesToMatrix(
                      documentData,
                      matrixHelper,
                      letters[i].line,
                      xPos,
                      yPos,
                    );
                    xPos += letters[i].l || 0;
                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;
                    xPos += trackingOffset;
                  }
                  if (usesGlyphs) {
                    charData = this.globalData.fontManager.getCharData(
                      documentData.finalText[i],
                      fontData.fStyle,
                      this.globalData.fontManager.getFontByName(documentData.f)
                        .fFamily,
                    );
                    shapeData = (charData && charData.data) || {};
                    shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
                    if (!singleShape) {
                      tSpan.setAttribute(
                        "d",
                        this.createPathShape(matrixHelper, shapes),
                      );
                    } else {
                      shapeStr += this.createPathShape(matrixHelper, shapes);
                    }
                  } else {
                    if (singleShape) {
                      tSpan.setAttribute(
                        "transform",
                        "translate(" +
                          matrixHelper.props[12] +
                          "," +
                          matrixHelper.props[13] +
                          ")",
                      );
                    }
                    tSpan.textContent = letters[i].val;
                    tSpan.setAttributeNS(
                      "http://www.w3.org/XML/1998/namespace",
                      "xml:space",
                      "preserve",
                    );
                  }
                  //
                }
                if (singleShape && tSpan) {
                  tSpan.setAttribute("d", shapeStr);
                }
              }
              while (i < this.textSpans.length) {
                this.textSpans[i].style.display = "none";
                i += 1;
              }

              this._sizeChanged = true;
            };

            SVGTextElement.prototype.sourceRectAtTime = function(time) {
              this.prepareFrame(this.comp.renderedFrame - this.data.st);
              this.renderInnerContent();
              if (this._sizeChanged) {
                this._sizeChanged = false;
                var textBox = this.layerElement.getBBox();
                this.bbox = {
                  top: textBox.y,
                  left: textBox.x,
                  width: textBox.width,
                  height: textBox.height,
                };
              }
              return this.bbox;
            };

            SVGTextElement.prototype.renderInnerContent = function() {
              if (!this.data.singleShape) {
                this.textAnimator.getMeasures(
                  this.textProperty.currentData,
                  this.lettersChangedFlag,
                );
                if (
                  this.lettersChangedFlag ||
                  this.textAnimator.lettersChangedFlag
                ) {
                  this._sizeChanged = true;
                  var i, len;
                  var renderedLetters = this.textAnimator.renderedLetters;

                  var letters = this.textProperty.currentData.l;

                  len = letters.length;
                  var renderedLetter, textSpan;
                  for (i = 0; i < len; i += 1) {
                    if (letters[i].n) {
                      continue;
                    }
                    renderedLetter = renderedLetters[i];
                    textSpan = this.textSpans[i];
                    if (renderedLetter._mdf.m) {
                      textSpan.setAttribute("transform", renderedLetter.m);
                    }
                    if (renderedLetter._mdf.o) {
                      textSpan.setAttribute("opacity", renderedLetter.o);
                    }
                    if (renderedLetter._mdf.sw) {
                      textSpan.setAttribute("stroke-width", renderedLetter.sw);
                    }
                    if (renderedLetter._mdf.sc) {
                      textSpan.setAttribute("stroke", renderedLetter.sc);
                    }
                    if (renderedLetter._mdf.fc) {
                      textSpan.setAttribute("fill", renderedLetter.fc);
                    }
                  }
                }
              }
            };
            function SVGShapeElement(data, globalData, comp) {
              //List of drawable elements
              this.shapes = [];
              // Full shape data
              this.shapesData = data.shapes;
              //List of styles that will be applied to shapes
              this.stylesList = [];
              //List of modifiers that will be applied to shapes
              this.shapeModifiers = [];
              //List of items in shape tree
              this.itemsData = [];
              //List of items in previous shape tree
              this.processedElements = [];
              // List of animated components
              this.animatedContents = [];
              this.initElement(data, globalData, comp);
              //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
              // List of elements that have been created
              this.prevViewData = [];
              //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
            }

            extendPrototype(
              [
                BaseElement,
                TransformElement,
                SVGBaseElement,
                IShapeElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              SVGShapeElement,
            );

            SVGShapeElement.prototype.initSecondaryElement = function() {};

            SVGShapeElement.prototype.identityMatrix = new Matrix();

            SVGShapeElement.prototype.buildExpressionInterface = function() {};

            SVGShapeElement.prototype.createContent = function() {
              this.searchShapes(
                this.shapesData,
                this.itemsData,
                this.prevViewData,
                this.layerElement,
                0,
                [],
                true,
              );
              this.filterUniqueShapes();
            };

            /*
This method searches for multiple shapes that affect a single element and one of them is animated
*/
            SVGShapeElement.prototype.filterUniqueShapes = function() {
              var i,
                len = this.shapes.length,
                shape;
              var j,
                jLen = this.stylesList.length;
              var style,
                count = 0;
              var tempShapes = [];
              var areAnimated = false;
              for (j = 0; j < jLen; j += 1) {
                style = this.stylesList[j];
                areAnimated = false;
                tempShapes.length = 0;
                for (i = 0; i < len; i += 1) {
                  shape = this.shapes[i];
                  if (shape.styles.indexOf(style) !== -1) {
                    tempShapes.push(shape);
                    areAnimated = shape._isAnimated || areAnimated;
                  }
                }
                if (tempShapes.length > 1 && areAnimated) {
                  this.setShapesAsAnimated(tempShapes);
                }
              }
            };

            SVGShapeElement.prototype.setShapesAsAnimated = function(shapes) {
              var i,
                len = shapes.length;
              for (i = 0; i < len; i += 1) {
                shapes[i].setAsAnimated();
              }
            };

            SVGShapeElement.prototype.createStyleElement = function(
              data,
              level,
            ) {
              //TODO: prevent drawing of hidden styles
              var elementData;
              var styleOb = new SVGStyleData(data, level);

              var pathElement = styleOb.pElem;
              if (data.ty === "st") {
                elementData = new SVGStrokeStyleData(this, data, styleOb);
              } else if (data.ty === "fl") {
                elementData = new SVGFillStyleData(this, data, styleOb);
              } else if (data.ty === "gf" || data.ty === "gs") {
                var gradientConstructor =
                  data.ty === "gf"
                    ? SVGGradientFillStyleData
                    : SVGGradientStrokeStyleData;
                elementData = new gradientConstructor(this, data, styleOb);
                this.globalData.defs.appendChild(elementData.gf);
                if (elementData.maskId) {
                  this.globalData.defs.appendChild(elementData.ms);
                  this.globalData.defs.appendChild(elementData.of);
                  pathElement.setAttribute(
                    "mask",
                    "url(" + locationHref + "#" + elementData.maskId + ")",
                  );
                }
              }

              if (data.ty === "st" || data.ty === "gs") {
                pathElement.setAttribute(
                  "stroke-linecap",
                  this.lcEnum[data.lc] || "round",
                );
                pathElement.setAttribute(
                  "stroke-linejoin",
                  this.ljEnum[data.lj] || "round",
                );
                pathElement.setAttribute("fill-opacity", "0");
                if (data.lj === 1) {
                  pathElement.setAttribute("stroke-miterlimit", data.ml);
                }
              }

              if (data.r === 2) {
                pathElement.setAttribute("fill-rule", "evenodd");
              }

              if (data.ln) {
                pathElement.setAttribute("id", data.ln);
              }
              if (data.cl) {
                pathElement.setAttribute("class", data.cl);
              }
              if (data.bm) {
                pathElement.style["mix-blend-mode"] = getBlendMode(data.bm);
              }
              this.stylesList.push(styleOb);
              this.addToAnimatedContents(data, elementData);
              return elementData;
            };

            SVGShapeElement.prototype.createGroupElement = function(data) {
              var elementData = new ShapeGroupData();
              if (data.ln) {
                elementData.gr.setAttribute("id", data.ln);
              }
              if (data.cl) {
                elementData.gr.setAttribute("class", data.cl);
              }
              if (data.bm) {
                elementData.gr.style["mix-blend-mode"] = getBlendMode(data.bm);
              }
              return elementData;
            };

            SVGShapeElement.prototype.createTransformElement = function(
              data,
              container,
            ) {
              var transformProperty = TransformPropertyFactory.getTransformProperty(
                this,
                data,
                this,
              );
              var elementData = new SVGTransformData(
                transformProperty,
                transformProperty.o,
                container,
              );
              this.addToAnimatedContents(data, elementData);
              return elementData;
            };

            SVGShapeElement.prototype.createShapeElement = function(
              data,
              ownTransformers,
              level,
            ) {
              var ty = 4;
              if (data.ty === "rc") {
                ty = 5;
              } else if (data.ty === "el") {
                ty = 6;
              } else if (data.ty === "sr") {
                ty = 7;
              }
              var shapeProperty = ShapePropertyFactory.getShapeProp(
                this,
                data,
                ty,
                this,
              );
              var elementData = new SVGShapeData(
                ownTransformers,
                level,
                shapeProperty,
              );
              this.shapes.push(elementData);
              this.addShapeToModifiers(elementData);
              this.addToAnimatedContents(data, elementData);
              return elementData;
            };

            SVGShapeElement.prototype.addToAnimatedContents = function(
              data,
              element,
            ) {
              var i = 0,
                len = this.animatedContents.length;
              while (i < len) {
                if (this.animatedContents[i].element === element) {
                  return;
                }
                i += 1;
              }
              this.animatedContents.push({
                fn: SVGElementsRenderer.createRenderFunction(data),
                element: element,
                data: data,
              });
            };

            SVGShapeElement.prototype.setElementStyles = function(elementData) {
              var arr = elementData.styles;
              var j,
                jLen = this.stylesList.length;
              for (j = 0; j < jLen; j += 1) {
                if (!this.stylesList[j].closed) {
                  arr.push(this.stylesList[j]);
                }
              }
            };

            SVGShapeElement.prototype.reloadShapes = function() {
              this._isFirstFrame = true;
              var i,
                len = this.itemsData.length;
              for (i = 0; i < len; i += 1) {
                this.prevViewData[i] = this.itemsData[i];
              }
              this.searchShapes(
                this.shapesData,
                this.itemsData,
                this.prevViewData,
                this.layerElement,
                0,
                [],
                true,
              );
              this.filterUniqueShapes();
              len = this.dynamicProperties.length;
              for (i = 0; i < len; i += 1) {
                this.dynamicProperties[i].getValue();
              }
              this.renderModifiers();
            };

            SVGShapeElement.prototype.searchShapes = function(
              arr,
              itemsData,
              prevViewData,
              container,
              level,
              transformers,
              render,
            ) {
              var ownTransformers = [].concat(transformers);
              var i,
                len = arr.length - 1;
              var j, jLen;
              var ownStyles = [],
                ownModifiers = [],
                styleOb,
                currentTransform,
                modifier,
                processedPos;
              for (i = len; i >= 0; i -= 1) {
                processedPos = this.searchProcessedElement(arr[i]);
                if (!processedPos) {
                  arr[i]._render = render;
                } else {
                  itemsData[i] = prevViewData[processedPos - 1];
                }
                if (
                  arr[i].ty == "fl" ||
                  arr[i].ty == "st" ||
                  arr[i].ty == "gf" ||
                  arr[i].ty == "gs"
                ) {
                  if (!processedPos) {
                    itemsData[i] = this.createStyleElement(arr[i], level);
                  } else {
                    itemsData[i].style.closed = false;
                  }
                  if (arr[i]._render) {
                    container.appendChild(itemsData[i].style.pElem);
                  }
                  ownStyles.push(itemsData[i].style);
                } else if (arr[i].ty == "gr") {
                  if (!processedPos) {
                    itemsData[i] = this.createGroupElement(arr[i]);
                  } else {
                    jLen = itemsData[i].it.length;
                    for (j = 0; j < jLen; j += 1) {
                      itemsData[i].prevViewData[j] = itemsData[i].it[j];
                    }
                  }
                  this.searchShapes(
                    arr[i].it,
                    itemsData[i].it,
                    itemsData[i].prevViewData,
                    itemsData[i].gr,
                    level + 1,
                    ownTransformers,
                    render,
                  );
                  if (arr[i]._render) {
                    container.appendChild(itemsData[i].gr);
                  }
                } else if (arr[i].ty == "tr") {
                  if (!processedPos) {
                    itemsData[i] = this.createTransformElement(
                      arr[i],
                      container,
                    );
                  }
                  currentTransform = itemsData[i].transform;
                  ownTransformers.push(currentTransform);
                } else if (
                  arr[i].ty == "sh" ||
                  arr[i].ty == "rc" ||
                  arr[i].ty == "el" ||
                  arr[i].ty == "sr"
                ) {
                  if (!processedPos) {
                    itemsData[i] = this.createShapeElement(
                      arr[i],
                      ownTransformers,
                      level,
                    );
                  }
                  this.setElementStyles(itemsData[i]);
                } else if (
                  arr[i].ty == "tm" ||
                  arr[i].ty == "rd" ||
                  arr[i].ty == "ms"
                ) {
                  if (!processedPos) {
                    modifier = ShapeModifiers.getModifier(arr[i].ty);
                    modifier.init(this, arr[i]);
                    itemsData[i] = modifier;
                    this.shapeModifiers.push(modifier);
                  } else {
                    modifier = itemsData[i];
                    modifier.closed = false;
                  }
                  ownModifiers.push(modifier);
                } else if (arr[i].ty == "rp") {
                  if (!processedPos) {
                    modifier = ShapeModifiers.getModifier(arr[i].ty);
                    itemsData[i] = modifier;
                    modifier.init(this, arr, i, itemsData);
                    this.shapeModifiers.push(modifier);
                    render = false;
                  } else {
                    modifier = itemsData[i];
                    modifier.closed = true;
                  }
                  ownModifiers.push(modifier);
                }
                this.addProcessedElement(arr[i], i + 1);
              }
              len = ownStyles.length;
              for (i = 0; i < len; i += 1) {
                ownStyles[i].closed = true;
              }
              len = ownModifiers.length;
              for (i = 0; i < len; i += 1) {
                ownModifiers[i].closed = true;
              }
            };

            SVGShapeElement.prototype.renderInnerContent = function() {
              this.renderModifiers();
              var i,
                len = this.stylesList.length;
              for (i = 0; i < len; i += 1) {
                this.stylesList[i].reset();
              }
              this.renderShape();

              for (i = 0; i < len; i += 1) {
                if (this.stylesList[i]._mdf || this._isFirstFrame) {
                  if (this.stylesList[i].msElem) {
                    this.stylesList[i].msElem.setAttribute(
                      "d",
                      this.stylesList[i].d,
                    );
                    //Adding M0 0 fixes same mask bug on all browsers
                    this.stylesList[i].d = "M0 0" + this.stylesList[i].d;
                  }
                  this.stylesList[i].pElem.setAttribute(
                    "d",
                    this.stylesList[i].d || "M0 0",
                  );
                }
              }
            };

            SVGShapeElement.prototype.renderShape = function() {
              var i,
                len = this.animatedContents.length;
              var animatedContent;
              for (i = 0; i < len; i += 1) {
                animatedContent = this.animatedContents[i];
                if (
                  (this._isFirstFrame || animatedContent.element._isAnimated) &&
                  animatedContent.data !== true
                ) {
                  animatedContent.fn(
                    animatedContent.data,
                    animatedContent.element,
                    this._isFirstFrame,
                  );
                }
              }
            };

            SVGShapeElement.prototype.destroy = function() {
              this.destroyBaseElement();
              this.shapesData = null;
              this.itemsData = null;
            };

            function SVGTintFilter(filter, filterManager) {
              this.filterManager = filterManager;
              var feColorMatrix = createNS("feColorMatrix");
              feColorMatrix.setAttribute("type", "matrix");
              feColorMatrix.setAttribute(
                "color-interpolation-filters",
                "linearRGB",
              );
              feColorMatrix.setAttribute(
                "values",
                "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0",
              );
              feColorMatrix.setAttribute("result", "f1");
              filter.appendChild(feColorMatrix);
              feColorMatrix = createNS("feColorMatrix");
              feColorMatrix.setAttribute("type", "matrix");
              feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
              feColorMatrix.setAttribute(
                "values",
                "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0",
              );
              feColorMatrix.setAttribute("result", "f2");
              filter.appendChild(feColorMatrix);
              this.matrixFilter = feColorMatrix;
              if (
                filterManager.effectElements[2].p.v !== 100 ||
                filterManager.effectElements[2].p.k
              ) {
                var feMerge = createNS("feMerge");
                filter.appendChild(feMerge);
                var feMergeNode;
                feMergeNode = createNS("feMergeNode");
                feMergeNode.setAttribute("in", "SourceGraphic");
                feMerge.appendChild(feMergeNode);
                feMergeNode = createNS("feMergeNode");
                feMergeNode.setAttribute("in", "f2");
                feMerge.appendChild(feMergeNode);
              }
            }

            SVGTintFilter.prototype.renderFrame = function(forceRender) {
              if (forceRender || this.filterManager._mdf) {
                var colorBlack = this.filterManager.effectElements[0].p.v;
                var colorWhite = this.filterManager.effectElements[1].p.v;
                var opacity = this.filterManager.effectElements[2].p.v / 100;
                this.matrixFilter.setAttribute(
                  "values",
                  colorWhite[0] -
                    colorBlack[0] +
                    " 0 0 0 " +
                    colorBlack[0] +
                    " " +
                    (colorWhite[1] - colorBlack[1]) +
                    " 0 0 0 " +
                    colorBlack[1] +
                    " " +
                    (colorWhite[2] - colorBlack[2]) +
                    " 0 0 0 " +
                    colorBlack[2] +
                    " 0 0 0 " +
                    opacity +
                    " 0",
                );
              }
            };
            function SVGFillFilter(filter, filterManager) {
              this.filterManager = filterManager;
              var feColorMatrix = createNS("feColorMatrix");
              feColorMatrix.setAttribute("type", "matrix");
              feColorMatrix.setAttribute("color-interpolation-filters", "sRGB");
              feColorMatrix.setAttribute(
                "values",
                "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0",
              );
              filter.appendChild(feColorMatrix);
              this.matrixFilter = feColorMatrix;
            }
            SVGFillFilter.prototype.renderFrame = function(forceRender) {
              if (forceRender || this.filterManager._mdf) {
                var color = this.filterManager.effectElements[2].p.v;
                var opacity = this.filterManager.effectElements[6].p.v;
                this.matrixFilter.setAttribute(
                  "values",
                  "0 0 0 0 " +
                    color[0] +
                    " 0 0 0 0 " +
                    color[1] +
                    " 0 0 0 0 " +
                    color[2] +
                    " 0 0 0 " +
                    opacity +
                    " 0",
                );
              }
            };
            function SVGGaussianBlurEffect(filter, filterManager) {
              // Outset the filter region by 100% on all sides to accommodate blur expansion.
              filter.setAttribute("x", "-100%");
              filter.setAttribute("y", "-100%");
              filter.setAttribute("width", "300%");
              filter.setAttribute("height", "300%");

              this.filterManager = filterManager;
              var feGaussianBlur = createNS("feGaussianBlur");
              filter.appendChild(feGaussianBlur);
              this.feGaussianBlur = feGaussianBlur;
            }

            SVGGaussianBlurEffect.prototype.renderFrame = function(
              forceRender,
            ) {
              if (forceRender || this.filterManager._mdf) {
                // Empirical value, matching AE's blur appearance.
                var kBlurrinessToSigma = 0.3;
                var sigma =
                  this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;

                // Dimensions mapping:
                //
                //   1 -> horizontal & vertical
                //   2 -> horizontal only
                //   3 -> vertical only
                //
                var dimensions = this.filterManager.effectElements[1].p.v;
                var sigmaX = dimensions == 3 ? 0 : sigma;
                var sigmaY = dimensions == 2 ? 0 : sigma;

                this.feGaussianBlur.setAttribute(
                  "stdDeviation",
                  sigmaX + " " + sigmaY,
                );

                // Repeat edges mapping:
                //
                //   0 -> off -> duplicate
                //   1 -> on  -> wrap
                var edgeMode =
                  this.filterManager.effectElements[2].p.v == 1
                    ? "wrap"
                    : "duplicate";
                this.feGaussianBlur.setAttribute("edgeMode", edgeMode);
              }
            };
            function SVGStrokeEffect(elem, filterManager) {
              this.initialized = false;
              this.filterManager = filterManager;
              this.elem = elem;
              this.paths = [];
            }

            SVGStrokeEffect.prototype.initialize = function() {
              var elemChildren =
                this.elem.layerElement.children ||
                this.elem.layerElement.childNodes;
              var path, groupPath, i, len;
              if (this.filterManager.effectElements[1].p.v === 1) {
                len = this.elem.maskManager.masksProperties.length;
                i = 0;
              } else {
                i = this.filterManager.effectElements[0].p.v - 1;
                len = i + 1;
              }
              groupPath = createNS("g");
              groupPath.setAttribute("fill", "none");
              groupPath.setAttribute("stroke-linecap", "round");
              groupPath.setAttribute("stroke-dashoffset", 1);
              for (i; i < len; i += 1) {
                path = createNS("path");
                groupPath.appendChild(path);
                this.paths.push({ p: path, m: i });
              }
              if (this.filterManager.effectElements[10].p.v === 3) {
                var mask = createNS("mask");
                var id = createElementID();
                mask.setAttribute("id", id);
                mask.setAttribute("mask-type", "alpha");
                mask.appendChild(groupPath);
                this.elem.globalData.defs.appendChild(mask);
                var g = createNS("g");
                g.setAttribute("mask", "url(" + locationHref + "#" + id + ")");
                while (elemChildren[0]) {
                  g.appendChild(elemChildren[0]);
                }
                this.elem.layerElement.appendChild(g);
                this.masker = mask;
                groupPath.setAttribute("stroke", "#fff");
              } else if (
                this.filterManager.effectElements[10].p.v === 1 ||
                this.filterManager.effectElements[10].p.v === 2
              ) {
                if (this.filterManager.effectElements[10].p.v === 2) {
                  elemChildren =
                    this.elem.layerElement.children ||
                    this.elem.layerElement.childNodes;
                  while (elemChildren.length) {
                    this.elem.layerElement.removeChild(elemChildren[0]);
                  }
                }
                this.elem.layerElement.appendChild(groupPath);
                this.elem.layerElement.removeAttribute("mask");
                groupPath.setAttribute("stroke", "#fff");
              }
              this.initialized = true;
              this.pathMasker = groupPath;
            };

            SVGStrokeEffect.prototype.renderFrame = function(forceRender) {
              if (!this.initialized) {
                this.initialize();
              }
              var i,
                len = this.paths.length;
              var mask, path;
              for (i = 0; i < len; i += 1) {
                if (this.paths[i].m === -1) {
                  continue;
                }
                mask = this.elem.maskManager.viewData[this.paths[i].m];
                path = this.paths[i].p;
                if (forceRender || this.filterManager._mdf || mask.prop._mdf) {
                  path.setAttribute("d", mask.lastPath);
                }
                if (
                  forceRender ||
                  this.filterManager.effectElements[9].p._mdf ||
                  this.filterManager.effectElements[4].p._mdf ||
                  this.filterManager.effectElements[7].p._mdf ||
                  this.filterManager.effectElements[8].p._mdf ||
                  mask.prop._mdf
                ) {
                  var dasharrayValue;
                  if (
                    this.filterManager.effectElements[7].p.v !== 0 ||
                    this.filterManager.effectElements[8].p.v !== 100
                  ) {
                    var s =
                      Math.min(
                        this.filterManager.effectElements[7].p.v,
                        this.filterManager.effectElements[8].p.v,
                      ) / 100;
                    var e =
                      Math.max(
                        this.filterManager.effectElements[7].p.v,
                        this.filterManager.effectElements[8].p.v,
                      ) / 100;
                    var l = path.getTotalLength();
                    dasharrayValue = "0 0 0 " + l * s + " ";
                    var lineLength = l * (e - s);
                    var segment =
                      1 +
                      (this.filterManager.effectElements[4].p.v *
                        2 *
                        this.filterManager.effectElements[9].p.v) /
                        100;
                    var units = Math.floor(lineLength / segment);
                    var j;
                    for (j = 0; j < units; j += 1) {
                      dasharrayValue +=
                        "1 " +
                        (this.filterManager.effectElements[4].p.v *
                          2 *
                          this.filterManager.effectElements[9].p.v) /
                          100 +
                        " ";
                    }
                    dasharrayValue += "0 " + l * 10 + " 0 0";
                  } else {
                    dasharrayValue =
                      "1 " +
                      (this.filterManager.effectElements[4].p.v *
                        2 *
                        this.filterManager.effectElements[9].p.v) /
                        100;
                  }
                  path.setAttribute("stroke-dasharray", dasharrayValue);
                }
              }
              if (forceRender || this.filterManager.effectElements[4].p._mdf) {
                this.pathMasker.setAttribute(
                  "stroke-width",
                  this.filterManager.effectElements[4].p.v * 2,
                );
              }

              if (forceRender || this.filterManager.effectElements[6].p._mdf) {
                this.pathMasker.setAttribute(
                  "opacity",
                  this.filterManager.effectElements[6].p.v,
                );
              }
              if (
                this.filterManager.effectElements[10].p.v === 1 ||
                this.filterManager.effectElements[10].p.v === 2
              ) {
                if (
                  forceRender ||
                  this.filterManager.effectElements[3].p._mdf
                ) {
                  var color = this.filterManager.effectElements[3].p.v;
                  this.pathMasker.setAttribute(
                    "stroke",
                    "rgb(" +
                      bm_floor(color[0] * 255) +
                      "," +
                      bm_floor(color[1] * 255) +
                      "," +
                      bm_floor(color[2] * 255) +
                      ")",
                  );
                }
              }
            };
            function SVGTritoneFilter(filter, filterManager) {
              this.filterManager = filterManager;
              var feColorMatrix = createNS("feColorMatrix");
              feColorMatrix.setAttribute("type", "matrix");
              feColorMatrix.setAttribute(
                "color-interpolation-filters",
                "linearRGB",
              );
              feColorMatrix.setAttribute(
                "values",
                "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0",
              );
              feColorMatrix.setAttribute("result", "f1");
              filter.appendChild(feColorMatrix);
              var feComponentTransfer = createNS("feComponentTransfer");
              feComponentTransfer.setAttribute(
                "color-interpolation-filters",
                "sRGB",
              );
              filter.appendChild(feComponentTransfer);
              this.matrixFilter = feComponentTransfer;
              var feFuncR = createNS("feFuncR");
              feFuncR.setAttribute("type", "table");
              feComponentTransfer.appendChild(feFuncR);
              this.feFuncR = feFuncR;
              var feFuncG = createNS("feFuncG");
              feFuncG.setAttribute("type", "table");
              feComponentTransfer.appendChild(feFuncG);
              this.feFuncG = feFuncG;
              var feFuncB = createNS("feFuncB");
              feFuncB.setAttribute("type", "table");
              feComponentTransfer.appendChild(feFuncB);
              this.feFuncB = feFuncB;
            }

            SVGTritoneFilter.prototype.renderFrame = function(forceRender) {
              if (forceRender || this.filterManager._mdf) {
                var color1 = this.filterManager.effectElements[0].p.v;
                var color2 = this.filterManager.effectElements[1].p.v;
                var color3 = this.filterManager.effectElements[2].p.v;
                var tableR = color3[0] + " " + color2[0] + " " + color1[0];
                var tableG = color3[1] + " " + color2[1] + " " + color1[1];
                var tableB = color3[2] + " " + color2[2] + " " + color1[2];
                this.feFuncR.setAttribute("tableValues", tableR);
                this.feFuncG.setAttribute("tableValues", tableG);
                this.feFuncB.setAttribute("tableValues", tableB);
                //var opacity = this.filterManager.effectElements[2].p.v/100;
                //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');
              }
            };
            function SVGProLevelsFilter(filter, filterManager) {
              this.filterManager = filterManager;
              var effectElements = this.filterManager.effectElements;
              var feComponentTransfer = createNS("feComponentTransfer");
              var feFuncR, feFuncG, feFuncB;

              if (
                effectElements[10].p.k ||
                effectElements[10].p.v !== 0 ||
                effectElements[11].p.k ||
                effectElements[11].p.v !== 1 ||
                effectElements[12].p.k ||
                effectElements[12].p.v !== 1 ||
                effectElements[13].p.k ||
                effectElements[13].p.v !== 0 ||
                effectElements[14].p.k ||
                effectElements[14].p.v !== 1
              ) {
                this.feFuncR = this.createFeFunc(
                  "feFuncR",
                  feComponentTransfer,
                );
              }
              if (
                effectElements[17].p.k ||
                effectElements[17].p.v !== 0 ||
                effectElements[18].p.k ||
                effectElements[18].p.v !== 1 ||
                effectElements[19].p.k ||
                effectElements[19].p.v !== 1 ||
                effectElements[20].p.k ||
                effectElements[20].p.v !== 0 ||
                effectElements[21].p.k ||
                effectElements[21].p.v !== 1
              ) {
                this.feFuncG = this.createFeFunc(
                  "feFuncG",
                  feComponentTransfer,
                );
              }
              if (
                effectElements[24].p.k ||
                effectElements[24].p.v !== 0 ||
                effectElements[25].p.k ||
                effectElements[25].p.v !== 1 ||
                effectElements[26].p.k ||
                effectElements[26].p.v !== 1 ||
                effectElements[27].p.k ||
                effectElements[27].p.v !== 0 ||
                effectElements[28].p.k ||
                effectElements[28].p.v !== 1
              ) {
                this.feFuncB = this.createFeFunc(
                  "feFuncB",
                  feComponentTransfer,
                );
              }
              if (
                effectElements[31].p.k ||
                effectElements[31].p.v !== 0 ||
                effectElements[32].p.k ||
                effectElements[32].p.v !== 1 ||
                effectElements[33].p.k ||
                effectElements[33].p.v !== 1 ||
                effectElements[34].p.k ||
                effectElements[34].p.v !== 0 ||
                effectElements[35].p.k ||
                effectElements[35].p.v !== 1
              ) {
                this.feFuncA = this.createFeFunc(
                  "feFuncA",
                  feComponentTransfer,
                );
              }

              if (
                this.feFuncR ||
                this.feFuncG ||
                this.feFuncB ||
                this.feFuncA
              ) {
                feComponentTransfer.setAttribute(
                  "color-interpolation-filters",
                  "sRGB",
                );
                filter.appendChild(feComponentTransfer);
                feComponentTransfer = createNS("feComponentTransfer");
              }

              if (
                effectElements[3].p.k ||
                effectElements[3].p.v !== 0 ||
                effectElements[4].p.k ||
                effectElements[4].p.v !== 1 ||
                effectElements[5].p.k ||
                effectElements[5].p.v !== 1 ||
                effectElements[6].p.k ||
                effectElements[6].p.v !== 0 ||
                effectElements[7].p.k ||
                effectElements[7].p.v !== 1
              ) {
                feComponentTransfer.setAttribute(
                  "color-interpolation-filters",
                  "sRGB",
                );
                filter.appendChild(feComponentTransfer);
                this.feFuncRComposed = this.createFeFunc(
                  "feFuncR",
                  feComponentTransfer,
                );
                this.feFuncGComposed = this.createFeFunc(
                  "feFuncG",
                  feComponentTransfer,
                );
                this.feFuncBComposed = this.createFeFunc(
                  "feFuncB",
                  feComponentTransfer,
                );
              }
            }

            SVGProLevelsFilter.prototype.createFeFunc = function(
              type,
              feComponentTransfer,
            ) {
              var feFunc = createNS(type);
              feFunc.setAttribute("type", "table");
              feComponentTransfer.appendChild(feFunc);
              return feFunc;
            };

            SVGProLevelsFilter.prototype.getTableValue = function(
              inputBlack,
              inputWhite,
              gamma,
              outputBlack,
              outputWhite,
            ) {
              var cnt = 0;
              var segments = 256;
              var perc;
              var min = Math.min(inputBlack, inputWhite);
              var max = Math.max(inputBlack, inputWhite);
              var table = Array.call(null, { length: segments });
              var colorValue;
              var pos = 0;
              var outputDelta = outputWhite - outputBlack;
              var inputDelta = inputWhite - inputBlack;
              while (cnt <= 256) {
                perc = cnt / 256;
                if (perc <= min) {
                  colorValue = inputDelta < 0 ? outputWhite : outputBlack;
                } else if (perc >= max) {
                  colorValue = inputDelta < 0 ? outputBlack : outputWhite;
                } else {
                  colorValue =
                    outputBlack +
                    outputDelta *
                      Math.pow((perc - inputBlack) / inputDelta, 1 / gamma);
                }
                table[pos++] = colorValue;
                cnt += 256 / (segments - 1);
              }
              return table.join(" ");
            };

            SVGProLevelsFilter.prototype.renderFrame = function(forceRender) {
              if (forceRender || this.filterManager._mdf) {
                var val, cnt, perc, bezier;
                var effectElements = this.filterManager.effectElements;
                if (
                  this.feFuncRComposed &&
                  (forceRender ||
                    effectElements[3].p._mdf ||
                    effectElements[4].p._mdf ||
                    effectElements[5].p._mdf ||
                    effectElements[6].p._mdf ||
                    effectElements[7].p._mdf)
                ) {
                  val = this.getTableValue(
                    effectElements[3].p.v,
                    effectElements[4].p.v,
                    effectElements[5].p.v,
                    effectElements[6].p.v,
                    effectElements[7].p.v,
                  );
                  this.feFuncRComposed.setAttribute("tableValues", val);
                  this.feFuncGComposed.setAttribute("tableValues", val);
                  this.feFuncBComposed.setAttribute("tableValues", val);
                }

                if (
                  this.feFuncR &&
                  (forceRender ||
                    effectElements[10].p._mdf ||
                    effectElements[11].p._mdf ||
                    effectElements[12].p._mdf ||
                    effectElements[13].p._mdf ||
                    effectElements[14].p._mdf)
                ) {
                  val = this.getTableValue(
                    effectElements[10].p.v,
                    effectElements[11].p.v,
                    effectElements[12].p.v,
                    effectElements[13].p.v,
                    effectElements[14].p.v,
                  );
                  this.feFuncR.setAttribute("tableValues", val);
                }

                if (
                  this.feFuncG &&
                  (forceRender ||
                    effectElements[17].p._mdf ||
                    effectElements[18].p._mdf ||
                    effectElements[19].p._mdf ||
                    effectElements[20].p._mdf ||
                    effectElements[21].p._mdf)
                ) {
                  val = this.getTableValue(
                    effectElements[17].p.v,
                    effectElements[18].p.v,
                    effectElements[19].p.v,
                    effectElements[20].p.v,
                    effectElements[21].p.v,
                  );
                  this.feFuncG.setAttribute("tableValues", val);
                }

                if (
                  this.feFuncB &&
                  (forceRender ||
                    effectElements[24].p._mdf ||
                    effectElements[25].p._mdf ||
                    effectElements[26].p._mdf ||
                    effectElements[27].p._mdf ||
                    effectElements[28].p._mdf)
                ) {
                  val = this.getTableValue(
                    effectElements[24].p.v,
                    effectElements[25].p.v,
                    effectElements[26].p.v,
                    effectElements[27].p.v,
                    effectElements[28].p.v,
                  );
                  this.feFuncB.setAttribute("tableValues", val);
                }

                if (
                  this.feFuncA &&
                  (forceRender ||
                    effectElements[31].p._mdf ||
                    effectElements[32].p._mdf ||
                    effectElements[33].p._mdf ||
                    effectElements[34].p._mdf ||
                    effectElements[35].p._mdf)
                ) {
                  val = this.getTableValue(
                    effectElements[31].p.v,
                    effectElements[32].p.v,
                    effectElements[33].p.v,
                    effectElements[34].p.v,
                    effectElements[35].p.v,
                  );
                  this.feFuncA.setAttribute("tableValues", val);
                }
              }
            };
            function SVGDropShadowEffect(filter, filterManager) {
              filter.setAttribute("x", "-100%");
              filter.setAttribute("y", "-100%");
              filter.setAttribute("width", "400%");
              filter.setAttribute("height", "400%");
              this.filterManager = filterManager;

              var feGaussianBlur = createNS("feGaussianBlur");
              feGaussianBlur.setAttribute("in", "SourceAlpha");
              feGaussianBlur.setAttribute("result", "drop_shadow_1");
              feGaussianBlur.setAttribute("stdDeviation", "0");
              this.feGaussianBlur = feGaussianBlur;
              filter.appendChild(feGaussianBlur);

              var feOffset = createNS("feOffset");
              feOffset.setAttribute("dx", "25");
              feOffset.setAttribute("dy", "0");
              feOffset.setAttribute("in", "drop_shadow_1");
              feOffset.setAttribute("result", "drop_shadow_2");
              this.feOffset = feOffset;
              filter.appendChild(feOffset);
              var feFlood = createNS("feFlood");
              feFlood.setAttribute("flood-color", "#00ff00");
              feFlood.setAttribute("flood-opacity", "1");
              feFlood.setAttribute("result", "drop_shadow_3");
              this.feFlood = feFlood;
              filter.appendChild(feFlood);

              var feComposite = createNS("feComposite");
              feComposite.setAttribute("in", "drop_shadow_3");
              feComposite.setAttribute("in2", "drop_shadow_2");
              feComposite.setAttribute("operator", "in");
              feComposite.setAttribute("result", "drop_shadow_4");
              filter.appendChild(feComposite);

              var feMerge = createNS("feMerge");
              filter.appendChild(feMerge);
              var feMergeNode;
              feMergeNode = createNS("feMergeNode");
              feMerge.appendChild(feMergeNode);
              feMergeNode = createNS("feMergeNode");
              feMergeNode.setAttribute("in", "SourceGraphic");
              this.feMergeNode = feMergeNode;
              this.feMerge = feMerge;
              this.originalNodeAdded = false;
              feMerge.appendChild(feMergeNode);
            }

            SVGDropShadowEffect.prototype.renderFrame = function(forceRender) {
              if (forceRender || this.filterManager._mdf) {
                if (
                  forceRender ||
                  this.filterManager.effectElements[4].p._mdf
                ) {
                  this.feGaussianBlur.setAttribute(
                    "stdDeviation",
                    this.filterManager.effectElements[4].p.v / 4,
                  );
                }
                if (
                  forceRender ||
                  this.filterManager.effectElements[0].p._mdf
                ) {
                  var col = this.filterManager.effectElements[0].p.v;
                  this.feFlood.setAttribute(
                    "flood-color",
                    rgbToHex(
                      Math.round(col[0] * 255),
                      Math.round(col[1] * 255),
                      Math.round(col[2] * 255),
                    ),
                  );
                }
                if (
                  forceRender ||
                  this.filterManager.effectElements[1].p._mdf
                ) {
                  this.feFlood.setAttribute(
                    "flood-opacity",
                    this.filterManager.effectElements[1].p.v / 255,
                  );
                }
                if (
                  forceRender ||
                  this.filterManager.effectElements[2].p._mdf ||
                  this.filterManager.effectElements[3].p._mdf
                ) {
                  var distance = this.filterManager.effectElements[3].p.v;
                  var angle =
                    (this.filterManager.effectElements[2].p.v - 90) * degToRads;
                  var x = distance * Math.cos(angle);
                  var y = distance * Math.sin(angle);
                  this.feOffset.setAttribute("dx", x);
                  this.feOffset.setAttribute("dy", y);
                }
                /*if(forceRender || this.filterManager.effectElements[5].p._mdf){
            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {
                this.feMerge.removeChild(this.feMergeNode);
                this.originalNodeAdded = false;
            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {
                this.feMerge.appendChild(this.feMergeNode);
                this.originalNodeAdded = true;
            }
        }*/
              }
            };
            var _svgMatteSymbols = [];

            function SVGMatte3Effect(filterElem, filterManager, elem) {
              this.initialized = false;
              this.filterManager = filterManager;
              this.filterElem = filterElem;
              this.elem = elem;
              elem.matteElement = createNS("g");
              elem.matteElement.appendChild(elem.layerElement);
              elem.matteElement.appendChild(elem.transformedElement);
              elem.baseElement = elem.matteElement;
            }

            SVGMatte3Effect.prototype.findSymbol = function(mask) {
              var i = 0,
                len = _svgMatteSymbols.length;
              while (i < len) {
                if (_svgMatteSymbols[i] === mask) {
                  return _svgMatteSymbols[i];
                }
                i += 1;
              }
              return null;
            };

            SVGMatte3Effect.prototype.replaceInParent = function(
              mask,
              symbolId,
            ) {
              var parentNode = mask.layerElement.parentNode;
              if (!parentNode) {
                return;
              }
              var children = parentNode.children;
              var i = 0,
                len = children.length;
              while (i < len) {
                if (children[i] === mask.layerElement) {
                  break;
                }
                i += 1;
              }
              var nextChild;
              if (i <= len - 2) {
                nextChild = children[i + 1];
              }
              var useElem = createNS("use");
              useElem.setAttribute("href", "#" + symbolId);
              if (nextChild) {
                parentNode.insertBefore(useElem, nextChild);
              } else {
                parentNode.appendChild(useElem);
              }
            };

            SVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {
              if (!this.findSymbol(mask)) {
                var symbolId = createElementID();
                var masker = createNS("mask");
                masker.setAttribute("id", mask.layerId);
                masker.setAttribute("mask-type", "alpha");
                _svgMatteSymbols.push(mask);
                var defs = elem.globalData.defs;
                defs.appendChild(masker);
                var symbol = createNS("symbol");
                symbol.setAttribute("id", symbolId);
                this.replaceInParent(mask, symbolId);
                symbol.appendChild(mask.layerElement);
                defs.appendChild(symbol);
                var useElem = createNS("use");
                useElem.setAttribute("href", "#" + symbolId);
                masker.appendChild(useElem);
                mask.data.hd = false;
                mask.show();
              }
              elem.setMatte(mask.layerId);
            };

            SVGMatte3Effect.prototype.initialize = function() {
              var ind = this.filterManager.effectElements[0].p.v;
              var elements = this.elem.comp.elements;
              var i = 0,
                len = elements.length;
              while (i < len) {
                if (elements[i] && elements[i].data.ind === ind) {
                  this.setElementAsMask(this.elem, elements[i]);
                }
                i += 1;
              }
              this.initialized = true;
            };

            SVGMatte3Effect.prototype.renderFrame = function() {
              if (!this.initialized) {
                this.initialize();
              }
            };
            function SVGEffects(elem) {
              var i,
                len = elem.data.ef ? elem.data.ef.length : 0;
              var filId = createElementID();
              var fil = filtersFactory.createFilter(filId);
              var count = 0;
              this.filters = [];
              var filterManager;
              for (i = 0; i < len; i += 1) {
                filterManager = null;
                if (elem.data.ef[i].ty === 20) {
                  count += 1;
                  filterManager = new SVGTintFilter(
                    fil,
                    elem.effectsManager.effectElements[i],
                  );
                } else if (elem.data.ef[i].ty === 21) {
                  count += 1;
                  filterManager = new SVGFillFilter(
                    fil,
                    elem.effectsManager.effectElements[i],
                  );
                } else if (elem.data.ef[i].ty === 22) {
                  filterManager = new SVGStrokeEffect(
                    elem,
                    elem.effectsManager.effectElements[i],
                  );
                } else if (elem.data.ef[i].ty === 23) {
                  count += 1;
                  filterManager = new SVGTritoneFilter(
                    fil,
                    elem.effectsManager.effectElements[i],
                  );
                } else if (elem.data.ef[i].ty === 24) {
                  count += 1;
                  filterManager = new SVGProLevelsFilter(
                    fil,
                    elem.effectsManager.effectElements[i],
                  );
                } else if (elem.data.ef[i].ty === 25) {
                  count += 1;
                  filterManager = new SVGDropShadowEffect(
                    fil,
                    elem.effectsManager.effectElements[i],
                  );
                } else if (elem.data.ef[i].ty === 28) {
                  //count += 1;
                  filterManager = new SVGMatte3Effect(
                    fil,
                    elem.effectsManager.effectElements[i],
                    elem,
                  );
                } else if (elem.data.ef[i].ty === 29) {
                  count += 1;
                  filterManager = new SVGGaussianBlurEffect(
                    fil,
                    elem.effectsManager.effectElements[i],
                  );
                }
                if (filterManager) {
                  this.filters.push(filterManager);
                }
              }
              if (count) {
                elem.globalData.defs.appendChild(fil);
                elem.layerElement.setAttribute(
                  "filter",
                  "url(" + locationHref + "#" + filId + ")",
                );
              }
              if (this.filters.length) {
                elem.addRenderableComponent(this);
              }
            }

            SVGEffects.prototype.renderFrame = function(_isFirstFrame) {
              var i,
                len = this.filters.length;
              for (i = 0; i < len; i += 1) {
                this.filters[i].renderFrame(_isFirstFrame);
              }
            };
            function CVContextData() {
              this.saved = [];
              this.cArrPos = 0;
              this.cTr = new Matrix();
              this.cO = 1;
              var i,
                len = 15;
              this.savedOp = createTypedArray("float32", len);
              for (i = 0; i < len; i += 1) {
                this.saved[i] = createTypedArray("float32", 16);
              }
              this._length = len;
            }

            CVContextData.prototype.duplicate = function() {
              var newLength = this._length * 2;
              var currentSavedOp = this.savedOp;
              this.savedOp = createTypedArray("float32", newLength);
              this.savedOp.set(currentSavedOp);
              var i = 0;
              for (i = this._length; i < newLength; i += 1) {
                this.saved[i] = createTypedArray("float32", 16);
              }
              this._length = newLength;
            };

            CVContextData.prototype.reset = function() {
              this.cArrPos = 0;
              this.cTr.reset();
              this.cO = 1;
            };
            function CVBaseElement() {}

            CVBaseElement.prototype = {
              createElements: function() {},
              initRendererElement: function() {},
              createContainerElements: function() {
                this.canvasContext = this.globalData.canvasContext;
                this.renderableEffectsManager = new CVEffects(this);
              },
              createContent: function() {},
              setBlendMode: function() {
                var globalData = this.globalData;
                if (globalData.blendMode !== this.data.bm) {
                  globalData.blendMode = this.data.bm;
                  var blendModeValue = getBlendMode(this.data.bm);
                  globalData.canvasContext.globalCompositeOperation = blendModeValue;
                }
              },
              createRenderableComponents: function() {
                this.maskManager = new CVMaskElement(this.data, this);
              },
              hideElement: function() {
                if (!this.hidden && (!this.isInRange || this.isTransparent)) {
                  this.hidden = true;
                }
              },
              showElement: function() {
                if (this.isInRange && !this.isTransparent) {
                  this.hidden = false;
                  this._isFirstFrame = true;
                  this.maskManager._isFirstFrame = true;
                }
              },
              renderFrame: function() {
                if (this.hidden || this.data.hd) {
                  return;
                }
                this.renderTransform();
                this.renderRenderable();
                this.setBlendMode();
                this.globalData.renderer.save();
                this.globalData.renderer.ctxTransform(
                  this.finalTransform.mat.props,
                );
                this.globalData.renderer.ctxOpacity(
                  this.finalTransform.mProp.o.v,
                );
                this.renderInnerContent();
                this.globalData.renderer.restore();
                if (this.maskManager.hasMasks) {
                  this.globalData.renderer.restore(true);
                }
                if (this._isFirstFrame) {
                  this._isFirstFrame = false;
                }
              },
              destroy: function() {
                this.canvasContext = null;
                this.data = null;
                this.globalData = null;
                this.maskManager.destroy();
              },
              mHelper: new Matrix(),
            };
            CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;
            CVBaseElement.prototype.show = CVBaseElement.prototype.showElement;

            function CVImageElement(data, globalData, comp) {
              this.failed = false;
              this.assetData = globalData.getAssetData(data.refId);
              this.img = globalData.imageLoader.getImage(this.assetData);
              this.initElement(data, globalData, comp);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              CVImageElement,
            );

            CVImageElement.prototype.initElement =
              SVGShapeElement.prototype.initElement;
            CVImageElement.prototype.prepareFrame =
              IImageElement.prototype.prepareFrame;

            CVImageElement.prototype.createContent = function() {
              if (
                this.img.width &&
                (this.assetData.w !== this.img.width ||
                  this.assetData.h !== this.img.height)
              ) {
                var canvas = createTag("canvas");
                canvas.width = this.assetData.w;
                canvas.height = this.assetData.h;
                var ctx = canvas.getContext("2d");

                var imgW = this.img.width;
                var imgH = this.img.height;
                var imgRel = imgW / imgH;
                var canvasRel = this.assetData.w / this.assetData.h;
                var widthCrop, heightCrop;
                var par =
                  this.assetData.pr ||
                  this.globalData.renderConfig.imagePreserveAspectRatio;
                if (
                  (imgRel > canvasRel && par === "xMidYMid slice") ||
                  (imgRel < canvasRel && par !== "xMidYMid slice")
                ) {
                  heightCrop = imgH;
                  widthCrop = heightCrop * canvasRel;
                } else {
                  widthCrop = imgW;
                  heightCrop = widthCrop / canvasRel;
                }
                ctx.drawImage(
                  this.img,
                  (imgW - widthCrop) / 2,
                  (imgH - heightCrop) / 2,
                  widthCrop,
                  heightCrop,
                  0,
                  0,
                  this.assetData.w,
                  this.assetData.h,
                );
                this.img = canvas;
              }
            };

            CVImageElement.prototype.renderInnerContent = function(
              parentMatrix,
            ) {
              if (this.failed) {
                return;
              }
              this.canvasContext.drawImage(this.img, 0, 0);
            };

            CVImageElement.prototype.destroy = function() {
              this.img = null;
            };
            function CVCompElement(data, globalData, comp) {
              this.completeLayers = false;
              this.layers = data.layers;
              this.pendingElements = [];
              this.elements = createSizedArray(this.layers.length);
              this.initElement(data, globalData, comp);
              this.tm = data.tm
                ? PropertyFactory.getProp(
                    this,
                    data.tm,
                    0,
                    globalData.frameRate,
                    this,
                  )
                : { _placeholder: true };
            }

            extendPrototype(
              [CanvasRenderer, ICompElement, CVBaseElement],
              CVCompElement,
            );

            CVCompElement.prototype.renderInnerContent = function() {
              var i,
                len = this.layers.length;
              for (i = len - 1; i >= 0; i -= 1) {
                if (this.completeLayers || this.elements[i]) {
                  this.elements[i].renderFrame();
                }
              }
            };

            CVCompElement.prototype.destroy = function() {
              var i,
                len = this.layers.length;
              for (i = len - 1; i >= 0; i -= 1) {
                if (this.elements[i]) {
                  this.elements[i].destroy();
                }
              }
              this.layers = null;
              this.elements = null;
            };

            function CVMaskElement(data, element) {
              this.data = data;
              this.element = element;
              this.masksProperties = this.data.masksProperties || [];
              this.viewData = createSizedArray(this.masksProperties.length);
              var i,
                len = this.masksProperties.length,
                hasMasks = false;
              for (i = 0; i < len; i++) {
                if (this.masksProperties[i].mode !== "n") {
                  hasMasks = true;
                }
                this.viewData[i] = ShapePropertyFactory.getShapeProp(
                  this.element,
                  this.masksProperties[i],
                  3,
                );
              }
              this.hasMasks = hasMasks;
              if (hasMasks) {
                this.element.addRenderableComponent(this);
              }
            }

            CVMaskElement.prototype.renderFrame = function() {
              if (!this.hasMasks) {
                return;
              }
              var transform = this.element.finalTransform.mat;
              var ctx = this.element.canvasContext;
              var i,
                len = this.masksProperties.length;
              var pt, pts, data;
              ctx.beginPath();
              for (i = 0; i < len; i++) {
                if (this.masksProperties[i].mode !== "n") {
                  if (this.masksProperties[i].inv) {
                    ctx.moveTo(0, 0);
                    ctx.lineTo(this.element.globalData.compSize.w, 0);
                    ctx.lineTo(
                      this.element.globalData.compSize.w,
                      this.element.globalData.compSize.h,
                    );
                    ctx.lineTo(0, this.element.globalData.compSize.h);
                    ctx.lineTo(0, 0);
                  }
                  data = this.viewData[i].v;
                  pt = transform.applyToPointArray(
                    data.v[0][0],
                    data.v[0][1],
                    0,
                  );
                  ctx.moveTo(pt[0], pt[1]);
                  var j,
                    jLen = data._length;
                  for (j = 1; j < jLen; j++) {
                    pts = transform.applyToTriplePoints(
                      data.o[j - 1],
                      data.i[j],
                      data.v[j],
                    );
                    ctx.bezierCurveTo(
                      pts[0],
                      pts[1],
                      pts[2],
                      pts[3],
                      pts[4],
                      pts[5],
                    );
                  }
                  pts = transform.applyToTriplePoints(
                    data.o[j - 1],
                    data.i[0],
                    data.v[0],
                  );
                  ctx.bezierCurveTo(
                    pts[0],
                    pts[1],
                    pts[2],
                    pts[3],
                    pts[4],
                    pts[5],
                  );
                }
              }
              this.element.globalData.renderer.save(true);
              ctx.clip();
            };

            CVMaskElement.prototype.getMaskProperty =
              MaskElement.prototype.getMaskProperty;

            CVMaskElement.prototype.destroy = function() {
              this.element = null;
            };
            function CVShapeElement(data, globalData, comp) {
              this.shapes = [];
              this.shapesData = data.shapes;
              this.stylesList = [];
              this.itemsData = [];
              this.prevViewData = [];
              this.shapeModifiers = [];
              this.processedElements = [];
              this.transformsManager = new ShapeTransformManager();
              this.initElement(data, globalData, comp);
            }

            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                IShapeElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              CVShapeElement,
            );

            CVShapeElement.prototype.initElement =
              RenderableDOMElement.prototype.initElement;

            CVShapeElement.prototype.transformHelper = {
              opacity: 1,
              _opMdf: false,
            };

            CVShapeElement.prototype.dashResetter = [];

            CVShapeElement.prototype.createContent = function() {
              this.searchShapes(
                this.shapesData,
                this.itemsData,
                this.prevViewData,
                true,
                [],
              );
            };

            CVShapeElement.prototype.createStyleElement = function(
              data,
              transforms,
            ) {
              var styleElem = {
                data: data,
                type: data.ty,
                preTransforms: this.transformsManager.addTransformSequence(
                  transforms,
                ),
                transforms: [],
                elements: [],
                closed: data.hd === true,
              };
              var elementData = {};
              if (data.ty == "fl" || data.ty == "st") {
                elementData.c = PropertyFactory.getProp(
                  this,
                  data.c,
                  1,
                  255,
                  this,
                );
                if (!elementData.c.k) {
                  styleElem.co =
                    "rgb(" +
                    bm_floor(elementData.c.v[0]) +
                    "," +
                    bm_floor(elementData.c.v[1]) +
                    "," +
                    bm_floor(elementData.c.v[2]) +
                    ")";
                }
              } else if (data.ty === "gf" || data.ty === "gs") {
                elementData.s = PropertyFactory.getProp(
                  this,
                  data.s,
                  1,
                  null,
                  this,
                );
                elementData.e = PropertyFactory.getProp(
                  this,
                  data.e,
                  1,
                  null,
                  this,
                );
                elementData.h = PropertyFactory.getProp(
                  this,
                  data.h || { k: 0 },
                  0,
                  0.01,
                  this,
                );
                elementData.a = PropertyFactory.getProp(
                  this,
                  data.a || { k: 0 },
                  0,
                  degToRads,
                  this,
                );
                elementData.g = new GradientProperty(this, data.g, this);
              }
              elementData.o = PropertyFactory.getProp(
                this,
                data.o,
                0,
                0.01,
                this,
              );
              if (data.ty == "st" || data.ty == "gs") {
                styleElem.lc = this.lcEnum[data.lc] || "round";
                styleElem.lj = this.ljEnum[data.lj] || "round";
                if (data.lj == 1) {
                  styleElem.ml = data.ml;
                }
                elementData.w = PropertyFactory.getProp(
                  this,
                  data.w,
                  0,
                  null,
                  this,
                );
                if (!elementData.w.k) {
                  styleElem.wi = elementData.w.v;
                }
                if (data.d) {
                  var d = new DashProperty(this, data.d, "canvas", this);
                  elementData.d = d;
                  if (!elementData.d.k) {
                    styleElem.da = elementData.d.dashArray;
                    styleElem.do = elementData.d.dashoffset[0];
                  }
                }
              } else {
                styleElem.r = data.r === 2 ? "evenodd" : "nonzero";
              }
              this.stylesList.push(styleElem);
              elementData.style = styleElem;
              return elementData;
            };

            CVShapeElement.prototype.createGroupElement = function(data) {
              var elementData = {
                it: [],
                prevViewData: [],
              };
              return elementData;
            };

            CVShapeElement.prototype.createTransformElement = function(data) {
              var elementData = {
                transform: {
                  opacity: 1,
                  _opMdf: false,
                  key: this.transformsManager.getNewKey(),
                  op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),
                  mProps: TransformPropertyFactory.getTransformProperty(
                    this,
                    data,
                    this,
                  ),
                },
              };
              return elementData;
            };

            CVShapeElement.prototype.createShapeElement = function(data) {
              var elementData = new CVShapeData(
                this,
                data,
                this.stylesList,
                this.transformsManager,
              );

              this.shapes.push(elementData);
              this.addShapeToModifiers(elementData);
              return elementData;
            };

            CVShapeElement.prototype.reloadShapes = function() {
              this._isFirstFrame = true;
              var i,
                len = this.itemsData.length;
              for (i = 0; i < len; i += 1) {
                this.prevViewData[i] = this.itemsData[i];
              }
              this.searchShapes(
                this.shapesData,
                this.itemsData,
                this.prevViewData,
                true,
                [],
              );
              len = this.dynamicProperties.length;
              for (i = 0; i < len; i += 1) {
                this.dynamicProperties[i].getValue();
              }
              this.renderModifiers();
              this.transformsManager.processSequences(this._isFirstFrame);
            };

            CVShapeElement.prototype.addTransformToStyleList = function(
              transform,
            ) {
              var i,
                len = this.stylesList.length;
              for (i = 0; i < len; i += 1) {
                if (!this.stylesList[i].closed) {
                  this.stylesList[i].transforms.push(transform);
                }
              }
            };

            CVShapeElement.prototype.removeTransformFromStyleList = function() {
              var i,
                len = this.stylesList.length;
              for (i = 0; i < len; i += 1) {
                if (!this.stylesList[i].closed) {
                  this.stylesList[i].transforms.pop();
                }
              }
            };

            CVShapeElement.prototype.closeStyles = function(styles) {
              var i,
                len = styles.length,
                j,
                jLen;
              for (i = 0; i < len; i += 1) {
                styles[i].closed = true;
              }
            };

            CVShapeElement.prototype.searchShapes = function(
              arr,
              itemsData,
              prevViewData,
              shouldRender,
              transforms,
            ) {
              var i,
                len = arr.length - 1;
              var j, jLen;
              var ownStyles = [],
                ownModifiers = [],
                processedPos,
                modifier,
                currentTransform;
              var ownTransforms = [].concat(transforms);
              for (i = len; i >= 0; i -= 1) {
                processedPos = this.searchProcessedElement(arr[i]);
                if (!processedPos) {
                  arr[i]._shouldRender = shouldRender;
                } else {
                  itemsData[i] = prevViewData[processedPos - 1];
                }
                if (
                  arr[i].ty == "fl" ||
                  arr[i].ty == "st" ||
                  arr[i].ty == "gf" ||
                  arr[i].ty == "gs"
                ) {
                  if (!processedPos) {
                    itemsData[i] = this.createStyleElement(
                      arr[i],
                      ownTransforms,
                    );
                  } else {
                    itemsData[i].style.closed = false;
                  }

                  ownStyles.push(itemsData[i].style);
                } else if (arr[i].ty == "gr") {
                  if (!processedPos) {
                    itemsData[i] = this.createGroupElement(arr[i]);
                  } else {
                    jLen = itemsData[i].it.length;
                    for (j = 0; j < jLen; j += 1) {
                      itemsData[i].prevViewData[j] = itemsData[i].it[j];
                    }
                  }
                  this.searchShapes(
                    arr[i].it,
                    itemsData[i].it,
                    itemsData[i].prevViewData,
                    shouldRender,
                    ownTransforms,
                  );
                } else if (arr[i].ty == "tr") {
                  if (!processedPos) {
                    currentTransform = this.createTransformElement(arr[i]);
                    itemsData[i] = currentTransform;
                  }
                  ownTransforms.push(itemsData[i]);
                  this.addTransformToStyleList(itemsData[i]);
                } else if (
                  arr[i].ty == "sh" ||
                  arr[i].ty == "rc" ||
                  arr[i].ty == "el" ||
                  arr[i].ty == "sr"
                ) {
                  if (!processedPos) {
                    itemsData[i] = this.createShapeElement(arr[i]);
                  }
                } else if (arr[i].ty == "tm" || arr[i].ty == "rd") {
                  if (!processedPos) {
                    modifier = ShapeModifiers.getModifier(arr[i].ty);
                    modifier.init(this, arr[i]);
                    itemsData[i] = modifier;
                    this.shapeModifiers.push(modifier);
                  } else {
                    modifier = itemsData[i];
                    modifier.closed = false;
                  }
                  ownModifiers.push(modifier);
                } else if (arr[i].ty == "rp") {
                  if (!processedPos) {
                    modifier = ShapeModifiers.getModifier(arr[i].ty);
                    itemsData[i] = modifier;
                    modifier.init(this, arr, i, itemsData);
                    this.shapeModifiers.push(modifier);
                    shouldRender = false;
                  } else {
                    modifier = itemsData[i];
                    modifier.closed = true;
                  }
                  ownModifiers.push(modifier);
                }
                this.addProcessedElement(arr[i], i + 1);
              }
              this.removeTransformFromStyleList();
              this.closeStyles(ownStyles);
              len = ownModifiers.length;
              for (i = 0; i < len; i += 1) {
                ownModifiers[i].closed = true;
              }
            };

            CVShapeElement.prototype.renderInnerContent = function() {
              this.transformHelper.opacity = 1;
              this.transformHelper._opMdf = false;
              this.renderModifiers();
              this.transformsManager.processSequences(this._isFirstFrame);
              this.renderShape(
                this.transformHelper,
                this.shapesData,
                this.itemsData,
                true,
              );
            };

            CVShapeElement.prototype.renderShapeTransform = function(
              parentTransform,
              groupTransform,
            ) {
              var props, groupMatrix;
              if (
                parentTransform._opMdf ||
                groupTransform.op._mdf ||
                this._isFirstFrame
              ) {
                groupTransform.opacity = parentTransform.opacity;
                groupTransform.opacity *= groupTransform.op.v;
                groupTransform._opMdf = true;
              }
            };

            CVShapeElement.prototype.drawLayer = function() {
              var i,
                len = this.stylesList.length;
              var j,
                jLen,
                k,
                kLen,
                elems,
                nodes,
                renderer = this.globalData.renderer,
                ctx = this.globalData.canvasContext,
                type,
                currentStyle;
              for (i = 0; i < len; i += 1) {
                currentStyle = this.stylesList[i];
                type = currentStyle.type;

                //Skipping style when
                //Stroke width equals 0
                //style should not be rendered (extra unused repeaters)
                //current opacity equals 0
                //global opacity equals 0
                if (
                  ((type === "st" || type === "gs") && currentStyle.wi === 0) ||
                  !currentStyle.data._shouldRender ||
                  currentStyle.coOp === 0 ||
                  this.globalData.currentGlobalAlpha === 0
                ) {
                  continue;
                }
                renderer.save();
                elems = currentStyle.elements;
                if (type === "st" || type === "gs") {
                  ctx.strokeStyle =
                    type === "st" ? currentStyle.co : currentStyle.grd;
                  ctx.lineWidth = currentStyle.wi;
                  ctx.lineCap = currentStyle.lc;
                  ctx.lineJoin = currentStyle.lj;
                  ctx.miterLimit = currentStyle.ml || 0;
                } else {
                  ctx.fillStyle =
                    type === "fl" ? currentStyle.co : currentStyle.grd;
                }
                renderer.ctxOpacity(currentStyle.coOp);
                if (type !== "st" && type !== "gs") {
                  ctx.beginPath();
                }
                renderer.ctxTransform(
                  currentStyle.preTransforms.finalTransform.props,
                );
                jLen = elems.length;
                for (j = 0; j < jLen; j += 1) {
                  if (type === "st" || type === "gs") {
                    ctx.beginPath();
                    if (currentStyle.da) {
                      ctx.setLineDash(currentStyle.da);
                      ctx.lineDashOffset = currentStyle.do;
                    }
                  }
                  nodes = elems[j].trNodes;
                  kLen = nodes.length;

                  for (k = 0; k < kLen; k += 1) {
                    if (nodes[k].t == "m") {
                      ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);
                    } else if (nodes[k].t == "c") {
                      ctx.bezierCurveTo(
                        nodes[k].pts[0],
                        nodes[k].pts[1],
                        nodes[k].pts[2],
                        nodes[k].pts[3],
                        nodes[k].pts[4],
                        nodes[k].pts[5],
                      );
                    } else {
                      ctx.closePath();
                    }
                  }
                  if (type === "st" || type === "gs") {
                    ctx.stroke();
                    if (currentStyle.da) {
                      ctx.setLineDash(this.dashResetter);
                    }
                  }
                }
                if (type !== "st" && type !== "gs") {
                  ctx.fill(currentStyle.r);
                }
                renderer.restore();
              }
            };

            CVShapeElement.prototype.renderShape = function(
              parentTransform,
              items,
              data,
              isMain,
            ) {
              var i,
                len = items.length - 1;
              var groupTransform;
              groupTransform = parentTransform;
              for (i = len; i >= 0; i -= 1) {
                if (items[i].ty == "tr") {
                  groupTransform = data[i].transform;
                  this.renderShapeTransform(parentTransform, groupTransform);
                } else if (
                  items[i].ty == "sh" ||
                  items[i].ty == "el" ||
                  items[i].ty == "rc" ||
                  items[i].ty == "sr"
                ) {
                  this.renderPath(items[i], data[i]);
                } else if (items[i].ty == "fl") {
                  this.renderFill(items[i], data[i], groupTransform);
                } else if (items[i].ty == "st") {
                  this.renderStroke(items[i], data[i], groupTransform);
                } else if (items[i].ty == "gf" || items[i].ty == "gs") {
                  this.renderGradientFill(items[i], data[i], groupTransform);
                } else if (items[i].ty == "gr") {
                  this.renderShape(groupTransform, items[i].it, data[i].it);
                } else if (items[i].ty == "tm") {
                  //
                }
              }
              if (isMain) {
                this.drawLayer();
              }
            };

            CVShapeElement.prototype.renderStyledShape = function(
              styledShape,
              shape,
            ) {
              if (
                this._isFirstFrame ||
                shape._mdf ||
                styledShape.transforms._mdf
              ) {
                var shapeNodes = styledShape.trNodes;
                var paths = shape.paths;
                var i,
                  len,
                  j,
                  jLen = paths._length;
                shapeNodes.length = 0;
                var groupTransformMat = styledShape.transforms.finalTransform;
                for (j = 0; j < jLen; j += 1) {
                  var pathNodes = paths.shapes[j];
                  if (pathNodes && pathNodes.v) {
                    len = pathNodes._length;
                    for (i = 1; i < len; i += 1) {
                      if (i === 1) {
                        shapeNodes.push({
                          t: "m",
                          p: groupTransformMat.applyToPointArray(
                            pathNodes.v[0][0],
                            pathNodes.v[0][1],
                            0,
                          ),
                        });
                      }
                      shapeNodes.push({
                        t: "c",
                        pts: groupTransformMat.applyToTriplePoints(
                          pathNodes.o[i - 1],
                          pathNodes.i[i],
                          pathNodes.v[i],
                        ),
                      });
                    }
                    if (len === 1) {
                      shapeNodes.push({
                        t: "m",
                        p: groupTransformMat.applyToPointArray(
                          pathNodes.v[0][0],
                          pathNodes.v[0][1],
                          0,
                        ),
                      });
                    }
                    if (pathNodes.c && len) {
                      shapeNodes.push({
                        t: "c",
                        pts: groupTransformMat.applyToTriplePoints(
                          pathNodes.o[i - 1],
                          pathNodes.i[0],
                          pathNodes.v[0],
                        ),
                      });
                      shapeNodes.push({
                        t: "z",
                      });
                    }
                  }
                }
                styledShape.trNodes = shapeNodes;
              }
            };

            CVShapeElement.prototype.renderPath = function(pathData, itemData) {
              if (pathData.hd !== true && pathData._shouldRender) {
                var i,
                  len = itemData.styledShapes.length;
                for (i = 0; i < len; i += 1) {
                  this.renderStyledShape(itemData.styledShapes[i], itemData.sh);
                }
              }
            };

            CVShapeElement.prototype.renderFill = function(
              styleData,
              itemData,
              groupTransform,
            ) {
              var styleElem = itemData.style;

              if (itemData.c._mdf || this._isFirstFrame) {
                styleElem.co =
                  "rgb(" +
                  bm_floor(itemData.c.v[0]) +
                  "," +
                  bm_floor(itemData.c.v[1]) +
                  "," +
                  bm_floor(itemData.c.v[2]) +
                  ")";
              }
              if (
                itemData.o._mdf ||
                groupTransform._opMdf ||
                this._isFirstFrame
              ) {
                styleElem.coOp = itemData.o.v * groupTransform.opacity;
              }
            };

            CVShapeElement.prototype.renderGradientFill = function(
              styleData,
              itemData,
              groupTransform,
            ) {
              var styleElem = itemData.style;
              if (
                !styleElem.grd ||
                itemData.g._mdf ||
                itemData.s._mdf ||
                itemData.e._mdf ||
                (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))
              ) {
                var ctx = this.globalData.canvasContext;
                var grd;
                var pt1 = itemData.s.v,
                  pt2 = itemData.e.v;
                if (styleData.t === 1) {
                  grd = ctx.createLinearGradient(
                    pt1[0],
                    pt1[1],
                    pt2[0],
                    pt2[1],
                  );
                } else {
                  var rad = Math.sqrt(
                    Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2),
                  );
                  var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);

                  var percent =
                    itemData.h.v >= 1
                      ? 0.99
                      : itemData.h.v <= -1
                      ? -0.99
                      : itemData.h.v;
                  var dist = rad * percent;
                  var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];
                  var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];
                  var grd = ctx.createRadialGradient(
                    x,
                    y,
                    0,
                    pt1[0],
                    pt1[1],
                    rad,
                  );
                }

                var i,
                  len = styleData.g.p;
                var cValues = itemData.g.c;
                var opacity = 1;

                for (i = 0; i < len; i += 1) {
                  if (itemData.g._hasOpacity && itemData.g._collapsable) {
                    opacity = itemData.g.o[i * 2 + 1];
                  }
                  grd.addColorStop(
                    cValues[i * 4] / 100,
                    "rgba(" +
                      cValues[i * 4 + 1] +
                      "," +
                      cValues[i * 4 + 2] +
                      "," +
                      cValues[i * 4 + 3] +
                      "," +
                      opacity +
                      ")",
                  );
                }
                styleElem.grd = grd;
              }
              styleElem.coOp = itemData.o.v * groupTransform.opacity;
            };

            CVShapeElement.prototype.renderStroke = function(
              styleData,
              itemData,
              groupTransform,
            ) {
              var styleElem = itemData.style;
              var d = itemData.d;
              if (d && (d._mdf || this._isFirstFrame)) {
                styleElem.da = d.dashArray;
                styleElem.do = d.dashoffset[0];
              }
              if (itemData.c._mdf || this._isFirstFrame) {
                styleElem.co =
                  "rgb(" +
                  bm_floor(itemData.c.v[0]) +
                  "," +
                  bm_floor(itemData.c.v[1]) +
                  "," +
                  bm_floor(itemData.c.v[2]) +
                  ")";
              }
              if (
                itemData.o._mdf ||
                groupTransform._opMdf ||
                this._isFirstFrame
              ) {
                styleElem.coOp = itemData.o.v * groupTransform.opacity;
              }
              if (itemData.w._mdf || this._isFirstFrame) {
                styleElem.wi = itemData.w.v;
              }
            };

            CVShapeElement.prototype.destroy = function() {
              this.shapesData = null;
              this.globalData = null;
              this.canvasContext = null;
              this.stylesList.length = 0;
              this.itemsData.length = 0;
            };

            function CVSolidElement(data, globalData, comp) {
              this.initElement(data, globalData, comp);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              CVSolidElement,
            );

            CVSolidElement.prototype.initElement =
              SVGShapeElement.prototype.initElement;
            CVSolidElement.prototype.prepareFrame =
              IImageElement.prototype.prepareFrame;

            CVSolidElement.prototype.renderInnerContent = function() {
              var ctx = this.canvasContext;
              ctx.fillStyle = this.data.sc;
              ctx.fillRect(0, 0, this.data.sw, this.data.sh);
              //
            };
            function CVTextElement(data, globalData, comp) {
              this.textSpans = [];
              this.yOffset = 0;
              this.fillColorAnim = false;
              this.strokeColorAnim = false;
              this.strokeWidthAnim = false;
              this.stroke = false;
              this.fill = false;
              this.justifyOffset = 0;
              this.currentRender = null;
              this.renderType = "canvas";
              this.values = {
                fill: "rgba(0,0,0,0)",
                stroke: "rgba(0,0,0,0)",
                sWidth: 0,
                fValue: "",
              };
              this.initElement(data, globalData, comp);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
                ITextElement,
              ],
              CVTextElement,
            );

            CVTextElement.prototype.tHelper = createTag("canvas").getContext(
              "2d",
            );

            CVTextElement.prototype.buildNewText = function() {
              var documentData = this.textProperty.currentData;
              this.renderedLetters = createSizedArray(
                documentData.l ? documentData.l.length : 0,
              );

              var hasFill = false;
              if (documentData.fc) {
                hasFill = true;
                this.values.fill = this.buildColor(documentData.fc);
              } else {
                this.values.fill = "rgba(0,0,0,0)";
              }
              this.fill = hasFill;
              var hasStroke = false;
              if (documentData.sc) {
                hasStroke = true;
                this.values.stroke = this.buildColor(documentData.sc);
                this.values.sWidth = documentData.sw;
              }
              var fontData = this.globalData.fontManager.getFontByName(
                documentData.f,
              );
              var i, len;
              var letters = documentData.l;
              var matrixHelper = this.mHelper;
              this.stroke = hasStroke;
              this.values.fValue =
                documentData.finalSize +
                "px " +
                this.globalData.fontManager.getFontByName(documentData.f)
                  .fFamily;
              len = documentData.finalText.length;
              //this.tHelper.font = this.values.fValue;
              var charData,
                shapeData,
                k,
                kLen,
                shapes,
                j,
                jLen,
                pathNodes,
                commands,
                pathArr,
                singleShape = this.data.singleShape;
              var trackingOffset =
                (documentData.tr / 1000) * documentData.finalSize;
              var xPos = 0,
                yPos = 0,
                firstLine = true;
              var cnt = 0;
              for (i = 0; i < len; i += 1) {
                charData = this.globalData.fontManager.getCharData(
                  documentData.finalText[i],
                  fontData.fStyle,
                  this.globalData.fontManager.getFontByName(documentData.f)
                    .fFamily,
                );
                shapeData = (charData && charData.data) || {};
                matrixHelper.reset();
                if (singleShape && letters[i].n) {
                  xPos = -trackingOffset;
                  yPos += documentData.yOffset;
                  yPos += firstLine ? 1 : 0;
                  firstLine = false;
                }

                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];
                jLen = shapes.length;
                matrixHelper.scale(
                  documentData.finalSize / 100,
                  documentData.finalSize / 100,
                );
                if (singleShape) {
                  this.applyTextPropertiesToMatrix(
                    documentData,
                    matrixHelper,
                    letters[i].line,
                    xPos,
                    yPos,
                  );
                }
                commands = createSizedArray(jLen);
                for (j = 0; j < jLen; j += 1) {
                  kLen = shapes[j].ks.k.i.length;
                  pathNodes = shapes[j].ks.k;
                  pathArr = [];
                  for (k = 1; k < kLen; k += 1) {
                    if (k == 1) {
                      pathArr.push(
                        matrixHelper.applyToX(
                          pathNodes.v[0][0],
                          pathNodes.v[0][1],
                          0,
                        ),
                        matrixHelper.applyToY(
                          pathNodes.v[0][0],
                          pathNodes.v[0][1],
                          0,
                        ),
                      );
                    }
                    pathArr.push(
                      matrixHelper.applyToX(
                        pathNodes.o[k - 1][0],
                        pathNodes.o[k - 1][1],
                        0,
                      ),
                      matrixHelper.applyToY(
                        pathNodes.o[k - 1][0],
                        pathNodes.o[k - 1][1],
                        0,
                      ),
                      matrixHelper.applyToX(
                        pathNodes.i[k][0],
                        pathNodes.i[k][1],
                        0,
                      ),
                      matrixHelper.applyToY(
                        pathNodes.i[k][0],
                        pathNodes.i[k][1],
                        0,
                      ),
                      matrixHelper.applyToX(
                        pathNodes.v[k][0],
                        pathNodes.v[k][1],
                        0,
                      ),
                      matrixHelper.applyToY(
                        pathNodes.v[k][0],
                        pathNodes.v[k][1],
                        0,
                      ),
                    );
                  }
                  pathArr.push(
                    matrixHelper.applyToX(
                      pathNodes.o[k - 1][0],
                      pathNodes.o[k - 1][1],
                      0,
                    ),
                    matrixHelper.applyToY(
                      pathNodes.o[k - 1][0],
                      pathNodes.o[k - 1][1],
                      0,
                    ),
                    matrixHelper.applyToX(
                      pathNodes.i[0][0],
                      pathNodes.i[0][1],
                      0,
                    ),
                    matrixHelper.applyToY(
                      pathNodes.i[0][0],
                      pathNodes.i[0][1],
                      0,
                    ),
                    matrixHelper.applyToX(
                      pathNodes.v[0][0],
                      pathNodes.v[0][1],
                      0,
                    ),
                    matrixHelper.applyToY(
                      pathNodes.v[0][0],
                      pathNodes.v[0][1],
                      0,
                    ),
                  );
                  commands[j] = pathArr;
                }
                if (singleShape) {
                  xPos += letters[i].l;
                  xPos += trackingOffset;
                }
                if (this.textSpans[cnt]) {
                  this.textSpans[cnt].elem = commands;
                } else {
                  this.textSpans[cnt] = { elem: commands };
                }
                cnt += 1;
              }
            };

            CVTextElement.prototype.renderInnerContent = function() {
              var ctx = this.canvasContext;
              var finalMat = this.finalTransform.mat.props;
              ctx.font = this.values.fValue;
              ctx.lineCap = "butt";
              ctx.lineJoin = "miter";
              ctx.miterLimit = 4;

              if (!this.data.singleShape) {
                this.textAnimator.getMeasures(
                  this.textProperty.currentData,
                  this.lettersChangedFlag,
                );
              }

              var i, len, j, jLen, k, kLen;
              var renderedLetters = this.textAnimator.renderedLetters;

              var letters = this.textProperty.currentData.l;

              len = letters.length;
              var renderedLetter;
              var lastFill = null,
                lastStroke = null,
                lastStrokeW = null,
                commands,
                pathArr;
              for (i = 0; i < len; i += 1) {
                if (letters[i].n) {
                  continue;
                }
                renderedLetter = renderedLetters[i];
                if (renderedLetter) {
                  this.globalData.renderer.save();
                  this.globalData.renderer.ctxTransform(renderedLetter.p);
                  this.globalData.renderer.ctxOpacity(renderedLetter.o);
                }
                if (this.fill) {
                  if (renderedLetter && renderedLetter.fc) {
                    if (lastFill !== renderedLetter.fc) {
                      lastFill = renderedLetter.fc;
                      ctx.fillStyle = renderedLetter.fc;
                    }
                  } else if (lastFill !== this.values.fill) {
                    lastFill = this.values.fill;
                    ctx.fillStyle = this.values.fill;
                  }
                  commands = this.textSpans[i].elem;
                  jLen = commands.length;
                  this.globalData.canvasContext.beginPath();
                  for (j = 0; j < jLen; j += 1) {
                    pathArr = commands[j];
                    kLen = pathArr.length;
                    this.globalData.canvasContext.moveTo(
                      pathArr[0],
                      pathArr[1],
                    );
                    for (k = 2; k < kLen; k += 6) {
                      this.globalData.canvasContext.bezierCurveTo(
                        pathArr[k],
                        pathArr[k + 1],
                        pathArr[k + 2],
                        pathArr[k + 3],
                        pathArr[k + 4],
                        pathArr[k + 5],
                      );
                    }
                  }
                  this.globalData.canvasContext.closePath();
                  this.globalData.canvasContext.fill();
                  ///ctx.fillText(this.textSpans[i].val,0,0);
                }
                if (this.stroke) {
                  if (renderedLetter && renderedLetter.sw) {
                    if (lastStrokeW !== renderedLetter.sw) {
                      lastStrokeW = renderedLetter.sw;
                      ctx.lineWidth = renderedLetter.sw;
                    }
                  } else if (lastStrokeW !== this.values.sWidth) {
                    lastStrokeW = this.values.sWidth;
                    ctx.lineWidth = this.values.sWidth;
                  }
                  if (renderedLetter && renderedLetter.sc) {
                    if (lastStroke !== renderedLetter.sc) {
                      lastStroke = renderedLetter.sc;
                      ctx.strokeStyle = renderedLetter.sc;
                    }
                  } else if (lastStroke !== this.values.stroke) {
                    lastStroke = this.values.stroke;
                    ctx.strokeStyle = this.values.stroke;
                  }
                  commands = this.textSpans[i].elem;
                  jLen = commands.length;
                  this.globalData.canvasContext.beginPath();
                  for (j = 0; j < jLen; j += 1) {
                    pathArr = commands[j];
                    kLen = pathArr.length;
                    this.globalData.canvasContext.moveTo(
                      pathArr[0],
                      pathArr[1],
                    );
                    for (k = 2; k < kLen; k += 6) {
                      this.globalData.canvasContext.bezierCurveTo(
                        pathArr[k],
                        pathArr[k + 1],
                        pathArr[k + 2],
                        pathArr[k + 3],
                        pathArr[k + 4],
                        pathArr[k + 5],
                      );
                    }
                  }
                  this.globalData.canvasContext.closePath();
                  this.globalData.canvasContext.stroke();
                  ///ctx.strokeText(letters[i].val,0,0);
                }
                if (renderedLetter) {
                  this.globalData.renderer.restore();
                }
              }
            };
            function CVEffects() {}
            CVEffects.prototype.renderFrame = function() {};
            function HBaseElement(data, globalData, comp) {}
            HBaseElement.prototype = {
              checkBlendMode: function() {},
              initRendererElement: function() {
                this.baseElement = createTag(this.data.tg || "div");
                if (this.data.hasMask) {
                  this.svgElement = createNS("svg");
                  this.layerElement = createNS("g");
                  this.maskedElement = this.layerElement;
                  this.svgElement.appendChild(this.layerElement);
                  this.baseElement.appendChild(this.svgElement);
                } else {
                  this.layerElement = this.baseElement;
                }
                styleDiv(this.baseElement);
              },
              createContainerElements: function() {
                this.renderableEffectsManager = new CVEffects(this);
                this.transformedElement = this.baseElement;
                this.maskedElement = this.layerElement;
                if (this.data.ln) {
                  this.layerElement.setAttribute("id", this.data.ln);
                }
                if (this.data.cl) {
                  this.layerElement.setAttribute("class", this.data.cl);
                }
                if (this.data.bm !== 0) {
                  this.setBlendMode();
                }
              },
              renderElement: function() {
                if (this.finalTransform._matMdf) {
                  this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();
                }
                if (this.finalTransform._opMdf) {
                  this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;
                }
              },
              renderFrame: function() {
                //If it is exported as hidden (data.hd === true) no need to render
                //If it is not visible no need to render
                if (this.data.hd || this.hidden) {
                  return;
                }
                this.renderTransform();
                this.renderRenderable();
                this.renderElement();
                this.renderInnerContent();
                if (this._isFirstFrame) {
                  this._isFirstFrame = false;
                }
              },
              destroy: function() {
                this.layerElement = null;
                this.transformedElement = null;
                if (this.matteElement) {
                  this.matteElement = null;
                }
                if (this.maskManager) {
                  this.maskManager.destroy();
                  this.maskManager = null;
                }
              },
              createRenderableComponents: function() {
                this.maskManager = new MaskElement(
                  this.data,
                  this,
                  this.globalData,
                );
              },
              addEffects: function() {},
              setMatte: function() {},
            };
            HBaseElement.prototype.getBaseElement =
              SVGBaseElement.prototype.getBaseElement;
            HBaseElement.prototype.destroyBaseElement =
              HBaseElement.prototype.destroy;
            HBaseElement.prototype.buildElementParenting =
              HybridRenderer.prototype.buildElementParenting;
            function HSolidElement(data, globalData, comp) {
              this.initElement(data, globalData, comp);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              HSolidElement,
            );

            HSolidElement.prototype.createContent = function() {
              var rect;
              if (this.data.hasMask) {
                rect = createNS("rect");
                rect.setAttribute("width", this.data.sw);
                rect.setAttribute("height", this.data.sh);
                rect.setAttribute("fill", this.data.sc);
                this.svgElement.setAttribute("width", this.data.sw);
                this.svgElement.setAttribute("height", this.data.sh);
              } else {
                rect = createTag("div");
                rect.style.width = this.data.sw + "px";
                rect.style.height = this.data.sh + "px";
                rect.style.backgroundColor = this.data.sc;
              }
              this.layerElement.appendChild(rect);
            };

            function HCompElement(data, globalData, comp) {
              this.layers = data.layers;
              this.supports3d = !data.hasMask;
              this.completeLayers = false;
              this.pendingElements = [];
              this.elements = this.layers
                ? createSizedArray(this.layers.length)
                : [];
              this.initElement(data, globalData, comp);
              this.tm = data.tm
                ? PropertyFactory.getProp(
                    this,
                    data.tm,
                    0,
                    globalData.frameRate,
                    this,
                  )
                : { _placeholder: true };
            }

            extendPrototype(
              [HybridRenderer, ICompElement, HBaseElement],
              HCompElement,
            );
            HCompElement.prototype._createBaseContainerElements =
              HCompElement.prototype.createContainerElements;

            HCompElement.prototype.createContainerElements = function() {
              this._createBaseContainerElements();
              //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';
              if (this.data.hasMask) {
                this.svgElement.setAttribute("width", this.data.w);
                this.svgElement.setAttribute("height", this.data.h);
                this.transformedElement = this.baseElement;
              } else {
                this.transformedElement = this.layerElement;
              }
            };

            HCompElement.prototype.addTo3dContainer = function(elem, pos) {
              var j = 0;
              var nextElement;
              while (j < pos) {
                if (this.elements[j] && this.elements[j].getBaseElement) {
                  nextElement = this.elements[j].getBaseElement();
                }
                j += 1;
              }
              if (nextElement) {
                this.layerElement.insertBefore(elem, nextElement);
              } else {
                this.layerElement.appendChild(elem);
              }
            };

            function HShapeElement(data, globalData, comp) {
              //List of drawable elements
              this.shapes = [];
              // Full shape data
              this.shapesData = data.shapes;
              //List of styles that will be applied to shapes
              this.stylesList = [];
              //List of modifiers that will be applied to shapes
              this.shapeModifiers = [];
              //List of items in shape tree
              this.itemsData = [];
              //List of items in previous shape tree
              this.processedElements = [];
              // List of animated components
              this.animatedContents = [];
              this.shapesContainer = createNS("g");
              this.initElement(data, globalData, comp);
              //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.
              // List of elements that have been created
              this.prevViewData = [];
              this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0,
              };
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HSolidElement,
                SVGShapeElement,
                HBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              HShapeElement,
            );
            HShapeElement.prototype._renderShapeFrame =
              HShapeElement.prototype.renderInnerContent;

            HShapeElement.prototype.createContent = function() {
              var cont;
              this.baseElement.style.fontSize = 0;
              if (this.data.hasMask) {
                this.layerElement.appendChild(this.shapesContainer);
                cont = this.svgElement;
              } else {
                cont = createNS("svg");
                var size = this.comp.data
                  ? this.comp.data
                  : this.globalData.compSize;
                cont.setAttribute("width", size.w);
                cont.setAttribute("height", size.h);
                cont.appendChild(this.shapesContainer);
                this.layerElement.appendChild(cont);
              }

              this.searchShapes(
                this.shapesData,
                this.itemsData,
                this.prevViewData,
                this.shapesContainer,
                0,
                [],
                true,
              );
              this.filterUniqueShapes();
              this.shapeCont = cont;
            };

            HShapeElement.prototype.getTransformedPoint = function(
              transformers,
              point,
            ) {
              var i,
                len = transformers.length;
              for (i = 0; i < len; i += 1) {
                point = transformers[i].mProps.v.applyToPointArray(
                  point[0],
                  point[1],
                  0,
                );
              }
              return point;
            };

            HShapeElement.prototype.calculateShapeBoundingBox = function(
              item,
              boundingBox,
            ) {
              var shape = item.sh.v;
              var transformers = item.transformers;
              var i,
                len = shape._length,
                vPoint,
                oPoint,
                nextIPoint,
                nextVPoint,
                bounds;
              if (len <= 1) {
                return;
              }
              for (i = 0; i < len - 1; i += 1) {
                vPoint = this.getTransformedPoint(transformers, shape.v[i]);
                oPoint = this.getTransformedPoint(transformers, shape.o[i]);
                nextIPoint = this.getTransformedPoint(
                  transformers,
                  shape.i[i + 1],
                );
                nextVPoint = this.getTransformedPoint(
                  transformers,
                  shape.v[i + 1],
                );
                this.checkBounds(
                  vPoint,
                  oPoint,
                  nextIPoint,
                  nextVPoint,
                  boundingBox,
                );
              }
              if (shape.c) {
                vPoint = this.getTransformedPoint(transformers, shape.v[i]);
                oPoint = this.getTransformedPoint(transformers, shape.o[i]);
                nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);
                nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);
                this.checkBounds(
                  vPoint,
                  oPoint,
                  nextIPoint,
                  nextVPoint,
                  boundingBox,
                );
              }
            };

            HShapeElement.prototype.checkBounds = function(
              vPoint,
              oPoint,
              nextIPoint,
              nextVPoint,
              boundingBox,
            ) {
              this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);
              var bounds = this.shapeBoundingBox;
              boundingBox.x = bm_min(bounds.left, boundingBox.x);
              boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);
              boundingBox.y = bm_min(bounds.top, boundingBox.y);
              boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);
            };

            HShapeElement.prototype.shapeBoundingBox = {
              left: 0,
              right: 0,
              top: 0,
              bottom: 0,
            };

            HShapeElement.prototype.tempBoundingBox = {
              x: 0,
              xMax: 0,
              y: 0,
              yMax: 0,
              width: 0,
              height: 0,
            };

            HShapeElement.prototype.getBoundsOfCurve = function(
              p0,
              p1,
              p2,
              p3,
            ) {
              var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];

              for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {
                b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];
                a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];
                c = 3 * p1[i] - 3 * p0[i];

                b = b | 0;
                a = a | 0;
                c = c | 0;

                if (a === 0) {
                  if (b === 0) {
                    continue;
                  }

                  t = -c / b;

                  if (0 < t && t < 1) {
                    bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));
                  }
                  continue;
                }

                b2ac = b * b - 4 * c * a;

                if (b2ac < 0) {
                  continue;
                }

                t1 = (-b + bm_sqrt(b2ac)) / (2 * a);
                if (0 < t1 && t1 < 1)
                  bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));

                t2 = (-b - bm_sqrt(b2ac)) / (2 * a);
                if (0 < t2 && t2 < 1)
                  bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));
              }

              this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);
              this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);
              this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);
              this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);
            };

            HShapeElement.prototype.calculateF = function(
              t,
              p0,
              p1,
              p2,
              p3,
              i,
            ) {
              return (
                bm_pow(1 - t, 3) * p0[i] +
                3 * bm_pow(1 - t, 2) * t * p1[i] +
                3 * (1 - t) * bm_pow(t, 2) * p2[i] +
                bm_pow(t, 3) * p3[i]
              );
            };

            HShapeElement.prototype.calculateBoundingBox = function(
              itemsData,
              boundingBox,
            ) {
              var i,
                len = itemsData.length,
                path;
              for (i = 0; i < len; i += 1) {
                if (itemsData[i] && itemsData[i].sh) {
                  this.calculateShapeBoundingBox(itemsData[i], boundingBox);
                } else if (itemsData[i] && itemsData[i].it) {
                  this.calculateBoundingBox(itemsData[i].it, boundingBox);
                }
              }
            };

            HShapeElement.prototype.currentBoxContains = function(box) {
              return (
                this.currentBBox.x <= box.x &&
                this.currentBBox.y <= box.y &&
                this.currentBBox.width + this.currentBBox.x >=
                  box.x + box.width &&
                this.currentBBox.height + this.currentBBox.y >=
                  box.y + box.height
              );
            };

            HShapeElement.prototype.renderInnerContent = function() {
              this._renderShapeFrame();

              if (!this.hidden && (this._isFirstFrame || this._mdf)) {
                var tempBoundingBox = this.tempBoundingBox;
                var max = 999999;
                tempBoundingBox.x = max;
                tempBoundingBox.xMax = -max;
                tempBoundingBox.y = max;
                tempBoundingBox.yMax = -max;
                this.calculateBoundingBox(this.itemsData, tempBoundingBox);
                tempBoundingBox.width =
                  tempBoundingBox.xMax < tempBoundingBox.x
                    ? 0
                    : tempBoundingBox.xMax - tempBoundingBox.x;
                tempBoundingBox.height =
                  tempBoundingBox.yMax < tempBoundingBox.y
                    ? 0
                    : tempBoundingBox.yMax - tempBoundingBox.y;
                //var tempBoundingBox = this.shapeCont.getBBox();
                if (this.currentBoxContains(tempBoundingBox)) {
                  return;
                }
                var changed = false;
                if (this.currentBBox.w !== tempBoundingBox.width) {
                  this.currentBBox.w = tempBoundingBox.width;
                  this.shapeCont.setAttribute("width", tempBoundingBox.width);
                  changed = true;
                }
                if (this.currentBBox.h !== tempBoundingBox.height) {
                  this.currentBBox.h = tempBoundingBox.height;
                  this.shapeCont.setAttribute("height", tempBoundingBox.height);
                  changed = true;
                }
                if (
                  changed ||
                  this.currentBBox.x !== tempBoundingBox.x ||
                  this.currentBBox.y !== tempBoundingBox.y
                ) {
                  this.currentBBox.w = tempBoundingBox.width;
                  this.currentBBox.h = tempBoundingBox.height;
                  this.currentBBox.x = tempBoundingBox.x;
                  this.currentBBox.y = tempBoundingBox.y;

                  this.shapeCont.setAttribute(
                    "viewBox",
                    this.currentBBox.x +
                      " " +
                      this.currentBBox.y +
                      " " +
                      this.currentBBox.w +
                      " " +
                      this.currentBBox.h,
                  );
                  this.shapeCont.style.transform = this.shapeCont.style.webkitTransform =
                    "translate(" +
                    this.currentBBox.x +
                    "px," +
                    this.currentBBox.y +
                    "px)";
                }
              }
            };
            function HTextElement(data, globalData, comp) {
              this.textSpans = [];
              this.textPaths = [];
              this.currentBBox = {
                x: 999999,
                y: -999999,
                h: 0,
                w: 0,
              };
              this.renderType = "svg";
              this.isMasked = false;
              this.initElement(data, globalData, comp);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
                ITextElement,
              ],
              HTextElement,
            );

            HTextElement.prototype.createContent = function() {
              this.isMasked = this.checkMasks();
              if (this.isMasked) {
                this.renderType = "svg";
                this.compW = this.comp.data.w;
                this.compH = this.comp.data.h;
                this.svgElement.setAttribute("width", this.compW);
                this.svgElement.setAttribute("height", this.compH);
                var g = createNS("g");
                this.maskedElement.appendChild(g);
                this.innerElem = g;
              } else {
                this.renderType = "html";
                this.innerElem = this.layerElement;
              }

              this.checkParenting();
            };

            HTextElement.prototype.buildNewText = function() {
              var documentData = this.textProperty.currentData;
              this.renderedLetters = createSizedArray(
                documentData.l ? documentData.l.length : 0,
              );
              var innerElemStyle = this.innerElem.style;
              innerElemStyle.color = innerElemStyle.fill = documentData.fc
                ? this.buildColor(documentData.fc)
                : "rgba(0,0,0,0)";
              if (documentData.sc) {
                innerElemStyle.stroke = this.buildColor(documentData.sc);
                innerElemStyle.strokeWidth = documentData.sw + "px";
              }
              var fontData = this.globalData.fontManager.getFontByName(
                documentData.f,
              );
              if (!this.globalData.fontManager.chars) {
                innerElemStyle.fontSize = documentData.finalSize + "px";
                innerElemStyle.lineHeight = documentData.finalSize + "px";
                if (fontData.fClass) {
                  this.innerElem.className = fontData.fClass;
                } else {
                  innerElemStyle.fontFamily = fontData.fFamily;
                  var fWeight = documentData.fWeight,
                    fStyle = documentData.fStyle;
                  innerElemStyle.fontStyle = fStyle;
                  innerElemStyle.fontWeight = fWeight;
                }
              }
              var i, len;

              var letters = documentData.l;
              len = letters.length;
              var tSpan, tParent, tCont;
              var matrixHelper = this.mHelper;
              var shapes,
                shapeStr = "";
              var cnt = 0;
              for (i = 0; i < len; i += 1) {
                if (this.globalData.fontManager.chars) {
                  if (!this.textPaths[cnt]) {
                    tSpan = createNS("path");
                    tSpan.setAttribute("stroke-linecap", "butt");
                    tSpan.setAttribute("stroke-linejoin", "round");
                    tSpan.setAttribute("stroke-miterlimit", "4");
                  } else {
                    tSpan = this.textPaths[cnt];
                  }
                  if (!this.isMasked) {
                    if (this.textSpans[cnt]) {
                      tParent = this.textSpans[cnt];
                      tCont = tParent.children[0];
                    } else {
                      tParent = createTag("div");
                      tParent.style.lineHeight = 0;
                      tCont = createNS("svg");
                      tCont.appendChild(tSpan);
                      styleDiv(tParent);
                    }
                  }
                } else {
                  if (!this.isMasked) {
                    if (this.textSpans[cnt]) {
                      tParent = this.textSpans[cnt];
                      tSpan = this.textPaths[cnt];
                    } else {
                      tParent = createTag("span");
                      styleDiv(tParent);
                      tSpan = createTag("span");
                      styleDiv(tSpan);
                      tParent.appendChild(tSpan);
                    }
                  } else {
                    tSpan = this.textPaths[cnt]
                      ? this.textPaths[cnt]
                      : createNS("text");
                  }
                }
                //tSpan.setAttribute('visibility', 'hidden');
                if (this.globalData.fontManager.chars) {
                  var charData = this.globalData.fontManager.getCharData(
                    documentData.finalText[i],
                    fontData.fStyle,
                    this.globalData.fontManager.getFontByName(documentData.f)
                      .fFamily,
                  );
                  var shapeData;
                  if (charData) {
                    shapeData = charData.data;
                  } else {
                    shapeData = null;
                  }
                  matrixHelper.reset();
                  if (shapeData && shapeData.shapes) {
                    shapes = shapeData.shapes[0].it;
                    matrixHelper.scale(
                      documentData.finalSize / 100,
                      documentData.finalSize / 100,
                    );
                    shapeStr = this.createPathShape(matrixHelper, shapes);
                    tSpan.setAttribute("d", shapeStr);
                  }
                  if (!this.isMasked) {
                    this.innerElem.appendChild(tParent);
                    if (shapeData && shapeData.shapes) {
                      //document.body.appendChild is needed to get exact measure of shape
                      document.body.appendChild(tCont);
                      var boundingBox = tCont.getBBox();
                      tCont.setAttribute("width", boundingBox.width + 2);
                      tCont.setAttribute("height", boundingBox.height + 2);
                      tCont.setAttribute(
                        "viewBox",
                        boundingBox.x -
                          1 +
                          " " +
                          (boundingBox.y - 1) +
                          " " +
                          (boundingBox.width + 2) +
                          " " +
                          (boundingBox.height + 2),
                      );
                      tCont.style.transform = tCont.style.webkitTransform =
                        "translate(" +
                        (boundingBox.x - 1) +
                        "px," +
                        (boundingBox.y - 1) +
                        "px)";

                      letters[i].yOffset = boundingBox.y - 1;
                    } else {
                      tCont.setAttribute("width", 1);
                      tCont.setAttribute("height", 1);
                    }
                    tParent.appendChild(tCont);
                  } else {
                    this.innerElem.appendChild(tSpan);
                  }
                } else {
                  tSpan.textContent = letters[i].val;
                  tSpan.setAttributeNS(
                    "http://www.w3.org/XML/1998/namespace",
                    "xml:space",
                    "preserve",
                  );
                  if (!this.isMasked) {
                    this.innerElem.appendChild(tParent);
                    //
                    tSpan.style.transform = tSpan.style.webkitTransform =
                      "translate3d(0," +
                      -documentData.finalSize / 1.2 +
                      "px,0)";
                  } else {
                    this.innerElem.appendChild(tSpan);
                  }
                }
                //
                if (!this.isMasked) {
                  this.textSpans[cnt] = tParent;
                } else {
                  this.textSpans[cnt] = tSpan;
                }
                this.textSpans[cnt].style.display = "block";
                this.textPaths[cnt] = tSpan;
                cnt += 1;
              }
              while (cnt < this.textSpans.length) {
                this.textSpans[cnt].style.display = "none";
                cnt += 1;
              }
            };

            HTextElement.prototype.renderInnerContent = function() {
              if (this.data.singleShape) {
                if (!this._isFirstFrame && !this.lettersChangedFlag) {
                  return;
                } else {
                  // Todo Benchmark if using this is better than getBBox
                  if (this.isMasked && this.finalTransform._matMdf) {
                    this.svgElement.setAttribute(
                      "viewBox",
                      -this.finalTransform.mProp.p.v[0] +
                        " " +
                        -this.finalTransform.mProp.p.v[1] +
                        " " +
                        this.compW +
                        " " +
                        this.compH,
                    );
                    this.svgElement.style.transform = this.svgElement.style.webkitTransform =
                      "translate(" +
                      -this.finalTransform.mProp.p.v[0] +
                      "px," +
                      -this.finalTransform.mProp.p.v[1] +
                      "px)";
                  }
                }
              }

              this.textAnimator.getMeasures(
                this.textProperty.currentData,
                this.lettersChangedFlag,
              );
              if (
                !this.lettersChangedFlag &&
                !this.textAnimator.lettersChangedFlag
              ) {
                return;
              }
              var i,
                len,
                count = 0;
              var renderedLetters = this.textAnimator.renderedLetters;

              var letters = this.textProperty.currentData.l;

              len = letters.length;
              var renderedLetter, textSpan, textPath;
              for (i = 0; i < len; i += 1) {
                if (letters[i].n) {
                  count += 1;
                  continue;
                }
                textSpan = this.textSpans[i];
                textPath = this.textPaths[i];
                renderedLetter = renderedLetters[count];
                count += 1;
                if (renderedLetter._mdf.m) {
                  if (!this.isMasked) {
                    textSpan.style.transform = textSpan.style.webkitTransform =
                      renderedLetter.m;
                  } else {
                    textSpan.setAttribute("transform", renderedLetter.m);
                  }
                }
                ////textSpan.setAttribute('opacity',renderedLetter.o);
                textSpan.style.opacity = renderedLetter.o;
                if (renderedLetter.sw && renderedLetter._mdf.sw) {
                  textPath.setAttribute("stroke-width", renderedLetter.sw);
                }
                if (renderedLetter.sc && renderedLetter._mdf.sc) {
                  textPath.setAttribute("stroke", renderedLetter.sc);
                }
                if (renderedLetter.fc && renderedLetter._mdf.fc) {
                  textPath.setAttribute("fill", renderedLetter.fc);
                  textPath.style.color = renderedLetter.fc;
                }
              }

              if (
                this.innerElem.getBBox &&
                !this.hidden &&
                (this._isFirstFrame || this._mdf)
              ) {
                var boundingBox = this.innerElem.getBBox();

                if (this.currentBBox.w !== boundingBox.width) {
                  this.currentBBox.w = boundingBox.width;
                  this.svgElement.setAttribute("width", boundingBox.width);
                }
                if (this.currentBBox.h !== boundingBox.height) {
                  this.currentBBox.h = boundingBox.height;
                  this.svgElement.setAttribute("height", boundingBox.height);
                }

                var margin = 1;
                if (
                  this.currentBBox.w !== boundingBox.width + margin * 2 ||
                  this.currentBBox.h !== boundingBox.height + margin * 2 ||
                  this.currentBBox.x !== boundingBox.x - margin ||
                  this.currentBBox.y !== boundingBox.y - margin
                ) {
                  this.currentBBox.w = boundingBox.width + margin * 2;
                  this.currentBBox.h = boundingBox.height + margin * 2;
                  this.currentBBox.x = boundingBox.x - margin;
                  this.currentBBox.y = boundingBox.y - margin;

                  this.svgElement.setAttribute(
                    "viewBox",
                    this.currentBBox.x +
                      " " +
                      this.currentBBox.y +
                      " " +
                      this.currentBBox.w +
                      " " +
                      this.currentBBox.h,
                  );
                  this.svgElement.style.transform = this.svgElement.style.webkitTransform =
                    "translate(" +
                    this.currentBBox.x +
                    "px," +
                    this.currentBBox.y +
                    "px)";
                }
              }
            };
            function HImageElement(data, globalData, comp) {
              this.assetData = globalData.getAssetData(data.refId);
              this.initElement(data, globalData, comp);
            }

            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HBaseElement,
                HSolidElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              HImageElement,
            );

            HImageElement.prototype.createContent = function() {
              var assetPath = this.globalData.getAssetsPath(this.assetData);
              var img = new Image();

              if (this.data.hasMask) {
                this.imageElem = createNS("image");
                this.imageElem.setAttribute("width", this.assetData.w + "px");
                this.imageElem.setAttribute("height", this.assetData.h + "px");
                this.imageElem.setAttributeNS(
                  "http://www.w3.org/1999/xlink",
                  "href",
                  assetPath,
                );
                this.layerElement.appendChild(this.imageElem);
                this.baseElement.setAttribute("width", this.assetData.w);
                this.baseElement.setAttribute("height", this.assetData.h);
              } else {
                this.layerElement.appendChild(img);
              }
              img.src = assetPath;
              if (this.data.ln) {
                this.baseElement.setAttribute("id", this.data.ln);
              }
            };
            function HCameraElement(data, globalData, comp) {
              this.initFrame();
              this.initBaseData(data, globalData, comp);
              this.initHierarchy();
              var getProp = PropertyFactory.getProp;
              this.pe = getProp(this, data.pe, 0, 0, this);
              if (data.ks.p.s) {
                this.px = getProp(this, data.ks.p.x, 1, 0, this);
                this.py = getProp(this, data.ks.p.y, 1, 0, this);
                this.pz = getProp(this, data.ks.p.z, 1, 0, this);
              } else {
                this.p = getProp(this, data.ks.p, 1, 0, this);
              }
              if (data.ks.a) {
                this.a = getProp(this, data.ks.a, 1, 0, this);
              }
              if (data.ks.or.k.length && data.ks.or.k[0].to) {
                var i,
                  len = data.ks.or.k.length;
                for (i = 0; i < len; i += 1) {
                  data.ks.or.k[i].to = null;
                  data.ks.or.k[i].ti = null;
                }
              }
              this.or = getProp(this, data.ks.or, 1, degToRads, this);
              this.or.sh = true;
              this.rx = getProp(this, data.ks.rx, 0, degToRads, this);
              this.ry = getProp(this, data.ks.ry, 0, degToRads, this);
              this.rz = getProp(this, data.ks.rz, 0, degToRads, this);
              this.mat = new Matrix();
              this._prevMat = new Matrix();
              this._isFirstFrame = true;

              // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.
              this.finalTransform = {
                mProp: this,
              };
            }
            extendPrototype(
              [BaseElement, FrameElement, HierarchyElement],
              HCameraElement,
            );

            HCameraElement.prototype.setup = function() {
              var i,
                len = this.comp.threeDElements.length,
                comp;
              for (i = 0; i < len; i += 1) {
                //[perspectiveElem,container]
                comp = this.comp.threeDElements[i];
                if (comp.type === "3d") {
                  comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective =
                    this.pe.v + "px";
                  comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin =
                    "0px 0px 0px";
                  comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform =
                    "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                }
              }
            };

            HCameraElement.prototype.createElements = function() {};

            HCameraElement.prototype.hide = function() {};

            HCameraElement.prototype.renderFrame = function() {
              var _mdf = this._isFirstFrame;
              var i, len;
              if (this.hierarchy) {
                len = this.hierarchy.length;
                for (i = 0; i < len; i += 1) {
                  _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;
                }
              }
              if (
                _mdf ||
                this.pe._mdf ||
                (this.p && this.p._mdf) ||
                (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) ||
                this.rx._mdf ||
                this.ry._mdf ||
                this.rz._mdf ||
                this.or._mdf ||
                (this.a && this.a._mdf)
              ) {
                this.mat.reset();

                if (this.hierarchy) {
                  var mat;
                  len = this.hierarchy.length - 1;
                  for (i = len; i >= 0; i -= 1) {
                    /*mat = this.hierarchy[i].finalTransform.mProp.v.props;
                console.log(mat)
                this.mat.transform(-mat[0],-mat[1],-mat[2],-mat[3],-mat[4],-mat[5],-mat[6],-mat[7],-mat[8],-mat[9],-mat[10],-mat[11],-mat[12],-mat[13],-mat[14],mat[15]);
                console.log(this.mat.props)*/
                    var mTransf = this.hierarchy[i].finalTransform.mProp;
                    this.mat.translate(
                      -mTransf.p.v[0],
                      -mTransf.p.v[1],
                      mTransf.p.v[2],
                    );
                    this.mat
                      .rotateX(-mTransf.or.v[0])
                      .rotateY(-mTransf.or.v[1])
                      .rotateZ(mTransf.or.v[2]);
                    this.mat
                      .rotateX(-mTransf.rx.v)
                      .rotateY(-mTransf.ry.v)
                      .rotateZ(mTransf.rz.v);
                    this.mat.scale(
                      1 / mTransf.s.v[0],
                      1 / mTransf.s.v[1],
                      1 / mTransf.s.v[2],
                    );
                    this.mat.translate(
                      mTransf.a.v[0],
                      mTransf.a.v[1],
                      mTransf.a.v[2],
                    );
                  }
                }

                if (this.p) {
                  this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);
                } else {
                  this.mat.translate(-this.px.v, -this.py.v, this.pz.v);
                }
                if (this.a) {
                  var diffVector = [
                    this.p.v[0] - this.a.v[0],
                    this.p.v[1] - this.a.v[1],
                    this.p.v[2] - this.a.v[2],
                  ];
                  var mag = Math.sqrt(
                    Math.pow(diffVector[0], 2) +
                      Math.pow(diffVector[1], 2) +
                      Math.pow(diffVector[2], 2),
                  );
                  //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));
                  var lookDir = [
                    diffVector[0] / mag,
                    diffVector[1] / mag,
                    diffVector[2] / mag,
                  ];
                  var lookLengthOnXZ = Math.sqrt(
                    lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0],
                  );
                  var m_rotationX = Math.atan2(lookDir[1], lookLengthOnXZ);
                  var m_rotationY = Math.atan2(lookDir[0], -lookDir[2]);
                  this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);
                }
                this.mat
                  .rotateX(-this.rx.v)
                  .rotateY(-this.ry.v)
                  .rotateZ(this.rz.v);
                this.mat
                  .rotateX(-this.or.v[0])
                  .rotateY(-this.or.v[1])
                  .rotateZ(this.or.v[2]);
                this.mat.translate(
                  this.globalData.compSize.w / 2,
                  this.globalData.compSize.h / 2,
                  0,
                );
                this.mat.translate(0, 0, this.pe.v);

                var hasMatrixChanged = !this._prevMat.equals(this.mat);
                if (
                  (hasMatrixChanged || this.pe._mdf) &&
                  this.comp.threeDElements
                ) {
                  len = this.comp.threeDElements.length;
                  var comp;
                  for (i = 0; i < len; i += 1) {
                    comp = this.comp.threeDElements[i];
                    if (comp.type === "3d") {
                      if (hasMatrixChanged) {
                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();
                      }
                      if (this.pe._mdf) {
                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective =
                          this.pe.v + "px";
                      }
                    }
                  }
                  this.mat.clone(this._prevMat);
                }
              }
              this._isFirstFrame = false;
            };

            HCameraElement.prototype.prepareFrame = function(num) {
              this.prepareProperties(num, true);
            };

            HCameraElement.prototype.destroy = function() {};
            HCameraElement.prototype.getBaseElement = function() {
              return null;
            };
            function HEffects() {}
            HEffects.prototype.renderFrame = function() {};
            var animationManager = (function() {
              var moduleOb = {};
              var registeredAnimations = [];
              var initTime = 0;
              var len = 0;
              var playingAnimationsNum = 0;
              var _stopped = true;
              var _isFrozen = false;

              function removeElement(ev) {
                var i = 0;
                var animItem = ev.target;
                while (i < len) {
                  if (registeredAnimations[i].animation === animItem) {
                    registeredAnimations.splice(i, 1);
                    i -= 1;
                    len -= 1;
                    if (!animItem.isPaused) {
                      subtractPlayingCount();
                    }
                  }
                  i += 1;
                }
              }

              function registerAnimation(element, animationData) {
                if (!element) {
                  return null;
                }
                var i = 0;
                while (i < len) {
                  if (
                    registeredAnimations[i].elem == element &&
                    registeredAnimations[i].elem !== null
                  ) {
                    return registeredAnimations[i].animation;
                  }
                  i += 1;
                }
                var animItem = new AnimationItem();
                setupAnimation(animItem, element);
                animItem.setData(element, animationData);
                return animItem;
              }

              function getRegisteredAnimations() {
                var i,
                  len = registeredAnimations.length;
                var animations = [];
                for (i = 0; i < len; i += 1) {
                  animations.push(registeredAnimations[i].animation);
                }
                return animations;
              }

              function addPlayingCount() {
                playingAnimationsNum += 1;
                activate();
              }

              function subtractPlayingCount() {
                playingAnimationsNum -= 1;
              }

              function setupAnimation(animItem, element) {
                animItem.addEventListener("destroy", removeElement);
                animItem.addEventListener("_active", addPlayingCount);
                animItem.addEventListener("_idle", subtractPlayingCount);
                registeredAnimations.push({
                  elem: element,
                  animation: animItem,
                });
                len += 1;
              }

              function loadAnimation(params) {
                var animItem = new AnimationItem();
                setupAnimation(animItem, null);
                animItem.setParams(params);
                return animItem;
              }

              function setSpeed(val, animation) {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.setSpeed(val, animation);
                }
              }

              function setDirection(val, animation) {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.setDirection(
                    val,
                    animation,
                  );
                }
              }

              function play(animation) {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.play(animation);
                }
              }
              function resume(nowTime) {
                var elapsedTime = nowTime - initTime;
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.advanceTime(elapsedTime);
                }
                initTime = nowTime;
                if (playingAnimationsNum && !_isFrozen) {
                  window.requestAnimationFrame(resume);
                } else {
                  _stopped = true;
                }
              }

              function first(nowTime) {
                initTime = nowTime;
                window.requestAnimationFrame(resume);
              }

              function pause(animation) {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.pause(animation);
                }
              }

              function goToAndStop(value, isFrame, animation) {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.goToAndStop(
                    value,
                    isFrame,
                    animation,
                  );
                }
              }

              function stop(animation) {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.stop(animation);
                }
              }

              function togglePause(animation) {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.togglePause(animation);
                }
              }

              function destroy(animation) {
                var i;
                for (i = len - 1; i >= 0; i -= 1) {
                  registeredAnimations[i].animation.destroy(animation);
                }
              }

              function searchAnimations(animationData, standalone, renderer) {
                var animElements = [].concat(
                  [].slice.call(document.getElementsByClassName("lottie")),
                  [].slice.call(document.getElementsByClassName("bodymovin")),
                );
                var i,
                  len = animElements.length;
                for (i = 0; i < len; i += 1) {
                  if (renderer) {
                    animElements[i].setAttribute("data-bm-type", renderer);
                  }
                  registerAnimation(animElements[i], animationData);
                }
                if (standalone && len === 0) {
                  if (!renderer) {
                    renderer = "svg";
                  }
                  var body = document.getElementsByTagName("body")[0];
                  body.innerHTML = "";
                  var div = createTag("div");
                  div.style.width = "100%";
                  div.style.height = "100%";
                  div.setAttribute("data-bm-type", renderer);
                  body.appendChild(div);
                  registerAnimation(div, animationData);
                }
              }

              function resize() {
                var i;
                for (i = 0; i < len; i += 1) {
                  registeredAnimations[i].animation.resize();
                }
              }

              function activate() {
                if (!_isFrozen && playingAnimationsNum) {
                  if (_stopped) {
                    window.requestAnimationFrame(first);
                    _stopped = false;
                  }
                }
              }

              function freeze() {
                _isFrozen = true;
              }

              function unfreeze() {
                _isFrozen = false;
                activate();
              }

              moduleOb.registerAnimation = registerAnimation;
              moduleOb.loadAnimation = loadAnimation;
              moduleOb.setSpeed = setSpeed;
              moduleOb.setDirection = setDirection;
              moduleOb.play = play;
              moduleOb.pause = pause;
              moduleOb.stop = stop;
              moduleOb.togglePause = togglePause;
              moduleOb.searchAnimations = searchAnimations;
              moduleOb.resize = resize;
              //moduleOb.start = start;
              moduleOb.goToAndStop = goToAndStop;
              moduleOb.destroy = destroy;
              moduleOb.freeze = freeze;
              moduleOb.unfreeze = unfreeze;
              moduleOb.getRegisteredAnimations = getRegisteredAnimations;
              return moduleOb;
            })();

            var AnimationItem = function() {
              this._cbs = [];
              this.name = "";
              this.path = "";
              this.isLoaded = false;
              this.currentFrame = 0;
              this.currentRawFrame = 0;
              this.totalFrames = 0;
              this.frameRate = 0;
              this.frameMult = 0;
              this.playSpeed = 1;
              this.playDirection = 1;
              this.playCount = 0;
              this.animationData = {};
              this.assets = [];
              this.isPaused = true;
              this.autoplay = false;
              this.loop = true;
              this.renderer = null;
              this.animationID = createElementID();
              this.assetsPath = "";
              this.timeCompleted = 0;
              this.segmentPos = 0;
              this.subframeEnabled = subframeEnabled;
              this.segments = [];
              this._idle = true;
              this._completedLoop = false;
              this.projectInterface = ProjectInterface();
              this.imagePreloader = new ImagePreloader();
            };

            extendPrototype([BaseEvent], AnimationItem);

            AnimationItem.prototype.setParams = function(params) {
              if (params.context) {
                this.context = params.context;
              }
              if (params.wrapper || params.container) {
                this.wrapper = params.wrapper || params.container;
              }
              var animType = params.animType
                ? params.animType
                : params.renderer
                ? params.renderer
                : "svg";
              switch (animType) {
                case "canvas":
                  this.renderer = new CanvasRenderer(
                    this,
                    params.rendererSettings,
                  );
                  break;
                case "svg":
                  this.renderer = new SVGRenderer(
                    this,
                    params.rendererSettings,
                  );
                  break;
                default:
                  this.renderer = new HybridRenderer(
                    this,
                    params.rendererSettings,
                  );
                  break;
              }
              this.renderer.setProjectInterface(this.projectInterface);
              this.animType = animType;

              if (params.loop === "" || params.loop === null) {
              } else if (params.loop === false) {
                this.loop = false;
              } else if (params.loop === true) {
                this.loop = true;
              } else {
                this.loop = parseInt(params.loop);
              }
              this.autoplay = "autoplay" in params ? params.autoplay : true;
              this.name = params.name ? params.name : "";
              this.autoloadSegments = params.hasOwnProperty("autoloadSegments")
                ? params.autoloadSegments
                : true;
              this.assetsPath = params.assetsPath;
              if (params.animationData) {
                this.configAnimation(params.animationData);
              } else if (params.path) {
                if (params.path.substr(-4) != "json") {
                  if (params.path.substr(-1, 1) != "/") {
                    params.path += "/";
                  }
                  params.path += "data.json";
                }

                if (params.path.lastIndexOf("\\") != -1) {
                  this.path = params.path.substr(
                    0,
                    params.path.lastIndexOf("\\") + 1,
                  );
                } else {
                  this.path = params.path.substr(
                    0,
                    params.path.lastIndexOf("/") + 1,
                  );
                }
                this.fileName = params.path.substr(
                  params.path.lastIndexOf("/") + 1,
                );
                this.fileName = this.fileName.substr(
                  0,
                  this.fileName.lastIndexOf(".json"),
                );

                assetLoader.load(
                  params.path,
                  this.configAnimation.bind(this),
                  function() {
                    this.trigger("data_failed");
                  }.bind(this),
                );
              }
            };

            AnimationItem.prototype.setData = function(wrapper, animationData) {
              var params = {
                wrapper: wrapper,
                animationData: animationData
                  ? typeof animationData === "object"
                    ? animationData
                    : JSON.parse(animationData)
                  : null,
              };
              var wrapperAttributes = wrapper.attributes;

              params.path = wrapperAttributes.getNamedItem(
                "data-animation-path",
              )
                ? wrapperAttributes.getNamedItem("data-animation-path").value
                : wrapperAttributes.getNamedItem("data-bm-path")
                ? wrapperAttributes.getNamedItem("data-bm-path").value
                : wrapperAttributes.getNamedItem("bm-path")
                ? wrapperAttributes.getNamedItem("bm-path").value
                : "";
              params.animType = wrapperAttributes.getNamedItem("data-anim-type")
                ? wrapperAttributes.getNamedItem("data-anim-type").value
                : wrapperAttributes.getNamedItem("data-bm-type")
                ? wrapperAttributes.getNamedItem("data-bm-type").value
                : wrapperAttributes.getNamedItem("bm-type")
                ? wrapperAttributes.getNamedItem("bm-type").value
                : wrapperAttributes.getNamedItem("data-bm-renderer")
                ? wrapperAttributes.getNamedItem("data-bm-renderer").value
                : wrapperAttributes.getNamedItem("bm-renderer")
                ? wrapperAttributes.getNamedItem("bm-renderer").value
                : "canvas";

              var loop = wrapperAttributes.getNamedItem("data-anim-loop")
                ? wrapperAttributes.getNamedItem("data-anim-loop").value
                : wrapperAttributes.getNamedItem("data-bm-loop")
                ? wrapperAttributes.getNamedItem("data-bm-loop").value
                : wrapperAttributes.getNamedItem("bm-loop")
                ? wrapperAttributes.getNamedItem("bm-loop").value
                : "";
              if (loop === "") {
              } else if (loop === "false") {
                params.loop = false;
              } else if (loop === "true") {
                params.loop = true;
              } else {
                params.loop = parseInt(loop);
              }
              var autoplay = wrapperAttributes.getNamedItem(
                "data-anim-autoplay",
              )
                ? wrapperAttributes.getNamedItem("data-anim-autoplay").value
                : wrapperAttributes.getNamedItem("data-bm-autoplay")
                ? wrapperAttributes.getNamedItem("data-bm-autoplay").value
                : wrapperAttributes.getNamedItem("bm-autoplay")
                ? wrapperAttributes.getNamedItem("bm-autoplay").value
                : true;
              params.autoplay = autoplay !== "false";

              params.name = wrapperAttributes.getNamedItem("data-name")
                ? wrapperAttributes.getNamedItem("data-name").value
                : wrapperAttributes.getNamedItem("data-bm-name")
                ? wrapperAttributes.getNamedItem("data-bm-name").value
                : wrapperAttributes.getNamedItem("bm-name")
                ? wrapperAttributes.getNamedItem("bm-name").value
                : "";
              var prerender = wrapperAttributes.getNamedItem(
                "data-anim-prerender",
              )
                ? wrapperAttributes.getNamedItem("data-anim-prerender").value
                : wrapperAttributes.getNamedItem("data-bm-prerender")
                ? wrapperAttributes.getNamedItem("data-bm-prerender").value
                : wrapperAttributes.getNamedItem("bm-prerender")
                ? wrapperAttributes.getNamedItem("bm-prerender").value
                : "";

              if (prerender === "false") {
                params.prerender = false;
              }
              this.setParams(params);
            };

            AnimationItem.prototype.includeLayers = function(data) {
              if (data.op > this.animationData.op) {
                this.animationData.op = data.op;
                this.totalFrames = Math.floor(data.op - this.animationData.ip);
              }
              var layers = this.animationData.layers;
              var i,
                len = layers.length;
              var newLayers = data.layers;
              var j,
                jLen = newLayers.length;
              for (j = 0; j < jLen; j += 1) {
                i = 0;
                while (i < len) {
                  if (layers[i].id == newLayers[j].id) {
                    layers[i] = newLayers[j];
                    break;
                  }
                  i += 1;
                }
              }
              if (data.chars || data.fonts) {
                this.renderer.globalData.fontManager.addChars(data.chars);
                this.renderer.globalData.fontManager.addFonts(
                  data.fonts,
                  this.renderer.globalData.defs,
                );
              }
              if (data.assets) {
                len = data.assets.length;
                for (i = 0; i < len; i += 1) {
                  this.animationData.assets.push(data.assets[i]);
                }
              }
              this.animationData.__complete = false;
              dataManager.completeData(
                this.animationData,
                this.renderer.globalData.fontManager,
              );
              this.renderer.includeLayers(data.layers);
              if (expressionsPlugin) {
                expressionsPlugin.initExpressions(this);
              }
              this.loadNextSegment();
            };

            AnimationItem.prototype.loadNextSegment = function() {
              var segments = this.animationData.segments;
              if (
                !segments ||
                segments.length === 0 ||
                !this.autoloadSegments
              ) {
                this.trigger("data_ready");
                this.timeCompleted = this.totalFrames;
                return;
              }
              var segment = segments.shift();
              this.timeCompleted = segment.time * this.frameRate;
              var segmentPath =
                this.path + this.fileName + "_" + this.segmentPos + ".json";
              this.segmentPos += 1;
              assetLoader.load(
                segmentPath,
                this.includeLayers.bind(this),
                function() {
                  this.trigger("data_failed");
                }.bind(this),
              );
            };

            AnimationItem.prototype.loadSegments = function() {
              var segments = this.animationData.segments;
              if (!segments) {
                this.timeCompleted = this.totalFrames;
              }
              this.loadNextSegment();
            };

            AnimationItem.prototype.imagesLoaded = function() {
              this.trigger("loaded_images");
              this.checkLoaded();
            };

            AnimationItem.prototype.preloadImages = function() {
              this.imagePreloader.setAssetsPath(this.assetsPath);
              this.imagePreloader.setPath(this.path);
              this.imagePreloader.loadAssets(
                this.animationData.assets,
                this.imagesLoaded.bind(this),
              );
            };

            AnimationItem.prototype.configAnimation = function(animData) {
              if (!this.renderer) {
                return;
              }
              this.animationData = animData;
              this.totalFrames = Math.floor(
                this.animationData.op - this.animationData.ip,
              );
              this.renderer.configAnimation(animData);
              if (!animData.assets) {
                animData.assets = [];
              }
              this.renderer.searchExtraCompositions(animData.assets);

              this.assets = this.animationData.assets;
              this.frameRate = this.animationData.fr;
              this.firstFrame = Math.round(this.animationData.ip);
              this.frameMult = this.animationData.fr / 1000;
              this.trigger("config_ready");
              this.preloadImages();
              this.loadSegments();
              this.updaFrameModifier();
              this.waitForFontsLoaded();
            };

            AnimationItem.prototype.waitForFontsLoaded = function() {
              if (!this.renderer) {
                return;
              }
              if (this.renderer.globalData.fontManager.loaded()) {
                this.checkLoaded();
              } else {
                setTimeout(this.waitForFontsLoaded.bind(this), 20);
              }
            };

            AnimationItem.prototype.checkLoaded = function() {
              if (
                !this.isLoaded &&
                this.renderer.globalData.fontManager.loaded() &&
                (this.imagePreloader.loaded() ||
                  this.renderer.rendererType !== "canvas")
              ) {
                this.isLoaded = true;
                dataManager.completeData(
                  this.animationData,
                  this.renderer.globalData.fontManager,
                );
                if (expressionsPlugin) {
                  expressionsPlugin.initExpressions(this);
                }
                this.renderer.initItems();
                setTimeout(
                  function() {
                    this.trigger("DOMLoaded");
                  }.bind(this),
                  0,
                );
                this.gotoFrame();
                if (this.autoplay) {
                  this.play();
                }
              }
            };

            AnimationItem.prototype.resize = function() {
              this.renderer.updateContainerSize();
            };

            AnimationItem.prototype.setSubframe = function(flag) {
              this.subframeEnabled = flag ? true : false;
            };

            AnimationItem.prototype.gotoFrame = function() {
              this.currentFrame = this.subframeEnabled
                ? this.currentRawFrame
                : ~~this.currentRawFrame;

              if (
                this.timeCompleted !== this.totalFrames &&
                this.currentFrame > this.timeCompleted
              ) {
                this.currentFrame = this.timeCompleted;
              }
              this.trigger("enterFrame");
              this.renderFrame();
            };

            AnimationItem.prototype.renderFrame = function() {
              if (this.isLoaded === false) {
                return;
              }
              this.renderer.renderFrame(this.currentFrame + this.firstFrame);
            };

            AnimationItem.prototype.play = function(name) {
              if (name && this.name != name) {
                return;
              }
              if (this.isPaused === true) {
                this.isPaused = false;
                if (this._idle) {
                  this._idle = false;
                  this.trigger("_active");
                }
              }
            };

            AnimationItem.prototype.pause = function(name) {
              if (name && this.name != name) {
                return;
              }
              if (this.isPaused === false) {
                this.isPaused = true;
                this._idle = true;
                this.trigger("_idle");
              }
            };

            AnimationItem.prototype.togglePause = function(name) {
              if (name && this.name != name) {
                return;
              }
              if (this.isPaused === true) {
                this.play();
              } else {
                this.pause();
              }
            };

            AnimationItem.prototype.stop = function(name) {
              if (name && this.name != name) {
                return;
              }
              this.pause();
              this.playCount = 0;
              this._completedLoop = false;
              this.setCurrentRawFrameValue(0);
            };

            AnimationItem.prototype.goToAndStop = function(
              value,
              isFrame,
              name,
            ) {
              if (name && this.name != name) {
                return;
              }
              if (isFrame) {
                this.setCurrentRawFrameValue(value);
              } else {
                this.setCurrentRawFrameValue(value * this.frameModifier);
              }
              this.pause();
            };

            AnimationItem.prototype.goToAndPlay = function(
              value,
              isFrame,
              name,
            ) {
              this.goToAndStop(value, isFrame, name);
              this.play();
            };

            AnimationItem.prototype.advanceTime = function(value) {
              if (this.isPaused === true || this.isLoaded === false) {
                return;
              }
              var nextValue = this.currentRawFrame + value * this.frameModifier;
              var _isComplete = false;
              // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.
              // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.
              if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {
                if (!this.loop || this.playCount === this.loop) {
                  if (
                    !this.checkSegments(
                      nextValue > this.totalFrames
                        ? nextValue % this.totalFrames
                        : 0,
                    )
                  ) {
                    _isComplete = true;
                    nextValue = this.totalFrames - 1;
                  }
                } else if (nextValue >= this.totalFrames) {
                  this.playCount += 1;
                  if (!this.checkSegments(nextValue % this.totalFrames)) {
                    this.setCurrentRawFrameValue(nextValue % this.totalFrames);
                    this._completedLoop = true;
                    this.trigger("loopComplete");
                  }
                } else {
                  this.setCurrentRawFrameValue(nextValue);
                }
              } else if (nextValue < 0) {
                if (!this.checkSegments(nextValue % this.totalFrames)) {
                  if (
                    this.loop &&
                    !(this.playCount-- <= 0 && this.loop !== true)
                  ) {
                    this.setCurrentRawFrameValue(
                      this.totalFrames + (nextValue % this.totalFrames),
                    );
                    if (!this._completedLoop) {
                      this._completedLoop = true;
                    } else {
                      this.trigger("loopComplete");
                    }
                  } else {
                    _isComplete = true;
                    nextValue = 0;
                  }
                }
              } else {
                this.setCurrentRawFrameValue(nextValue);
              }
              if (_isComplete) {
                this.setCurrentRawFrameValue(nextValue);
                this.pause();
                this.trigger("complete");
              }
            };

            AnimationItem.prototype.adjustSegment = function(arr, offset) {
              this.playCount = 0;
              if (arr[1] < arr[0]) {
                if (this.frameModifier > 0) {
                  if (this.playSpeed < 0) {
                    this.setSpeed(-this.playSpeed);
                  } else {
                    this.setDirection(-1);
                  }
                }
                this.timeCompleted = this.totalFrames = arr[0] - arr[1];
                this.firstFrame = arr[1];
                this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);
              } else if (arr[1] > arr[0]) {
                if (this.frameModifier < 0) {
                  if (this.playSpeed < 0) {
                    this.setSpeed(-this.playSpeed);
                  } else {
                    this.setDirection(1);
                  }
                }
                this.timeCompleted = this.totalFrames = arr[1] - arr[0];
                this.firstFrame = arr[0];
                this.setCurrentRawFrameValue(0.001 + offset);
              }
              this.trigger("segmentStart");
            };
            AnimationItem.prototype.setSegment = function(init, end) {
              var pendingFrame = -1;
              if (this.isPaused) {
                if (this.currentRawFrame + this.firstFrame < init) {
                  pendingFrame = init;
                } else if (this.currentRawFrame + this.firstFrame > end) {
                  pendingFrame = end - init;
                }
              }

              this.firstFrame = init;
              this.timeCompleted = this.totalFrames = end - init;
              if (pendingFrame !== -1) {
                this.goToAndStop(pendingFrame, true);
              }
            };

            AnimationItem.prototype.playSegments = function(arr, forceFlag) {
              if (forceFlag) {
                this.segments.length = 0;
              }
              if (typeof arr[0] === "object") {
                var i,
                  len = arr.length;
                for (i = 0; i < len; i += 1) {
                  this.segments.push(arr[i]);
                }
              } else {
                this.segments.push(arr);
              }
              if (this.segments.length && forceFlag) {
                this.adjustSegment(this.segments.shift(), 0);
              }
              if (this.isPaused) {
                this.play();
              }
            };

            AnimationItem.prototype.resetSegments = function(forceFlag) {
              this.segments.length = 0;
              this.segments.push([
                this.animationData.ip,
                this.animationData.op,
              ]);
              //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);
              if (forceFlag) {
                this.checkSegments(0);
              }
            };
            AnimationItem.prototype.checkSegments = function(offset) {
              if (this.segments.length) {
                this.adjustSegment(this.segments.shift(), offset);
                return true;
              }
              return false;
            };

            AnimationItem.prototype.destroy = function(name) {
              if ((name && this.name != name) || !this.renderer) {
                return;
              }
              this.renderer.destroy();
              this.imagePreloader.destroy();
              this.trigger("destroy");
              this._cbs = null;
              this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;
              this.renderer = null;
            };

            AnimationItem.prototype.setCurrentRawFrameValue = function(value) {
              this.currentRawFrame = value;
              this.gotoFrame();
            };

            AnimationItem.prototype.setSpeed = function(val) {
              this.playSpeed = val;
              this.updaFrameModifier();
            };

            AnimationItem.prototype.setDirection = function(val) {
              this.playDirection = val < 0 ? -1 : 1;
              this.updaFrameModifier();
            };

            AnimationItem.prototype.updaFrameModifier = function() {
              this.frameModifier =
                this.frameMult * this.playSpeed * this.playDirection;
            };

            AnimationItem.prototype.getPath = function() {
              return this.path;
            };

            AnimationItem.prototype.getAssetsPath = function(assetData) {
              var path = "";
              if (assetData.e) {
                path = assetData.p;
              } else if (this.assetsPath) {
                var imagePath = assetData.p;
                if (imagePath.indexOf("images/") !== -1) {
                  imagePath = imagePath.split("/")[1];
                }
                path = this.assetsPath + imagePath;
              } else {
                path = this.path;
                path += assetData.u ? assetData.u : "";
                path += assetData.p;
              }
              return path;
            };

            AnimationItem.prototype.getAssetData = function(id) {
              var i = 0,
                len = this.assets.length;
              while (i < len) {
                if (id == this.assets[i].id) {
                  return this.assets[i];
                }
                i += 1;
              }
            };

            AnimationItem.prototype.hide = function() {
              this.renderer.hide();
            };

            AnimationItem.prototype.show = function() {
              this.renderer.show();
            };

            AnimationItem.prototype.getDuration = function(isFrame) {
              return isFrame
                ? this.totalFrames
                : this.totalFrames / this.frameRate;
            };

            AnimationItem.prototype.trigger = function(name) {
              if (this._cbs && this._cbs[name]) {
                switch (name) {
                  case "enterFrame":
                    this.triggerEvent(
                      name,
                      new BMEnterFrameEvent(
                        name,
                        this.currentFrame,
                        this.totalFrames,
                        this.frameModifier,
                      ),
                    );
                    break;
                  case "loopComplete":
                    this.triggerEvent(
                      name,
                      new BMCompleteLoopEvent(
                        name,
                        this.loop,
                        this.playCount,
                        this.frameMult,
                      ),
                    );
                    break;
                  case "complete":
                    this.triggerEvent(
                      name,
                      new BMCompleteEvent(name, this.frameMult),
                    );
                    break;
                  case "segmentStart":
                    this.triggerEvent(
                      name,
                      new BMSegmentStartEvent(
                        name,
                        this.firstFrame,
                        this.totalFrames,
                      ),
                    );
                    break;
                  case "destroy":
                    this.triggerEvent(name, new BMDestroyEvent(name, this));
                    break;
                  default:
                    this.triggerEvent(name);
                }
              }
              if (name === "enterFrame" && this.onEnterFrame) {
                this.onEnterFrame.call(
                  this,
                  new BMEnterFrameEvent(
                    name,
                    this.currentFrame,
                    this.totalFrames,
                    this.frameMult,
                  ),
                );
              }
              if (name === "loopComplete" && this.onLoopComplete) {
                this.onLoopComplete.call(
                  this,
                  new BMCompleteLoopEvent(
                    name,
                    this.loop,
                    this.playCount,
                    this.frameMult,
                  ),
                );
              }
              if (name === "complete" && this.onComplete) {
                this.onComplete.call(
                  this,
                  new BMCompleteEvent(name, this.frameMult),
                );
              }
              if (name === "segmentStart" && this.onSegmentStart) {
                this.onSegmentStart.call(
                  this,
                  new BMSegmentStartEvent(
                    name,
                    this.firstFrame,
                    this.totalFrames,
                  ),
                );
              }
              if (name === "destroy" && this.onDestroy) {
                this.onDestroy.call(this, new BMDestroyEvent(name, this));
              }
            };

            var Expressions = (function() {
              var ob = {};
              ob.initExpressions = initExpressions;

              function initExpressions(animation) {
                var stackCount = 0;
                var registers = [];

                function pushExpression() {
                  stackCount += 1;
                }

                function popExpression() {
                  stackCount -= 1;
                  if (stackCount === 0) {
                    releaseInstances();
                  }
                }

                function registerExpressionProperty(expression) {
                  if (registers.indexOf(expression) === -1) {
                    registers.push(expression);
                  }
                }

                function releaseInstances() {
                  var i,
                    len = registers.length;
                  for (i = 0; i < len; i += 1) {
                    registers[i].release();
                  }
                  registers.length = 0;
                }

                animation.renderer.compInterface = CompExpressionInterface(
                  animation.renderer,
                );
                animation.renderer.globalData.projectInterface.registerComposition(
                  animation.renderer,
                );
                animation.renderer.globalData.pushExpression = pushExpression;
                animation.renderer.globalData.popExpression = popExpression;
                animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;
              }
              return ob;
            })();

            expressionsPlugin = Expressions;

            var ExpressionManager = (function() {
              "use strict";
              var ob = {};
              var Math = BMMath;
              var window = null;
              var document = null;

              function $bm_isInstanceOfArray(arr) {
                return (
                  arr.constructor === Array || arr.constructor === Float32Array
                );
              }

              function isNumerable(tOfV, v) {
                return (
                  tOfV === "number" ||
                  tOfV === "boolean" ||
                  tOfV === "string" ||
                  v instanceof Number
                );
              }

              function $bm_neg(a) {
                var tOfA = typeof a;
                if (
                  tOfA === "number" ||
                  tOfA === "boolean" ||
                  a instanceof Number
                ) {
                  return -a;
                }
                if ($bm_isInstanceOfArray(a)) {
                  var i,
                    lenA = a.length;
                  var retArr = [];
                  for (i = 0; i < lenA; i += 1) {
                    retArr[i] = -a[i];
                  }
                  return retArr;
                }
                if (a.propType) {
                  return a.v;
                }
              }

              var easeInBez = BezierFactory.getBezierEasing(
                0.333,
                0,
                0.833,
                0.833,
                "easeIn",
              ).get;
              var easeOutBez = BezierFactory.getBezierEasing(
                0.167,
                0.167,
                0.667,
                1,
                "easeOut",
              ).get;
              var easeInOutBez = BezierFactory.getBezierEasing(
                0.33,
                0,
                0.667,
                1,
                "easeInOut",
              ).get;

              function sum(a, b) {
                var tOfA = typeof a;
                var tOfB = typeof b;
                if (tOfA === "string" || tOfB === "string") {
                  return a + b;
                }
                if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
                  return a + b;
                }
                if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
                  a = a.slice(0);
                  a[0] = a[0] + b;
                  return a;
                }
                if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
                  b = b.slice(0);
                  b[0] = a + b[0];
                  return b;
                }
                if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {
                  var i = 0,
                    lenA = a.length,
                    lenB = b.length;
                  var retArr = [];
                  while (i < lenA || i < lenB) {
                    if (
                      (typeof a[i] === "number" || a[i] instanceof Number) &&
                      (typeof b[i] === "number" || b[i] instanceof Number)
                    ) {
                      retArr[i] = a[i] + b[i];
                    } else {
                      retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
                    }
                    i += 1;
                  }
                  return retArr;
                }
                return 0;
              }
              var add = sum;

              function sub(a, b) {
                var tOfA = typeof a;
                var tOfB = typeof b;
                if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
                  if (tOfA === "string") {
                    a = parseInt(a);
                  }
                  if (tOfB === "string") {
                    b = parseInt(b);
                  }
                  return a - b;
                }
                if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
                  a = a.slice(0);
                  a[0] = a[0] - b;
                  return a;
                }
                if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
                  b = b.slice(0);
                  b[0] = a - b[0];
                  return b;
                }
                if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {
                  var i = 0,
                    lenA = a.length,
                    lenB = b.length;
                  var retArr = [];
                  while (i < lenA || i < lenB) {
                    if (
                      (typeof a[i] === "number" || a[i] instanceof Number) &&
                      (typeof b[i] === "number" || b[i] instanceof Number)
                    ) {
                      retArr[i] = a[i] - b[i];
                    } else {
                      retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];
                    }
                    i += 1;
                  }
                  return retArr;
                }
                return 0;
              }

              function mul(a, b) {
                var tOfA = typeof a;
                var tOfB = typeof b;
                var arr;
                if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
                  return a * b;
                }

                var i, len;
                if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
                  len = a.length;
                  arr = createTypedArray("float32", len);
                  for (i = 0; i < len; i += 1) {
                    arr[i] = a[i] * b;
                  }
                  return arr;
                }
                if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
                  len = b.length;
                  arr = createTypedArray("float32", len);
                  for (i = 0; i < len; i += 1) {
                    arr[i] = a * b[i];
                  }
                  return arr;
                }
                return 0;
              }

              function div(a, b) {
                var tOfA = typeof a;
                var tOfB = typeof b;
                var arr;
                if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {
                  return a / b;
                }
                var i, len;
                if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {
                  len = a.length;
                  arr = createTypedArray("float32", len);
                  for (i = 0; i < len; i += 1) {
                    arr[i] = a[i] / b;
                  }
                  return arr;
                }
                if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {
                  len = b.length;
                  arr = createTypedArray("float32", len);
                  for (i = 0; i < len; i += 1) {
                    arr[i] = a / b[i];
                  }
                  return arr;
                }
                return 0;
              }
              function mod(a, b) {
                if (typeof a === "string") {
                  a = parseInt(a);
                }
                if (typeof b === "string") {
                  b = parseInt(b);
                }
                return a % b;
              }
              var $bm_sum = sum;
              var $bm_sub = sub;
              var $bm_mul = mul;
              var $bm_div = div;
              var $bm_mod = mod;

              function clamp(num, min, max) {
                if (min > max) {
                  var mm = max;
                  max = min;
                  min = mm;
                }
                return Math.min(Math.max(num, min), max);
              }

              function radiansToDegrees(val) {
                return val / degToRads;
              }
              var radians_to_degrees = radiansToDegrees;

              function degreesToRadians(val) {
                return val * degToRads;
              }
              var degrees_to_radians = radiansToDegrees;

              var helperLengthArray = [0, 0, 0, 0, 0, 0];

              function length(arr1, arr2) {
                if (typeof arr1 === "number" || arr1 instanceof Number) {
                  arr2 = arr2 || 0;
                  return Math.abs(arr1 - arr2);
                }
                if (!arr2) {
                  arr2 = helperLengthArray;
                }
                var i,
                  len = Math.min(arr1.length, arr2.length);
                var addedLength = 0;
                for (i = 0; i < len; i += 1) {
                  addedLength += Math.pow(arr2[i] - arr1[i], 2);
                }
                return Math.sqrt(addedLength);
              }

              function normalize(vec) {
                return div(vec, length(vec));
              }

              function rgbToHsl(val) {
                var r = val[0];
                var g = val[1];
                var b = val[2];
                var max = Math.max(r, g, b),
                  min = Math.min(r, g, b);
                var h,
                  s,
                  l = (max + min) / 2;

                if (max == min) {
                  h = s = 0; // achromatic
                } else {
                  var d = max - min;
                  s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
                  switch (max) {
                    case r:
                      h = (g - b) / d + (g < b ? 6 : 0);
                      break;
                    case g:
                      h = (b - r) / d + 2;
                      break;
                    case b:
                      h = (r - g) / d + 4;
                      break;
                  }
                  h /= 6;
                }

                return [h, s, l, val[3]];
              }

              function hue2rgb(p, q, t) {
                if (t < 0) t += 1;
                if (t > 1) t -= 1;
                if (t < 1 / 6) return p + (q - p) * 6 * t;
                if (t < 1 / 2) return q;
                if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;
                return p;
              }

              function hslToRgb(val) {
                var h = val[0];
                var s = val[1];
                var l = val[2];

                var r, g, b;

                if (s === 0) {
                  r = g = b = l; // achromatic
                } else {
                  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
                  var p = 2 * l - q;
                  r = hue2rgb(p, q, h + 1 / 3);
                  g = hue2rgb(p, q, h);
                  b = hue2rgb(p, q, h - 1 / 3);
                }

                return [r, g, b, val[3]];
              }

              function linear(t, tMin, tMax, value1, value2) {
                if (value1 === undefined || value2 === undefined) {
                  value1 = tMin;
                  value2 = tMax;
                  tMin = 0;
                  tMax = 1;
                }
                if (tMax < tMin) {
                  var _tMin = tMax;
                  tMax = tMin;
                  tMin = _tMin;
                }
                if (t <= tMin) {
                  return value1;
                } else if (t >= tMax) {
                  return value2;
                }
                var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);
                if (!value1.length) {
                  return value1 + (value2 - value1) * perc;
                }
                var i,
                  len = value1.length;
                var arr = createTypedArray("float32", len);
                for (i = 0; i < len; i += 1) {
                  arr[i] = value1[i] + (value2[i] - value1[i]) * perc;
                }
                return arr;
              }
              function random(min, max) {
                if (max === undefined) {
                  if (min === undefined) {
                    min = 0;
                    max = 1;
                  } else {
                    max = min;
                    min = undefined;
                  }
                }
                if (max.length) {
                  var i,
                    len = max.length;
                  if (!min) {
                    min = createTypedArray("float32", len);
                  }
                  var arr = createTypedArray("float32", len);
                  var rnd = BMMath.random();
                  for (i = 0; i < len; i += 1) {
                    arr[i] = min[i] + rnd * (max[i] - min[i]);
                  }
                  return arr;
                }
                if (min === undefined) {
                  min = 0;
                }
                var rndm = BMMath.random();
                return min + rndm * (max - min);
              }

              function createPath(points, inTangents, outTangents, closed) {
                var i,
                  len = points.length;
                var path = shape_pool.newElement();
                path.setPathData(!!closed, len);
                var arrPlaceholder = [0, 0],
                  inVertexPoint,
                  outVertexPoint;
                for (i = 0; i < len; i += 1) {
                  inVertexPoint =
                    inTangents && inTangents[i]
                      ? inTangents[i]
                      : arrPlaceholder;
                  outVertexPoint =
                    outTangents && outTangents[i]
                      ? outTangents[i]
                      : arrPlaceholder;
                  path.setTripleAt(
                    points[i][0],
                    points[i][1],
                    outVertexPoint[0] + points[i][0],
                    outVertexPoint[1] + points[i][1],
                    inVertexPoint[0] + points[i][0],
                    inVertexPoint[1] + points[i][1],
                    i,
                    true,
                  );
                }
                return path;
              }

              function initiateExpression(elem, data, property) {
                var val = data.x;
                var needsVelocity = /velocity(?![\w\d])/.test(val);
                var _needsRandom = val.indexOf("random") !== -1;
                var elemType = elem.data.ty;
                var transform, $bm_transform, content, effect;
                var thisProperty = property;
                thisProperty.valueAtTime = thisProperty.getValueAtTime;
                Object.defineProperty(thisProperty, "value", {
                  get: function() {
                    return thisProperty.v;
                  },
                });
                elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;
                elem.comp.displayStartTime = 0;
                var inPoint = elem.data.ip / elem.comp.globalData.frameRate;
                var outPoint = elem.data.op / elem.comp.globalData.frameRate;
                var width = elem.data.sw ? elem.data.sw : 0;
                var height = elem.data.sh ? elem.data.sh : 0;
                var name = elem.data.nm;
                var loopIn, loop_in, loopOut, loop_out, smooth;
                var toWorld,
                  fromWorld,
                  fromComp,
                  toComp,
                  fromCompToSurface,
                  position,
                  rotation,
                  anchorPoint,
                  scale,
                  thisLayer,
                  thisComp,
                  mask,
                  valueAtTime,
                  velocityAtTime;
                var __expression_functions = [];
                if (data.xf) {
                  var i,
                    len = data.xf.length;
                  for (i = 0; i < len; i += 1) {
                    __expression_functions[i] = eval(
                      "(function(){ return " + data.xf[i] + "}())",
                    );
                  }
                }

                var scoped_bm_rt;
                var expression_function = eval(
                  "[function _expression_function(){" +
                    val +
                    ";scoped_bm_rt=$bm_rt}" +
                    "]",
                )[0];
                var numKeys = property.kf ? data.k.length : 0;

                var active = !this.data || this.data.hd !== true;

                var wiggle = function wiggle(freq, amp) {
                  var i,
                    j,
                    len = this.pv.length ? this.pv.length : 1;
                  var addedAmps = createTypedArray("float32", len);
                  freq = 5;
                  var iterations = Math.floor(time * freq);
                  i = 0;
                  j = 0;
                  while (i < iterations) {
                    //var rnd = BMMath.random();
                    for (j = 0; j < len; j += 1) {
                      addedAmps[j] += -amp + amp * 2 * BMMath.random();
                      //addedAmps[j] += -amp + amp*2*rnd;
                    }
                    i += 1;
                  }
                  //var rnd2 = BMMath.random();
                  var periods = time * freq;
                  var perc = periods - Math.floor(periods);
                  var arr = createTypedArray("float32", len);
                  if (len > 1) {
                    for (j = 0; j < len; j += 1) {
                      arr[j] =
                        this.pv[j] +
                        addedAmps[j] +
                        (-amp + amp * 2 * BMMath.random()) * perc;
                      //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;
                      //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);
                    }
                    return arr;
                  } else {
                    return (
                      this.pv +
                      addedAmps[0] +
                      (-amp + amp * 2 * BMMath.random()) * perc
                    );
                  }
                }.bind(this);

                if (thisProperty.loopIn) {
                  loopIn = thisProperty.loopIn.bind(thisProperty);
                  loop_in = loopIn;
                }

                if (thisProperty.loopOut) {
                  loopOut = thisProperty.loopOut.bind(thisProperty);
                  loop_out = loopOut;
                }

                if (thisProperty.smooth) {
                  smooth = thisProperty.smooth.bind(thisProperty);
                }

                function loopInDuration(type, duration) {
                  return loopIn(type, duration, true);
                }

                function loopOutDuration(type, duration) {
                  return loopOut(type, duration, true);
                }

                if (this.getValueAtTime) {
                  valueAtTime = this.getValueAtTime.bind(this);
                }

                if (this.getVelocityAtTime) {
                  velocityAtTime = this.getVelocityAtTime.bind(this);
                }

                var comp = elem.comp.globalData.projectInterface.bind(
                  elem.comp.globalData.projectInterface,
                );

                function lookAt(elem1, elem2) {
                  var fVec = [
                    elem2[0] - elem1[0],
                    elem2[1] - elem1[1],
                    elem2[2] - elem1[2],
                  ];
                  var pitch =
                    Math.atan2(
                      fVec[0],
                      Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2]),
                    ) / degToRads;
                  var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;
                  return [yaw, pitch, 0];
                }

                function easeOut(t, tMin, tMax, val1, val2) {
                  return applyEase(easeOutBez, t, tMin, tMax, val1, val2);
                }

                function easeIn(t, tMin, tMax, val1, val2) {
                  return applyEase(easeInBez, t, tMin, tMax, val1, val2);
                }

                function ease(t, tMin, tMax, val1, val2) {
                  return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);
                }

                function applyEase(fn, t, tMin, tMax, val1, val2) {
                  if (val1 === undefined) {
                    val1 = tMin;
                    val2 = tMax;
                  } else {
                    t = (t - tMin) / (tMax - tMin);
                  }
                  t = t > 1 ? 1 : t < 0 ? 0 : t;
                  var mult = fn(t);
                  if ($bm_isInstanceOfArray(val1)) {
                    var i,
                      len = val1.length;
                    var arr = createTypedArray("float32", len);
                    for (i = 0; i < len; i += 1) {
                      arr[i] = (val2[i] - val1[i]) * mult + val1[i];
                    }
                    return arr;
                  } else {
                    return (val2 - val1) * mult + val1;
                  }
                }

                function nearestKey(time) {
                  var i,
                    len = data.k.length,
                    index,
                    keyTime;
                  if (!data.k.length || typeof data.k[0] === "number") {
                    index = 0;
                    keyTime = 0;
                  } else {
                    index = -1;
                    time *= elem.comp.globalData.frameRate;
                    if (time < data.k[0].t) {
                      index = 1;
                      keyTime = data.k[0].t;
                    } else {
                      for (i = 0; i < len - 1; i += 1) {
                        if (time === data.k[i].t) {
                          index = i + 1;
                          keyTime = data.k[i].t;
                          break;
                        } else if (
                          time > data.k[i].t &&
                          time < data.k[i + 1].t
                        ) {
                          if (time - data.k[i].t > data.k[i + 1].t - time) {
                            index = i + 2;
                            keyTime = data.k[i + 1].t;
                          } else {
                            index = i + 1;
                            keyTime = data.k[i].t;
                          }
                          break;
                        }
                      }
                      if (index === -1) {
                        index = i + 1;
                        keyTime = data.k[i].t;
                      }
                    }
                  }
                  var ob = {};
                  ob.index = index;
                  ob.time = keyTime / elem.comp.globalData.frameRate;
                  return ob;
                }

                function key(ind) {
                  var ob, i, len;
                  if (!data.k.length || typeof data.k[0] === "number") {
                    throw new Error(
                      "The property has no keyframe at index " + ind,
                    );
                  }
                  ind -= 1;
                  ob = {
                    time: data.k[ind].t / elem.comp.globalData.frameRate,
                    value: [],
                  };
                  var arr;
                  if (ind === data.k.length - 1 && !data.k[ind].h) {
                    arr =
                      data.k[ind].s || data.k[ind].s === 0
                        ? data.k[ind - 1].s
                        : data.k[ind].e;
                  } else {
                    arr = data.k[ind].s;
                  }
                  len = arr.length;
                  for (i = 0; i < len; i += 1) {
                    ob[i] = arr[i];
                    ob.value[i] = arr[i];
                  }
                  return ob;
                }

                function framesToTime(frames, fps) {
                  if (!fps) {
                    fps = elem.comp.globalData.frameRate;
                  }
                  return frames / fps;
                }

                function timeToFrames(t, fps) {
                  if (!t && t !== 0) {
                    t = time;
                  }
                  if (!fps) {
                    fps = elem.comp.globalData.frameRate;
                  }
                  return t * fps;
                }

                function seedRandom(seed) {
                  BMMath.seedrandom(randSeed + seed);
                }

                function sourceRectAtTime() {
                  return elem.sourceRectAtTime();
                }

                function substring(init, end) {
                  if (typeof value === "string") {
                    if (end === undefined) {
                      return value.substring(init);
                    }
                    return value.substring(init, end);
                  }
                  return "";
                }

                function substr(init, end) {
                  if (typeof value === "string") {
                    if (end === undefined) {
                      return value.substr(init);
                    }
                    return value.substr(init, end);
                  }
                  return "";
                }

                var time,
                  velocity,
                  value,
                  text,
                  textIndex,
                  textTotal,
                  selectorValue;
                var index = elem.data.ind;
                var hasParent = !!(elem.hierarchy && elem.hierarchy.length);
                var parent;
                var randSeed = Math.floor(Math.random() * 1000000);
                var globalData = elem.globalData;
                function executeExpression(_value) {
                  // globalData.pushExpression();
                  value = _value;
                  if (_needsRandom) {
                    seedRandom(randSeed);
                  }
                  if (
                    this.frameExpressionId === elem.globalData.frameId &&
                    this.propType !== "textSelector"
                  ) {
                    return value;
                  }
                  if (this.propType === "textSelector") {
                    textIndex = this.textIndex;
                    textTotal = this.textTotal;
                    selectorValue = this.selectorValue;
                  }
                  if (!thisLayer) {
                    text = elem.layerInterface.text;
                    thisLayer = elem.layerInterface;
                    thisComp = elem.comp.compInterface;
                    toWorld = thisLayer.toWorld.bind(thisLayer);
                    fromWorld = thisLayer.fromWorld.bind(thisLayer);
                    fromComp = thisLayer.fromComp.bind(thisLayer);
                    toComp = thisLayer.toComp.bind(thisLayer);
                    mask = thisLayer.mask
                      ? thisLayer.mask.bind(thisLayer)
                      : null;
                    fromCompToSurface = fromComp;
                  }
                  if (!transform) {
                    transform = elem.layerInterface("ADBE Transform Group");
                    $bm_transform = transform;
                    if (transform) {
                      anchorPoint = transform.anchorPoint;
                      /*position = transform.position;
                    rotation = transform.rotation;
                    scale = transform.scale;*/
                    }
                  }

                  if (elemType === 4 && !content) {
                    content = thisLayer("ADBE Root Vectors Group");
                  }
                  if (!effect) {
                    effect = thisLayer(4);
                  }
                  hasParent = !!(elem.hierarchy && elem.hierarchy.length);
                  if (hasParent && !parent) {
                    parent = elem.hierarchy[0].layerInterface;
                  }
                  time =
                    this.comp.renderedFrame / this.comp.globalData.frameRate;
                  if (needsVelocity) {
                    velocity = velocityAtTime(time);
                  }
                  expression_function();
                  this.frameExpressionId = elem.globalData.frameId;

                  //TODO: Check if it's possible to return on ShapeInterface the .v value
                  if (scoped_bm_rt.propType === "shape") {
                    scoped_bm_rt = scoped_bm_rt.v;
                  }
                  // globalData.popExpression();
                  return scoped_bm_rt;
                }
                return executeExpression;
              }

              ob.initiateExpression = initiateExpression;
              return ob;
            })();
            var expressionHelpers = (function() {
              function searchExpressions(elem, data, prop) {
                if (data.x) {
                  prop.k = true;
                  prop.x = true;
                  prop.initiateExpression =
                    ExpressionManager.initiateExpression;
                  prop.effectsSequence.push(
                    prop.initiateExpression(elem, data, prop).bind(prop),
                  );
                }
              }

              function getValueAtTime(frameNum) {
                frameNum *= this.elem.globalData.frameRate;
                frameNum -= this.offsetTime;
                if (frameNum !== this._cachingAtTime.lastFrame) {
                  this._cachingAtTime.lastIndex =
                    this._cachingAtTime.lastFrame < frameNum
                      ? this._cachingAtTime.lastIndex
                      : 0;
                  this._cachingAtTime.value = this.interpolateValue(
                    frameNum,
                    this._cachingAtTime,
                  );
                  this._cachingAtTime.lastFrame = frameNum;
                }
                return this._cachingAtTime.value;
              }

              function getSpeedAtTime(frameNum) {
                var delta = -0.01;
                var v1 = this.getValueAtTime(frameNum);
                var v2 = this.getValueAtTime(frameNum + delta);
                var speed = 0;
                if (v1.length) {
                  var i;
                  for (i = 0; i < v1.length; i += 1) {
                    speed += Math.pow(v2[i] - v1[i], 2);
                  }
                  speed = Math.sqrt(speed) * 100;
                } else {
                  speed = 0;
                }
                return speed;
              }

              function getVelocityAtTime(frameNum) {
                if (this.vel !== undefined) {
                  return this.vel;
                }
                var delta = -0.001;
                //frameNum += this.elem.data.st;
                var v1 = this.getValueAtTime(frameNum);
                var v2 = this.getValueAtTime(frameNum + delta);
                var velocity;
                if (v1.length) {
                  velocity = createTypedArray("float32", v1.length);
                  var i;
                  for (i = 0; i < v1.length; i += 1) {
                    //removing frameRate
                    //if needed, don't add it here
                    //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);
                    velocity[i] = (v2[i] - v1[i]) / delta;
                  }
                } else {
                  velocity = (v2 - v1) / delta;
                }
                return velocity;
              }

              function getStaticValueAtTime() {
                return this.pv;
              }

              function setGroupProperty(propertyGroup) {
                this.propertyGroup = propertyGroup;
              }

              return {
                searchExpressions: searchExpressions,
                getSpeedAtTime: getSpeedAtTime,
                getVelocityAtTime: getVelocityAtTime,
                getValueAtTime: getValueAtTime,
                getStaticValueAtTime: getStaticValueAtTime,
                setGroupProperty: setGroupProperty,
              };
            })();
            (function addPropertyDecorator() {
              function loopOut(type, duration, durationFlag) {
                if (!this.k || !this.keyframes) {
                  return this.pv;
                }
                type = type ? type.toLowerCase() : "";
                var currentFrame = this.comp.renderedFrame;
                var keyframes = this.keyframes;
                var lastKeyFrame = keyframes[keyframes.length - 1].t;
                if (currentFrame <= lastKeyFrame) {
                  return this.pv;
                } else {
                  var cycleDuration, firstKeyFrame;
                  if (!durationFlag) {
                    if (!duration || duration > keyframes.length - 1) {
                      duration = keyframes.length - 1;
                    }
                    firstKeyFrame =
                      keyframes[keyframes.length - 1 - duration].t;
                    cycleDuration = lastKeyFrame - firstKeyFrame;
                  } else {
                    if (!duration) {
                      cycleDuration = Math.max(
                        0,
                        lastKeyFrame - this.elem.data.ip,
                      );
                    } else {
                      cycleDuration = Math.abs(
                        lastKeyFrame -
                          elem.comp.globalData.frameRate * duration,
                      );
                    }
                    firstKeyFrame = lastKeyFrame - cycleDuration;
                  }
                  var i, len, ret;
                  if (type === "pingpong") {
                    var iterations = Math.floor(
                      (currentFrame - firstKeyFrame) / cycleDuration,
                    );
                    if (iterations % 2 !== 0) {
                      return this.getValueAtTime(
                        (cycleDuration -
                          ((currentFrame - firstKeyFrame) % cycleDuration) +
                          firstKeyFrame) /
                          this.comp.globalData.frameRate,
                        0,
                      );
                    }
                  } else if (type === "offset") {
                    var initV = this.getValueAtTime(
                      firstKeyFrame / this.comp.globalData.frameRate,
                      0,
                    );
                    var endV = this.getValueAtTime(
                      lastKeyFrame / this.comp.globalData.frameRate,
                      0,
                    );
                    var current = this.getValueAtTime(
                      (((currentFrame - firstKeyFrame) % cycleDuration) +
                        firstKeyFrame) /
                        this.comp.globalData.frameRate,
                      0,
                    );
                    var repeats = Math.floor(
                      (currentFrame - firstKeyFrame) / cycleDuration,
                    );
                    if (this.pv.length) {
                      ret = new Array(initV.length);
                      len = ret.length;
                      for (i = 0; i < len; i += 1) {
                        ret[i] = (endV[i] - initV[i]) * repeats + current[i];
                      }
                      return ret;
                    }
                    return (endV - initV) * repeats + current;
                  } else if (type === "continue") {
                    var lastValue = this.getValueAtTime(
                      lastKeyFrame / this.comp.globalData.frameRate,
                      0,
                    );
                    var nextLastValue = this.getValueAtTime(
                      (lastKeyFrame - 0.001) / this.comp.globalData.frameRate,
                      0,
                    );
                    if (this.pv.length) {
                      ret = new Array(lastValue.length);
                      len = ret.length;
                      for (i = 0; i < len; i += 1) {
                        ret[i] =
                          lastValue[i] +
                          ((lastValue[i] - nextLastValue[i]) *
                            ((currentFrame - lastKeyFrame) /
                              this.comp.globalData.frameRate)) /
                            0.0005;
                      }
                      return ret;
                    }
                    return (
                      lastValue +
                      (lastValue - nextLastValue) *
                        ((currentFrame - lastKeyFrame) / 0.001)
                    );
                  }
                  return this.getValueAtTime(
                    (((currentFrame - firstKeyFrame) % cycleDuration) +
                      firstKeyFrame) /
                      this.comp.globalData.frameRate,
                    0,
                  );
                }
              }

              function loopIn(type, duration, durationFlag) {
                if (!this.k) {
                  return this.pv;
                }
                type = type ? type.toLowerCase() : "";
                var currentFrame = this.comp.renderedFrame;
                var keyframes = this.keyframes;
                var firstKeyFrame = keyframes[0].t;
                if (currentFrame >= firstKeyFrame) {
                  return this.pv;
                } else {
                  var cycleDuration, lastKeyFrame;
                  if (!durationFlag) {
                    if (!duration || duration > keyframes.length - 1) {
                      duration = keyframes.length - 1;
                    }
                    lastKeyFrame = keyframes[duration].t;
                    cycleDuration = lastKeyFrame - firstKeyFrame;
                  } else {
                    if (!duration) {
                      cycleDuration = Math.max(
                        0,
                        this.elem.data.op - firstKeyFrame,
                      );
                    } else {
                      cycleDuration = Math.abs(
                        elem.comp.globalData.frameRate * duration,
                      );
                    }
                    lastKeyFrame = firstKeyFrame + cycleDuration;
                  }
                  var i, len, ret;
                  if (type === "pingpong") {
                    var iterations = Math.floor(
                      (firstKeyFrame - currentFrame) / cycleDuration,
                    );
                    if (iterations % 2 === 0) {
                      return this.getValueAtTime(
                        (((firstKeyFrame - currentFrame) % cycleDuration) +
                          firstKeyFrame) /
                          this.comp.globalData.frameRate,
                        0,
                      );
                    }
                  } else if (type === "offset") {
                    var initV = this.getValueAtTime(
                      firstKeyFrame / this.comp.globalData.frameRate,
                      0,
                    );
                    var endV = this.getValueAtTime(
                      lastKeyFrame / this.comp.globalData.frameRate,
                      0,
                    );
                    var current = this.getValueAtTime(
                      (cycleDuration -
                        ((firstKeyFrame - currentFrame) % cycleDuration) +
                        firstKeyFrame) /
                        this.comp.globalData.frameRate,
                      0,
                    );
                    var repeats =
                      Math.floor(
                        (firstKeyFrame - currentFrame) / cycleDuration,
                      ) + 1;
                    if (this.pv.length) {
                      ret = new Array(initV.length);
                      len = ret.length;
                      for (i = 0; i < len; i += 1) {
                        ret[i] = current[i] - (endV[i] - initV[i]) * repeats;
                      }
                      return ret;
                    }
                    return current - (endV - initV) * repeats;
                  } else if (type === "continue") {
                    var firstValue = this.getValueAtTime(
                      firstKeyFrame / this.comp.globalData.frameRate,
                      0,
                    );
                    var nextFirstValue = this.getValueAtTime(
                      (firstKeyFrame + 0.001) / this.comp.globalData.frameRate,
                      0,
                    );
                    if (this.pv.length) {
                      ret = new Array(firstValue.length);
                      len = ret.length;
                      for (i = 0; i < len; i += 1) {
                        ret[i] =
                          firstValue[i] +
                          ((firstValue[i] - nextFirstValue[i]) *
                            (firstKeyFrame - currentFrame)) /
                            0.001;
                      }
                      return ret;
                    }
                    return (
                      firstValue +
                      ((firstValue - nextFirstValue) *
                        (firstKeyFrame - currentFrame)) /
                        0.001
                    );
                  }
                  return this.getValueAtTime(
                    (cycleDuration -
                      ((firstKeyFrame - currentFrame) % cycleDuration) +
                      firstKeyFrame) /
                      this.comp.globalData.frameRate,
                    0,
                  );
                }
              }

              function smooth(width, samples) {
                if (!this.k) {
                  return this.pv;
                }
                width = (width || 0.4) * 0.5;
                samples = Math.floor(samples || 5);
                if (samples <= 1) {
                  return this.pv;
                }
                var currentTime =
                  this.comp.renderedFrame / this.comp.globalData.frameRate;
                var initFrame = currentTime - width;
                var endFrame = currentTime + width;
                var sampleFrequency =
                  samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;
                var i = 0,
                  j = 0;
                var value;
                if (this.pv.length) {
                  value = createTypedArray("float32", this.pv.length);
                } else {
                  value = 0;
                }
                var sampleValue;
                while (i < samples) {
                  sampleValue = this.getValueAtTime(
                    initFrame + i * sampleFrequency,
                  );
                  if (this.pv.length) {
                    for (j = 0; j < this.pv.length; j += 1) {
                      value[j] += sampleValue[j];
                    }
                  } else {
                    value += sampleValue;
                  }
                  i += 1;
                }
                if (this.pv.length) {
                  for (j = 0; j < this.pv.length; j += 1) {
                    value[j] /= samples;
                  }
                } else {
                  value /= samples;
                }
                return value;
              }

              function getValueAtTime(frameNum) {
                frameNum *= this.elem.globalData.frameRate;
                frameNum -= this.offsetTime;
                if (frameNum !== this._cachingAtTime.lastFrame) {
                  this._cachingAtTime.lastIndex =
                    this._cachingAtTime.lastFrame < frameNum
                      ? this._cachingAtTime.lastIndex
                      : 0;
                  this._cachingAtTime.value = this.interpolateValue(
                    frameNum,
                    this._cachingAtTime,
                  );
                  this._cachingAtTime.lastFrame = frameNum;
                }
                return this._cachingAtTime.value;
              }

              function getTransformValueAtTime(time) {
                console.warn("Transform at time not supported");
              }

              function getTransformStaticValueAtTime(time) {}

              var getTransformProperty =
                TransformPropertyFactory.getTransformProperty;
              TransformPropertyFactory.getTransformProperty = function(
                elem,
                data,
                container,
              ) {
                var prop = getTransformProperty(elem, data, container);
                if (prop.dynamicProperties.length) {
                  prop.getValueAtTime = getTransformValueAtTime.bind(prop);
                } else {
                  prop.getValueAtTime = getTransformStaticValueAtTime.bind(
                    prop,
                  );
                }
                prop.setGroupProperty = expressionHelpers.setGroupProperty;
                return prop;
              };

              var propertyGetProp = PropertyFactory.getProp;
              PropertyFactory.getProp = function(
                elem,
                data,
                type,
                mult,
                container,
              ) {
                var prop = propertyGetProp(elem, data, type, mult, container);
                //prop.getVelocityAtTime = getVelocityAtTime;
                //prop.loopOut = loopOut;
                //prop.loopIn = loopIn;
                if (prop.kf) {
                  prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(
                    prop,
                  );
                } else {
                  prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(
                    prop,
                  );
                }
                prop.setGroupProperty = expressionHelpers.setGroupProperty;
                prop.loopOut = loopOut;
                prop.loopIn = loopIn;
                prop.smooth = smooth;
                prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(
                  prop,
                );
                prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(
                  prop,
                );
                prop.numKeys = data.a === 1 ? data.k.length : 0;
                prop.propertyIndex = data.ix;
                var value = 0;
                if (type !== 0) {
                  value = createTypedArray(
                    "float32",
                    data.a === 1 ? data.k[0].s.length : data.k.length,
                  );
                }
                prop._cachingAtTime = {
                  lastFrame: initialDefaultFrame,
                  lastIndex: 0,
                  value: value,
                };
                expressionHelpers.searchExpressions(elem, data, prop);
                if (prop.k) {
                  container.addDynamicProperty(prop);
                }

                return prop;
              };

              function getShapeValueAtTime(frameNum) {
                //For now this caching object is created only when needed instead of creating it when the shape is initialized.
                if (!this._cachingAtTime) {
                  this._cachingAtTime = {
                    shapeValue: shape_pool.clone(this.pv),
                    lastIndex: 0,
                    lastTime: initialDefaultFrame,
                  };
                }

                frameNum *= this.elem.globalData.frameRate;
                frameNum -= this.offsetTime;
                if (frameNum !== this._cachingAtTime.lastTime) {
                  this._cachingAtTime.lastIndex =
                    this._cachingAtTime.lastTime < frameNum
                      ? this._caching.lastIndex
                      : 0;
                  this._cachingAtTime.lastTime = frameNum;
                  this.interpolateShape(
                    frameNum,
                    this._cachingAtTime.shapeValue,
                    this._cachingAtTime,
                  );
                }
                return this._cachingAtTime.shapeValue;
              }

              var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();
              var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();

              function ShapeExpressions() {}
              ShapeExpressions.prototype = {
                vertices: function(prop, time) {
                  if (this.k) {
                    this.getValue();
                  }
                  var shapePath = this.v;
                  if (time !== undefined) {
                    shapePath = this.getValueAtTime(time, 0);
                  }
                  var i,
                    len = shapePath._length;
                  var vertices = shapePath[prop];
                  var points = shapePath.v;
                  var arr = createSizedArray(len);
                  for (i = 0; i < len; i += 1) {
                    if (prop === "i" || prop === "o") {
                      arr[i] = [
                        vertices[i][0] - points[i][0],
                        vertices[i][1] - points[i][1],
                      ];
                    } else {
                      arr[i] = [vertices[i][0], vertices[i][1]];
                    }
                  }
                  return arr;
                },
                points: function(time) {
                  return this.vertices("v", time);
                },
                inTangents: function(time) {
                  return this.vertices("i", time);
                },
                outTangents: function(time) {
                  return this.vertices("o", time);
                },
                isClosed: function() {
                  return this.v.c;
                },
                pointOnPath: function(perc, time) {
                  var shapePath = this.v;
                  if (time !== undefined) {
                    shapePath = this.getValueAtTime(time, 0);
                  }
                  if (!this._segmentsLength) {
                    this._segmentsLength = bez.getSegmentsLength(shapePath);
                  }

                  var segmentsLength = this._segmentsLength;
                  var lengths = segmentsLength.lengths;
                  var lengthPos = segmentsLength.totalLength * perc;
                  var i = 0,
                    len = lengths.length;
                  var j = 0,
                    jLen;
                  var accumulatedLength = 0,
                    pt;
                  while (i < len) {
                    if (
                      accumulatedLength + lengths[i].addedLength >
                      lengthPos
                    ) {
                      var initIndex = i;
                      var endIndex = shapePath.c && i === len - 1 ? 0 : i + 1;
                      var segmentPerc =
                        (lengthPos - accumulatedLength) /
                        lengths[i].addedLength;
                      pt = bez.getPointInSegment(
                        shapePath.v[initIndex],
                        shapePath.v[endIndex],
                        shapePath.o[initIndex],
                        shapePath.i[endIndex],
                        segmentPerc,
                        lengths[i],
                      );
                      break;
                    } else {
                      accumulatedLength += lengths[i].addedLength;
                    }
                    i += 1;
                  }
                  if (!pt) {
                    pt = shapePath.c
                      ? [shapePath.v[0][0], shapePath.v[0][1]]
                      : [
                          shapePath.v[shapePath._length - 1][0],
                          shapePath.v[shapePath._length - 1][1],
                        ];
                  }
                  return pt;
                },
                vectorOnPath: function(perc, time, vectorType) {
                  //perc doesn't use triple equality because it can be a Number object as well as a primitive.
                  perc = perc == 1 ? (this.v.c ? 0 : 0.999) : perc;
                  var pt1 = this.pointOnPath(perc, time);
                  var pt2 = this.pointOnPath(perc + 0.001, time);
                  var xLength = pt2[0] - pt1[0];
                  var yLength = pt2[1] - pt1[1];
                  var magnitude = Math.sqrt(
                    Math.pow(xLength, 2) + Math.pow(yLength, 2),
                  );
                  if (magnitude === 0) {
                    return [0, 0];
                  }
                  var unitVector =
                    vectorType === "tangent"
                      ? [xLength / magnitude, yLength / magnitude]
                      : [-yLength / magnitude, xLength / magnitude];
                  return unitVector;
                },
                tangentOnPath: function(perc, time) {
                  return this.vectorOnPath(perc, time, "tangent");
                },
                normalOnPath: function(perc, time) {
                  return this.vectorOnPath(perc, time, "normal");
                },
                setGroupProperty: expressionHelpers.setGroupProperty,
                getValueAtTime: expressionHelpers.getStaticValueAtTime,
              };
              extendPrototype(
                [ShapeExpressions],
                ShapePropertyConstructorFunction,
              );
              extendPrototype(
                [ShapeExpressions],
                KeyframedShapePropertyConstructorFunction,
              );
              KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;
              KeyframedShapePropertyConstructorFunction.prototype.initiateExpression =
                ExpressionManager.initiateExpression;

              var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;
              ShapePropertyFactory.getShapeProp = function(
                elem,
                data,
                type,
                arr,
                trims,
              ) {
                var prop = propertyGetShapeProp(elem, data, type, arr, trims);
                prop.propertyIndex = data.ix;
                prop.lock = false;
                if (type === 3) {
                  expressionHelpers.searchExpressions(elem, data.pt, prop);
                } else if (type === 4) {
                  expressionHelpers.searchExpressions(elem, data.ks, prop);
                }
                if (prop.k) {
                  elem.addDynamicProperty(prop);
                }
                return prop;
              };
            })();
            (function addDecorator() {
              function searchExpressions() {
                if (this.data.d.x) {
                  this.calculateExpression = ExpressionManager.initiateExpression.bind(
                    this,
                  )(this.elem, this.data.d, this);
                  this.addEffect(this.getExpressionValue.bind(this));
                  return true;
                }
              }

              TextProperty.prototype.getExpressionValue = function(
                currentValue,
                text,
              ) {
                var newValue = this.calculateExpression(text);
                if (currentValue.t !== newValue) {
                  var newData = {};
                  this.copyData(newData, currentValue);
                  newData.t = newValue.toString();
                  newData.__complete = false;
                  return newData;
                }
                return currentValue;
              };

              TextProperty.prototype.searchProperty = function() {
                var isKeyframed = this.searchKeyframes();
                var hasExpressions = this.searchExpressions();
                this.kf = isKeyframed || hasExpressions;
                return this.kf;
              };

              TextProperty.prototype.searchExpressions = searchExpressions;
            })();
            var ShapeExpressionInterface = (function() {
              function iterateElements(shapes, view, propertyGroup) {
                var arr = [];
                var i,
                  len = shapes ? shapes.length : 0;
                for (i = 0; i < len; i += 1) {
                  if (shapes[i].ty == "gr") {
                    arr.push(
                      groupInterfaceFactory(shapes[i], view[i], propertyGroup),
                    );
                  } else if (shapes[i].ty == "fl") {
                    arr.push(
                      fillInterfaceFactory(shapes[i], view[i], propertyGroup),
                    );
                  } else if (shapes[i].ty == "st") {
                    arr.push(
                      strokeInterfaceFactory(shapes[i], view[i], propertyGroup),
                    );
                  } else if (shapes[i].ty == "tm") {
                    arr.push(
                      trimInterfaceFactory(shapes[i], view[i], propertyGroup),
                    );
                  } else if (shapes[i].ty == "tr") {
                    //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));
                  } else if (shapes[i].ty == "el") {
                    arr.push(
                      ellipseInterfaceFactory(
                        shapes[i],
                        view[i],
                        propertyGroup,
                      ),
                    );
                  } else if (shapes[i].ty == "sr") {
                    arr.push(
                      starInterfaceFactory(shapes[i], view[i], propertyGroup),
                    );
                  } else if (shapes[i].ty == "sh") {
                    arr.push(
                      pathInterfaceFactory(shapes[i], view[i], propertyGroup),
                    );
                  } else if (shapes[i].ty == "rc") {
                    arr.push(
                      rectInterfaceFactory(shapes[i], view[i], propertyGroup),
                    );
                  } else if (shapes[i].ty == "rd") {
                    arr.push(
                      roundedInterfaceFactory(
                        shapes[i],
                        view[i],
                        propertyGroup,
                      ),
                    );
                  } else if (shapes[i].ty == "rp") {
                    arr.push(
                      repeaterInterfaceFactory(
                        shapes[i],
                        view[i],
                        propertyGroup,
                      ),
                    );
                  }
                }
                return arr;
              }

              function contentsInterfaceFactory(shape, view, propertyGroup) {
                var interfaces;
                var interfaceFunction = function _interfaceFunction(value) {
                  var i = 0,
                    len = interfaces.length;
                  while (i < len) {
                    if (
                      interfaces[i]._name === value ||
                      interfaces[i].mn === value ||
                      interfaces[i].propertyIndex === value ||
                      interfaces[i].ix === value ||
                      interfaces[i].ind === value
                    ) {
                      return interfaces[i];
                    }
                    i += 1;
                  }
                  if (typeof value === "number") {
                    return interfaces[value - 1];
                  }
                };
                interfaceFunction.propertyGroup = function(val) {
                  if (val === 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(val - 1);
                  }
                };
                interfaces = iterateElements(
                  shape.it,
                  view.it,
                  interfaceFunction.propertyGroup,
                );
                interfaceFunction.numProperties = interfaces.length;
                interfaceFunction.propertyIndex = shape.cix;
                interfaceFunction._name = shape.nm;

                return interfaceFunction;
              }

              function groupInterfaceFactory(shape, view, propertyGroup) {
                var interfaceFunction = function _interfaceFunction(value) {
                  switch (value) {
                    case "ADBE Vectors Group":
                    case "Contents":
                    case 2:
                      return interfaceFunction.content;
                    //Not necessary for now. Keeping them here in case a new case appears
                    //case 'ADBE Vector Transform Group':
                    //case 3:
                    default:
                      return interfaceFunction.transform;
                  }
                };
                interfaceFunction.propertyGroup = function(val) {
                  if (val === 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(val - 1);
                  }
                };
                var content = contentsInterfaceFactory(
                  shape,
                  view,
                  interfaceFunction.propertyGroup,
                );
                var transformInterface = transformInterfaceFactory(
                  shape.it[shape.it.length - 1],
                  view.it[view.it.length - 1],
                  interfaceFunction.propertyGroup,
                );
                interfaceFunction.content = content;
                interfaceFunction.transform = transformInterface;
                Object.defineProperty(interfaceFunction, "_name", {
                  get: function() {
                    return shape.nm;
                  },
                });
                //interfaceFunction.content = interfaceFunction;
                interfaceFunction.numProperties = shape.np;
                interfaceFunction.propertyIndex = shape.ix;
                interfaceFunction.nm = shape.nm;
                interfaceFunction.mn = shape.mn;
                return interfaceFunction;
              }

              function fillInterfaceFactory(shape, view, propertyGroup) {
                function interfaceFunction(val) {
                  if (val === "Color" || val === "color") {
                    return interfaceFunction.color;
                  } else if (val === "Opacity" || val === "opacity") {
                    return interfaceFunction.opacity;
                  }
                }
                Object.defineProperties(interfaceFunction, {
                  color: {
                    get: ExpressionPropertyInterface(view.c),
                  },
                  opacity: {
                    get: ExpressionPropertyInterface(view.o),
                  },
                  _name: { value: shape.nm },
                  mn: { value: shape.mn },
                });

                view.c.setGroupProperty(propertyGroup);
                view.o.setGroupProperty(propertyGroup);
                return interfaceFunction;
              }

              function strokeInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val === 1) {
                    return ob;
                  } else {
                    return propertyGroup(val - 1);
                  }
                }
                function _dashPropertyGroup(val) {
                  if (val === 1) {
                    return dashOb;
                  } else {
                    return _propertyGroup(val - 1);
                  }
                }
                function addPropertyToDashOb(i) {
                  Object.defineProperty(dashOb, shape.d[i].nm, {
                    get: ExpressionPropertyInterface(view.d.dataProps[i].p),
                  });
                }
                var i,
                  len = shape.d ? shape.d.length : 0;
                var dashOb = {};
                for (i = 0; i < len; i += 1) {
                  addPropertyToDashOb(i);
                  view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);
                }

                function interfaceFunction(val) {
                  if (val === "Color" || val === "color") {
                    return interfaceFunction.color;
                  } else if (val === "Opacity" || val === "opacity") {
                    return interfaceFunction.opacity;
                  } else if (val === "Stroke Width" || val === "stroke width") {
                    return interfaceFunction.strokeWidth;
                  }
                }
                Object.defineProperties(interfaceFunction, {
                  color: {
                    get: ExpressionPropertyInterface(view.c),
                  },
                  opacity: {
                    get: ExpressionPropertyInterface(view.o),
                  },
                  strokeWidth: {
                    get: ExpressionPropertyInterface(view.w),
                  },
                  dash: {
                    get: function() {
                      return dashOb;
                    },
                  },
                  _name: { value: shape.nm },
                  mn: { value: shape.mn },
                });

                view.c.setGroupProperty(_propertyGroup);
                view.o.setGroupProperty(_propertyGroup);
                view.w.setGroupProperty(_propertyGroup);
                return interfaceFunction;
              }

              function trimInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                interfaceFunction.propertyIndex = shape.ix;

                view.s.setGroupProperty(_propertyGroup);
                view.e.setGroupProperty(_propertyGroup);
                view.o.setGroupProperty(_propertyGroup);

                function interfaceFunction(val) {
                  if (val === shape.e.ix || val === "End" || val === "end") {
                    return interfaceFunction.end;
                  }
                  if (val === shape.s.ix) {
                    return interfaceFunction.start;
                  }
                  if (val === shape.o.ix) {
                    return interfaceFunction.offset;
                  }
                }
                interfaceFunction.propertyIndex = shape.ix;
                interfaceFunction.propertyGroup = propertyGroup;

                Object.defineProperties(interfaceFunction, {
                  start: {
                    get: ExpressionPropertyInterface(view.s),
                  },
                  end: {
                    get: ExpressionPropertyInterface(view.e),
                  },
                  offset: {
                    get: ExpressionPropertyInterface(view.o),
                  },
                  _name: { value: shape.nm },
                });
                interfaceFunction.mn = shape.mn;
                return interfaceFunction;
              }

              function transformInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                view.transform.mProps.o.setGroupProperty(_propertyGroup);
                view.transform.mProps.p.setGroupProperty(_propertyGroup);
                view.transform.mProps.a.setGroupProperty(_propertyGroup);
                view.transform.mProps.s.setGroupProperty(_propertyGroup);
                view.transform.mProps.r.setGroupProperty(_propertyGroup);
                if (view.transform.mProps.sk) {
                  view.transform.mProps.sk.setGroupProperty(_propertyGroup);
                  view.transform.mProps.sa.setGroupProperty(_propertyGroup);
                }
                view.transform.op.setGroupProperty(_propertyGroup);

                function interfaceFunction(value) {
                  if (shape.a.ix === value || value === "Anchor Point") {
                    return interfaceFunction.anchorPoint;
                  }
                  if (shape.o.ix === value || value === "Opacity") {
                    return interfaceFunction.opacity;
                  }
                  if (shape.p.ix === value || value === "Position") {
                    return interfaceFunction.position;
                  }
                  if (
                    shape.r.ix === value ||
                    value === "Rotation" ||
                    value === "ADBE Vector Rotation"
                  ) {
                    return interfaceFunction.rotation;
                  }
                  if (shape.s.ix === value || value === "Scale") {
                    return interfaceFunction.scale;
                  }
                  if ((shape.sk && shape.sk.ix === value) || value === "Skew") {
                    return interfaceFunction.skew;
                  }
                  if (
                    (shape.sa && shape.sa.ix === value) ||
                    value === "Skew Axis"
                  ) {
                    return interfaceFunction.skewAxis;
                  }
                }
                Object.defineProperties(interfaceFunction, {
                  opacity: {
                    get: ExpressionPropertyInterface(view.transform.mProps.o),
                  },
                  position: {
                    get: ExpressionPropertyInterface(view.transform.mProps.p),
                  },
                  anchorPoint: {
                    get: ExpressionPropertyInterface(view.transform.mProps.a),
                  },
                  scale: {
                    get: ExpressionPropertyInterface(view.transform.mProps.s),
                  },
                  rotation: {
                    get: ExpressionPropertyInterface(view.transform.mProps.r),
                  },
                  skew: {
                    get: ExpressionPropertyInterface(view.transform.mProps.sk),
                  },
                  skewAxis: {
                    get: ExpressionPropertyInterface(view.transform.mProps.sa),
                  },
                  _name: { value: shape.nm },
                });
                interfaceFunction.ty = "tr";
                interfaceFunction.mn = shape.mn;
                interfaceFunction.propertyGroup = propertyGroup;
                return interfaceFunction;
              }

              function ellipseInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                interfaceFunction.propertyIndex = shape.ix;
                var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
                prop.s.setGroupProperty(_propertyGroup);
                prop.p.setGroupProperty(_propertyGroup);
                function interfaceFunction(value) {
                  if (shape.p.ix === value) {
                    return interfaceFunction.position;
                  }
                  if (shape.s.ix === value) {
                    return interfaceFunction.size;
                  }
                }

                Object.defineProperties(interfaceFunction, {
                  size: {
                    get: ExpressionPropertyInterface(prop.s),
                  },
                  position: {
                    get: ExpressionPropertyInterface(prop.p),
                  },
                  _name: { value: shape.nm },
                });
                interfaceFunction.mn = shape.mn;
                return interfaceFunction;
              }

              function starInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
                interfaceFunction.propertyIndex = shape.ix;
                prop.or.setGroupProperty(_propertyGroup);
                prop.os.setGroupProperty(_propertyGroup);
                prop.pt.setGroupProperty(_propertyGroup);
                prop.p.setGroupProperty(_propertyGroup);
                prop.r.setGroupProperty(_propertyGroup);
                if (shape.ir) {
                  prop.ir.setGroupProperty(_propertyGroup);
                  prop.is.setGroupProperty(_propertyGroup);
                }

                function interfaceFunction(value) {
                  if (shape.p.ix === value) {
                    return interfaceFunction.position;
                  }
                  if (shape.r.ix === value) {
                    return interfaceFunction.rotation;
                  }
                  if (shape.pt.ix === value) {
                    return interfaceFunction.points;
                  }
                  if (
                    shape.or.ix === value ||
                    "ADBE Vector Star Outer Radius" === value
                  ) {
                    return interfaceFunction.outerRadius;
                  }
                  if (shape.os.ix === value) {
                    return interfaceFunction.outerRoundness;
                  }
                  if (
                    shape.ir &&
                    (shape.ir.ix === value ||
                      "ADBE Vector Star Inner Radius" === value)
                  ) {
                    return interfaceFunction.innerRadius;
                  }
                  if (shape.is && shape.is.ix === value) {
                    return interfaceFunction.innerRoundness;
                  }
                }

                Object.defineProperties(interfaceFunction, {
                  position: {
                    get: ExpressionPropertyInterface(prop.p),
                  },
                  rotation: {
                    get: ExpressionPropertyInterface(prop.r),
                  },
                  points: {
                    get: ExpressionPropertyInterface(prop.pt),
                  },
                  outerRadius: {
                    get: ExpressionPropertyInterface(prop.or),
                  },
                  outerRoundness: {
                    get: ExpressionPropertyInterface(prop.os),
                  },
                  innerRadius: {
                    get: ExpressionPropertyInterface(prop.ir),
                  },
                  innerRoundness: {
                    get: ExpressionPropertyInterface(prop.is),
                  },
                  _name: { value: shape.nm },
                });
                interfaceFunction.mn = shape.mn;
                return interfaceFunction;
              }

              function rectInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                var prop = view.sh.ty === "tm" ? view.sh.prop : view.sh;
                interfaceFunction.propertyIndex = shape.ix;
                prop.p.setGroupProperty(_propertyGroup);
                prop.s.setGroupProperty(_propertyGroup);
                prop.r.setGroupProperty(_propertyGroup);

                function interfaceFunction(value) {
                  if (shape.p.ix === value) {
                    return interfaceFunction.position;
                  }
                  if (shape.r.ix === value) {
                    return interfaceFunction.roundness;
                  }
                  if (
                    shape.s.ix === value ||
                    value === "Size" ||
                    value === "ADBE Vector Rect Size"
                  ) {
                    return interfaceFunction.size;
                  }
                }
                Object.defineProperties(interfaceFunction, {
                  position: {
                    get: ExpressionPropertyInterface(prop.p),
                  },
                  roundness: {
                    get: ExpressionPropertyInterface(prop.r),
                  },
                  size: {
                    get: ExpressionPropertyInterface(prop.s),
                  },
                  _name: { value: shape.nm },
                });
                interfaceFunction.mn = shape.mn;
                return interfaceFunction;
              }

              function roundedInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                var prop = view;
                interfaceFunction.propertyIndex = shape.ix;
                prop.rd.setGroupProperty(_propertyGroup);

                function interfaceFunction(value) {
                  if (shape.r.ix === value || "Round Corners 1" === value) {
                    return interfaceFunction.radius;
                  }
                }
                Object.defineProperties(interfaceFunction, {
                  radius: {
                    get: ExpressionPropertyInterface(prop.rd),
                  },
                  _name: { value: shape.nm },
                });
                interfaceFunction.mn = shape.mn;
                return interfaceFunction;
              }

              function repeaterInterfaceFactory(shape, view, propertyGroup) {
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                var prop = view;
                interfaceFunction.propertyIndex = shape.ix;
                prop.c.setGroupProperty(_propertyGroup);
                prop.o.setGroupProperty(_propertyGroup);

                function interfaceFunction(value) {
                  if (shape.c.ix === value || "Copies" === value) {
                    return interfaceFunction.copies;
                  } else if (shape.o.ix === value || "Offset" === value) {
                    return interfaceFunction.offset;
                  }
                }
                Object.defineProperties(interfaceFunction, {
                  copies: {
                    get: ExpressionPropertyInterface(prop.c),
                  },
                  offset: {
                    get: ExpressionPropertyInterface(prop.o),
                  },
                  _name: { value: shape.nm },
                });
                interfaceFunction.mn = shape.mn;
                return interfaceFunction;
              }

              function pathInterfaceFactory(shape, view, propertyGroup) {
                var prop = view.sh;
                function _propertyGroup(val) {
                  if (val == 1) {
                    return interfaceFunction;
                  } else {
                    return propertyGroup(--val);
                  }
                }
                prop.setGroupProperty(_propertyGroup);

                function interfaceFunction(val) {
                  if (
                    val === "Shape" ||
                    val === "shape" ||
                    val === "Path" ||
                    val === "path" ||
                    val === "ADBE Vector Shape" ||
                    val === 2
                  ) {
                    return interfaceFunction.path;
                  }
                }
                Object.defineProperties(interfaceFunction, {
                  path: {
                    get: function() {
                      if (prop.k) {
                        prop.getValue();
                      }
                      return prop;
                    },
                  },
                  shape: {
                    get: function() {
                      if (prop.k) {
                        prop.getValue();
                      }
                      return prop;
                    },
                  },
                  _name: { value: shape.nm },
                  ix: { value: shape.ix },
                  mn: { value: shape.mn },
                });
                return interfaceFunction;
              }

              return function(shapes, view, propertyGroup) {
                var interfaces;
                function _interfaceFunction(value) {
                  if (typeof value === "number") {
                    return interfaces[value - 1];
                  } else {
                    var i = 0,
                      len = interfaces.length;
                    while (i < len) {
                      if (interfaces[i]._name === value) {
                        return interfaces[i];
                      }
                      i += 1;
                    }
                  }
                }
                _interfaceFunction.propertyGroup = propertyGroup;
                interfaces = iterateElements(shapes, view, _interfaceFunction);
                _interfaceFunction.numProperties = interfaces.length;
                return _interfaceFunction;
              };
            })();

            var TextExpressionInterface = (function() {
              return function(elem) {
                var _prevValue, _sourceText;
                function _thisLayerFunction() {}
                Object.defineProperty(_thisLayerFunction, "sourceText", {
                  get: function() {
                    elem.textProperty.getValue();
                    var stringValue = elem.textProperty.currentData.t;
                    if (stringValue !== _prevValue) {
                      elem.textProperty.currentData.t = _prevValue;
                      _sourceText = new String(stringValue);
                      //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive
                      _sourceText.value = stringValue
                        ? stringValue
                        : new String(stringValue);
                    }
                    return _sourceText;
                  },
                });
                return _thisLayerFunction;
              };
            })();
            var LayerExpressionInterface = (function() {
              function toWorld(arr, time) {
                var toWorldMat = new Matrix();
                toWorldMat.reset();
                var transformMat;
                if (time) {
                  //Todo implement value at time on transform properties
                  //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);
                  transformMat = this._elem.finalTransform.mProp;
                } else {
                  transformMat = this._elem.finalTransform.mProp;
                }
                transformMat.applyToMatrix(toWorldMat);
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                  var i,
                    len = this._elem.hierarchy.length;
                  for (i = 0; i < len; i += 1) {
                    this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(
                      toWorldMat,
                    );
                  }
                  return toWorldMat.applyToPointArray(
                    arr[0],
                    arr[1],
                    arr[2] || 0,
                  );
                }
                return toWorldMat.applyToPointArray(
                  arr[0],
                  arr[1],
                  arr[2] || 0,
                );
              }
              function fromWorld(arr, time) {
                var toWorldMat = new Matrix();
                toWorldMat.reset();
                var transformMat;
                if (time) {
                  //Todo implement value at time on transform properties
                  //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);
                  transformMat = this._elem.finalTransform.mProp;
                } else {
                  transformMat = this._elem.finalTransform.mProp;
                }
                transformMat.applyToMatrix(toWorldMat);
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                  var i,
                    len = this._elem.hierarchy.length;
                  for (i = 0; i < len; i += 1) {
                    this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(
                      toWorldMat,
                    );
                  }
                  return toWorldMat.inversePoint(arr);
                }
                return toWorldMat.inversePoint(arr);
              }
              function fromComp(arr) {
                var toWorldMat = new Matrix();
                toWorldMat.reset();
                this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);
                if (this._elem.hierarchy && this._elem.hierarchy.length) {
                  var i,
                    len = this._elem.hierarchy.length;
                  for (i = 0; i < len; i += 1) {
                    this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(
                      toWorldMat,
                    );
                  }
                  return toWorldMat.inversePoint(arr);
                }
                return toWorldMat.inversePoint(arr);
              }

              function sampleImage() {
                return [1, 1, 1, 1];
              }

              return function(elem) {
                var transformInterface;

                function _registerMaskInterface(maskManager) {
                  _thisLayerFunction.mask = new MaskManagerInterface(
                    maskManager,
                    elem,
                  );
                }
                function _registerEffectsInterface(effects) {
                  _thisLayerFunction.effect = effects;
                }

                function _thisLayerFunction(name) {
                  switch (name) {
                    case "ADBE Root Vectors Group":
                    case "Contents":
                    case 2:
                      return _thisLayerFunction.shapeInterface;
                    case 1:
                    case 6:
                    case "Transform":
                    case "transform":
                    case "ADBE Transform Group":
                      return transformInterface;
                    case 4:
                    case "ADBE Effect Parade":
                    case "effects":
                    case "Effects":
                      return _thisLayerFunction.effect;
                  }
                }
                _thisLayerFunction.toWorld = toWorld;
                _thisLayerFunction.fromWorld = fromWorld;
                _thisLayerFunction.toComp = toWorld;
                _thisLayerFunction.fromComp = fromComp;
                _thisLayerFunction.sampleImage = sampleImage;
                _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(
                  elem,
                );
                _thisLayerFunction._elem = elem;
                transformInterface = TransformExpressionInterface(
                  elem.finalTransform.mProp,
                );
                var anchorPointDescriptor = getDescriptor(
                  transformInterface,
                  "anchorPoint",
                );
                Object.defineProperties(_thisLayerFunction, {
                  hasParent: {
                    get: function() {
                      return elem.hierarchy.length;
                    },
                  },
                  parent: {
                    get: function() {
                      return elem.hierarchy[0].layerInterface;
                    },
                  },
                  rotation: getDescriptor(transformInterface, "rotation"),
                  scale: getDescriptor(transformInterface, "scale"),
                  position: getDescriptor(transformInterface, "position"),
                  opacity: getDescriptor(transformInterface, "opacity"),
                  anchorPoint: anchorPointDescriptor,
                  anchor_point: anchorPointDescriptor,
                  transform: {
                    get: function() {
                      return transformInterface;
                    },
                  },
                  active: {
                    get: function() {
                      return elem.isInRange;
                    },
                  },
                });

                _thisLayerFunction.startTime = elem.data.st;
                _thisLayerFunction.index = elem.data.ind;
                _thisLayerFunction.source = elem.data.refId;
                _thisLayerFunction.height =
                  elem.data.ty === 0 ? elem.data.h : 100;
                _thisLayerFunction.width =
                  elem.data.ty === 0 ? elem.data.w : 100;
                _thisLayerFunction.inPoint =
                  elem.data.ip / elem.comp.globalData.frameRate;
                _thisLayerFunction.outPoint =
                  elem.data.op / elem.comp.globalData.frameRate;
                _thisLayerFunction._name = elem.data.nm;

                _thisLayerFunction.registerMaskInterface = _registerMaskInterface;
                _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;
                return _thisLayerFunction;
              };
            })();

            var CompExpressionInterface = (function() {
              return function(comp) {
                function _thisLayerFunction(name) {
                  var i = 0,
                    len = comp.layers.length;
                  while (i < len) {
                    if (
                      comp.layers[i].nm === name ||
                      comp.layers[i].ind === name
                    ) {
                      return comp.elements[i].layerInterface;
                    }
                    i += 1;
                  }
                  return null;
                  //return {active:false};
                }
                Object.defineProperty(_thisLayerFunction, "_name", {
                  value: comp.data.nm,
                });
                _thisLayerFunction.layer = _thisLayerFunction;
                _thisLayerFunction.pixelAspect = 1;
                _thisLayerFunction.height =
                  comp.data.h || comp.globalData.compSize.h;
                _thisLayerFunction.width =
                  comp.data.w || comp.globalData.compSize.w;
                _thisLayerFunction.pixelAspect = 1;
                _thisLayerFunction.frameDuration =
                  1 / comp.globalData.frameRate;
                _thisLayerFunction.displayStartTime = 0;
                _thisLayerFunction.numLayers = comp.layers.length;
                return _thisLayerFunction;
              };
            })();
            var TransformExpressionInterface = (function() {
              return function(transform) {
                function _thisFunction(name) {
                  switch (name) {
                    case "scale":
                    case "Scale":
                    case "ADBE Scale":
                    case 6:
                      return _thisFunction.scale;
                    case "rotation":
                    case "Rotation":
                    case "ADBE Rotation":
                    case "ADBE Rotate Z":
                    case 10:
                      return _thisFunction.rotation;
                    case "ADBE Rotate X":
                      return _thisFunction.xRotation;
                    case "ADBE Rotate Y":
                      return _thisFunction.yRotation;
                    case "position":
                    case "Position":
                    case "ADBE Position":
                    case 2:
                      return _thisFunction.position;
                    case "ADBE Position_0":
                      return _thisFunction.xPosition;
                    case "ADBE Position_1":
                      return _thisFunction.yPosition;
                    case "ADBE Position_2":
                      return _thisFunction.zPosition;
                    case "anchorPoint":
                    case "AnchorPoint":
                    case "Anchor Point":
                    case "ADBE AnchorPoint":
                    case 1:
                      return _thisFunction.anchorPoint;
                    case "opacity":
                    case "Opacity":
                    case 11:
                      return _thisFunction.opacity;
                  }
                }

                Object.defineProperty(_thisFunction, "rotation", {
                  get: ExpressionPropertyInterface(transform.r || transform.rz),
                });

                Object.defineProperty(_thisFunction, "zRotation", {
                  get: ExpressionPropertyInterface(transform.rz || transform.r),
                });

                Object.defineProperty(_thisFunction, "xRotation", {
                  get: ExpressionPropertyInterface(transform.rx),
                });

                Object.defineProperty(_thisFunction, "yRotation", {
                  get: ExpressionPropertyInterface(transform.ry),
                });
                Object.defineProperty(_thisFunction, "scale", {
                  get: ExpressionPropertyInterface(transform.s),
                });

                if (transform.p) {
                  var _transformFactory = ExpressionPropertyInterface(
                    transform.p,
                  );
                }
                Object.defineProperty(_thisFunction, "position", {
                  get: function() {
                    if (transform.p) {
                      return _transformFactory();
                    } else {
                      return [
                        transform.px.v,
                        transform.py.v,
                        transform.pz ? transform.pz.v : 0,
                      ];
                    }
                  },
                });

                Object.defineProperty(_thisFunction, "xPosition", {
                  get: ExpressionPropertyInterface(transform.px),
                });

                Object.defineProperty(_thisFunction, "yPosition", {
                  get: ExpressionPropertyInterface(transform.py),
                });

                Object.defineProperty(_thisFunction, "zPosition", {
                  get: ExpressionPropertyInterface(transform.pz),
                });

                Object.defineProperty(_thisFunction, "anchorPoint", {
                  get: ExpressionPropertyInterface(transform.a),
                });

                Object.defineProperty(_thisFunction, "opacity", {
                  get: ExpressionPropertyInterface(transform.o),
                });

                Object.defineProperty(_thisFunction, "skew", {
                  get: ExpressionPropertyInterface(transform.sk),
                });

                Object.defineProperty(_thisFunction, "skewAxis", {
                  get: ExpressionPropertyInterface(transform.sa),
                });

                Object.defineProperty(_thisFunction, "orientation", {
                  get: ExpressionPropertyInterface(transform.or),
                });

                return _thisFunction;
              };
            })();
            var ProjectInterface = (function() {
              function registerComposition(comp) {
                this.compositions.push(comp);
              }

              return function() {
                function _thisProjectFunction(name) {
                  var i = 0,
                    len = this.compositions.length;
                  while (i < len) {
                    if (
                      this.compositions[i].data &&
                      this.compositions[i].data.nm === name
                    ) {
                      if (
                        this.compositions[i].prepareFrame &&
                        this.compositions[i].data.xt
                      ) {
                        this.compositions[i].prepareFrame(this.currentFrame);
                      }
                      return this.compositions[i].compInterface;
                    }
                    i += 1;
                  }
                }

                _thisProjectFunction.compositions = [];
                _thisProjectFunction.currentFrame = 0;

                _thisProjectFunction.registerComposition = registerComposition;

                return _thisProjectFunction;
              };
            })();
            var EffectsExpressionInterface = (function() {
              var ob = {
                createEffectsInterface: createEffectsInterface,
              };

              function createEffectsInterface(elem, propertyGroup) {
                if (elem.effectsManager) {
                  var effectElements = [];
                  var effectsData = elem.data.ef;
                  var i,
                    len = elem.effectsManager.effectElements.length;
                  for (i = 0; i < len; i += 1) {
                    effectElements.push(
                      createGroupInterface(
                        effectsData[i],
                        elem.effectsManager.effectElements[i],
                        propertyGroup,
                        elem,
                      ),
                    );
                  }

                  return function(name) {
                    var effects = elem.data.ef || [],
                      i = 0,
                      len = effects.length;
                    while (i < len) {
                      if (
                        name === effects[i].nm ||
                        name === effects[i].mn ||
                        name === effects[i].ix
                      ) {
                        return effectElements[i];
                      }
                      i += 1;
                    }
                  };
                }
              }

              function createGroupInterface(
                data,
                elements,
                propertyGroup,
                elem,
              ) {
                var effectElements = [];
                var i,
                  len = data.ef.length;
                for (i = 0; i < len; i += 1) {
                  if (data.ef[i].ty === 5) {
                    effectElements.push(
                      createGroupInterface(
                        data.ef[i],
                        elements.effectElements[i],
                        elements.effectElements[i].propertyGroup,
                        elem,
                      ),
                    );
                  } else {
                    effectElements.push(
                      createValueInterface(
                        elements.effectElements[i],
                        data.ef[i].ty,
                        elem,
                        _propertyGroup,
                      ),
                    );
                  }
                }

                function _propertyGroup(val) {
                  if (val === 1) {
                    return groupInterface;
                  } else {
                    return propertyGroup(val - 1);
                  }
                }

                var groupInterface = function(name) {
                  var effects = data.ef,
                    i = 0,
                    len = effects.length;
                  while (i < len) {
                    if (
                      name === effects[i].nm ||
                      name === effects[i].mn ||
                      name === effects[i].ix
                    ) {
                      if (effects[i].ty === 5) {
                        return effectElements[i];
                      } else {
                        return effectElements[i]();
                      }
                    }
                    i += 1;
                  }
                  return effectElements[0]();
                };

                groupInterface.propertyGroup = _propertyGroup;

                if (data.mn === "ADBE Color Control") {
                  Object.defineProperty(groupInterface, "color", {
                    get: function() {
                      return effectElements[0]();
                    },
                  });
                }
                Object.defineProperty(groupInterface, "numProperties", {
                  get: function() {
                    return data.np;
                  },
                });
                groupInterface.active = groupInterface.enabled = data.en !== 0;
                return groupInterface;
              }

              function createValueInterface(
                element,
                type,
                elem,
                propertyGroup,
              ) {
                var expressionProperty = ExpressionPropertyInterface(element.p);
                function interfaceFunction() {
                  if (type === 10) {
                    return elem.comp.compInterface(element.p.v);
                  }
                  return expressionProperty();
                }

                if (element.p.setGroupProperty) {
                  element.p.setGroupProperty(propertyGroup);
                }

                return interfaceFunction;
              }

              return ob;
            })();
            var MaskManagerInterface = (function() {
              function MaskInterface(mask, data) {
                this._mask = mask;
                this._data = data;
              }
              Object.defineProperty(MaskInterface.prototype, "maskPath", {
                get: function() {
                  if (this._mask.prop.k) {
                    this._mask.prop.getValue();
                  }
                  return this._mask.prop;
                },
              });
              Object.defineProperty(MaskInterface.prototype, "maskOpacity", {
                get: function() {
                  if (this._mask.op.k) {
                    this._mask.op.getValue();
                  }
                  return this._mask.op.v * 100;
                },
              });

              var MaskManager = function(maskManager, elem) {
                var _maskManager = maskManager;
                var _elem = elem;
                var _masksInterfaces = createSizedArray(
                  maskManager.viewData.length,
                );
                var i,
                  len = maskManager.viewData.length;
                for (i = 0; i < len; i += 1) {
                  _masksInterfaces[i] = new MaskInterface(
                    maskManager.viewData[i],
                    maskManager.masksProperties[i],
                  );
                }

                var maskFunction = function(name) {
                  i = 0;
                  while (i < len) {
                    if (maskManager.masksProperties[i].nm === name) {
                      return _masksInterfaces[i];
                    }
                    i += 1;
                  }
                };
                return maskFunction;
              };
              return MaskManager;
            })();

            var ExpressionPropertyInterface = (function() {
              var defaultUnidimensionalValue = { pv: 0, v: 0, mult: 1 };
              var defaultMultidimensionalValue = {
                pv: [0, 0, 0],
                v: [0, 0, 0],
                mult: 1,
              };

              function completeProperty(expressionValue, property, type) {
                Object.defineProperty(expressionValue, "velocity", {
                  get: function() {
                    return property.getVelocityAtTime(
                      property.comp.currentFrame,
                    );
                  },
                });
                expressionValue.numKeys = property.keyframes
                  ? property.keyframes.length
                  : 0;
                expressionValue.key = function(pos) {
                  if (!expressionValue.numKeys) {
                    return 0;
                  } else {
                    var value = "";
                    if ("s" in property.keyframes[pos - 1]) {
                      value = property.keyframes[pos - 1].s;
                    } else if ("e" in property.keyframes[pos - 2]) {
                      value = property.keyframes[pos - 2].e;
                    } else {
                      value = property.keyframes[pos - 2].s;
                    }
                    var valueProp =
                      type === "unidimensional"
                        ? new Number(value)
                        : Object.assign({}, value);
                    valueProp.time =
                      property.keyframes[pos - 1].t /
                      property.elem.comp.globalData.frameRate;
                    return valueProp;
                  }
                };
                expressionValue.valueAtTime = property.getValueAtTime;
                expressionValue.speedAtTime = property.getSpeedAtTime;
                expressionValue.velocityAtTime = property.getVelocityAtTime;
                expressionValue.propertyGroup = property.propertyGroup;
              }

              function UnidimensionalPropertyInterface(property) {
                if (!property || !("pv" in property)) {
                  property = defaultUnidimensionalValue;
                }
                var mult = 1 / property.mult;
                var val = property.pv * mult;
                var expressionValue = new Number(val);
                expressionValue.value = val;
                completeProperty(expressionValue, property, "unidimensional");

                return function() {
                  if (property.k) {
                    property.getValue();
                  }
                  val = property.v * mult;
                  if (expressionValue.value !== val) {
                    expressionValue = new Number(val);
                    expressionValue.value = val;
                    completeProperty(
                      expressionValue,
                      property,
                      "unidimensional",
                    );
                  }
                  return expressionValue;
                };
              }

              function MultidimensionalPropertyInterface(property) {
                if (!property || !("pv" in property)) {
                  property = defaultMultidimensionalValue;
                }
                var mult = 1 / property.mult;
                var len = property.pv.length;
                var expressionValue = createTypedArray("float32", len);
                var arrValue = createTypedArray("float32", len);
                expressionValue.value = arrValue;
                completeProperty(expressionValue, property, "multidimensional");

                return function() {
                  if (property.k) {
                    property.getValue();
                  }
                  for (var i = 0; i < len; i += 1) {
                    expressionValue[i] = arrValue[i] = property.v[i] * mult;
                  }
                  return expressionValue;
                };
              }

              //TODO: try to avoid using this getter
              function defaultGetter() {
                return defaultUnidimensionalValue;
              }

              return function(property) {
                if (!property) {
                  return defaultGetter;
                } else if (property.propType === "unidimensional") {
                  return UnidimensionalPropertyInterface(property);
                } else {
                  return MultidimensionalPropertyInterface(property);
                }
              };
            })();

            (function() {
              var TextExpressionSelectorProp = (function() {
                function getValueProxy(index, total) {
                  this.textIndex = index + 1;
                  this.textTotal = total;
                  this.v = this.getValue() * this.mult;
                  return this.v;
                }

                return function TextExpressionSelectorProp(elem, data) {
                  this.pv = 1;
                  this.comp = elem.comp;
                  this.elem = elem;
                  this.mult = 0.01;
                  this.propType = "textSelector";
                  this.textTotal = data.totalChars;
                  this.selectorValue = 100;
                  this.lastValue = [1, 1, 1];
                  this.k = true;
                  this.x = true;
                  this.getValue = ExpressionManager.initiateExpression.bind(
                    this,
                  )(elem, data, this);
                  this.getMult = getValueProxy;
                  this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;
                  if (this.kf) {
                    this.getValueAtTime = expressionHelpers.getValueAtTime.bind(
                      this,
                    );
                  } else {
                    this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(
                      this,
                    );
                  }
                  this.setGroupProperty = expressionHelpers.setGroupProperty;
                };
              })();

              var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;
              TextSelectorProp.getTextSelectorProp = function(elem, data, arr) {
                if (data.t === 1) {
                  return new TextExpressionSelectorProp(elem, data, arr);
                } else {
                  return propertyGetTextProp(elem, data, arr);
                }
              };
            })();
            function SliderEffect(data, elem, container) {
              this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
            }
            function AngleEffect(data, elem, container) {
              this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
            }
            function ColorEffect(data, elem, container) {
              this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);
            }
            function PointEffect(data, elem, container) {
              this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);
            }
            function LayerIndexEffect(data, elem, container) {
              this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
            }
            function MaskIndexEffect(data, elem, container) {
              this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
            }
            function CheckboxEffect(data, elem, container) {
              this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);
            }
            function NoValueEffect() {
              this.p = {};
            }
            function EffectsManager() {}
            function EffectsManager(data, element) {
              var effects = data.ef || [];
              this.effectElements = [];
              var i,
                len = effects.length;
              var effectItem;
              for (i = 0; i < len; i++) {
                effectItem = new GroupEffect(effects[i], element);
                this.effectElements.push(effectItem);
              }
            }

            function GroupEffect(data, element) {
              this.init(data, element);
            }

            extendPrototype([DynamicPropertyContainer], GroupEffect);

            GroupEffect.prototype.getValue =
              GroupEffect.prototype.iterateDynamicProperties;

            GroupEffect.prototype.init = function(data, element) {
              this.data = data;
              this.effectElements = [];
              this.initDynamicPropertyContainer(element);
              var i,
                len = this.data.ef.length;
              var eff,
                effects = this.data.ef;
              for (i = 0; i < len; i += 1) {
                eff = null;
                switch (effects[i].ty) {
                  case 0:
                    eff = new SliderEffect(effects[i], element, this);
                    break;
                  case 1:
                    eff = new AngleEffect(effects[i], element, this);
                    break;
                  case 2:
                    eff = new ColorEffect(effects[i], element, this);
                    break;
                  case 3:
                    eff = new PointEffect(effects[i], element, this);
                    break;
                  case 4:
                  case 7:
                    eff = new CheckboxEffect(effects[i], element, this);
                    break;
                  case 10:
                    eff = new LayerIndexEffect(effects[i], element, this);
                    break;
                  case 11:
                    eff = new MaskIndexEffect(effects[i], element, this);
                    break;
                  case 5:
                    eff = new EffectsManager(effects[i], element, this);
                    break;
                  //case 6:
                  default:
                    eff = new NoValueEffect(effects[i], element, this);
                    break;
                }
                if (eff) {
                  this.effectElements.push(eff);
                }
              }
            };

            var lottiejs = {};

            var _isFrozen = false;

            function setLocationHref(href) {
              locationHref = href;
            }

            function searchAnimations() {
              if (standalone === true) {
                animationManager.searchAnimations(
                  animationData,
                  standalone,
                  renderer,
                );
              } else {
                animationManager.searchAnimations();
              }
            }

            function setSubframeRendering(flag) {
              subframeEnabled = flag;
            }

            function loadAnimation(params) {
              if (standalone === true) {
                params.animationData = JSON.parse(animationData);
              }
              return animationManager.loadAnimation(params);
            }

            function setQuality(value) {
              if (typeof value === "string") {
                switch (value) {
                  case "high":
                    defaultCurveSegments = 200;
                    break;
                  case "medium":
                    defaultCurveSegments = 50;
                    break;
                  case "low":
                    defaultCurveSegments = 10;
                    break;
                }
              } else if (!isNaN(value) && value > 1) {
                defaultCurveSegments = value;
              }
              if (defaultCurveSegments >= 50) {
                roundValues(false);
              } else {
                roundValues(true);
              }
            }

            function inBrowser() {
              return typeof navigator !== "undefined";
            }

            function installPlugin(type, plugin) {
              if (type === "expressions") {
                expressionsPlugin = plugin;
              }
            }

            function getFactory(name) {
              switch (name) {
                case "propertyFactory":
                  return PropertyFactory;
                case "shapePropertyFactory":
                  return ShapePropertyFactory;
                case "matrix":
                  return Matrix;
              }
            }

            lottiejs.play = animationManager.play;
            lottiejs.pause = animationManager.pause;
            lottiejs.setLocationHref = setLocationHref;
            lottiejs.togglePause = animationManager.togglePause;
            lottiejs.setSpeed = animationManager.setSpeed;
            lottiejs.setDirection = animationManager.setDirection;
            lottiejs.stop = animationManager.stop;
            lottiejs.searchAnimations = searchAnimations;
            lottiejs.registerAnimation = animationManager.registerAnimation;
            lottiejs.loadAnimation = loadAnimation;
            lottiejs.setSubframeRendering = setSubframeRendering;
            lottiejs.resize = animationManager.resize;
            //lottiejs.start = start;
            lottiejs.goToAndStop = animationManager.goToAndStop;
            lottiejs.destroy = animationManager.destroy;
            lottiejs.setQuality = setQuality;
            lottiejs.inBrowser = inBrowser;
            lottiejs.installPlugin = installPlugin;
            lottiejs.freeze = animationManager.freeze;
            lottiejs.unfreeze = animationManager.unfreeze;
            lottiejs.getRegisteredAnimations =
              animationManager.getRegisteredAnimations;
            lottiejs.__getFactory = getFactory;
            lottiejs.version = "5.5.4";

            function checkReady() {
              if (document.readyState === "complete") {
                clearInterval(readyStateCheckInterval);
                searchAnimations();
              }
            }

            function getQueryVariable(variable) {
              var vars = queryString.split("&");
              for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                if (decodeURIComponent(pair[0]) == variable) {
                  return decodeURIComponent(pair[1]);
                }
              }
            }
            var standalone = "__[STANDALONE]__";
            var animationData = "__[ANIMATIONDATA]__";
            var renderer = "";
            if (standalone) {
              var scripts = document.getElementsByTagName("script");
              var index = scripts.length - 1;
              var myScript = scripts[index] || {
                src: "",
              };
              var queryString = myScript.src.replace(/^[^\?]+\??/, "");
              renderer = getQueryVariable("renderer");
            }
            var readyStateCheckInterval = setInterval(checkReady, 100);
            return lottiejs;
          });

        /***/
      },

    /***/ "./node_modules/natural-scale/dist/constants.js":
      /*!******************************************************!*\
  !*** ./node_modules/natural-scale/dist/constants.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", { value: true });
        exports.MINOR_SECOND = 1.067;
        exports.MAJOR_SECOND = 1.125;
        exports.MINOR_THIRD = 1.2;
        exports.MAJOR_THIRD = 1.25;
        exports.PERFECT_FOURTH = 1.333;
        exports.AUGMENTED_FOURTH = 1.414;
        exports.PERFECT_FIFTH = 1.5;
        exports.MINOR_SIXTH = 1.6;
        exports.MAJOR_SIXTH = 1.667;
        exports.MINOR_SEVENTH = 1.778;
        exports.MAJOR_SEVENTH = 1.875;
        exports.PERFECT_OCTAVE = 2;
        exports.GOLDEN_RATIO = 1.618;
        exports.default = {
          MINOR_SECOND: exports.MINOR_SECOND,
          MAJOR_SECOND: exports.MAJOR_SECOND,
          MINOR_THIRD: exports.MINOR_THIRD,
          MAJOR_THIRD: exports.MAJOR_THIRD,
          PERFECT_FOURTH: exports.PERFECT_FOURTH,
          AUGMENTED_FOURTH: exports.AUGMENTED_FOURTH,
          PERFECT_FIFTH: exports.PERFECT_FIFTH,
          MINOR_SIXTH: exports.MINOR_SIXTH,
          MAJOR_SIXTH: exports.MAJOR_SIXTH,
          MINOR_SEVENTH: exports.MINOR_SEVENTH,
          MAJOR_SEVENTH: exports.MAJOR_SEVENTH,
          PERFECT_OCTAVE: exports.PERFECT_OCTAVE,
          GOLDEN_RATIO: exports.GOLDEN_RATIO,
        };

        /***/
      },

    /***/ "./node_modules/natural-scale/dist/index.js":
      /*!**************************************************!*\
  !*** ./node_modules/natural-scale/dist/index.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var __importStar =
          (this && this.__importStar) ||
          function(mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null)
              for (var k in mod)
                if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
            result["default"] = mod;
            return result;
          };
        Object.defineProperty(exports, "__esModule", { value: true });
        var DefaultRatios = __importStar(
          __webpack_require__(
            /*! ./constants */ "./node_modules/natural-scale/dist/constants.js",
          ),
        );
        var steps_1 = __webpack_require__(
          /*! ./steps */ "./node_modules/natural-scale/dist/steps.js",
        );
        exports.Ratio = DefaultRatios;
        exports.Scale = function(_a) {
          var _b = _a.interval,
            interval = _b === void 0 ? exports.Ratio.MINOR_THIRD : _b,
            unit = _a.unit,
            base = _a.base;
          return function(step, unitOverride) {
            if (step === void 0) {
              step = 0;
            }
            var unitValue = unitOverride || unit;
            return step
              ? steps_1.getStep({
                  step: step,
                  interval: interval,
                  unit: unitValue,
                  base: base,
                })
              : steps_1.getSteps({
                  interval: interval,
                  unit: unitOverride,
                  base: base,
                });
          };
        };
        exports.default = { Scale: exports.Scale, Ratio: exports.Ratio };

        /***/
      },

    /***/ "./node_modules/natural-scale/dist/steps.js":
      /*!**************************************************!*\
  !*** ./node_modules/natural-scale/dist/steps.js ***!
  \**************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", { value: true });
        exports.getStep = function(_a) {
          var step = _a.step,
            interval = _a.interval,
            unit = _a.unit,
            base = _a.base;
          var lowPower = 5 - step;
          var highPower = step - 4;
          var result =
            step <= 3
              ? interval / Math.pow(interval, lowPower)
              : Math.pow(interval, highPower);
          // Round to 3 decimal places
          var value = Math.floor(result * 1000) / 1000;
          if (base) {
            value *= base;
          }
          return unit && unit !== "none" ? (value += unit) : value;
        };
        exports.getSteps = function(_a) {
          var interval = _a.interval,
            unit = _a.unit,
            base = _a.base;
          var stepsArray = [];
          for (var index = 0; index < 8; index++) {
            var step = index + 1;
            stepsArray.push(
              exports.getStep({
                step: step,
                interval: interval,
                unit: unit,
                base: base,
              }),
            );
          }
          return stepsArray;
        };

        /***/
      },

    /***/ "./node_modules/next-server/dist/lib/mitt.js":
      /*!***************************************************!*\
  !*** ./node_modules/next-server/dist/lib/mitt.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /*
MIT License

Copyright (c) Jason Miller (https://jasonformat.com/)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js",
        );

        var _create = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/object/create */ "./node_modules/@babel/runtime-corejs2/core-js/object/create.js",
          ),
        );

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        function mitt() {
          var all = (0, _create.default)(null);
          return {
            on: function on(type, handler) {
              (all[type] || (all[type] = [])).push(handler);
            },
            off: function off(type, handler) {
              if (all[type]) {
                // tslint:disable-next-line:no-bitwise
                all[type].splice(all[type].indexOf(handler) >>> 0, 1);
              }
            },
            emit: function emit(type) {
              for (
                var _len = arguments.length,
                  evts = new Array(_len > 1 ? _len - 1 : 0),
                  _key = 1;
                _key < _len;
                _key++
              ) {
                evts[_key - 1] = arguments[_key];
              }

              (all[type] || []).slice().map(function(handler) {
                handler.apply(void 0, evts);
              });
            },
          };
        }

        exports.default = mitt;

        /***/
      },

    /***/ "./node_modules/next-server/dist/lib/request-context.js":
      /*!**************************************************************!*\
  !*** ./node_modules/next-server/dist/lib/request-context.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var __importStar =
          (void 0 && (void 0).__importStar) ||
          function(mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null)
              for (var k in mod) {
                if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
              }
            result["default"] = mod;
            return result;
          };

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var React = __importStar(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        exports.RequestContext = React.createContext(null);

        /***/
      },

    /***/ "./node_modules/next-server/dist/lib/router-context.js":
      /*!*************************************************************!*\
  !*** ./node_modules/next-server/dist/lib/router-context.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var __importStar =
          (void 0 && (void 0).__importStar) ||
          function(mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null)
              for (var k in mod) {
                if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
              }
            result["default"] = mod;
            return result;
          };

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var React = __importStar(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        exports.RouterContext = React.createContext(null);

        /***/
      },

    /***/ "./node_modules/next-server/dist/lib/router/router.js":
      /*!************************************************************!*\
  !*** ./node_modules/next-server/dist/lib/router/router.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js",
        );

        var _regenerator = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/regenerator */ "./node_modules/@babel/runtime-corejs2/regenerator/index.js",
          ),
        );

        var _asyncToGenerator2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js",
          ),
        );

        var _slicedToArray2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime-corejs2/helpers/esm/slicedToArray.js",
          ),
        );

        var _promise = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/promise */ "./node_modules/@babel/runtime-corejs2/core-js/promise.js",
          ),
        );

        var _assign = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/object/assign */ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js",
          ),
        );

        var _set = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/set */ "./node_modules/@babel/runtime-corejs2/core-js/set.js",
          ),
        );

        var _classCallCheck2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js",
          ),
        );

        var _createClass2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/esm/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js",
          ),
        );

        var __importDefault =
          (void 0 && (void 0).__importDefault) ||
          function(mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod,
                };
          };

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var url_1 = __webpack_require__(/*! url */ "./node_modules/url/url.js");

        var mitt_1 = __importDefault(
          __webpack_require__(
            /*! ../mitt */ "./node_modules/next-server/dist/lib/mitt.js",
          ),
        );

        var utils_1 = __webpack_require__(
          /*! ../utils */ "./node_modules/next-server/dist/lib/utils.js",
        );

        function toRoute(path) {
          return path.replace(/\/$/, "") || "/";
        }

        var Router =
          /*#__PURE__*/
          (function() {
            function Router(pathname, query, as, _ref) {
              var _this = this;

              var initialProps = _ref.initialProps,
                pageLoader = _ref.pageLoader,
                App = _ref.App,
                Component = _ref.Component,
                err = _ref.err;
              (0, _classCallCheck2.default)(this, Router);

              this.onPopState = function(e) {
                if (!e.state) {
                  // We get state as undefined for two reasons.
                  //  1. With older safari (< 8) and older chrome (< 34)
                  //  2. When the URL changed with #
                  //
                  // In the both cases, we don't need to proceed and change the route.
                  // (as it's already changed)
                  // But we can simply replace the state with the new changes.
                  // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
                  // So, doing the following for (1) does no harm.
                  var _pathname = _this.pathname,
                    _query = _this.query;

                  _this.changeState(
                    "replaceState",
                    utils_1.formatWithValidation({
                      pathname: _pathname,
                      query: _query,
                    }),
                    utils_1.getURL(),
                  );

                  return;
                } // Make sure we don't re-render on initial load,
                // can be caused by navigating back from an external site

                if (e.state.options && e.state.options.fromExternal) {
                  return;
                } // If the downstream application returns falsy, return.
                // They will then be responsible for handling the event.

                if (_this._bps && !_this._bps(e.state)) {
                  return;
                }

                var _e$state = e.state,
                  url = _e$state.url,
                  as = _e$state.as,
                  options = _e$state.options;

                if (true) {
                  if (typeof url === "undefined" || typeof as === "undefined") {
                    console.warn(
                      "`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty",
                    );
                  }
                }

                _this.replace(url, as, options);
              }; // represents the current component key

              this.route = toRoute(pathname); // set up the component cache (by route keys)

              this.components = {}; // We should not keep the cache, if there's an error
              // Otherwise, this cause issues when when going back and
              // come again to the errored page.

              if (pathname !== "/_error") {
                this.components[this.route] = {
                  Component: Component,
                  props: initialProps,
                  err: err,
                };
              }

              this.components["/_app"] = {
                Component: App,
              }; // Backwards compat for Router.router.events
              // TODO: Should be remove the following major version as it was never documented
              // @ts-ignore backwards compatibility

              this.events = Router.events;
              this.pageLoader = pageLoader;
              this.pathname = pathname;
              this.query = query;
              this.asPath = as;
              this.subscriptions = new _set.default();
              this.componentLoadCancel = null;

              if (typeof window !== "undefined") {
                // in order for `e.state` to work on the `onpopstate` event
                // we have to register the initial route upon initialization
                this.changeState(
                  "replaceState",
                  utils_1.formatWithValidation({
                    pathname: pathname,
                    query: query,
                  }),
                  as,
                );
                window.addEventListener("popstate", this.onPopState);
                window.addEventListener("unload", function() {
                  // Workaround for popstate firing on initial page load when
                  // navigating back from an external site
                  if (history.state) {
                    var _history$state = history.state,
                      url = _history$state.url,
                      _as2 = _history$state.as,
                      options = _history$state.options;

                    _this.changeState(
                      "replaceState",
                      url,
                      _as2,
                      (0, _assign.default)({}, options, {
                        fromExternal: true,
                      }),
                    );
                  }
                });
              }
            }

            (0, _createClass2.default)(
              Router,
              [
                {
                  key: "update",
                  value: function update(route, Component) {
                    var data = this.components[route];

                    if (!data) {
                      throw new Error(
                        "Cannot update unavailable route: ".concat(route),
                      );
                    }

                    var newData = (0, _assign.default)({}, data, {
                      Component: Component,
                    });
                    this.components[route] = newData; // pages/_app.js updated

                    if (route === "/_app") {
                      this.notify(this.components[this.route]);
                      return;
                    }

                    if (route === this.route) {
                      this.notify(newData);
                    }
                  },
                },
                {
                  key: "reload",
                  value: function reload(route) {
                    var _this2 = this;

                    return new _promise.default(function(resolve, reject) {
                      delete _this2.components[route];

                      _this2.pageLoader.clearCache(route);

                      if (route !== _this2.route) {
                        return resolve();
                      }

                      var pathname = _this2.pathname,
                        query = _this2.query;
                      var url = window.location.href; // This makes sure we only use pathname + query + hash, to mirror `asPath` coming from the server.

                      var as =
                        window.location.pathname +
                        window.location.search +
                        window.location.hash;
                      Router.events.emit("routeChangeStart", url);

                      _this2
                        .getRouteInfo(route, pathname, query, as)
                        .then(function(routeInfo) {
                          var error = routeInfo.error;

                          if (error && error.cancelled) {
                            return resolve();
                          }

                          _this2.notify(routeInfo);

                          if (error) {
                            Router.events.emit("routeChangeError", error, url);
                            return reject(error);
                          }

                          Router.events.emit("routeChangeComplete", url);
                        });
                    });
                  },
                },
                {
                  key: "back",
                  value: function back() {
                    window.history.back();
                  },
                },
                {
                  key: "push",
                  value: function push(url) {
                    var as =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : url;
                    var options =
                      arguments.length > 2 && arguments[2] !== undefined
                        ? arguments[2]
                        : {};
                    return this.change("pushState", url, as, options);
                  },
                },
                {
                  key: "replace",
                  value: function replace(url) {
                    var as =
                      arguments.length > 1 && arguments[1] !== undefined
                        ? arguments[1]
                        : url;
                    var options =
                      arguments.length > 2 && arguments[2] !== undefined
                        ? arguments[2]
                        : {};
                    return this.change("replaceState", url, as, options);
                  },
                },
                {
                  key: "change",
                  value: function change(method, _url, _as, options) {
                    var _this3 = this;

                    return new _promise.default(function(resolve, reject) {
                      // If url and as provided as an object representation,
                      // we'll format them into the string version here.
                      var url =
                        typeof _url === "object"
                          ? utils_1.formatWithValidation(_url)
                          : _url;
                      var as =
                        typeof _as === "object"
                          ? utils_1.formatWithValidation(_as)
                          : _as; // Add the ending slash to the paths. So, we can serve the
                      // "<page>/index.html" directly for the SSR page.

                      if (true) {
                        // @ts-ignore this is temporarily global (attached to window)
                        if (__NEXT_DATA__.nextExport) {
                          as = Router._rewriteUrlForNextExport(as);
                        }
                      }

                      _this3.abortComponentLoad(as); // If the url change is only related to a hash change
                      // We should not proceed. We should only change the state.

                      if (_this3.onlyAHashChange(as)) {
                        Router.events.emit("hashChangeStart", as);

                        _this3.changeState(method, url, as);

                        _this3.scrollToHash(as);

                        Router.events.emit("hashChangeComplete", as);
                        return true;
                      }

                      var _url_1$parse = url_1.parse(url, true),
                        pathname = _url_1$parse.pathname,
                        query = _url_1$parse.query; // If asked to change the current URL we should reload the current page
                      // (not location.reload() but reload getInitialProps and other Next.js stuffs)
                      // We also need to set the method = replaceState always
                      // as this should not go into the history (That's how browsers work)
                      // We should compare the new asPath to the current asPath, not the url

                      if (!_this3.urlIsNew(as)) {
                        method = "replaceState";
                      } // @ts-ignore pathname is always a string

                      var route = toRoute(pathname);
                      var _options$shallow = options.shallow,
                        shallow =
                          _options$shallow === void 0
                            ? false
                            : _options$shallow;
                      Router.events.emit("routeChangeStart", as); // If shallow is true and the route exists in the router cache we reuse the previous result
                      // @ts-ignore pathname is always a string

                      _this3
                        .getRouteInfo(route, pathname, query, as, shallow)
                        .then(function(routeInfo) {
                          var error = routeInfo.error;

                          if (error && error.cancelled) {
                            return resolve(false);
                          }

                          Router.events.emit("beforeHistoryChange", as);

                          _this3.changeState(method, url, as, options);

                          var hash = window.location.hash.substring(1); // @ts-ignore pathname is always defined

                          _this3.set(
                            route,
                            pathname,
                            query,
                            as,
                            (0, _assign.default)({}, routeInfo, {
                              hash: hash,
                            }),
                          );

                          if (error) {
                            Router.events.emit("routeChangeError", error, as);
                            throw error;
                          }

                          Router.events.emit("routeChangeComplete", as);
                          return resolve(true);
                        }, reject);
                    });
                  },
                },
                {
                  key: "changeState",
                  value: function changeState(method, url, as) {
                    var options =
                      arguments.length > 3 && arguments[3] !== undefined
                        ? arguments[3]
                        : {};

                    if (true) {
                      if (typeof window.history === "undefined") {
                        console.error(
                          "Warning: window.history is not available.",
                        );
                        return;
                      } // @ts-ignore method should always exist on history

                      if (typeof window.history[method] === "undefined") {
                        console.error(
                          "Warning: window.history.".concat(
                            method,
                            " is not available",
                          ),
                        );
                        return;
                      }
                    }

                    if (method !== "pushState" || utils_1.getURL() !== as) {
                      // @ts-ignore method should always exist on history
                      window.history[method](
                        {
                          url: url,
                          as: as,
                          options: options,
                        },
                        null,
                        as,
                      );
                    }
                  },
                },
                {
                  key: "getRouteInfo",
                  value: function getRouteInfo(route, pathname, query, as) {
                    var _this4 = this;

                    var shallow =
                      arguments.length > 4 && arguments[4] !== undefined
                        ? arguments[4]
                        : false;
                    var cachedRouteInfo = this.components[route]; // If there is a shallow route transition possible
                    // If the route is already rendered on the screen.

                    if (shallow && cachedRouteInfo && this.route === route) {
                      return _promise.default.resolve(cachedRouteInfo);
                    }

                    return new _promise.default(function(resolve, reject) {
                      if (cachedRouteInfo) {
                        return resolve(cachedRouteInfo);
                      }

                      _this4.fetchComponent(route).then(function(Component) {
                        return resolve({
                          Component: Component,
                        });
                      }, reject);
                    })
                      .then(function(routeInfo) {
                        var Component = routeInfo.Component;

                        if (true) {
                          var _require = __webpack_require__(
                              /*! react-is */ "./node_modules/react-is/index.js",
                            ),
                            isValidElementType = _require.isValidElementType;

                          if (!isValidElementType(Component)) {
                            throw new Error(
                              'The default export is not a React Component in page: "'.concat(
                                pathname,
                                '"',
                              ),
                            );
                          }
                        }

                        return new _promise.default(function(resolve, reject) {
                          var ctx = {
                            pathname: pathname,
                            query: query,
                            asPath: as,
                          };

                          _this4
                            .getInitialProps(Component, ctx)
                            .then(function(props) {
                              routeInfo.props = props;
                              _this4.components[route] = routeInfo;
                              resolve(routeInfo);
                            }, reject);
                        });
                      })
                      .catch(function(err) {
                        return new _promise.default(function(resolve) {
                          if (err.code === "PAGE_LOAD_ERROR") {
                            // If we can't load the page it could be one of following reasons
                            //  1. Page doesn't exists
                            //  2. Page does exist in a different zone
                            //  3. Internal error while loading the page
                            // So, doing a hard reload is the proper way to deal with this.
                            window.location.href = as; // Changing the URL doesn't block executing the current code path.
                            // So, we need to mark it as a cancelled error and stop the routing logic.

                            err.cancelled = true; // @ts-ignore TODO: fix the control flow here

                            return resolve({
                              error: err,
                            });
                          }

                          if (err.cancelled) {
                            // @ts-ignore TODO: fix the control flow here
                            return resolve({
                              error: err,
                            });
                          }

                          resolve(
                            _this4
                              .fetchComponent("/_error")
                              .then(function(Component) {
                                var routeInfo = {
                                  Component: Component,
                                  err: err,
                                };
                                var ctx = {
                                  err: err,
                                  pathname: pathname,
                                  query: query,
                                };
                                return new _promise.default(function(resolve) {
                                  _this4.getInitialProps(Component, ctx).then(
                                    function(props) {
                                      routeInfo.props = props;
                                      routeInfo.error = err;
                                      resolve(routeInfo);
                                    },
                                    function(gipErr) {
                                      console.error(
                                        "Error in error page `getInitialProps`: ",
                                        gipErr,
                                      );
                                      routeInfo.error = err;
                                      routeInfo.props = {};
                                      resolve(routeInfo);
                                    },
                                  );
                                });
                              }),
                          );
                        });
                      });
                  },
                },
                {
                  key: "set",
                  value: function set(route, pathname, query, as, data) {
                    this.route = route;
                    this.pathname = pathname;
                    this.query = query;
                    this.asPath = as;
                    this.notify(data);
                  },
                },
                {
                  key: "beforePopState",
                  value: function beforePopState(cb) {
                    this._bps = cb;
                  },
                },
                {
                  key: "onlyAHashChange",
                  value: function onlyAHashChange(as) {
                    if (!this.asPath) return false;

                    var _this$asPath$split = this.asPath.split("#"),
                      _this$asPath$split2 = (0, _slicedToArray2.default)(
                        _this$asPath$split,
                        2,
                      ),
                      oldUrlNoHash = _this$asPath$split2[0],
                      oldHash = _this$asPath$split2[1];

                    var _as$split = as.split("#"),
                      _as$split2 = (0, _slicedToArray2.default)(_as$split, 2),
                      newUrlNoHash = _as$split2[0],
                      newHash = _as$split2[1]; // Makes sure we scroll to the provided hash if the url/hash are the same

                    if (
                      newHash &&
                      oldUrlNoHash === newUrlNoHash &&
                      oldHash === newHash
                    ) {
                      return true;
                    } // If the urls are change, there's more than a hash change

                    if (oldUrlNoHash !== newUrlNoHash) {
                      return false;
                    } // If the hash has changed, then it's a hash only change.
                    // This check is necessary to handle both the enter and
                    // leave hash === '' cases. The identity case falls through
                    // and is treated as a next reload.

                    return oldHash !== newHash;
                  },
                },
                {
                  key: "scrollToHash",
                  value: function scrollToHash(as) {
                    var _as$split3 = as.split("#"),
                      _as$split4 = (0, _slicedToArray2.default)(_as$split3, 2),
                      hash = _as$split4[1]; // Scroll to top if the hash is just `#` with no value

                    if (hash === "") {
                      window.scrollTo(0, 0);
                      return;
                    } // First we check if the element by id is found

                    var idEl = document.getElementById(hash);

                    if (idEl) {
                      idEl.scrollIntoView();
                      return;
                    } // If there's no element with the id, we check the `name` property
                    // To mirror browsers

                    var nameEl = document.getElementsByName(hash)[0];

                    if (nameEl) {
                      nameEl.scrollIntoView();
                    }
                  },
                },
                {
                  key: "urlIsNew",
                  value: function urlIsNew(asPath) {
                    return this.asPath !== asPath;
                  },
                },
                {
                  key: "prefetch",
                  value: function prefetch(url) {
                    var _this5 = this;

                    return new _promise.default(function(resolve, reject) {
                      // Prefetch is not supported in development mode because it would trigger on-demand-entries
                      if (true) return;

                      var _url_1$parse2 = url_1.parse(url),
                        pathname = _url_1$parse2.pathname; // @ts-ignore pathname is always defined

                      var route = toRoute(pathname);

                      _this5.pageLoader.prefetch(route).then(resolve, reject);
                    });
                  },
                },
                {
                  key: "fetchComponent",
                  value: (function() {
                    var _fetchComponent = (0, _asyncToGenerator2.default)(
                      /*#__PURE__*/
                      _regenerator.default.mark(function _callee(route) {
                        var cancelled, cancel, Component, error;
                        return _regenerator.default.wrap(
                          function _callee$(_context) {
                            while (1) {
                              switch ((_context.prev = _context.next)) {
                                case 0:
                                  cancelled = false;

                                  cancel = this.componentLoadCancel = function() {
                                    cancelled = true;
                                  };

                                  _context.next = 4;
                                  return this.pageLoader.loadPage(route);

                                case 4:
                                  Component = _context.sent;

                                  if (!cancelled) {
                                    _context.next = 9;
                                    break;
                                  }

                                  error = new Error(
                                    'Abort fetching component for route: "'.concat(
                                      route,
                                      '"',
                                    ),
                                  );
                                  error.cancelled = true;
                                  throw error;

                                case 9:
                                  if (cancel === this.componentLoadCancel) {
                                    this.componentLoadCancel = null;
                                  }

                                  return _context.abrupt("return", Component);

                                case 11:
                                case "end":
                                  return _context.stop();
                              }
                            }
                          },
                          _callee,
                          this,
                        );
                      }),
                    );

                    function fetchComponent(_x) {
                      return _fetchComponent.apply(this, arguments);
                    }

                    return fetchComponent;
                  })(),
                },
                {
                  key: "getInitialProps",
                  value: (function() {
                    var _getInitialProps = (0, _asyncToGenerator2.default)(
                      /*#__PURE__*/
                      _regenerator.default.mark(function _callee2(
                        Component,
                        ctx,
                      ) {
                        var cancelled, cancel, App, props, err;
                        return _regenerator.default.wrap(
                          function _callee2$(_context2) {
                            while (1) {
                              switch ((_context2.prev = _context2.next)) {
                                case 0:
                                  cancelled = false;

                                  cancel = function cancel() {
                                    cancelled = true;
                                  };

                                  this.componentLoadCancel = cancel;
                                  App = this.components["/_app"].Component;
                                  _context2.next = 6;
                                  return utils_1.loadGetInitialProps(App, {
                                    Component: Component,
                                    router: this,
                                    ctx: ctx,
                                  });

                                case 6:
                                  props = _context2.sent;

                                  if (cancel === this.componentLoadCancel) {
                                    this.componentLoadCancel = null;
                                  }

                                  if (!cancelled) {
                                    _context2.next = 12;
                                    break;
                                  }

                                  err = new Error(
                                    "Loading initial props cancelled",
                                  );
                                  err.cancelled = true;
                                  throw err;

                                case 12:
                                  return _context2.abrupt("return", props);

                                case 13:
                                case "end":
                                  return _context2.stop();
                              }
                            }
                          },
                          _callee2,
                          this,
                        );
                      }),
                    );

                    function getInitialProps(_x2, _x3) {
                      return _getInitialProps.apply(this, arguments);
                    }

                    return getInitialProps;
                  })(),
                },
                {
                  key: "abortComponentLoad",
                  value: function abortComponentLoad(as) {
                    if (this.componentLoadCancel) {
                      Router.events.emit(
                        "routeChangeError",
                        new Error("Route Cancelled"),
                        as,
                      );
                      this.componentLoadCancel();
                      this.componentLoadCancel = null;
                    }
                  },
                },
                {
                  key: "notify",
                  value: function notify(data) {
                    var App = this.components["/_app"].Component;
                    this.subscriptions.forEach(function(fn) {
                      return fn(
                        (0, _assign.default)({}, data, {
                          App: App,
                        }),
                      );
                    });
                  },
                },
                {
                  key: "subscribe",
                  value: function subscribe(fn) {
                    var _this6 = this;

                    this.subscriptions.add(fn);
                    return function() {
                      return _this6.subscriptions.delete(fn);
                    };
                  },
                },
              ],
              [
                {
                  key: "_rewriteUrlForNextExport",
                  value: function _rewriteUrlForNextExport(url) {
                    var _url$split = url.split("#"),
                      _url$split2 = (0, _slicedToArray2.default)(_url$split, 2),
                      pathname = _url$split2[0],
                      hash = _url$split2[1]; // tslint:disable-next-line

                    var _pathname$split = pathname.split("?"),
                      _pathname$split2 = (0, _slicedToArray2.default)(
                        _pathname$split,
                        2,
                      ),
                      path = _pathname$split2[0],
                      qs = _pathname$split2[1];

                    path = path.replace(/\/$/, ""); // Append a trailing slash if this path does not have an extension

                    if (!/\.[^/]+\/?$/.test(path)) path += "/";
                    if (qs) path += "?" + qs;
                    if (hash) path += "#" + hash;
                    return path;
                  },
                },
              ],
            );
            return Router;
          })();

        Router.events = mitt_1.default();
        exports.default = Router;

        /***/
      },

    /***/ "./node_modules/next-server/dist/lib/utils.js":
      /*!****************************************************!*\
  !*** ./node_modules/next-server/dist/lib/utils.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js",
        );

        var _regenerator = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/regenerator */ "./node_modules/@babel/runtime-corejs2/regenerator/index.js",
          ),
        );

        var _keys = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/object/keys */ "./node_modules/@babel/runtime-corejs2/core-js/object/keys.js",
          ),
        );

        var _asyncToGenerator2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js",
          ),
        );

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var url_1 = __webpack_require__(/*! url */ "./node_modules/url/url.js");

        function execOnce(fn) {
          var _this = this;

          var used = false;
          return function() {
            if (!used) {
              used = true;

              for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              fn.apply(_this, args);
            }
          };
        }

        exports.execOnce = execOnce;

        function getLocationOrigin() {
          var _window$location = window.location,
            protocol = _window$location.protocol,
            hostname = _window$location.hostname,
            port = _window$location.port;
          return ""
            .concat(protocol, "//")
            .concat(hostname)
            .concat(port ? ":" + port : "");
        }

        exports.getLocationOrigin = getLocationOrigin;

        function getURL() {
          var href = window.location.href;
          var origin = getLocationOrigin();
          return href.substring(origin.length);
        }

        exports.getURL = getURL;

        function getDisplayName(Component) {
          return typeof Component === "string"
            ? Component
            : Component.displayName || Component.name || "Unknown";
        }

        exports.getDisplayName = getDisplayName;

        function isResSent(res) {
          return res.finished || res.headersSent;
        }

        exports.isResSent = isResSent;

        function loadGetInitialProps(_x, _x2) {
          return _loadGetInitialProps.apply(this, arguments);
        }

        function _loadGetInitialProps() {
          _loadGetInitialProps = (0, _asyncToGenerator2.default)(
            /*#__PURE__*/
            _regenerator.default.mark(function _callee(Component, ctx) {
              var message, props, _message;

              return _regenerator.default.wrap(function _callee$(_context) {
                while (1) {
                  switch ((_context.prev = _context.next)) {
                    case 0:
                      if (false) {
                      }

                      if (
                        !(
                          Component.prototype &&
                          Component.prototype.getInitialProps
                        )
                      ) {
                        _context.next = 4;
                        break;
                      }

                      message = '"'.concat(
                        getDisplayName(Component),
                        '.getInitialProps()" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.',
                      );
                      throw new Error(message);

                    case 4:
                      if (Component.getInitialProps) {
                        _context.next = 6;
                        break;
                      }

                      return _context.abrupt("return", {});

                    case 6:
                      _context.next = 8;
                      return Component.getInitialProps(ctx);

                    case 8:
                      props = _context.sent;

                      if (!(ctx.res && isResSent(ctx.res))) {
                        _context.next = 11;
                        break;
                      }

                      return _context.abrupt("return", props);

                    case 11:
                      if (props) {
                        _context.next = 14;
                        break;
                      }

                      _message = '"'
                        .concat(
                          getDisplayName(Component),
                          '.getInitialProps()" should resolve to an object. But found "',
                        )
                        .concat(props, '" instead.');
                      throw new Error(_message);

                    case 14:
                      return _context.abrupt("return", props);

                    case 15:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            }),
          );
          return _loadGetInitialProps.apply(this, arguments);
        }

        exports.loadGetInitialProps = loadGetInitialProps;
        exports.urlObjectKeys = [
          "auth",
          "hash",
          "host",
          "hostname",
          "href",
          "path",
          "pathname",
          "port",
          "protocol",
          "query",
          "search",
          "slashes",
        ];

        function formatWithValidation(url, options) {
          if (true) {
            if (url !== null && typeof url === "object") {
              (0, _keys.default)(url).forEach(function(key) {
                if (exports.urlObjectKeys.indexOf(key) === -1) {
                  console.warn(
                    "Unknown key passed via urlObject into url.format: ".concat(
                      key,
                    ),
                  );
                }
              });
            }
          }

          return url_1.format(url, options);
        }

        exports.formatWithValidation = formatWithValidation;

        /***/
      },

    /***/ "./node_modules/next/app.js":
      /*!**********************************!*\
  !*** ./node_modules/next/app.js ***!
  \**********************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./dist/pages/_app */ "./node_modules/next/dist/pages/_app.js",
        );

        /***/
      },

    /***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!./":
      /*!**********************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx ***!
  \**********************************************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        (window.__NEXT_P = window.__NEXT_P || []).push([
          "/_app",
          function() {
            var page = __webpack_require__(
              /*! private-next-pages/_app.tsx */ "./pages/_app.tsx",
            );
            if (true) {
              module.hot.accept(
                /*! private-next-pages/_app.tsx */ "./pages/_app.tsx",
                function() {
                  if (!next.router.components["/_app"]) return;
                  var updatedPage = __webpack_require__(
                    /*! private-next-pages/_app.tsx */ "./pages/_app.tsx",
                  );
                  next.router.update(
                    "/_app",
                    updatedPage.default || updatedPage,
                  );
                },
              );
            }
            return { page: page.default || page };
          },
        ]);

        /***/
      },

    /***/ "./node_modules/next/dist/client/link.js":
      /*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /* global __NEXT_DATA__ */

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js",
        );

        var _stringify = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/json/stringify */ "./node_modules/@babel/runtime-corejs2/core-js/json/stringify.js",
          ),
        );

        var _classCallCheck2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js",
          ),
        );

        var _createClass2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js",
          ),
        );

        var _possibleConstructorReturn2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js",
          ),
        );

        var _getPrototypeOf2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js",
          ),
        );

        var _inherits2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/inherits.js",
          ),
        );

        var __importStar =
          (void 0 && (void 0).__importStar) ||
          function(mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null)
              for (var k in mod) {
                if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
              }
            result["default"] = mod;
            return result;
          };

        var __importDefault =
          (void 0 && (void 0).__importDefault) ||
          function(mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod,
                };
          };

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var url_1 = __webpack_require__(/*! url */ "./node_modules/url/url.js");

        var react_1 = __importStar(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        var prop_types_1 = __importDefault(
          __webpack_require__(
            /*! prop-types */ "./node_modules/next/node_modules/prop-types/index.js",
          ),
        );

        var router_1 = __importStar(
          __webpack_require__(
            /*! next/router */ "./node_modules/next/dist/client/router.js",
          ),
        );

        var utils_1 = __webpack_require__(
          /*! next-server/dist/lib/utils */ "./node_modules/next-server/dist/lib/utils.js",
        );

        function isLocal(href) {
          var url = url_1.parse(href, false, true);
          var origin = url_1.parse(utils_1.getLocationOrigin(), false, true);
          return (
            !url.host ||
            (url.protocol === origin.protocol && url.host === origin.host)
          );
        }

        function memoizedFormatUrl(formatFunc) {
          var lastHref = null;
          var lastAs = null;
          var lastResult = null;
          return function(href, as) {
            if (href === lastHref && as === lastAs) {
              return lastResult;
            }

            var result = formatFunc(href, as);
            lastHref = href;
            lastAs = as;
            lastResult = result;
            return result;
          };
        }

        function formatUrl(url) {
          return url && typeof url === "object"
            ? utils_1.formatWithValidation(url)
            : url;
        }

        var Link =
          /*#__PURE__*/
          (function(_react_1$Component) {
            (0, _inherits2.default)(Link, _react_1$Component);

            function Link() {
              var _this;

              (0, _classCallCheck2.default)(this, Link);
              _this = (0, _possibleConstructorReturn2.default)(
                this,
                (0, _getPrototypeOf2.default)(Link).apply(this, arguments),
              ); // The function is memoized so that no extra lifecycles are needed
              // as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html

              _this.formatUrls = memoizedFormatUrl(function(href, asHref) {
                return {
                  href: formatUrl(href),
                  as: formatUrl(asHref, true),
                };
              });

              _this.linkClicked = function(e) {
                var _e$currentTarget = e.currentTarget,
                  nodeName = _e$currentTarget.nodeName,
                  target = _e$currentTarget.target;

                if (
                  nodeName === "A" &&
                  ((target && target !== "_self") ||
                    e.metaKey ||
                    e.ctrlKey ||
                    e.shiftKey ||
                    (e.nativeEvent && e.nativeEvent.which === 2))
                ) {
                  // ignore click for new tab / new window behavior
                  return;
                }

                var _this$formatUrls = _this.formatUrls(
                    _this.props.href,
                    _this.props.as,
                  ),
                  href = _this$formatUrls.href,
                  as = _this$formatUrls.as;

                if (!isLocal(href)) {
                  // ignore click if it's outside our scope
                  return;
                }

                var pathname = window.location.pathname;
                href = url_1.resolve(pathname, href);
                as = as ? url_1.resolve(pathname, as) : href;
                e.preventDefault(); //  avoid scroll for urls with anchor refs

                var scroll = _this.props.scroll;

                if (scroll == null) {
                  scroll = as.indexOf("#") < 0;
                } // replace state instead of push if prop is present

                router_1.default[_this.props.replace ? "replace" : "push"](
                  href,
                  as,
                  {
                    shallow: _this.props.shallow,
                  },
                )
                  .then(function(success) {
                    if (!success) return;

                    if (scroll) {
                      window.scrollTo(0, 0);
                      document.body.focus();
                    }
                  })
                  .catch(function(err) {
                    if (_this.props.onError) _this.props.onError(err);
                  });
              };

              return _this;
            }

            (0, _createClass2.default)(Link, [
              {
                key: "componentDidMount",
                value: function componentDidMount() {
                  this.prefetch();
                },
              },
              {
                key: "componentDidUpdate",
                value: function componentDidUpdate(prevProps) {
                  if (
                    (0, _stringify.default)(this.props.href) !==
                    (0, _stringify.default)(prevProps.href)
                  ) {
                    this.prefetch();
                  }
                },
              },
              {
                key: "prefetch",
                value: function prefetch() {
                  if (!this.props.prefetch) return;
                  if (typeof window === "undefined") return; // Prefetch the JSON page if asked (only in the client)

                  var pathname = window.location.pathname;

                  var _this$formatUrls2 = this.formatUrls(
                      this.props.href,
                      this.props.as,
                    ),
                    parsedHref = _this$formatUrls2.href;

                  var href = url_1.resolve(pathname, parsedHref);
                  router_1.default.prefetch(href);
                },
              },
              {
                key: "render",
                value: function render() {
                  var _this2 = this;

                  var children = this.props.children;

                  var _this$formatUrls3 = this.formatUrls(
                      this.props.href,
                      this.props.as,
                    ),
                    href = _this$formatUrls3.href,
                    as = _this$formatUrls3.as; // Deprecated. Warning shown by propType check. If the childen provided is a string (<Link>example</Link>) we wrap it in an <a> tag

                  if (typeof children === "string") {
                    children = react_1.default.createElement(
                      "a",
                      null,
                      children,
                    );
                  } // This will return the first child, if multiple are provided it will throw an error

                  var child = react_1.Children.only(children);
                  var props = {
                    onClick: function onClick(e) {
                      if (
                        child.props &&
                        typeof child.props.onClick === "function"
                      ) {
                        child.props.onClick(e);
                      }

                      if (!e.defaultPrevented) {
                        _this2.linkClicked(e);
                      }
                    },
                  }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
                  // defined, we specify the current 'href', so that repetition is not needed by the user

                  if (
                    this.props.passHref ||
                    (child.type === "a" && !("href" in child.props))
                  ) {
                    props.href = as || href;
                  } // Add the ending slash to the paths. So, we can serve the
                  // "<page>/index.html" directly.

                  if (true) {
                    if (
                      props.href &&
                      typeof __NEXT_DATA__ !== "undefined" &&
                      __NEXT_DATA__.nextExport
                    ) {
                      props.href = router_1.Router._rewriteUrlForNextExport(
                        props.href,
                      );
                    }
                  }

                  return react_1.default.cloneElement(child, props);
                },
              },
            ]);
            return Link;
          })(react_1.Component);

        if (true) {
          var warn = utils_1.execOnce(console.error); // This module gets removed by webpack.IgnorePlugin

          var exact = __webpack_require__(
            /*! prop-types-exact */ "./node_modules/prop-types-exact/build/index.js",
          );

          Link.propTypes = exact({
            href: prop_types_1.default.oneOfType([
              prop_types_1.default.string,
              prop_types_1.default.object,
            ]).isRequired,
            as: prop_types_1.default.oneOfType([
              prop_types_1.default.string,
              prop_types_1.default.object,
            ]),
            prefetch: prop_types_1.default.bool,
            replace: prop_types_1.default.bool,
            shallow: prop_types_1.default.bool,
            passHref: prop_types_1.default.bool,
            scroll: prop_types_1.default.bool,
            children: prop_types_1.default.oneOfType([
              prop_types_1.default.element,
              function(props, propName) {
                var value = props[propName];

                if (typeof value === "string") {
                  warn(
                    "Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>",
                  );
                }

                return null;
              },
            ]).isRequired,
          });
        }

        exports.default = Link;

        /***/
      },

    /***/ "./node_modules/next/dist/client/router.js":
      /*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js",
        );

        var _assign = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/object/assign */ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js",
          ),
        );

        var _construct2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/construct */ "./node_modules/@babel/runtime-corejs2/helpers/construct.js",
          ),
        );

        var _defineProperty = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/object/define-property */ "./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js",
          ),
        );

        var __importDefault =
          (void 0 && (void 0).__importDefault) ||
          function(mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod,
                };
          };

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        /* global window */

        var react_1 = __importDefault(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        var router_1 = __importDefault(
          __webpack_require__(
            /*! next-server/dist/lib/router/router */ "./node_modules/next-server/dist/lib/router/router.js",
          ),
        );

        exports.Router = router_1.default;

        var router_context_1 = __webpack_require__(
          /*! next-server/dist/lib/router-context */ "./node_modules/next-server/dist/lib/router-context.js",
        );

        var request_context_1 = __webpack_require__(
          /*! next-server/dist/lib/request-context */ "./node_modules/next-server/dist/lib/request-context.js",
        );

        var SingletonRouter = {
          router: null,
          readyCallbacks: [],
          ready: function ready(cb) {
            if (this.router) return cb();

            if (typeof window !== "undefined") {
              this.readyCallbacks.push(cb);
            }
          },
        }; // const x = SingletonRouter as IRealRouter
        // Create public properties and methods of the router in the SingletonRouter

        var urlPropertyFields = ["pathname", "route", "query", "asPath"];
        var propertyFields = ["components"];
        var routerEvents = [
          "routeChangeStart",
          "beforeHistoryChange",
          "routeChangeComplete",
          "routeChangeError",
          "hashChangeStart",
          "hashChangeComplete",
        ];
        var coreMethodFields = [
          "push",
          "replace",
          "reload",
          "back",
          "prefetch",
          "beforePopState",
        ]; // Events is a static property on the router, the router doesn't have to be initialized to use it

        Object.defineProperty(SingletonRouter, "events", {
          get: function get() {
            return router_1.default.events;
          },
        });
        propertyFields.concat(urlPropertyFields).forEach(function(field) {
          // Here we need to use Object.defineProperty because, we need to return
          // the property assigned to the actual router
          // The value might get changed as we change routes and this is the
          // proper way to access it
          (0, _defineProperty.default)(SingletonRouter, field, {
            get: function get() {
              var router = getRouter();
              return router[field];
            },
          });
        });
        coreMethodFields.forEach(function(field) {
          // We don't really know the types here, so we add them later instead
          SingletonRouter[field] = function() {
            var router = getRouter();
            return router[field].apply(router, arguments);
          };
        });
        routerEvents.forEach(function(event) {
          SingletonRouter.ready(function() {
            router_1.default.events.on(event, function() {
              var eventField = "on"
                .concat(event.charAt(0).toUpperCase())
                .concat(event.substring(1));
              var singletonRouter = SingletonRouter;

              if (singletonRouter[eventField]) {
                try {
                  singletonRouter[eventField].apply(singletonRouter, arguments);
                } catch (err) {
                  // tslint:disable-next-line:no-console
                  console.error(
                    "Error when running the Router event: ".concat(eventField),
                  ); // tslint:disable-next-line:no-console

                  console.error("".concat(err.message, "\n").concat(err.stack));
                }
              }
            });
          });
        });

        function getRouter() {
          if (!SingletonRouter.router) {
            var message =
              "No router instance found.\n" +
              'You should only use "next/router" inside the client side of your app.\n';
            throw new Error(message);
          }

          return SingletonRouter.router;
        } // Export the SingletonRouter and this is the public API.

        exports.default = SingletonRouter; // Reexport the withRoute HOC

        var with_router_1 = __webpack_require__(
          /*! ./with-router */ "./node_modules/next/dist/client/with-router.js",
        );

        exports.withRouter = with_router_1.default;

        function useRouter() {
          return react_1.default.useContext(router_context_1.RouterContext);
        }

        exports.useRouter = useRouter;

        function useRequest() {
          return react_1.default.useContext(request_context_1.RequestContext);
        }

        exports.useRequest = useRequest; // INTERNAL APIS
        // -------------
        // (do not use following exports inside the app)
        // Create a router and assign it as the singleton instance.
        // This is used in client side when we are initilizing the app.
        // This should **not** use inside the server.

        exports.createRouter = function() {
          for (
            var _len = arguments.length, args = new Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            args[_key] = arguments[_key];
          }

          SingletonRouter.router = (0, _construct2.default)(
            router_1.default,
            args,
          );
          SingletonRouter.readyCallbacks.forEach(function(cb) {
            return cb();
          });
          SingletonRouter.readyCallbacks = [];
          return SingletonRouter.router;
        }; // This function is used to create the `withRouter` router instance

        function makePublicRouterInstance(router) {
          var _router = router;
          var instance = {};

          for (var _i = 0; _i < urlPropertyFields.length; _i++) {
            var property = urlPropertyFields[_i];

            if (typeof _router[property] === "object") {
              instance[property] = (0, _assign.default)({}, _router[property]); // makes sure query is not stateful

              continue;
            }

            instance[property] = _router[property];
          } // Events is a static property on the router, the router doesn't have to be initialized to use it

          instance.events = router_1.default.events;
          propertyFields.forEach(function(field) {
            // Here we need to use Object.defineProperty because, we need to return
            // the property assigned to the actual router
            // The value might get changed as we change routes and this is the
            // proper way to access it
            (0, _defineProperty.default)(instance, field, {
              get: function get() {
                return _router[field];
              },
            });
          });
          coreMethodFields.forEach(function(field) {
            instance[field] = function() {
              return _router[field].apply(_router, arguments);
            };
          });
          return instance;
        }

        exports.makePublicRouterInstance = makePublicRouterInstance;

        /***/
      },

    /***/ "./node_modules/next/dist/client/with-router.js":
      /*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js",
        );

        var _assign = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/object/assign */ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js",
          ),
        );

        var _classCallCheck2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js",
          ),
        );

        var _createClass2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js",
          ),
        );

        var _possibleConstructorReturn2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js",
          ),
        );

        var _getPrototypeOf2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js",
          ),
        );

        var _inherits2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/inherits.js",
          ),
        );

        var __importDefault =
          (void 0 && (void 0).__importDefault) ||
          function(mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod,
                };
          };

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var react_1 = __importDefault(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        var prop_types_1 = __importDefault(
          __webpack_require__(
            /*! prop-types */ "./node_modules/next/node_modules/prop-types/index.js",
          ),
        );

        function withRouter(ComposedComponent) {
          var WithRouteWrapper =
            /*#__PURE__*/
            (function(_react_1$default$Comp) {
              (0, _inherits2.default)(WithRouteWrapper, _react_1$default$Comp);

              function WithRouteWrapper() {
                (0, _classCallCheck2.default)(this, WithRouteWrapper);
                return (0, _possibleConstructorReturn2.default)(
                  this,
                  (0, _getPrototypeOf2.default)(WithRouteWrapper).apply(
                    this,
                    arguments,
                  ),
                );
              }

              (0, _createClass2.default)(WithRouteWrapper, [
                {
                  key: "render",
                  value: function render() {
                    return react_1.default.createElement(
                      ComposedComponent,
                      (0, _assign.default)(
                        {
                          router: this.context.router,
                        },
                        this.props,
                      ),
                    );
                  },
                },
              ]);
              return WithRouteWrapper;
            })(react_1.default.Component);

          WithRouteWrapper.contextTypes = {
            router: prop_types_1.default.object,
          };
          WithRouteWrapper.getInitialProps = ComposedComponent.getInitialProps;

          if (true) {
            var name =
              ComposedComponent.displayName ||
              ComposedComponent.name ||
              "Unknown";
            WithRouteWrapper.displayName = "withRouter(".concat(name, ")");
          }

          return WithRouteWrapper;
        }

        exports.default = withRouter;

        /***/
      },

    /***/ "./node_modules/next/dist/pages/_app.js":
      /*!**********************************************!*\
  !*** ./node_modules/next/dist/pages/_app.js ***!
  \**********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var _interopRequireDefault = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/interopRequireDefault */ "./node_modules/@babel/runtime-corejs2/helpers/interopRequireDefault.js",
        );

        var _promise = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/promise */ "./node_modules/@babel/runtime-corejs2/core-js/promise.js",
          ),
        );

        var _assign = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/core-js/object/assign */ "./node_modules/@babel/runtime-corejs2/core-js/object/assign.js",
          ),
        );

        var _classCallCheck2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/classCallCheck.js",
          ),
        );

        var _createClass2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/createClass.js",
          ),
        );

        var _possibleConstructorReturn2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/possibleConstructorReturn.js",
          ),
        );

        var _getPrototypeOf2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/getPrototypeOf.js",
          ),
        );

        var _inherits2 = _interopRequireDefault(
          __webpack_require__(
            /*! @babel/runtime-corejs2/helpers/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/inherits.js",
          ),
        );

        var __importStar =
          (void 0 && (void 0).__importStar) ||
          function(mod) {
            if (mod && mod.__esModule) return mod;
            var result = {};
            if (mod != null)
              for (var k in mod) {
                if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
              }
            result["default"] = mod;
            return result;
          };

        var __importDefault =
          (void 0 && (void 0).__importDefault) ||
          function(mod) {
            return mod && mod.__esModule
              ? mod
              : {
                  default: mod,
                };
          };

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var react_1 = __importStar(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        var prop_types_1 = __importDefault(
          __webpack_require__(
            /*! prop-types */ "./node_modules/next/node_modules/prop-types/index.js",
          ),
        );

        var utils_1 = __webpack_require__(
          /*! next-server/dist/lib/utils */ "./node_modules/next-server/dist/lib/utils.js",
        );

        var router_1 = __webpack_require__(
          /*! next/router */ "./node_modules/next/dist/client/router.js",
        );

        var App =
          /*#__PURE__*/
          (function(_react_1$Component) {
            (0, _inherits2.default)(App, _react_1$Component);

            function App() {
              (0, _classCallCheck2.default)(this, App);
              return (0, _possibleConstructorReturn2.default)(
                this,
                (0, _getPrototypeOf2.default)(App).apply(this, arguments),
              );
            }

            (0, _createClass2.default)(
              App,
              [
                {
                  key: "getChildContext",
                  value: function getChildContext() {
                    return {
                      router: router_1.makePublicRouterInstance(
                        this.props.router,
                      ),
                    };
                  }, // Kept here for backwards compatibility.
                  // When someone ended App they could call `super.componentDidCatch`. This is now deprecated.
                },
                {
                  key: "componentDidCatch",
                  value: function componentDidCatch(err) {
                    throw err;
                  },
                },
                {
                  key: "render",
                  value: function render() {
                    var _this$props = this.props,
                      router = _this$props.router,
                      Component = _this$props.Component,
                      pageProps = _this$props.pageProps;
                    var url = createUrl(router);
                    return react_1.default.createElement(
                      Container,
                      null,
                      react_1.default.createElement(
                        Component,
                        (0, _assign.default)({}, pageProps, {
                          url: url,
                        }),
                      ),
                    );
                  },
                },
              ],
              [
                {
                  key: "getInitialProps",
                  value: function(_ref) {
                    var Component = _ref.Component,
                      router = _ref.router,
                      ctx = _ref.ctx;

                    try {
                      return _promise.default
                        .resolve(utils_1.loadGetInitialProps(Component, ctx))
                        .then(function(pageProps) {
                          return {
                            pageProps: pageProps,
                          };
                        });
                    } catch (e) {
                      return _promise.default.reject(e);
                    }
                  },
                },
              ],
            );
            return App;
          })(react_1.Component);

        App.childContextTypes = {
          router: prop_types_1.default.object,
        };
        exports.default = App;

        var Container =
          /*#__PURE__*/
          (function(_react_1$Component2) {
            (0, _inherits2.default)(Container, _react_1$Component2);

            function Container() {
              (0, _classCallCheck2.default)(this, Container);
              return (0, _possibleConstructorReturn2.default)(
                this,
                (0, _getPrototypeOf2.default)(Container).apply(this, arguments),
              );
            }

            (0, _createClass2.default)(Container, [
              {
                key: "componentDidMount",
                value: function componentDidMount() {
                  this.scrollToHash();
                },
              },
              {
                key: "componentDidUpdate",
                value: function componentDidUpdate() {
                  this.scrollToHash();
                },
              },
              {
                key: "scrollToHash",
                value: function scrollToHash() {
                  var hash = window.location.hash;
                  hash = hash ? hash.substring(1) : false;
                  if (!hash) return;
                  var el = document.getElementById(hash);
                  if (!el) return; // If we call scrollIntoView() in here without a setTimeout
                  // it won't scroll properly.

                  setTimeout(function() {
                    return el.scrollIntoView();
                  }, 0);
                },
              },
              {
                key: "render",
                value: function render() {
                  return this.props.children;
                },
              },
            ]);
            return Container;
          })(react_1.Component);

        exports.Container = Container;
        var warnUrl = utils_1.execOnce(function() {
          if (true) {
            console.error(
              "Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated",
            );
          }
        });

        function createUrl(router) {
          // This is to make sure we don't references the router object at call time
          var pathname = router.pathname,
            asPath = router.asPath,
            query = router.query;
          return {
            get query() {
              warnUrl();
              return query;
            },

            get pathname() {
              warnUrl();
              return pathname;
            },

            get asPath() {
              warnUrl();
              return asPath;
            },

            back: function back() {
              warnUrl();
              router.back();
            },
            push: function push(url, as) {
              warnUrl();
              return router.push(url, as);
            },
            pushTo: function pushTo(href, as) {
              warnUrl();
              var pushRoute = as ? href : null;
              var pushUrl = as || href;
              return router.push(pushRoute, pushUrl);
            },
            replace: function replace(url, as) {
              warnUrl();
              return router.replace(url, as);
            },
            replaceTo: function replaceTo(href, as) {
              warnUrl();
              var replaceRoute = as ? href : null;
              var replaceUrl = as || href;
              return router.replace(replaceRoute, replaceUrl);
            },
          };
        }

        exports.createUrl = createUrl;

        /***/
      },

    /***/ "./node_modules/next/link.js":
      /*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! ./dist/client/link */ "./node_modules/next/dist/client/link.js",
        );

        /***/
      },

    /***/ "./node_modules/next/node_modules/prop-types/checkPropTypes.js":
      /*!*********************************************************************!*\
  !*** ./node_modules/next/node_modules/prop-types/checkPropTypes.js ***!
  \*********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var printWarning = function() {};

        if (true) {
          var ReactPropTypesSecret = __webpack_require__(
            /*! ./lib/ReactPropTypesSecret */ "./node_modules/next/node_modules/prop-types/lib/ReactPropTypesSecret.js",
          );
          var loggedTypeFailures = {};

          printWarning = function(text) {
            var message = "Warning: " + text;
            if (typeof console !== "undefined") {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };
        }

        /**
         * Assert that the values match with the type specs.
         * Error messages are memorized and will only be shown once.
         *
         * @param {object} typeSpecs Map of name to a ReactPropType
         * @param {object} values Runtime values that need to be type-checked
         * @param {string} location e.g. "prop", "context", "child context"
         * @param {string} componentName Name of the component for error messages.
         * @param {?Function} getStack Returns the component stack.
         * @private
         */
        function checkPropTypes(
          typeSpecs,
          values,
          location,
          componentName,
          getStack,
        ) {
          if (true) {
            for (var typeSpecName in typeSpecs) {
              if (typeSpecs.hasOwnProperty(typeSpecName)) {
                var error;
                // Prop type validation may throw. In case they do, we don't want to
                // fail the render phase where it didn't fail before. So we log it.
                // After these have been cleaned up, we'll let them throw.
                try {
                  // This is intentionally an invariant that gets caught. It's the same
                  // behavior as without this statement except with a better message.
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err = Error(
                      (componentName || "React class") +
                        ": " +
                        location +
                        " type `" +
                        typeSpecName +
                        "` is invalid; " +
                        "it must be a function, usually from the `prop-types` package, but received `" +
                        typeof typeSpecs[typeSpecName] +
                        "`.",
                    );
                    err.name = "Invariant Violation";
                    throw err;
                  }
                  error = typeSpecs[typeSpecName](
                    values,
                    typeSpecName,
                    componentName,
                    location,
                    null,
                    ReactPropTypesSecret,
                  );
                } catch (ex) {
                  error = ex;
                }
                if (error && !(error instanceof Error)) {
                  printWarning(
                    (componentName || "React class") +
                      ": type specification of " +
                      location +
                      " `" +
                      typeSpecName +
                      "` is invalid; the type checker " +
                      "function must return `null` or an `Error` but returned a " +
                      typeof error +
                      ". " +
                      "You may have forgotten to pass an argument to the type checker " +
                      "creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and " +
                      "shape all require an argument).",
                  );
                }
                if (
                  error instanceof Error &&
                  !(error.message in loggedTypeFailures)
                ) {
                  // Only monitor this failure once because there tends to be a lot of the
                  // same error.
                  loggedTypeFailures[error.message] = true;

                  var stack = getStack ? getStack() : "";

                  printWarning(
                    "Failed " +
                      location +
                      " type: " +
                      error.message +
                      (stack != null ? stack : ""),
                  );
                }
              }
            }
          }
        }

        module.exports = checkPropTypes;

        /***/
      },

    /***/ "./node_modules/next/node_modules/prop-types/factoryWithTypeCheckers.js":
      /*!******************************************************************************!*\
  !*** ./node_modules/next/node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \******************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var assign = __webpack_require__(
          /*! object-assign */ "./node_modules/object-assign/index.js",
        );

        var ReactPropTypesSecret = __webpack_require__(
          /*! ./lib/ReactPropTypesSecret */ "./node_modules/next/node_modules/prop-types/lib/ReactPropTypesSecret.js",
        );
        var checkPropTypes = __webpack_require__(
          /*! ./checkPropTypes */ "./node_modules/next/node_modules/prop-types/checkPropTypes.js",
        );

        var printWarning = function() {};

        if (true) {
          printWarning = function(text) {
            var message = "Warning: " + text;
            if (typeof console !== "undefined") {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };
        }

        function emptyFunctionThatReturnsNull() {
          return null;
        }

        module.exports = function(isValidElement, throwOnDirectAccess) {
          /* global Symbol */
          var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.

          /**
           * Returns the iterator method function contained on the iterable object.
           *
           * Be sure to invoke the function with the iterable as context:
           *
           *     var iteratorFn = getIteratorFn(myIterable);
           *     if (iteratorFn) {
           *       var iterator = iteratorFn.call(myIterable);
           *       ...
           *     }
           *
           * @param {?object} maybeIterable
           * @return {?function}
           */
          function getIteratorFn(maybeIterable) {
            var iteratorFn =
              maybeIterable &&
              ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
                maybeIterable[FAUX_ITERATOR_SYMBOL]);
            if (typeof iteratorFn === "function") {
              return iteratorFn;
            }
          }

          /**
           * Collection of methods that allow declaration and validation of props that are
           * supplied to React components. Example usage:
           *
           *   var Props = require('ReactPropTypes');
           *   var MyArticle = React.createClass({
           *     propTypes: {
           *       // An optional string prop named "description".
           *       description: Props.string,
           *
           *       // A required enum prop named "category".
           *       category: Props.oneOf(['News','Photos']).isRequired,
           *
           *       // A prop named "dialog" that requires an instance of Dialog.
           *       dialog: Props.instanceOf(Dialog).isRequired
           *     },
           *     render: function() { ... }
           *   });
           *
           * A more formal specification of how these methods are used:
           *
           *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
           *   decl := ReactPropTypes.{type}(.isRequired)?
           *
           * Each and every declaration produces a function with the same signature. This
           * allows the creation of custom validation functions. For example:
           *
           *  var MyLink = React.createClass({
           *    propTypes: {
           *      // An optional string or URI prop named "href".
           *      href: function(props, propName, componentName) {
           *        var propValue = props[propName];
           *        if (propValue != null && typeof propValue !== 'string' &&
           *            !(propValue instanceof URI)) {
           *          return new Error(
           *            'Expected a string or an URI for ' + propName + ' in ' +
           *            componentName
           *          );
           *        }
           *      }
           *    },
           *    render: function() {...}
           *  });
           *
           * @internal
           */

          var ANONYMOUS = "<<anonymous>>";

          // Important!
          // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
          var ReactPropTypes = {
            array: createPrimitiveTypeChecker("array"),
            bool: createPrimitiveTypeChecker("boolean"),
            func: createPrimitiveTypeChecker("function"),
            number: createPrimitiveTypeChecker("number"),
            object: createPrimitiveTypeChecker("object"),
            string: createPrimitiveTypeChecker("string"),
            symbol: createPrimitiveTypeChecker("symbol"),

            any: createAnyTypeChecker(),
            arrayOf: createArrayOfTypeChecker,
            element: createElementTypeChecker(),
            instanceOf: createInstanceTypeChecker,
            node: createNodeChecker(),
            objectOf: createObjectOfTypeChecker,
            oneOf: createEnumTypeChecker,
            oneOfType: createUnionTypeChecker,
            shape: createShapeTypeChecker,
            exact: createStrictShapeTypeChecker,
          };

          /**
           * inlined Object.is polyfill to avoid requiring consumers ship their own
           * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
           */
          /*eslint-disable no-self-compare*/
          function is(x, y) {
            // SameValue algorithm
            if (x === y) {
              // Steps 1-5, 7-10
              // Steps 6.b-6.e: +0 != -0
              return x !== 0 || 1 / x === 1 / y;
            } else {
              // Step 6.a: NaN == NaN
              return x !== x && y !== y;
            }
          }
          /*eslint-enable no-self-compare*/

          /**
           * We use an Error-like object for backward compatibility as people may call
           * PropTypes directly and inspect their output. However, we don't use real
           * Errors anymore. We don't inspect their stack anyway, and creating them
           * is prohibitively expensive if they are created too often, such as what
           * happens in oneOfType() for any type before the one that matched.
           */
          function PropTypeError(message) {
            this.message = message;
            this.stack = "";
          }
          // Make `instanceof Error` still work for returned errors.
          PropTypeError.prototype = Error.prototype;

          function createChainableTypeChecker(validate) {
            if (true) {
              var manualPropTypeCallCache = {};
              var manualPropTypeWarningCount = 0;
            }
            function checkType(
              isRequired,
              props,
              propName,
              componentName,
              location,
              propFullName,
              secret,
            ) {
              componentName = componentName || ANONYMOUS;
              propFullName = propFullName || propName;

              if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                  // New behavior only for users of `prop-types` package
                  var err = new Error(
                    "Calling PropTypes validators directly is not supported by the `prop-types` package. " +
                      "Use `PropTypes.checkPropTypes()` to call them. " +
                      "Read more at http://fb.me/use-check-prop-types",
                  );
                  err.name = "Invariant Violation";
                  throw err;
                } else if (true && typeof console !== "undefined") {
                  // Old behavior for people using React.PropTypes
                  var cacheKey = componentName + ":" + propName;
                  if (
                    !manualPropTypeCallCache[cacheKey] &&
                    // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3
                  ) {
                    printWarning(
                      "You are manually calling a React.PropTypes validation " +
                        "function for the `" +
                        propFullName +
                        "` prop on `" +
                        componentName +
                        "`. This is deprecated " +
                        "and will throw in the standalone `prop-types` package. " +
                        "You may be seeing this warning due to a third-party PropTypes " +
                        "library. See https://fb.me/react-warning-dont-call-proptypes " +
                        "for details.",
                    );
                    manualPropTypeCallCache[cacheKey] = true;
                    manualPropTypeWarningCount++;
                  }
                }
              }
              if (props[propName] == null) {
                if (isRequired) {
                  if (props[propName] === null) {
                    return new PropTypeError(
                      "The " +
                        location +
                        " `" +
                        propFullName +
                        "` is marked as required " +
                        ("in `" +
                          componentName +
                          "`, but its value is `null`."),
                    );
                  }
                  return new PropTypeError(
                    "The " +
                      location +
                      " `" +
                      propFullName +
                      "` is marked as required in " +
                      ("`" +
                        componentName +
                        "`, but its value is `undefined`."),
                  );
                }
                return null;
              } else {
                return validate(
                  props,
                  propName,
                  componentName,
                  location,
                  propFullName,
                );
              }
            }

            var chainedCheckType = checkType.bind(null, false);
            chainedCheckType.isRequired = checkType.bind(null, true);

            return chainedCheckType;
          }

          function createPrimitiveTypeChecker(expectedType) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
              secret,
            ) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);

                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      preciseType +
                      "` supplied to `" +
                      componentName +
                      "`, expected ") +
                    ("`" + expectedType + "`."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createAnyTypeChecker() {
            return createChainableTypeChecker(emptyFunctionThatReturnsNull);
          }

          function createArrayOfTypeChecker(typeChecker) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (typeof typeChecker !== "function") {
                return new PropTypeError(
                  "Property `" +
                    propFullName +
                    "` of component `" +
                    componentName +
                    "` has invalid PropType notation inside arrayOf.",
                );
              }
              var propValue = props[propName];
              if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      propType +
                      "` supplied to `" +
                      componentName +
                      "`, expected an array."),
                );
              }
              for (var i = 0; i < propValue.length; i++) {
                var error = typeChecker(
                  propValue,
                  i,
                  componentName,
                  location,
                  propFullName + "[" + i + "]",
                  ReactPropTypesSecret,
                );
                if (error instanceof Error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createElementTypeChecker() {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      propType +
                      "` supplied to `" +
                      componentName +
                      "`, expected a single ReactElement."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createInstanceTypeChecker(expectedClass) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      actualClassName +
                      "` supplied to `" +
                      componentName +
                      "`, expected ") +
                    ("instance of `" + expectedClassName + "`."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createEnumTypeChecker(expectedValues) {
            if (!Array.isArray(expectedValues)) {
              true
                ? printWarning(
                    "Invalid argument supplied to oneOf, expected an instance of array.",
                  )
                : undefined;
              return emptyFunctionThatReturnsNull;
            }

            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              for (var i = 0; i < expectedValues.length; i++) {
                if (is(propValue, expectedValues[i])) {
                  return null;
                }
              }

              var valuesString = JSON.stringify(expectedValues);
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of value `" +
                  propValue +
                  "` " +
                  ("supplied to `" +
                    componentName +
                    "`, expected one of " +
                    valuesString +
                    "."),
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createObjectOfTypeChecker(typeChecker) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (typeof typeChecker !== "function") {
                return new PropTypeError(
                  "Property `" +
                    propFullName +
                    "` of component `" +
                    componentName +
                    "` has invalid PropType notation inside objectOf.",
                );
              }
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== "object") {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      propType +
                      "` supplied to `" +
                      componentName +
                      "`, expected an object."),
                );
              }
              for (var key in propValue) {
                if (propValue.hasOwnProperty(key)) {
                  var error = typeChecker(
                    propValue,
                    key,
                    componentName,
                    location,
                    propFullName + "." + key,
                    ReactPropTypesSecret,
                  );
                  if (error instanceof Error) {
                    return error;
                  }
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createUnionTypeChecker(arrayOfTypeCheckers) {
            if (!Array.isArray(arrayOfTypeCheckers)) {
              true
                ? printWarning(
                    "Invalid argument supplied to oneOfType, expected an instance of array.",
                  )
                : undefined;
              return emptyFunctionThatReturnsNull;
            }

            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (typeof checker !== "function") {
                printWarning(
                  "Invalid argument supplied to oneOfType. Expected an array of check functions, but " +
                    "received " +
                    getPostfixForTypeWarning(checker) +
                    " at index " +
                    i +
                    ".",
                );
                return emptyFunctionThatReturnsNull;
              }
            }

            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                var checker = arrayOfTypeCheckers[i];
                if (
                  checker(
                    props,
                    propName,
                    componentName,
                    location,
                    propFullName,
                    ReactPropTypesSecret,
                  ) == null
                ) {
                  return null;
                }
              }

              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` supplied to " +
                  ("`" + componentName + "`."),
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createNodeChecker() {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (!isNode(props[propName])) {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` supplied to " +
                    ("`" + componentName + "`, expected a ReactNode."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createShapeTypeChecker(shapeTypes) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== "object") {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type `" +
                    propType +
                    "` " +
                    ("supplied to `" + componentName + "`, expected `object`."),
                );
              }
              for (var key in shapeTypes) {
                var checker = shapeTypes[key];
                if (!checker) {
                  continue;
                }
                var error = checker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + "." + key,
                  ReactPropTypesSecret,
                );
                if (error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createStrictShapeTypeChecker(shapeTypes) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== "object") {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type `" +
                    propType +
                    "` " +
                    ("supplied to `" + componentName + "`, expected `object`."),
                );
              }
              // We need to check all keys in case some are required but missing from
              // props.
              var allKeys = assign({}, props[propName], shapeTypes);
              for (var key in allKeys) {
                var checker = shapeTypes[key];
                if (!checker) {
                  return new PropTypeError(
                    "Invalid " +
                      location +
                      " `" +
                      propFullName +
                      "` key `" +
                      key +
                      "` supplied to `" +
                      componentName +
                      "`." +
                      "\nBad object: " +
                      JSON.stringify(props[propName], null, "  ") +
                      "\nValid keys: " +
                      JSON.stringify(Object.keys(shapeTypes), null, "  "),
                  );
                }
                var error = checker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + "." + key,
                  ReactPropTypesSecret,
                );
                if (error) {
                  return error;
                }
              }
              return null;
            }

            return createChainableTypeChecker(validate);
          }

          function isNode(propValue) {
            switch (typeof propValue) {
              case "number":
              case "string":
              case "undefined":
                return true;
              case "boolean":
                return !propValue;
              case "object":
                if (Array.isArray(propValue)) {
                  return propValue.every(isNode);
                }
                if (propValue === null || isValidElement(propValue)) {
                  return true;
                }

                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                  var iterator = iteratorFn.call(propValue);
                  var step;
                  if (iteratorFn !== propValue.entries) {
                    while (!(step = iterator.next()).done) {
                      if (!isNode(step.value)) {
                        return false;
                      }
                    }
                  } else {
                    // Iterator will provide entry [k,v] tuples rather than values.
                    while (!(step = iterator.next()).done) {
                      var entry = step.value;
                      if (entry) {
                        if (!isNode(entry[1])) {
                          return false;
                        }
                      }
                    }
                  }
                } else {
                  return false;
                }

                return true;
              default:
                return false;
            }
          }

          function isSymbol(propType, propValue) {
            // Native Symbol.
            if (propType === "symbol") {
              return true;
            }

            // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
            if (propValue["@@toStringTag"] === "Symbol") {
              return true;
            }

            // Fallback for non-spec compliant Symbols which are polyfilled.
            if (typeof Symbol === "function" && propValue instanceof Symbol) {
              return true;
            }

            return false;
          }

          // Equivalent of `typeof` but with special handling for array and regexp.
          function getPropType(propValue) {
            var propType = typeof propValue;
            if (Array.isArray(propValue)) {
              return "array";
            }
            if (propValue instanceof RegExp) {
              // Old webkits (at least until Android 4.0) return 'function' rather than
              // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
              // passes PropTypes.object.
              return "object";
            }
            if (isSymbol(propType, propValue)) {
              return "symbol";
            }
            return propType;
          }

          // This handles more types than `getPropType`. Only used for error messages.
          // See `createPrimitiveTypeChecker`.
          function getPreciseType(propValue) {
            if (typeof propValue === "undefined" || propValue === null) {
              return "" + propValue;
            }
            var propType = getPropType(propValue);
            if (propType === "object") {
              if (propValue instanceof Date) {
                return "date";
              } else if (propValue instanceof RegExp) {
                return "regexp";
              }
            }
            return propType;
          }

          // Returns a string that is postfixed to a warning about an invalid type.
          // For example, "undefined" or "of type array"
          function getPostfixForTypeWarning(value) {
            var type = getPreciseType(value);
            switch (type) {
              case "array":
              case "object":
                return "an " + type;
              case "boolean":
              case "date":
              case "regexp":
                return "a " + type;
              default:
                return type;
            }
          }

          // Returns class name of the object, if any.
          function getClassName(propValue) {
            if (!propValue.constructor || !propValue.constructor.name) {
              return ANONYMOUS;
            }
            return propValue.constructor.name;
          }

          ReactPropTypes.checkPropTypes = checkPropTypes;
          ReactPropTypes.PropTypes = ReactPropTypes;

          return ReactPropTypes;
        };

        /***/
      },

    /***/ "./node_modules/next/node_modules/prop-types/index.js":
      /*!************************************************************!*\
  !*** ./node_modules/next/node_modules/prop-types/index.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          var REACT_ELEMENT_TYPE =
            (typeof Symbol === "function" &&
              Symbol.for &&
              Symbol.for("react.element")) ||
            0xeac7;

          var isValidElement = function(object) {
            return (
              typeof object === "object" &&
              object !== null &&
              object.$$typeof === REACT_ELEMENT_TYPE
            );
          };

          // By explicitly using `prop-types` you are opting into new development behavior.
          // http://fb.me/prop-types-in-prod
          var throwOnDirectAccess = true;
          module.exports = __webpack_require__(
            /*! ./factoryWithTypeCheckers */ "./node_modules/next/node_modules/prop-types/factoryWithTypeCheckers.js",
          )(isValidElement, throwOnDirectAccess);
        } else {
        }

        /***/
      },

    /***/ "./node_modules/next/node_modules/prop-types/lib/ReactPropTypesSecret.js":
      /*!*******************************************************************************!*\
  !*** ./node_modules/next/node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*******************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactPropTypesSecret =
          "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";

        module.exports = ReactPropTypesSecret;

        /***/
      },

    /***/ "./node_modules/no-scroll/index.js":
      /*!*****************************************!*\
  !*** ./node_modules/no-scroll/index.js ***!
  \*****************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        (function(root) {
          var isOn = false;
          var scrollbarSize;
          var scrollTop;

          function getScrollbarSize() {
            if (typeof scrollbarSize !== "undefined") return scrollbarSize;

            var doc = document.documentElement;
            var dummyScroller = document.createElement("div");
            dummyScroller.setAttribute(
              "style",
              "width:99px;height:99px;" +
                "position:absolute;top:-9999px;overflow:scroll;",
            );
            doc.appendChild(dummyScroller);
            scrollbarSize =
              dummyScroller.offsetWidth - dummyScroller.clientWidth;
            doc.removeChild(dummyScroller);
            return scrollbarSize;
          }

          function hasScrollbar() {
            return document.documentElement.scrollHeight > window.innerHeight;
          }

          function on(options) {
            if (typeof document === "undefined" || isOn) return;
            var doc = document.documentElement;
            scrollTop = window.pageYOffset;
            if (hasScrollbar()) {
              doc.style.width = "calc(100% - " + getScrollbarSize() + "px)";
            } else {
              doc.style.width = "100%";
            }
            doc.style.position = "fixed";
            doc.style.top = -scrollTop + "px";
            doc.style.overflow = "hidden";
            isOn = true;
          }

          function off() {
            if (typeof document === "undefined" || !isOn) return;
            var doc = document.documentElement;
            doc.style.width = "";
            doc.style.position = "";
            doc.style.top = "";
            doc.style.overflow = "";
            window.scroll(0, scrollTop);
            isOn = false;
          }

          function toggle() {
            if (isOn) {
              off();
              return;
            }
            on();
          }

          var noScroll = {
            on: on,
            off: off,
            toggle: toggle,
          };

          if (true && typeof module.exports !== "undefined") {
            module.exports = noScroll;
          } else {
            root.noScroll = noScroll;
          }
        })(this);

        /***/
      },

    /***/ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js":
      /*!**************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/punycode/punycode.js ***!
  \**************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(module, global) {
          var __WEBPACK_AMD_DEFINE_RESULT__; /*! https://mths.be/punycode v1.4.1 by @mathias */
          (function(root) {
            /** Detect free variables */
            var freeExports = true && exports && !exports.nodeType && exports;
            var freeModule = true && module && !module.nodeType && module;
            var freeGlobal = typeof global == "object" && global;
            if (
              freeGlobal.global === freeGlobal ||
              freeGlobal.window === freeGlobal ||
              freeGlobal.self === freeGlobal
            ) {
              root = freeGlobal;
            }

            /**
             * The `punycode` object.
             * @name punycode
             * @type Object
             */
            var punycode,
              /** Highest positive signed 32-bit float value */
              maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1
              /** Bootstring parameters */
              base = 36,
              tMin = 1,
              tMax = 26,
              skew = 38,
              damp = 700,
              initialBias = 72,
              initialN = 128, // 0x80
              delimiter = "-", // '\x2D'
              /** Regular expressions */
              regexPunycode = /^xn--/,
              regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
              regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators
              /** Error messages */
              errors = {
                overflow: "Overflow: input needs wider integers to process",
                "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                "invalid-input": "Invalid input",
              },
              /** Convenience shortcuts */
              baseMinusTMin = base - tMin,
              floor = Math.floor,
              stringFromCharCode = String.fromCharCode,
              /** Temporary variable */
              key;

            /*--------------------------------------------------------------------------*/

            /**
             * A generic error utility function.
             * @private
             * @param {String} type The error type.
             * @returns {Error} Throws a `RangeError` with the applicable error message.
             */
            function error(type) {
              throw new RangeError(errors[type]);
            }

            /**
             * A generic `Array#map` utility function.
             * @private
             * @param {Array} array The array to iterate over.
             * @param {Function} callback The function that gets called for every array
             * item.
             * @returns {Array} A new array of values returned by the callback function.
             */
            function map(array, fn) {
              var length = array.length;
              var result = [];
              while (length--) {
                result[length] = fn(array[length]);
              }
              return result;
            }

            /**
             * A simple `Array#map`-like wrapper to work with domain name strings or email
             * addresses.
             * @private
             * @param {String} domain The domain name or email address.
             * @param {Function} callback The function that gets called for every
             * character.
             * @returns {Array} A new string of characters returned by the callback
             * function.
             */
            function mapDomain(string, fn) {
              var parts = string.split("@");
              var result = "";
              if (parts.length > 1) {
                // In email addresses, only the domain name should be punycoded. Leave
                // the local part (i.e. everything up to `@`) intact.
                result = parts[0] + "@";
                string = parts[1];
              }
              // Avoid `split(regex)` for IE8 compatibility. See #17.
              string = string.replace(regexSeparators, "\x2E");
              var labels = string.split(".");
              var encoded = map(labels, fn).join(".");
              return result + encoded;
            }

            /**
             * Creates an array containing the numeric code points of each Unicode
             * character in the string. While JavaScript uses UCS-2 internally,
             * this function will convert a pair of surrogate halves (each of which
             * UCS-2 exposes as separate characters) into a single code point,
             * matching UTF-16.
             * @see `punycode.ucs2.encode`
             * @see <https://mathiasbynens.be/notes/javascript-encoding>
             * @memberOf punycode.ucs2
             * @name decode
             * @param {String} string The Unicode input string (UCS-2).
             * @returns {Array} The new array of code points.
             */
            function ucs2decode(string) {
              var output = [],
                counter = 0,
                length = string.length,
                value,
                extra;
              while (counter < length) {
                value = string.charCodeAt(counter++);
                if (value >= 0xd800 && value <= 0xdbff && counter < length) {
                  // high surrogate, and there is a next character
                  extra = string.charCodeAt(counter++);
                  if ((extra & 0xfc00) == 0xdc00) {
                    // low surrogate
                    output.push(
                      ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000,
                    );
                  } else {
                    // unmatched surrogate; only append this code unit, in case the next
                    // code unit is the high surrogate of a surrogate pair
                    output.push(value);
                    counter--;
                  }
                } else {
                  output.push(value);
                }
              }
              return output;
            }

            /**
             * Creates a string based on an array of numeric code points.
             * @see `punycode.ucs2.decode`
             * @memberOf punycode.ucs2
             * @name encode
             * @param {Array} codePoints The array of numeric code points.
             * @returns {String} The new Unicode string (UCS-2).
             */
            function ucs2encode(array) {
              return map(array, function(value) {
                var output = "";
                if (value > 0xffff) {
                  value -= 0x10000;
                  output += stringFromCharCode(
                    ((value >>> 10) & 0x3ff) | 0xd800,
                  );
                  value = 0xdc00 | (value & 0x3ff);
                }
                output += stringFromCharCode(value);
                return output;
              }).join("");
            }

            /**
             * Converts a basic code point into a digit/integer.
             * @see `digitToBasic()`
             * @private
             * @param {Number} codePoint The basic numeric code point value.
             * @returns {Number} The numeric value of a basic code point (for use in
             * representing integers) in the range `0` to `base - 1`, or `base` if
             * the code point does not represent a value.
             */
            function basicToDigit(codePoint) {
              if (codePoint - 48 < 10) {
                return codePoint - 22;
              }
              if (codePoint - 65 < 26) {
                return codePoint - 65;
              }
              if (codePoint - 97 < 26) {
                return codePoint - 97;
              }
              return base;
            }

            /**
             * Converts a digit/integer into a basic code point.
             * @see `basicToDigit()`
             * @private
             * @param {Number} digit The numeric value of a basic code point.
             * @returns {Number} The basic code point whose value (when used for
             * representing integers) is `digit`, which needs to be in the range
             * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
             * used; else, the lowercase form is used. The behavior is undefined
             * if `flag` is non-zero and `digit` has no uppercase form.
             */
            function digitToBasic(digit, flag) {
              //  0..25 map to ASCII a..z or A..Z
              // 26..35 map to ASCII 0..9
              return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
            }

            /**
             * Bias adaptation function as per section 3.4 of RFC 3492.
             * https://tools.ietf.org/html/rfc3492#section-3.4
             * @private
             */
            function adapt(delta, numPoints, firstTime) {
              var k = 0;
              delta = firstTime ? floor(delta / damp) : delta >> 1;
              delta += floor(delta / numPoints);
              for (
                ;
                /* no initialization */ delta > (baseMinusTMin * tMax) >> 1;
                k += base
              ) {
                delta = floor(delta / baseMinusTMin);
              }
              return floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));
            }

            /**
             * Converts a Punycode string of ASCII-only symbols to a string of Unicode
             * symbols.
             * @memberOf punycode
             * @param {String} input The Punycode string of ASCII-only symbols.
             * @returns {String} The resulting string of Unicode symbols.
             */
            function decode(input) {
              // Don't use UCS-2
              var output = [],
                inputLength = input.length,
                out,
                i = 0,
                n = initialN,
                bias = initialBias,
                basic,
                j,
                index,
                oldi,
                w,
                k,
                digit,
                t,
                /** Cached calculation results */
                baseMinusT;

              // Handle the basic code points: let `basic` be the number of input code
              // points before the last delimiter, or `0` if there is none, then copy
              // the first basic code points to the output.

              basic = input.lastIndexOf(delimiter);
              if (basic < 0) {
                basic = 0;
              }

              for (j = 0; j < basic; ++j) {
                // if it's not a basic code point
                if (input.charCodeAt(j) >= 0x80) {
                  error("not-basic");
                }
                output.push(input.charCodeAt(j));
              }

              // Main decoding loop: start just after the last delimiter if any basic code
              // points were copied; start at the beginning otherwise.

              for (
                index = basic > 0 ? basic + 1 : 0;
                index < inputLength /* no final expression */;

              ) {
                // `index` is the index of the next character to be consumed.
                // Decode a generalized variable-length integer into `delta`,
                // which gets added to `i`. The overflow checking is easier
                // if we increase `i` as we go, then subtract off its starting
                // value at the end to obtain `delta`.
                for (
                  oldi = i, w = 1, k = base /* no condition */;
                  ;
                  k += base
                ) {
                  if (index >= inputLength) {
                    error("invalid-input");
                  }

                  digit = basicToDigit(input.charCodeAt(index++));

                  if (digit >= base || digit > floor((maxInt - i) / w)) {
                    error("overflow");
                  }

                  i += digit * w;
                  t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

                  if (digit < t) {
                    break;
                  }

                  baseMinusT = base - t;
                  if (w > floor(maxInt / baseMinusT)) {
                    error("overflow");
                  }

                  w *= baseMinusT;
                }

                out = output.length + 1;
                bias = adapt(i - oldi, out, oldi == 0);

                // `i` was supposed to wrap around from `out` to `0`,
                // incrementing `n` each time, so we'll fix that now:
                if (floor(i / out) > maxInt - n) {
                  error("overflow");
                }

                n += floor(i / out);
                i %= out;

                // Insert `n` at position `i` of the output
                output.splice(i++, 0, n);
              }

              return ucs2encode(output);
            }

            /**
             * Converts a string of Unicode symbols (e.g. a domain name label) to a
             * Punycode string of ASCII-only symbols.
             * @memberOf punycode
             * @param {String} input The string of Unicode symbols.
             * @returns {String} The resulting Punycode string of ASCII-only symbols.
             */
            function encode(input) {
              var n,
                delta,
                handledCPCount,
                basicLength,
                bias,
                j,
                m,
                q,
                k,
                t,
                currentValue,
                output = [],
                /** `inputLength` will hold the number of code points in `input`. */
                inputLength,
                /** Cached calculation results */
                handledCPCountPlusOne,
                baseMinusT,
                qMinusT;

              // Convert the input in UCS-2 to Unicode
              input = ucs2decode(input);

              // Cache the length
              inputLength = input.length;

              // Initialize the state
              n = initialN;
              delta = 0;
              bias = initialBias;

              // Handle the basic code points
              for (j = 0; j < inputLength; ++j) {
                currentValue = input[j];
                if (currentValue < 0x80) {
                  output.push(stringFromCharCode(currentValue));
                }
              }

              handledCPCount = basicLength = output.length;

              // `handledCPCount` is the number of code points that have been handled;
              // `basicLength` is the number of basic code points.

              // Finish the basic string - if it is not empty - with a delimiter
              if (basicLength) {
                output.push(delimiter);
              }

              // Main encoding loop:
              while (handledCPCount < inputLength) {
                // All non-basic code points < n have been handled already. Find the next
                // larger one:
                for (m = maxInt, j = 0; j < inputLength; ++j) {
                  currentValue = input[j];
                  if (currentValue >= n && currentValue < m) {
                    m = currentValue;
                  }
                }

                // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
                // but guard against overflow
                handledCPCountPlusOne = handledCPCount + 1;
                if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
                  error("overflow");
                }

                delta += (m - n) * handledCPCountPlusOne;
                n = m;

                for (j = 0; j < inputLength; ++j) {
                  currentValue = input[j];

                  if (currentValue < n && ++delta > maxInt) {
                    error("overflow");
                  }

                  if (currentValue == n) {
                    // Represent delta as a generalized variable-length integer
                    for (q = delta, k = base /* no condition */; ; k += base) {
                      t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                      if (q < t) {
                        break;
                      }
                      qMinusT = q - t;
                      baseMinusT = base - t;
                      output.push(
                        stringFromCharCode(
                          digitToBasic(t + (qMinusT % baseMinusT), 0),
                        ),
                      );
                      q = floor(qMinusT / baseMinusT);
                    }

                    output.push(stringFromCharCode(digitToBasic(q, 0)));
                    bias = adapt(
                      delta,
                      handledCPCountPlusOne,
                      handledCPCount == basicLength,
                    );
                    delta = 0;
                    ++handledCPCount;
                  }
                }

                ++delta;
                ++n;
              }
              return output.join("");
            }

            /**
             * Converts a Punycode string representing a domain name or an email address
             * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
             * it doesn't matter if you call it on a string that has already been
             * converted to Unicode.
             * @memberOf punycode
             * @param {String} input The Punycoded domain name or email address to
             * convert to Unicode.
             * @returns {String} The Unicode representation of the given Punycode
             * string.
             */
            function toUnicode(input) {
              return mapDomain(input, function(string) {
                return regexPunycode.test(string)
                  ? decode(string.slice(4).toLowerCase())
                  : string;
              });
            }

            /**
             * Converts a Unicode string representing a domain name or an email address to
             * Punycode. Only the non-ASCII parts of the domain name will be converted,
             * i.e. it doesn't matter if you call it with a domain that's already in
             * ASCII.
             * @memberOf punycode
             * @param {String} input The domain name or email address to convert, as a
             * Unicode string.
             * @returns {String} The Punycode representation of the given domain name or
             * email address.
             */
            function toASCII(input) {
              return mapDomain(input, function(string) {
                return regexNonASCII.test(string)
                  ? "xn--" + encode(string)
                  : string;
              });
            }

            /*--------------------------------------------------------------------------*/

            /** Define the public API */
            punycode = {
              /**
               * A string representing the current Punycode.js version number.
               * @memberOf punycode
               * @type String
               */
              version: "1.4.1",
              /**
               * An object of methods to convert from JavaScript's internal character
               * representation (UCS-2) to Unicode code points, and back.
               * @see <https://mathiasbynens.be/notes/javascript-encoding>
               * @memberOf punycode
               * @type Object
               */
              ucs2: {
                decode: ucs2decode,
                encode: ucs2encode,
              },
              decode: decode,
              encode: encode,
              toASCII: toASCII,
              toUnicode: toUnicode,
            };

            /** Expose `punycode` */
            // Some AMD build optimizers, like r.js, check for specific condition patterns
            // like the following:
            if (true) {
              !((__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                return punycode;
              }.call(exports, __webpack_require__, exports, module)),
              __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
                (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            } else {
            }
          })(this);

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js",
          )(module),
          __webpack_require__(
            /*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js",
          ),
        ));

        /***/
      },

    /***/ "./node_modules/nprogress/nprogress.js":
      /*!*********************************************!*\
  !*** ./node_modules/nprogress/nprogress.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
        /* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
         * @license MIT */

        (function(root, factory) {
          if (true) {
            !((__WEBPACK_AMD_DEFINE_FACTORY__ = factory),
            (__WEBPACK_AMD_DEFINE_RESULT__ =
              typeof __WEBPACK_AMD_DEFINE_FACTORY__ === "function"
                ? __WEBPACK_AMD_DEFINE_FACTORY__.call(
                    exports,
                    __webpack_require__,
                    exports,
                    module,
                  )
                : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined &&
              (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
          } else {
          }
        })(this, function() {
          var NProgress = {};

          NProgress.version = "0.2.0";

          var Settings = (NProgress.settings = {
            minimum: 0.08,
            easing: "ease",
            positionUsing: "",
            speed: 200,
            trickle: true,
            trickleRate: 0.02,
            trickleSpeed: 800,
            showSpinner: true,
            barSelector: '[role="bar"]',
            spinnerSelector: '[role="spinner"]',
            parent: "body",
            template:
              '<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>',
          });

          /**
           * Updates configuration.
           *
           *     NProgress.configure({
           *       minimum: 0.1
           *     });
           */
          NProgress.configure = function(options) {
            var key, value;
            for (key in options) {
              value = options[key];
              if (value !== undefined && options.hasOwnProperty(key))
                Settings[key] = value;
            }

            return this;
          };

          /**
           * Last number.
           */

          NProgress.status = null;

          /**
           * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.
           *
           *     NProgress.set(0.4);
           *     NProgress.set(1.0);
           */

          NProgress.set = function(n) {
            var started = NProgress.isStarted();

            n = clamp(n, Settings.minimum, 1);
            NProgress.status = n === 1 ? null : n;

            var progress = NProgress.render(!started),
              bar = progress.querySelector(Settings.barSelector),
              speed = Settings.speed,
              ease = Settings.easing;

            progress.offsetWidth; /* Repaint */

            queue(function(next) {
              // Set positionUsing if it hasn't already been set
              if (Settings.positionUsing === "")
                Settings.positionUsing = NProgress.getPositioningCSS();

              // Add transition
              css(bar, barPositionCSS(n, speed, ease));

              if (n === 1) {
                // Fade out
                css(progress, {
                  transition: "none",
                  opacity: 1,
                });
                progress.offsetWidth; /* Repaint */

                setTimeout(function() {
                  css(progress, {
                    transition: "all " + speed + "ms linear",
                    opacity: 0,
                  });
                  setTimeout(function() {
                    NProgress.remove();
                    next();
                  }, speed);
                }, speed);
              } else {
                setTimeout(next, speed);
              }
            });

            return this;
          };

          NProgress.isStarted = function() {
            return typeof NProgress.status === "number";
          };

          /**
           * Shows the progress bar.
           * This is the same as setting the status to 0%, except that it doesn't go backwards.
           *
           *     NProgress.start();
           *
           */
          NProgress.start = function() {
            if (!NProgress.status) NProgress.set(0);

            var work = function() {
              setTimeout(function() {
                if (!NProgress.status) return;
                NProgress.trickle();
                work();
              }, Settings.trickleSpeed);
            };

            if (Settings.trickle) work();

            return this;
          };

          /**
           * Hides the progress bar.
           * This is the *sort of* the same as setting the status to 100%, with the
           * difference being `done()` makes some placebo effect of some realistic motion.
           *
           *     NProgress.done();
           *
           * If `true` is passed, it will show the progress bar even if its hidden.
           *
           *     NProgress.done(true);
           */

          NProgress.done = function(force) {
            if (!force && !NProgress.status) return this;

            return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);
          };

          /**
           * Increments by a random amount.
           */

          NProgress.inc = function(amount) {
            var n = NProgress.status;

            if (!n) {
              return NProgress.start();
            } else {
              if (typeof amount !== "number") {
                amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);
              }

              n = clamp(n + amount, 0, 0.994);
              return NProgress.set(n);
            }
          };

          NProgress.trickle = function() {
            return NProgress.inc(Math.random() * Settings.trickleRate);
          };

          /**
           * Waits for all supplied jQuery promises and
           * increases the progress as the promises resolve.
           *
           * @param $promise jQUery Promise
           */
          (function() {
            var initial = 0,
              current = 0;

            NProgress.promise = function($promise) {
              if (!$promise || $promise.state() === "resolved") {
                return this;
              }

              if (current === 0) {
                NProgress.start();
              }

              initial++;
              current++;

              $promise.always(function() {
                current--;
                if (current === 0) {
                  initial = 0;
                  NProgress.done();
                } else {
                  NProgress.set((initial - current) / initial);
                }
              });

              return this;
            };
          })();

          /**
           * (Internal) renders the progress bar markup based on the `template`
           * setting.
           */

          NProgress.render = function(fromStart) {
            if (NProgress.isRendered())
              return document.getElementById("nprogress");

            addClass(document.documentElement, "nprogress-busy");

            var progress = document.createElement("div");
            progress.id = "nprogress";
            progress.innerHTML = Settings.template;

            var bar = progress.querySelector(Settings.barSelector),
              perc = fromStart ? "-100" : toBarPerc(NProgress.status || 0),
              parent = document.querySelector(Settings.parent),
              spinner;

            css(bar, {
              transition: "all 0 linear",
              transform: "translate3d(" + perc + "%,0,0)",
            });

            if (!Settings.showSpinner) {
              spinner = progress.querySelector(Settings.spinnerSelector);
              spinner && removeElement(spinner);
            }

            if (parent != document.body) {
              addClass(parent, "nprogress-custom-parent");
            }

            parent.appendChild(progress);
            return progress;
          };

          /**
           * Removes the element. Opposite of render().
           */

          NProgress.remove = function() {
            removeClass(document.documentElement, "nprogress-busy");
            removeClass(
              document.querySelector(Settings.parent),
              "nprogress-custom-parent",
            );
            var progress = document.getElementById("nprogress");
            progress && removeElement(progress);
          };

          /**
           * Checks if the progress bar is rendered.
           */

          NProgress.isRendered = function() {
            return !!document.getElementById("nprogress");
          };

          /**
           * Determine which positioning CSS rule to use.
           */

          NProgress.getPositioningCSS = function() {
            // Sniff on document.body.style
            var bodyStyle = document.body.style;

            // Sniff prefixes
            var vendorPrefix =
              "WebkitTransform" in bodyStyle
                ? "Webkit"
                : "MozTransform" in bodyStyle
                ? "Moz"
                : "msTransform" in bodyStyle
                ? "ms"
                : "OTransform" in bodyStyle
                ? "O"
                : "";

            if (vendorPrefix + "Perspective" in bodyStyle) {
              // Modern browsers with 3D support, e.g. Webkit, IE10
              return "translate3d";
            } else if (vendorPrefix + "Transform" in bodyStyle) {
              // Browsers without 3D support, e.g. IE9
              return "translate";
            } else {
              // Browsers without translate() support, e.g. IE7-8
              return "margin";
            }
          };

          /**
           * Helpers
           */

          function clamp(n, min, max) {
            if (n < min) return min;
            if (n > max) return max;
            return n;
          }

          /**
           * (Internal) converts a percentage (`0..1`) to a bar translateX
           * percentage (`-100%..0%`).
           */

          function toBarPerc(n) {
            return (-1 + n) * 100;
          }

          /**
           * (Internal) returns the correct CSS for changing the bar's
           * position given an n percentage, and speed and ease from Settings
           */

          function barPositionCSS(n, speed, ease) {
            var barCSS;

            if (Settings.positionUsing === "translate3d") {
              barCSS = { transform: "translate3d(" + toBarPerc(n) + "%,0,0)" };
            } else if (Settings.positionUsing === "translate") {
              barCSS = { transform: "translate(" + toBarPerc(n) + "%,0)" };
            } else {
              barCSS = { "margin-left": toBarPerc(n) + "%" };
            }

            barCSS.transition = "all " + speed + "ms " + ease;

            return barCSS;
          }

          /**
           * (Internal) Queues a function to be executed.
           */

          var queue = (function() {
            var pending = [];

            function next() {
              var fn = pending.shift();
              if (fn) {
                fn(next);
              }
            }

            return function(fn) {
              pending.push(fn);
              if (pending.length == 1) next();
            };
          })();

          /**
           * (Internal) Applies css properties to an element, similar to the jQuery
           * css method.
           *
           * While this helper does assist with vendor prefixed property names, it
           * does not perform any manipulation of values prior to setting styles.
           */

          var css = (function() {
            var cssPrefixes = ["Webkit", "O", "Moz", "ms"],
              cssProps = {};

            function camelCase(string) {
              return string
                .replace(/^-ms-/, "ms-")
                .replace(/-([\da-z])/gi, function(match, letter) {
                  return letter.toUpperCase();
                });
            }

            function getVendorProp(name) {
              var style = document.body.style;
              if (name in style) return name;

              var i = cssPrefixes.length,
                capName = name.charAt(0).toUpperCase() + name.slice(1),
                vendorName;
              while (i--) {
                vendorName = cssPrefixes[i] + capName;
                if (vendorName in style) return vendorName;
              }

              return name;
            }

            function getStyleProp(name) {
              name = camelCase(name);
              return cssProps[name] || (cssProps[name] = getVendorProp(name));
            }

            function applyCss(element, prop, value) {
              prop = getStyleProp(prop);
              element.style[prop] = value;
            }

            return function(element, properties) {
              var args = arguments,
                prop,
                value;

              if (args.length == 2) {
                for (prop in properties) {
                  value = properties[prop];
                  if (value !== undefined && properties.hasOwnProperty(prop))
                    applyCss(element, prop, value);
                }
              } else {
                applyCss(element, args[1], args[2]);
              }
            };
          })();

          /**
           * (Internal) Determines if an element or space separated list of class names contains a class name.
           */

          function hasClass(element, name) {
            var list =
              typeof element == "string" ? element : classList(element);
            return list.indexOf(" " + name + " ") >= 0;
          }

          /**
           * (Internal) Adds a class to an element.
           */

          function addClass(element, name) {
            var oldList = classList(element),
              newList = oldList + name;

            if (hasClass(oldList, name)) return;

            // Trim the opening space.
            element.className = newList.substring(1);
          }

          /**
           * (Internal) Removes a class from an element.
           */

          function removeClass(element, name) {
            var oldList = classList(element),
              newList;

            if (!hasClass(element, name)) return;

            // Replace the class name.
            newList = oldList.replace(" " + name + " ", " ");

            // Trim the opening and closing spaces.
            element.className = newList.substring(1, newList.length - 1);
          }

          /**
           * (Internal) Gets a space separated list of the class names on the element.
           * The list is wrapped with a single space on each end to facilitate finding
           * matches within the list.
           */

          function classList(element) {
            return (" " + (element.className || "") + " ").replace(
              /\s+/gi,
              " ",
            );
          }

          /**
           * (Internal) Removes an element from the DOM.
           */

          function removeElement(element) {
            element &&
              element.parentNode &&
              element.parentNode.removeChild(element);
          }

          return NProgress;
        });

        /***/
      },

    /***/ "./node_modules/object-assign/index.js":
      /*!***************************************************************************************************!*\
  !*** delegated ./node_modules/object-assign/index.js from dll-reference dll_829b10deddf10e1653a8 ***!
  \***************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_829b10deddf10e1653a8 */ "dll-reference dll_829b10deddf10e1653a8",
        )("./node_modules/object-assign/index.js");

        /***/
      },

    /***/ "./node_modules/object-keys/implementation.js":
      /*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var keysShim;
        if (!Object.keys) {
          // modified from https://github.com/es-shims/es5-shim
          var has = Object.prototype.hasOwnProperty;
          var toStr = Object.prototype.toString;
          var isArgs = __webpack_require__(
            /*! ./isArguments */ "./node_modules/object-keys/isArguments.js",
          ); // eslint-disable-line global-require
          var isEnumerable = Object.prototype.propertyIsEnumerable;
          var hasDontEnumBug = !isEnumerable.call(
            { toString: null },
            "toString",
          );
          var hasProtoEnumBug = isEnumerable.call(function() {}, "prototype");
          var dontEnums = [
            "toString",
            "toLocaleString",
            "valueOf",
            "hasOwnProperty",
            "isPrototypeOf",
            "propertyIsEnumerable",
            "constructor",
          ];
          var equalsConstructorPrototype = function(o) {
            var ctor = o.constructor;
            return ctor && ctor.prototype === o;
          };
          var excludedKeys = {
            $applicationCache: true,
            $console: true,
            $external: true,
            $frame: true,
            $frameElement: true,
            $frames: true,
            $innerHeight: true,
            $innerWidth: true,
            $onmozfullscreenchange: true,
            $onmozfullscreenerror: true,
            $outerHeight: true,
            $outerWidth: true,
            $pageXOffset: true,
            $pageYOffset: true,
            $parent: true,
            $scrollLeft: true,
            $scrollTop: true,
            $scrollX: true,
            $scrollY: true,
            $self: true,
            $webkitIndexedDB: true,
            $webkitStorageInfo: true,
            $window: true,
          };
          var hasAutomationEqualityBug = (function() {
            /* global window */
            if (typeof window === "undefined") {
              return false;
            }
            for (var k in window) {
              try {
                if (
                  !excludedKeys["$" + k] &&
                  has.call(window, k) &&
                  window[k] !== null &&
                  typeof window[k] === "object"
                ) {
                  try {
                    equalsConstructorPrototype(window[k]);
                  } catch (e) {
                    return true;
                  }
                }
              } catch (e) {
                return true;
              }
            }
            return false;
          })();
          var equalsConstructorPrototypeIfNotBuggy = function(o) {
            /* global window */
            if (typeof window === "undefined" || !hasAutomationEqualityBug) {
              return equalsConstructorPrototype(o);
            }
            try {
              return equalsConstructorPrototype(o);
            } catch (e) {
              return false;
            }
          };

          keysShim = function keys(object) {
            var isObject = object !== null && typeof object === "object";
            var isFunction = toStr.call(object) === "[object Function]";
            var isArguments = isArgs(object);
            var isString = isObject && toStr.call(object) === "[object String]";
            var theKeys = [];

            if (!isObject && !isFunction && !isArguments) {
              throw new TypeError("Object.keys called on a non-object");
            }

            var skipProto = hasProtoEnumBug && isFunction;
            if (isString && object.length > 0 && !has.call(object, 0)) {
              for (var i = 0; i < object.length; ++i) {
                theKeys.push(String(i));
              }
            }

            if (isArguments && object.length > 0) {
              for (var j = 0; j < object.length; ++j) {
                theKeys.push(String(j));
              }
            } else {
              for (var name in object) {
                if (
                  !(skipProto && name === "prototype") &&
                  has.call(object, name)
                ) {
                  theKeys.push(String(name));
                }
              }
            }

            if (hasDontEnumBug) {
              var skipConstructor = equalsConstructorPrototypeIfNotBuggy(
                object,
              );

              for (var k = 0; k < dontEnums.length; ++k) {
                if (
                  !(skipConstructor && dontEnums[k] === "constructor") &&
                  has.call(object, dontEnums[k])
                ) {
                  theKeys.push(dontEnums[k]);
                }
              }
            }
            return theKeys;
          };
        }
        module.exports = keysShim;

        /***/
      },

    /***/ "./node_modules/object-keys/index.js":
      /*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var slice = Array.prototype.slice;
        var isArgs = __webpack_require__(
          /*! ./isArguments */ "./node_modules/object-keys/isArguments.js",
        );

        var origKeys = Object.keys;
        var keysShim = origKeys
          ? function keys(o) {
              return origKeys(o);
            }
          : __webpack_require__(
              /*! ./implementation */ "./node_modules/object-keys/implementation.js",
            );

        var originalKeys = Object.keys;

        keysShim.shim = function shimObjectKeys() {
          if (Object.keys) {
            var keysWorksWithArguments = (function() {
              // Safari 5.0 bug
              var args = Object.keys(arguments);
              return args && args.length === arguments.length;
            })(1, 2);
            if (!keysWorksWithArguments) {
              Object.keys = function keys(object) {
                // eslint-disable-line func-name-matching
                if (isArgs(object)) {
                  return originalKeys(slice.call(object));
                }
                return originalKeys(object);
              };
            }
          } else {
            Object.keys = keysShim;
          }
          return Object.keys || keysShim;
        };

        module.exports = keysShim;

        /***/
      },

    /***/ "./node_modules/object-keys/isArguments.js":
      /*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var toStr = Object.prototype.toString;

        module.exports = function isArguments(value) {
          var str = toStr.call(value);
          var isArgs = str === "[object Arguments]";
          if (!isArgs) {
            isArgs =
              str !== "[object Array]" &&
              value !== null &&
              typeof value === "object" &&
              typeof value.length === "number" &&
              value.length >= 0 &&
              toStr.call(value.callee) === "[object Function]";
          }
          return isArgs;
        };

        /***/
      },

    /***/ "./node_modules/object.assign/implementation.js":
      /*!******************************************************!*\
  !*** ./node_modules/object.assign/implementation.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        // modified from https://github.com/es-shims/es6-shim
        var keys = __webpack_require__(
          /*! object-keys */ "./node_modules/object-keys/index.js",
        );
        var bind = __webpack_require__(
          /*! function-bind */ "./node_modules/function-bind/index.js",
        );
        var canBeObject = function(obj) {
          return typeof obj !== "undefined" && obj !== null;
        };
        var hasSymbols = __webpack_require__(
          /*! has-symbols/shams */ "./node_modules/has-symbols/shams.js",
        )();
        var toObject = Object;
        var push = bind.call(Function.call, Array.prototype.push);
        var propIsEnumerable = bind.call(
          Function.call,
          Object.prototype.propertyIsEnumerable,
        );
        var originalGetSymbols = hasSymbols
          ? Object.getOwnPropertySymbols
          : null;

        module.exports = function assign(target, source1) {
          if (!canBeObject(target)) {
            throw new TypeError("target must be an object");
          }
          var objTarget = toObject(target);
          var s, source, i, props, syms, value, key;
          for (s = 1; s < arguments.length; ++s) {
            source = toObject(arguments[s]);
            props = keys(source);
            var getSymbols =
              hasSymbols &&
              (Object.getOwnPropertySymbols || originalGetSymbols);
            if (getSymbols) {
              syms = getSymbols(source);
              for (i = 0; i < syms.length; ++i) {
                key = syms[i];
                if (propIsEnumerable(source, key)) {
                  push(props, key);
                }
              }
            }
            for (i = 0; i < props.length; ++i) {
              key = props[i];
              value = source[key];
              if (propIsEnumerable(source, key)) {
                objTarget[key] = value;
              }
            }
          }
          return objTarget;
        };

        /***/
      },

    /***/ "./node_modules/object.assign/index.js":
      /*!*********************************************!*\
  !*** ./node_modules/object.assign/index.js ***!
  \*********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var defineProperties = __webpack_require__(
          /*! define-properties */ "./node_modules/define-properties/index.js",
        );

        var implementation = __webpack_require__(
          /*! ./implementation */ "./node_modules/object.assign/implementation.js",
        );
        var getPolyfill = __webpack_require__(
          /*! ./polyfill */ "./node_modules/object.assign/polyfill.js",
        );
        var shim = __webpack_require__(
          /*! ./shim */ "./node_modules/object.assign/shim.js",
        );

        var polyfill = getPolyfill();

        defineProperties(polyfill, {
          getPolyfill: getPolyfill,
          implementation: implementation,
          shim: shim,
        });

        module.exports = polyfill;

        /***/
      },

    /***/ "./node_modules/object.assign/polyfill.js":
      /*!************************************************!*\
  !*** ./node_modules/object.assign/polyfill.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var implementation = __webpack_require__(
          /*! ./implementation */ "./node_modules/object.assign/implementation.js",
        );

        var lacksProperEnumerationOrder = function() {
          if (!Object.assign) {
            return false;
          }
          // v8, specifically in node 4.x, has a bug with incorrect property enumeration order
          // note: this does not detect the bug unless there's 20 characters
          var str = "abcdefghijklmnopqrst";
          var letters = str.split("");
          var map = {};
          for (var i = 0; i < letters.length; ++i) {
            map[letters[i]] = letters[i];
          }
          var obj = Object.assign({}, map);
          var actual = "";
          for (var k in obj) {
            actual += k;
          }
          return str !== actual;
        };

        var assignHasPendingExceptions = function() {
          if (!Object.assign || !Object.preventExtensions) {
            return false;
          }
          // Firefox 37 still has "pending exception" logic in its Object.assign implementation,
          // which is 72% slower than our shim, and Firefox 40's native implementation.
          var thrower = Object.preventExtensions({ 1: 2 });
          try {
            Object.assign(thrower, "xy");
          } catch (e) {
            return thrower[1] === "y";
          }
          return false;
        };

        module.exports = function getPolyfill() {
          if (!Object.assign) {
            return implementation;
          }
          if (lacksProperEnumerationOrder()) {
            return implementation;
          }
          if (assignHasPendingExceptions()) {
            return implementation;
          }
          return Object.assign;
        };

        /***/
      },

    /***/ "./node_modules/object.assign/shim.js":
      /*!********************************************!*\
  !*** ./node_modules/object.assign/shim.js ***!
  \********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        var define = __webpack_require__(
          /*! define-properties */ "./node_modules/define-properties/index.js",
        );
        var getPolyfill = __webpack_require__(
          /*! ./polyfill */ "./node_modules/object.assign/polyfill.js",
        );

        module.exports = function shimAssign() {
          var polyfill = getPolyfill();
          define(Object, { assign: polyfill }, {
            assign: function() {
              return Object.assign !== polyfill;
            },
          });
          return polyfill;
        };

        /***/
      },

    /***/ "./node_modules/performance-now/lib/performance-now.js":
      /*!*************************************************************!*\
  !*** ./node_modules/performance-now/lib/performance-now.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(process) {
          // Generated by CoffeeScript 1.12.2
          (function() {
            var getNanoSeconds,
              hrtime,
              loadTime,
              moduleLoadTime,
              nodeLoadTime,
              upTime;

            if (
              typeof performance !== "undefined" &&
              performance !== null &&
              performance.now
            ) {
              module.exports = function() {
                return performance.now();
              };
            } else if (
              typeof process !== "undefined" &&
              process !== null &&
              process.hrtime
            ) {
              module.exports = function() {
                return (getNanoSeconds() - nodeLoadTime) / 1e6;
              };
              hrtime = process.hrtime;
              getNanoSeconds = function() {
                var hr;
                hr = hrtime();
                return hr[0] * 1e9 + hr[1];
              };
              moduleLoadTime = getNanoSeconds();
              upTime = process.uptime() * 1e9;
              nodeLoadTime = moduleLoadTime - upTime;
            } else if (Date.now) {
              module.exports = function() {
                return Date.now() - loadTime;
              };
              loadTime = Date.now();
            } else {
              module.exports = function() {
                return new Date().getTime() - loadTime;
              };
              loadTime = new Date().getTime();
            }
          }.call(this));

          //# sourceMappingURL=performance-now.js.map

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../../process/browser.js */ "./node_modules/process/browser.js",
          ),
        ));

        /***/
      },

    /***/ "./node_modules/process/browser.js":
      /*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        // shim for using process in browser
        var process = (module.exports = {});

        // cached from whatever global is present so that test runners that stub it
        // don't break things.  But we need to wrap it in a try catch in case it is
        // wrapped in strict mode code which doesn't define any globals.  It's inside a
        // function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
          throw new Error("setTimeout has not been defined");
        }
        function defaultClearTimeout() {
          throw new Error("clearTimeout has not been defined");
        }
        (function() {
          try {
            if (typeof setTimeout === "function") {
              cachedSetTimeout = setTimeout;
            } else {
              cachedSetTimeout = defaultSetTimout;
            }
          } catch (e) {
            cachedSetTimeout = defaultSetTimout;
          }
          try {
            if (typeof clearTimeout === "function") {
              cachedClearTimeout = clearTimeout;
            } else {
              cachedClearTimeout = defaultClearTimeout;
            }
          } catch (e) {
            cachedClearTimeout = defaultClearTimeout;
          }
        })();
        function runTimeout(fun) {
          if (cachedSetTimeout === setTimeout) {
            //normal enviroments in sane situations
            return setTimeout(fun, 0);
          }
          // if setTimeout wasn't available but was latter defined
          if (
            (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&
            setTimeout
          ) {
            cachedSetTimeout = setTimeout;
            return setTimeout(fun, 0);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedSetTimeout(fun, 0);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
            }
          }
        }
        function runClearTimeout(marker) {
          if (cachedClearTimeout === clearTimeout) {
            //normal enviroments in sane situations
            return clearTimeout(marker);
          }
          // if clearTimeout wasn't available but was latter defined
          if (
            (cachedClearTimeout === defaultClearTimeout ||
              !cachedClearTimeout) &&
            clearTimeout
          ) {
            cachedClearTimeout = clearTimeout;
            return clearTimeout(marker);
          }
          try {
            // when when somebody has screwed with setTimeout but no I.E. maddness
            return cachedClearTimeout(marker);
          } catch (e) {
            try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
            } catch (e) {
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
            }
          }
        }
        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
          if (!draining || !currentQueue) {
            return;
          }
          draining = false;
          if (currentQueue.length) {
            queue = currentQueue.concat(queue);
          } else {
            queueIndex = -1;
          }
          if (queue.length) {
            drainQueue();
          }
        }

        function drainQueue() {
          if (draining) {
            return;
          }
          var timeout = runTimeout(cleanUpNextTick);
          draining = true;

          var len = queue.length;
          while (len) {
            currentQueue = queue;
            queue = [];
            while (++queueIndex < len) {
              if (currentQueue) {
                currentQueue[queueIndex].run();
              }
            }
            queueIndex = -1;
            len = queue.length;
          }
          currentQueue = null;
          draining = false;
          runClearTimeout(timeout);
        }

        process.nextTick = function(fun) {
          var args = new Array(arguments.length - 1);
          if (arguments.length > 1) {
            for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
            }
          }
          queue.push(new Item(fun, args));
          if (queue.length === 1 && !draining) {
            runTimeout(drainQueue);
          }
        };

        // v8 likes predictible objects
        function Item(fun, array) {
          this.fun = fun;
          this.array = array;
        }
        Item.prototype.run = function() {
          this.fun.apply(null, this.array);
        };
        process.title = "browser";
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ""; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {}

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function(name) {
          return [];
        };

        process.binding = function(name) {
          throw new Error("process.binding is not supported");
        };

        process.cwd = function() {
          return "/";
        };
        process.chdir = function(dir) {
          throw new Error("process.chdir is not supported");
        };
        process.umask = function() {
          return 0;
        };

        /***/
      },

    /***/ "./node_modules/prop-types-exact/build/helpers/isPlainObject.js":
      /*!**********************************************************************!*\
  !*** ./node_modules/prop-types-exact/build/helpers/isPlainObject.js ***!
  \**********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _typeof =
          typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
            ? function(obj) {
                return typeof obj;
              }
            : function(obj) {
                return obj &&
                  typeof Symbol === "function" &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? "symbol"
                  : typeof obj;
              };

        exports["default"] = isPlainObject;
        function isPlainObject(x) {
          return (
            x &&
            (typeof x === "undefined" ? "undefined" : _typeof(x)) ===
              "object" &&
            !Array.isArray(x)
          );
        }
        module.exports = exports["default"];
        //# sourceMappingURL=isPlainObject.js.map

        /***/
      },

    /***/ "./node_modules/prop-types-exact/build/index.js":
      /*!******************************************************!*\
  !*** ./node_modules/prop-types-exact/build/index.js ***!
  \******************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports["default"] = forbidExtraProps;

        var _object = __webpack_require__(
          /*! object.assign */ "./node_modules/object.assign/index.js",
        );

        var _object2 = _interopRequireDefault(_object);

        var _has = __webpack_require__(
          /*! has */ "./node_modules/has/src/index.js",
        );

        var _has2 = _interopRequireDefault(_has);

        var _isPlainObject = __webpack_require__(
          /*! ./helpers/isPlainObject */ "./node_modules/prop-types-exact/build/helpers/isPlainObject.js",
        );

        var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        var zeroWidthSpace = "\u200B";
        var specialProperty = "prop-types-exact: " + zeroWidthSpace;
        var semaphore =
          typeof Symbol === "function" && typeof Symbol["for"] === "function"
            ? Symbol["for"](specialProperty)
            : /* istanbul ignore next */ specialProperty;

        function brand(fn) {
          return (0, _object2["default"])(
            fn,
            _defineProperty({}, specialProperty, semaphore),
          );
        }

        function isBranded(value) {
          return value && value[specialProperty] === semaphore;
        }

        function forbidExtraProps(propTypes) {
          if (!(0, _isPlainObject2["default"])(propTypes)) {
            throw new TypeError("given propTypes must be an object");
          }
          if (
            (0, _has2["default"])(propTypes, specialProperty) &&
            !isBranded(propTypes[specialProperty])
          ) {
            throw new TypeError(
              "Against all odds, you created a propType for a prop that uses both the zero-width space and our custom string - which, sadly, conflicts with `prop-types-exact`",
            );
          }

          return (0, _object2["default"])(
            {},
            propTypes,
            _defineProperty(
              {},
              specialProperty,
              brand(
                (function() {
                  function forbidUnknownProps(props, _, componentName) {
                    var unknownProps = Object.keys(props).filter(function(
                      prop,
                    ) {
                      return !(0, _has2["default"])(propTypes, prop);
                    });
                    if (unknownProps.length > 0) {
                      return new TypeError(
                        String(componentName) +
                          ": unknown props found: " +
                          String(unknownProps.join(", ")),
                      );
                    }
                    return null;
                  }

                  return forbidUnknownProps;
                })(),
              ),
            ),
          );
        }
        module.exports = exports["default"];
        //# sourceMappingURL=index.js.map

        /***/
      },

    /***/ "./node_modules/prop-types/checkPropTypes.js":
      /*!*********************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/checkPropTypes.js from dll-reference dll_829b10deddf10e1653a8 ***!
  \*********************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_829b10deddf10e1653a8 */ "dll-reference dll_829b10deddf10e1653a8",
        )("./node_modules/prop-types/checkPropTypes.js");

        /***/
      },

    /***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
      /*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        var ReactIs = __webpack_require__(
          /*! react-is */ "./node_modules/react-is/index.js",
        );
        var assign = __webpack_require__(
          /*! object-assign */ "./node_modules/object-assign/index.js",
        );

        var ReactPropTypesSecret = __webpack_require__(
          /*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js",
        );
        var checkPropTypes = __webpack_require__(
          /*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js",
        );

        var has = Function.call.bind(Object.prototype.hasOwnProperty);
        var printWarning = function() {};

        if (true) {
          printWarning = function(text) {
            var message = "Warning: " + text;
            if (typeof console !== "undefined") {
              console.error(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };
        }

        function emptyFunctionThatReturnsNull() {
          return null;
        }

        module.exports = function(isValidElement, throwOnDirectAccess) {
          /* global Symbol */
          var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator"; // Before Symbol spec.

          /**
           * Returns the iterator method function contained on the iterable object.
           *
           * Be sure to invoke the function with the iterable as context:
           *
           *     var iteratorFn = getIteratorFn(myIterable);
           *     if (iteratorFn) {
           *       var iterator = iteratorFn.call(myIterable);
           *       ...
           *     }
           *
           * @param {?object} maybeIterable
           * @return {?function}
           */
          function getIteratorFn(maybeIterable) {
            var iteratorFn =
              maybeIterable &&
              ((ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL]) ||
                maybeIterable[FAUX_ITERATOR_SYMBOL]);
            if (typeof iteratorFn === "function") {
              return iteratorFn;
            }
          }

          /**
           * Collection of methods that allow declaration and validation of props that are
           * supplied to React components. Example usage:
           *
           *   var Props = require('ReactPropTypes');
           *   var MyArticle = React.createClass({
           *     propTypes: {
           *       // An optional string prop named "description".
           *       description: Props.string,
           *
           *       // A required enum prop named "category".
           *       category: Props.oneOf(['News','Photos']).isRequired,
           *
           *       // A prop named "dialog" that requires an instance of Dialog.
           *       dialog: Props.instanceOf(Dialog).isRequired
           *     },
           *     render: function() { ... }
           *   });
           *
           * A more formal specification of how these methods are used:
           *
           *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
           *   decl := ReactPropTypes.{type}(.isRequired)?
           *
           * Each and every declaration produces a function with the same signature. This
           * allows the creation of custom validation functions. For example:
           *
           *  var MyLink = React.createClass({
           *    propTypes: {
           *      // An optional string or URI prop named "href".
           *      href: function(props, propName, componentName) {
           *        var propValue = props[propName];
           *        if (propValue != null && typeof propValue !== 'string' &&
           *            !(propValue instanceof URI)) {
           *          return new Error(
           *            'Expected a string or an URI for ' + propName + ' in ' +
           *            componentName
           *          );
           *        }
           *      }
           *    },
           *    render: function() {...}
           *  });
           *
           * @internal
           */

          var ANONYMOUS = "<<anonymous>>";

          // Important!
          // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
          var ReactPropTypes = {
            array: createPrimitiveTypeChecker("array"),
            bool: createPrimitiveTypeChecker("boolean"),
            func: createPrimitiveTypeChecker("function"),
            number: createPrimitiveTypeChecker("number"),
            object: createPrimitiveTypeChecker("object"),
            string: createPrimitiveTypeChecker("string"),
            symbol: createPrimitiveTypeChecker("symbol"),

            any: createAnyTypeChecker(),
            arrayOf: createArrayOfTypeChecker,
            element: createElementTypeChecker(),
            elementType: createElementTypeTypeChecker(),
            instanceOf: createInstanceTypeChecker,
            node: createNodeChecker(),
            objectOf: createObjectOfTypeChecker,
            oneOf: createEnumTypeChecker,
            oneOfType: createUnionTypeChecker,
            shape: createShapeTypeChecker,
            exact: createStrictShapeTypeChecker,
          };

          /**
           * inlined Object.is polyfill to avoid requiring consumers ship their own
           * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
           */
          /*eslint-disable no-self-compare*/
          function is(x, y) {
            // SameValue algorithm
            if (x === y) {
              // Steps 1-5, 7-10
              // Steps 6.b-6.e: +0 != -0
              return x !== 0 || 1 / x === 1 / y;
            } else {
              // Step 6.a: NaN == NaN
              return x !== x && y !== y;
            }
          }
          /*eslint-enable no-self-compare*/

          /**
           * We use an Error-like object for backward compatibility as people may call
           * PropTypes directly and inspect their output. However, we don't use real
           * Errors anymore. We don't inspect their stack anyway, and creating them
           * is prohibitively expensive if they are created too often, such as what
           * happens in oneOfType() for any type before the one that matched.
           */
          function PropTypeError(message) {
            this.message = message;
            this.stack = "";
          }
          // Make `instanceof Error` still work for returned errors.
          PropTypeError.prototype = Error.prototype;

          function createChainableTypeChecker(validate) {
            if (true) {
              var manualPropTypeCallCache = {};
              var manualPropTypeWarningCount = 0;
            }
            function checkType(
              isRequired,
              props,
              propName,
              componentName,
              location,
              propFullName,
              secret,
            ) {
              componentName = componentName || ANONYMOUS;
              propFullName = propFullName || propName;

              if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                  // New behavior only for users of `prop-types` package
                  var err = new Error(
                    "Calling PropTypes validators directly is not supported by the `prop-types` package. " +
                      "Use `PropTypes.checkPropTypes()` to call them. " +
                      "Read more at http://fb.me/use-check-prop-types",
                  );
                  err.name = "Invariant Violation";
                  throw err;
                } else if (true && typeof console !== "undefined") {
                  // Old behavior for people using React.PropTypes
                  var cacheKey = componentName + ":" + propName;
                  if (
                    !manualPropTypeCallCache[cacheKey] &&
                    // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3
                  ) {
                    printWarning(
                      "You are manually calling a React.PropTypes validation " +
                        "function for the `" +
                        propFullName +
                        "` prop on `" +
                        componentName +
                        "`. This is deprecated " +
                        "and will throw in the standalone `prop-types` package. " +
                        "You may be seeing this warning due to a third-party PropTypes " +
                        "library. See https://fb.me/react-warning-dont-call-proptypes " +
                        "for details.",
                    );
                    manualPropTypeCallCache[cacheKey] = true;
                    manualPropTypeWarningCount++;
                  }
                }
              }
              if (props[propName] == null) {
                if (isRequired) {
                  if (props[propName] === null) {
                    return new PropTypeError(
                      "The " +
                        location +
                        " `" +
                        propFullName +
                        "` is marked as required " +
                        ("in `" +
                          componentName +
                          "`, but its value is `null`."),
                    );
                  }
                  return new PropTypeError(
                    "The " +
                      location +
                      " `" +
                      propFullName +
                      "` is marked as required in " +
                      ("`" +
                        componentName +
                        "`, but its value is `undefined`."),
                  );
                }
                return null;
              } else {
                return validate(
                  props,
                  propName,
                  componentName,
                  location,
                  propFullName,
                );
              }
            }

            var chainedCheckType = checkType.bind(null, false);
            chainedCheckType.isRequired = checkType.bind(null, true);

            return chainedCheckType;
          }

          function createPrimitiveTypeChecker(expectedType) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
              secret,
            ) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);

                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      preciseType +
                      "` supplied to `" +
                      componentName +
                      "`, expected ") +
                    ("`" + expectedType + "`."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createAnyTypeChecker() {
            return createChainableTypeChecker(emptyFunctionThatReturnsNull);
          }

          function createArrayOfTypeChecker(typeChecker) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (typeof typeChecker !== "function") {
                return new PropTypeError(
                  "Property `" +
                    propFullName +
                    "` of component `" +
                    componentName +
                    "` has invalid PropType notation inside arrayOf.",
                );
              }
              var propValue = props[propName];
              if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      propType +
                      "` supplied to `" +
                      componentName +
                      "`, expected an array."),
                );
              }
              for (var i = 0; i < propValue.length; i++) {
                var error = typeChecker(
                  propValue,
                  i,
                  componentName,
                  location,
                  propFullName + "[" + i + "]",
                  ReactPropTypesSecret,
                );
                if (error instanceof Error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createElementTypeChecker() {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      propType +
                      "` supplied to `" +
                      componentName +
                      "`, expected a single ReactElement."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createElementTypeTypeChecker() {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      propType +
                      "` supplied to `" +
                      componentName +
                      "`, expected a single ReactElement type."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createInstanceTypeChecker(expectedClass) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      actualClassName +
                      "` supplied to `" +
                      componentName +
                      "`, expected ") +
                    ("instance of `" + expectedClassName + "`."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createEnumTypeChecker(expectedValues) {
            if (!Array.isArray(expectedValues)) {
              if (true) {
                if (arguments.length > 1) {
                  printWarning(
                    "Invalid arguments supplied to oneOf, expected an array, got " +
                      arguments.length +
                      " arguments. " +
                      "A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).",
                  );
                } else {
                  printWarning(
                    "Invalid argument supplied to oneOf, expected an array.",
                  );
                }
              }
              return emptyFunctionThatReturnsNull;
            }

            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              for (var i = 0; i < expectedValues.length; i++) {
                if (is(propValue, expectedValues[i])) {
                  return null;
                }
              }

              var valuesString = JSON.stringify(
                expectedValues,
                function replacer(key, value) {
                  var type = getPreciseType(value);
                  if (type === "symbol") {
                    return String(value);
                  }
                  return value;
                },
              );
              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` of value `" +
                  String(propValue) +
                  "` " +
                  ("supplied to `" +
                    componentName +
                    "`, expected one of " +
                    valuesString +
                    "."),
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createObjectOfTypeChecker(typeChecker) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (typeof typeChecker !== "function") {
                return new PropTypeError(
                  "Property `" +
                    propFullName +
                    "` of component `" +
                    componentName +
                    "` has invalid PropType notation inside objectOf.",
                );
              }
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== "object") {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type " +
                    ("`" +
                      propType +
                      "` supplied to `" +
                      componentName +
                      "`, expected an object."),
                );
              }
              for (var key in propValue) {
                if (has(propValue, key)) {
                  var error = typeChecker(
                    propValue,
                    key,
                    componentName,
                    location,
                    propFullName + "." + key,
                    ReactPropTypesSecret,
                  );
                  if (error instanceof Error) {
                    return error;
                  }
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createUnionTypeChecker(arrayOfTypeCheckers) {
            if (!Array.isArray(arrayOfTypeCheckers)) {
              true
                ? printWarning(
                    "Invalid argument supplied to oneOfType, expected an instance of array.",
                  )
                : undefined;
              return emptyFunctionThatReturnsNull;
            }

            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
              var checker = arrayOfTypeCheckers[i];
              if (typeof checker !== "function") {
                printWarning(
                  "Invalid argument supplied to oneOfType. Expected an array of check functions, but " +
                    "received " +
                    getPostfixForTypeWarning(checker) +
                    " at index " +
                    i +
                    ".",
                );
                return emptyFunctionThatReturnsNull;
              }
            }

            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                var checker = arrayOfTypeCheckers[i];
                if (
                  checker(
                    props,
                    propName,
                    componentName,
                    location,
                    propFullName,
                    ReactPropTypesSecret,
                  ) == null
                ) {
                  return null;
                }
              }

              return new PropTypeError(
                "Invalid " +
                  location +
                  " `" +
                  propFullName +
                  "` supplied to " +
                  ("`" + componentName + "`."),
              );
            }
            return createChainableTypeChecker(validate);
          }

          function createNodeChecker() {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              if (!isNode(props[propName])) {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` supplied to " +
                    ("`" + componentName + "`, expected a ReactNode."),
                );
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createShapeTypeChecker(shapeTypes) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== "object") {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type `" +
                    propType +
                    "` " +
                    ("supplied to `" + componentName + "`, expected `object`."),
                );
              }
              for (var key in shapeTypes) {
                var checker = shapeTypes[key];
                if (!checker) {
                  continue;
                }
                var error = checker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + "." + key,
                  ReactPropTypesSecret,
                );
                if (error) {
                  return error;
                }
              }
              return null;
            }
            return createChainableTypeChecker(validate);
          }

          function createStrictShapeTypeChecker(shapeTypes) {
            function validate(
              props,
              propName,
              componentName,
              location,
              propFullName,
            ) {
              var propValue = props[propName];
              var propType = getPropType(propValue);
              if (propType !== "object") {
                return new PropTypeError(
                  "Invalid " +
                    location +
                    " `" +
                    propFullName +
                    "` of type `" +
                    propType +
                    "` " +
                    ("supplied to `" + componentName + "`, expected `object`."),
                );
              }
              // We need to check all keys in case some are required but missing from
              // props.
              var allKeys = assign({}, props[propName], shapeTypes);
              for (var key in allKeys) {
                var checker = shapeTypes[key];
                if (!checker) {
                  return new PropTypeError(
                    "Invalid " +
                      location +
                      " `" +
                      propFullName +
                      "` key `" +
                      key +
                      "` supplied to `" +
                      componentName +
                      "`." +
                      "\nBad object: " +
                      JSON.stringify(props[propName], null, "  ") +
                      "\nValid keys: " +
                      JSON.stringify(Object.keys(shapeTypes), null, "  "),
                  );
                }
                var error = checker(
                  propValue,
                  key,
                  componentName,
                  location,
                  propFullName + "." + key,
                  ReactPropTypesSecret,
                );
                if (error) {
                  return error;
                }
              }
              return null;
            }

            return createChainableTypeChecker(validate);
          }

          function isNode(propValue) {
            switch (typeof propValue) {
              case "number":
              case "string":
              case "undefined":
                return true;
              case "boolean":
                return !propValue;
              case "object":
                if (Array.isArray(propValue)) {
                  return propValue.every(isNode);
                }
                if (propValue === null || isValidElement(propValue)) {
                  return true;
                }

                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                  var iterator = iteratorFn.call(propValue);
                  var step;
                  if (iteratorFn !== propValue.entries) {
                    while (!(step = iterator.next()).done) {
                      if (!isNode(step.value)) {
                        return false;
                      }
                    }
                  } else {
                    // Iterator will provide entry [k,v] tuples rather than values.
                    while (!(step = iterator.next()).done) {
                      var entry = step.value;
                      if (entry) {
                        if (!isNode(entry[1])) {
                          return false;
                        }
                      }
                    }
                  }
                } else {
                  return false;
                }

                return true;
              default:
                return false;
            }
          }

          function isSymbol(propType, propValue) {
            // Native Symbol.
            if (propType === "symbol") {
              return true;
            }

            // falsy value can't be a Symbol
            if (!propValue) {
              return false;
            }

            // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
            if (propValue["@@toStringTag"] === "Symbol") {
              return true;
            }

            // Fallback for non-spec compliant Symbols which are polyfilled.
            if (typeof Symbol === "function" && propValue instanceof Symbol) {
              return true;
            }

            return false;
          }

          // Equivalent of `typeof` but with special handling for array and regexp.
          function getPropType(propValue) {
            var propType = typeof propValue;
            if (Array.isArray(propValue)) {
              return "array";
            }
            if (propValue instanceof RegExp) {
              // Old webkits (at least until Android 4.0) return 'function' rather than
              // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
              // passes PropTypes.object.
              return "object";
            }
            if (isSymbol(propType, propValue)) {
              return "symbol";
            }
            return propType;
          }

          // This handles more types than `getPropType`. Only used for error messages.
          // See `createPrimitiveTypeChecker`.
          function getPreciseType(propValue) {
            if (typeof propValue === "undefined" || propValue === null) {
              return "" + propValue;
            }
            var propType = getPropType(propValue);
            if (propType === "object") {
              if (propValue instanceof Date) {
                return "date";
              } else if (propValue instanceof RegExp) {
                return "regexp";
              }
            }
            return propType;
          }

          // Returns a string that is postfixed to a warning about an invalid type.
          // For example, "undefined" or "of type array"
          function getPostfixForTypeWarning(value) {
            var type = getPreciseType(value);
            switch (type) {
              case "array":
              case "object":
                return "an " + type;
              case "boolean":
              case "date":
              case "regexp":
                return "a " + type;
              default:
                return type;
            }
          }

          // Returns class name of the object, if any.
          function getClassName(propValue) {
            if (!propValue.constructor || !propValue.constructor.name) {
              return ANONYMOUS;
            }
            return propValue.constructor.name;
          }

          ReactPropTypes.checkPropTypes = checkPropTypes;
          ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
          ReactPropTypes.PropTypes = ReactPropTypes;

          return ReactPropTypes;
        };

        /***/
      },

    /***/ "./node_modules/prop-types/index.js":
      /*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          var ReactIs = __webpack_require__(
            /*! react-is */ "./node_modules/react-is/index.js",
          );

          // By explicitly using `prop-types` you are opting into new development behavior.
          // http://fb.me/prop-types-in-prod
          var throwOnDirectAccess = true;
          module.exports = __webpack_require__(
            /*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js",
          )(ReactIs.isElement, throwOnDirectAccess);
        } else {
        }

        /***/
      },

    /***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
      /*!*******************************************************************************************************************!*\
  !*** delegated ./node_modules/prop-types/lib/ReactPropTypesSecret.js from dll-reference dll_829b10deddf10e1653a8 ***!
  \*******************************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_829b10deddf10e1653a8 */ "dll-reference dll_829b10deddf10e1653a8",
        )("./node_modules/prop-types/lib/ReactPropTypesSecret.js");

        /***/
      },

    /***/ "./node_modules/querystring-es3/decode.js":
      /*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        // If obj.hasOwnProperty has been overridden, then calling
        // obj.hasOwnProperty(prop) will break.
        // See: https://github.com/joyent/node/issues/1707
        function hasOwnProperty(obj, prop) {
          return Object.prototype.hasOwnProperty.call(obj, prop);
        }

        module.exports = function(qs, sep, eq, options) {
          sep = sep || "&";
          eq = eq || "=";
          var obj = {};

          if (typeof qs !== "string" || qs.length === 0) {
            return obj;
          }

          var regexp = /\+/g;
          qs = qs.split(sep);

          var maxKeys = 1000;
          if (options && typeof options.maxKeys === "number") {
            maxKeys = options.maxKeys;
          }

          var len = qs.length;
          // maxKeys <= 0 means that we should not limit keys count
          if (maxKeys > 0 && len > maxKeys) {
            len = maxKeys;
          }

          for (var i = 0; i < len; ++i) {
            var x = qs[i].replace(regexp, "%20"),
              idx = x.indexOf(eq),
              kstr,
              vstr,
              k,
              v;

            if (idx >= 0) {
              kstr = x.substr(0, idx);
              vstr = x.substr(idx + 1);
            } else {
              kstr = x;
              vstr = "";
            }

            k = decodeURIComponent(kstr);
            v = decodeURIComponent(vstr);

            if (!hasOwnProperty(obj, k)) {
              obj[k] = v;
            } else if (isArray(obj[k])) {
              obj[k].push(v);
            } else {
              obj[k] = [obj[k], v];
            }
          }

          return obj;
        };

        var isArray =
          Array.isArray ||
          function(xs) {
            return Object.prototype.toString.call(xs) === "[object Array]";
          };

        /***/
      },

    /***/ "./node_modules/querystring-es3/encode.js":
      /*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var stringifyPrimitive = function(v) {
          switch (typeof v) {
            case "string":
              return v;

            case "boolean":
              return v ? "true" : "false";

            case "number":
              return isFinite(v) ? v : "";

            default:
              return "";
          }
        };

        module.exports = function(obj, sep, eq, name) {
          sep = sep || "&";
          eq = eq || "=";
          if (obj === null) {
            obj = undefined;
          }

          if (typeof obj === "object") {
            return map(objectKeys(obj), function(k) {
              var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
              if (isArray(obj[k])) {
                return map(obj[k], function(v) {
                  return ks + encodeURIComponent(stringifyPrimitive(v));
                }).join(sep);
              } else {
                return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
              }
            }).join(sep);
          }

          if (!name) return "";
          return (
            encodeURIComponent(stringifyPrimitive(name)) +
            eq +
            encodeURIComponent(stringifyPrimitive(obj))
          );
        };

        var isArray =
          Array.isArray ||
          function(xs) {
            return Object.prototype.toString.call(xs) === "[object Array]";
          };

        function map(xs, f) {
          if (xs.map) return xs.map(f);
          var res = [];
          for (var i = 0; i < xs.length; i++) {
            res.push(f(xs[i], i));
          }
          return res;
        }

        var objectKeys =
          Object.keys ||
          function(obj) {
            var res = [];
            for (var key in obj) {
              if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
            }
            return res;
          };

        /***/
      },

    /***/ "./node_modules/querystring-es3/index.js":
      /*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.decode = exports.parse = __webpack_require__(
          /*! ./decode */ "./node_modules/querystring-es3/decode.js",
        );
        exports.encode = exports.stringify = __webpack_require__(
          /*! ./encode */ "./node_modules/querystring-es3/encode.js",
        );

        /***/
      },

    /***/ "./node_modules/raf/index.js":
      /*!***********************************!*\
  !*** ./node_modules/raf/index.js ***!
  \***********************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /* WEBPACK VAR INJECTION */ (function(global) {
          var now = __webpack_require__(
              /*! performance-now */ "./node_modules/performance-now/lib/performance-now.js",
            ),
            root = typeof window === "undefined" ? global : window,
            vendors = ["moz", "webkit"],
            suffix = "AnimationFrame",
            raf = root["request" + suffix],
            caf = root["cancel" + suffix] || root["cancelRequest" + suffix];

          for (var i = 0; !raf && i < vendors.length; i++) {
            raf = root[vendors[i] + "Request" + suffix];
            caf =
              root[vendors[i] + "Cancel" + suffix] ||
              root[vendors[i] + "CancelRequest" + suffix];
          }

          // Some versions of FF have rAF but not cAF
          if (!raf || !caf) {
            var last = 0,
              id = 0,
              queue = [],
              frameDuration = 1000 / 60;

            raf = function(callback) {
              if (queue.length === 0) {
                var _now = now(),
                  next = Math.max(0, frameDuration - (_now - last));
                last = next + _now;
                setTimeout(function() {
                  var cp = queue.slice(0);
                  // Clear queue here to prevent
                  // callbacks from appending listeners
                  // to the current frame's queue
                  queue.length = 0;
                  for (var i = 0; i < cp.length; i++) {
                    if (!cp[i].cancelled) {
                      try {
                        cp[i].callback(last);
                      } catch (e) {
                        setTimeout(function() {
                          throw e;
                        }, 0);
                      }
                    }
                  }
                }, Math.round(next));
              }
              queue.push({
                handle: ++id,
                callback: callback,
                cancelled: false,
              });
              return id;
            };

            caf = function(handle) {
              for (var i = 0; i < queue.length; i++) {
                if (queue[i].handle === handle) {
                  queue[i].cancelled = true;
                }
              }
            };
          }

          module.exports = function(fn) {
            // Wrap in a new function to prevent
            // `cancel` potentially being assigned
            // to the native rAF function
            return raf.call(root, fn);
          };
          module.exports.cancel = function() {
            caf.apply(root, arguments);
          };
          module.exports.polyfill = function(object) {
            if (!object) {
              object = root;
            }
            object.requestAnimationFrame = raf;
            object.cancelAnimationFrame = caf;
          };

          /* WEBPACK VAR INJECTION */
        }.call(
          this,
          __webpack_require__(
            /*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js",
          ),
        ));

        /***/
      },

    /***/ "./node_modules/react-dom/index.js":
      /*!***********************************************************************************************!*\
  !*** delegated ./node_modules/react-dom/index.js from dll-reference dll_829b10deddf10e1653a8 ***!
  \***********************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_829b10deddf10e1653a8 */ "dll-reference dll_829b10deddf10e1653a8",
        )("./node_modules/react-dom/index.js");

        /***/
      },

    /***/ "./node_modules/react-headroom/dist/index.js":
      /*!***************************************************!*\
  !*** ./node_modules/react-headroom/dist/index.js ***!
  \***************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _shallowequal = __webpack_require__(
          /*! shallowequal */ "./node_modules/shallowequal/index.js",
        );

        var _shallowequal2 = _interopRequireDefault(_shallowequal);

        var _raf = __webpack_require__(
          /*! raf */ "./node_modules/raf/index.js",
        );

        var _raf2 = _interopRequireDefault(_raf);

        var _shouldUpdate2 = __webpack_require__(
          /*! ./shouldUpdate */ "./node_modules/react-headroom/dist/shouldUpdate.js",
        );

        var _shouldUpdate3 = _interopRequireDefault(_shouldUpdate2);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _objectWithoutProperties(obj, keys) {
          var target = {};
          for (var i in obj) {
            if (keys.indexOf(i) >= 0) continue;
            if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
            target[i] = obj[i];
          }
          return target;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        } // eslint-disable-line import/no-unresolved

        var noop = function noop() {};

        var Headroom = (function(_Component) {
          _inherits(Headroom, _Component);

          function Headroom(props) {
            _classCallCheck(this, Headroom);

            // Class variables.
            var _this = _possibleConstructorReturn(
              this,
              (Headroom.__proto__ || Object.getPrototypeOf(Headroom)).call(
                this,
                props,
              ),
            );

            _this.setRef = function(ref) {
              return (_this.inner = ref);
            };

            _this.setHeightOffset = function() {
              _this.setState({
                height: _this.inner ? _this.inner.offsetHeight : "",
              });
              _this.resizeTicking = false;
            };

            _this.getScrollY = function() {
              if (_this.props.parent().pageYOffset !== void 0) {
                return _this.props.parent().pageYOffset;
              } else if (_this.props.parent().scrollTop !== void 0) {
                return _this.props.parent().scrollTop;
              } else {
                return (
                  document.documentElement ||
                  document.body.parentNode ||
                  document.body
                ).scrollTop;
              }
            };

            _this.getViewportHeight = function() {
              return (
                window.innerHeight ||
                document.documentElement.clientHeight ||
                document.body.clientHeight
              );
            };

            _this.getDocumentHeight = function() {
              var body = document.body;
              var documentElement = document.documentElement;

              return Math.max(
                body.scrollHeight,
                documentElement.scrollHeight,
                body.offsetHeight,
                documentElement.offsetHeight,
                body.clientHeight,
                documentElement.clientHeight,
              );
            };

            _this.getElementPhysicalHeight = function(elm) {
              return Math.max(elm.offsetHeight, elm.clientHeight);
            };

            _this.getElementHeight = function(elm) {
              return Math.max(
                elm.scrollHeight,
                elm.offsetHeight,
                elm.clientHeight,
              );
            };

            _this.getScrollerPhysicalHeight = function() {
              var parent = _this.props.parent();

              return parent === window || parent === document.body
                ? _this.getViewportHeight()
                : _this.getElementPhysicalHeight(parent);
            };

            _this.getScrollerHeight = function() {
              var parent = _this.props.parent();

              return parent === window || parent === document.body
                ? _this.getDocumentHeight()
                : _this.getElementHeight(parent);
            };

            _this.isOutOfBound = function(currentScrollY) {
              var pastTop = currentScrollY < 0;

              var scrollerPhysicalHeight = _this.getScrollerPhysicalHeight();
              var scrollerHeight = _this.getScrollerHeight();

              var pastBottom =
                currentScrollY + scrollerPhysicalHeight > scrollerHeight;

              return pastTop || pastBottom;
            };

            _this.handleScroll = function() {
              if (!_this.scrollTicking) {
                _this.scrollTicking = true;
                (0, _raf2.default)(_this.update);
              }
            };

            _this.handleResize = function() {
              if (!_this.resizeTicking) {
                _this.resizeTicking = true;
                (0, _raf2.default)(_this.setHeightOffset);
              }
            };

            _this.unpin = function() {
              _this.props.onUnpin();

              _this.setState({
                translateY: "-100%",
                className: "headroom headroom--unpinned",
                animation: true,
                state: "unpinned",
              });
            };

            _this.unpinSnap = function() {
              _this.props.onUnpin();

              _this.setState({
                translateY: "-100%",
                className:
                  "headroom headroom--unpinned headroom-disable-animation",
                animation: false,
                state: "unpinned",
              });
            };

            _this.pin = function() {
              _this.props.onPin();

              _this.setState({
                translateY: 0,
                className: "headroom headroom--pinned",
                animation: true,
                state: "pinned",
              });
            };

            _this.unfix = function() {
              _this.props.onUnfix();

              _this.setState({
                translateY: 0,
                className:
                  "headroom headroom--unfixed headroom-disable-animation",
                animation: false,
                state: "unfixed",
              });
            };

            _this.update = function() {
              _this.currentScrollY = _this.getScrollY();

              if (!_this.isOutOfBound(_this.currentScrollY)) {
                var _shouldUpdate = (0, _shouldUpdate3.default)(
                    _this.lastKnownScrollY,
                    _this.currentScrollY,
                    _this.props,
                    _this.state,
                  ),
                  action = _shouldUpdate.action;

                if (action === "pin") {
                  _this.pin();
                } else if (action === "unpin") {
                  _this.unpin();
                } else if (action === "unpin-snap") {
                  _this.unpinSnap();
                } else if (action === "unfix") {
                  _this.unfix();
                }
              }

              _this.lastKnownScrollY = _this.currentScrollY;
              _this.scrollTicking = false;
            };

            _this.currentScrollY = 0;
            _this.lastKnownScrollY = 0;
            _this.scrollTicking = false;
            _this.resizeTicking = false;
            _this.state = {
              state: "unfixed",
              translateY: 0,
              className: "headroom headroom--unfixed",
            };
            return _this;
          }

          _createClass(Headroom, [
            {
              key: "componentDidMount",
              value: function componentDidMount() {
                this.setHeightOffset();
                if (!this.props.disable) {
                  this.props
                    .parent()
                    .addEventListener("scroll", this.handleScroll);

                  if (this.props.calcHeightOnResize) {
                    this.props
                      .parent()
                      .addEventListener("resize", this.handleResize);
                  }
                }
              },
            },
            {
              key: "componentWillReceiveProps",
              value: function componentWillReceiveProps(nextProps) {
                if (nextProps.disable && !this.props.disable) {
                  this.unfix();
                  this.props
                    .parent()
                    .removeEventListener("scroll", this.handleScroll);
                  this.props
                    .parent()
                    .removeEventListener("resize", this.handleResize);
                } else if (!nextProps.disable && this.props.disable) {
                  this.props
                    .parent()
                    .addEventListener("scroll", this.handleScroll);

                  if (this.props.calcHeightOnResize) {
                    this.props
                      .parent()
                      .addEventListener("resize", this.handleResize);
                  }
                }
              },
            },
            {
              key: "shouldComponentUpdate",
              value: function shouldComponentUpdate(nextProps, nextState) {
                return (
                  !(0, _shallowequal2.default)(this.props, nextProps) ||
                  !(0, _shallowequal2.default)(this.state, nextState)
                );
              },
            },
            {
              key: "componentDidUpdate",
              value: function componentDidUpdate(prevProps) {
                // If children have changed, remeasure height.
                if (prevProps.children !== this.props.children) {
                  this.setHeightOffset();
                }
              },
            },
            {
              key: "componentWillUnmount",
              value: function componentWillUnmount() {
                this.props
                  .parent()
                  .removeEventListener("scroll", this.handleScroll);
                window.removeEventListener("scroll", this.handleScroll);
                this.props
                  .parent()
                  .removeEventListener("resize", this.handleResize);
              },
            },
            {
              key: "render",
              value: function render() {
                var _props = this.props,
                  userClassName = _props.className,
                  divProps = _objectWithoutProperties(_props, ["className"]);

                delete divProps.onUnpin;
                delete divProps.onPin;
                delete divProps.onUnfix;
                delete divProps.disableInlineStyles;
                delete divProps.disable;
                delete divProps.parent;
                delete divProps.children;
                delete divProps.upTolerance;
                delete divProps.downTolerance;
                delete divProps.pinStart;
                delete divProps.calcHeightOnResize;

                var style = divProps.style,
                  wrapperStyle = divProps.wrapperStyle,
                  rest = _objectWithoutProperties(divProps, [
                    "style",
                    "wrapperStyle",
                  ]);

                var innerStyle = {
                  position:
                    this.props.disable || this.state.state === "unfixed"
                      ? "relative"
                      : "fixed",
                  top: 0,
                  left: 0,
                  right: 0,
                  zIndex: 1,
                  WebkitTransform:
                    "translate3D(0, " + this.state.translateY + ", 0)",
                  MsTransform:
                    "translate3D(0, " + this.state.translateY + ", 0)",
                  transform: "translate3D(0, " + this.state.translateY + ", 0)",
                };

                var className = this.state.className;

                // Don't add css transitions until after we've done the initial
                // negative transform when transitioning from 'unfixed' to 'unpinned'.
                // If we don't do this, the header will flash into view temporarily
                // while it transitions from 0 — -100%.
                if (this.state.animation) {
                  innerStyle = _extends({}, innerStyle, {
                    WebkitTransition: "all .2s ease-in-out",
                    MozTransition: "all .2s ease-in-out",
                    OTransition: "all .2s ease-in-out",
                    transition: "all .2s ease-in-out",
                  });
                  className += " headroom--scrolled";
                }

                if (!this.props.disableInlineStyles) {
                  innerStyle = _extends({}, innerStyle, style);
                } else {
                  innerStyle = style;
                }

                var wrapperStyles = _extends({}, wrapperStyle, {
                  height: this.state.height ? this.state.height : null,
                });

                var wrapperClassName = userClassName
                  ? userClassName + " headroom-wrapper"
                  : "headroom-wrapper";

                return _react2.default.createElement(
                  "div",
                  { style: wrapperStyles, className: wrapperClassName },
                  _react2.default.createElement(
                    "div",
                    _extends(
                      {
                        ref: this.setRef,
                      },
                      rest,
                      {
                        style: innerStyle,
                        className: className,
                      },
                    ),
                    this.props.children,
                  ),
                );
              },
            },
          ]);

          return Headroom;
        })(_react.Component);

        Headroom.propTypes = {
          className: _propTypes2.default.string,
          parent: _propTypes2.default.func,
          children: _propTypes2.default.any.isRequired,
          disableInlineStyles: _propTypes2.default.bool,
          disable: _propTypes2.default.bool,
          upTolerance: _propTypes2.default.number,
          downTolerance: _propTypes2.default.number,
          onPin: _propTypes2.default.func,
          onUnpin: _propTypes2.default.func,
          onUnfix: _propTypes2.default.func,
          wrapperStyle: _propTypes2.default.object,
          pinStart: _propTypes2.default.number,
          style: _propTypes2.default.object,
          calcHeightOnResize: _propTypes2.default.bool,
        };
        Headroom.defaultProps = {
          parent: function parent() {
            return window;
          },
          disableInlineStyles: false,
          disable: false,
          upTolerance: 5,
          downTolerance: 0,
          onPin: noop,
          onUnpin: noop,
          onUnfix: noop,
          wrapperStyle: {},
          pinStart: 0,
          calcHeightOnResize: true,
        };
        exports.default = Headroom;

        /***/
      },

    /***/ "./node_modules/react-headroom/dist/shouldUpdate.js":
      /*!**********************************************************!*\
  !*** ./node_modules/react-headroom/dist/shouldUpdate.js ***!
  \**********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        exports.default = function() {
          var lastKnownScrollY =
            arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
          var currentScrollY =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          var props =
            arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          var state =
            arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};

          var scrollDirection =
            currentScrollY >= lastKnownScrollY ? "down" : "up";
          var distanceScrolled = Math.abs(currentScrollY - lastKnownScrollY);

          // We're disabled
          if (props.disable) {
            return {
              action: "none",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
              // We're at the top and not fixed yet.
            };
          } else if (
            currentScrollY <= props.pinStart &&
            state.state !== "unfixed"
          ) {
            return {
              action: "unfix",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
              // We're unfixed and headed down. Carry on.
            };
          } else if (
            currentScrollY <= state.height &&
            scrollDirection === "down" &&
            state.state === "unfixed"
          ) {
            return {
              action: "none",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
            };
          } else if (
            currentScrollY > state.height + props.pinStart &&
            scrollDirection === "down" &&
            state.state === "unfixed"
          ) {
            return {
              action: "unpin-snap",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
              // We're past the header and scrolling down.
              // We transition to "unpinned" if necessary.
            };
          } else if (
            scrollDirection === "down" &&
            ["pinned", "unfixed"].indexOf(state.state) >= 0 &&
            currentScrollY > state.height + props.pinStart &&
            distanceScrolled > props.downTolerance
          ) {
            return {
              action: "unpin",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
              // We're scrolling up, we transition to "pinned"
            };
          } else if (
            scrollDirection === "up" &&
            distanceScrolled > props.upTolerance &&
            ["pinned", "unfixed"].indexOf(state.state) < 0
          ) {
            return {
              action: "pin",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
              // We're scrolling up, and inside the header.
              // We transition to pin regardless of upTolerance
            };
          } else if (
            scrollDirection === "up" &&
            currentScrollY <= state.height &&
            ["pinned", "unfixed"].indexOf(state.state) < 0
          ) {
            return {
              action: "pin",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
            };
          } else {
            return {
              action: "none",
              scrollDirection: scrollDirection,
              distanceScrolled: distanceScrolled,
            };
          }
        };

        /***/
      },

    /***/ "./node_modules/react-is/cjs/react-is.development.js":
      /*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        /** @license React v16.8.6
         * react-is.development.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        if (true) {
          (function() {
            "use strict";

            Object.defineProperty(exports, "__esModule", { value: true });

            // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
            // nor polyfill, then a plain number is used for performance.
            var hasSymbol = typeof Symbol === "function" && Symbol.for;

            var REACT_ELEMENT_TYPE = hasSymbol
              ? Symbol.for("react.element")
              : 0xeac7;
            var REACT_PORTAL_TYPE = hasSymbol
              ? Symbol.for("react.portal")
              : 0xeaca;
            var REACT_FRAGMENT_TYPE = hasSymbol
              ? Symbol.for("react.fragment")
              : 0xeacb;
            var REACT_STRICT_MODE_TYPE = hasSymbol
              ? Symbol.for("react.strict_mode")
              : 0xeacc;
            var REACT_PROFILER_TYPE = hasSymbol
              ? Symbol.for("react.profiler")
              : 0xead2;
            var REACT_PROVIDER_TYPE = hasSymbol
              ? Symbol.for("react.provider")
              : 0xeacd;
            var REACT_CONTEXT_TYPE = hasSymbol
              ? Symbol.for("react.context")
              : 0xeace;
            var REACT_ASYNC_MODE_TYPE = hasSymbol
              ? Symbol.for("react.async_mode")
              : 0xeacf;
            var REACT_CONCURRENT_MODE_TYPE = hasSymbol
              ? Symbol.for("react.concurrent_mode")
              : 0xeacf;
            var REACT_FORWARD_REF_TYPE = hasSymbol
              ? Symbol.for("react.forward_ref")
              : 0xead0;
            var REACT_SUSPENSE_TYPE = hasSymbol
              ? Symbol.for("react.suspense")
              : 0xead1;
            var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 0xead3;
            var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 0xead4;

            function isValidElementType(type) {
              return (
                typeof type === "string" ||
                typeof type === "function" ||
                // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
                type === REACT_FRAGMENT_TYPE ||
                type === REACT_CONCURRENT_MODE_TYPE ||
                type === REACT_PROFILER_TYPE ||
                type === REACT_STRICT_MODE_TYPE ||
                type === REACT_SUSPENSE_TYPE ||
                (typeof type === "object" &&
                  type !== null &&
                  (type.$$typeof === REACT_LAZY_TYPE ||
                    type.$$typeof === REACT_MEMO_TYPE ||
                    type.$$typeof === REACT_PROVIDER_TYPE ||
                    type.$$typeof === REACT_CONTEXT_TYPE ||
                    type.$$typeof === REACT_FORWARD_REF_TYPE))
              );
            }

            /**
             * Forked from fbjs/warning:
             * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
             *
             * Only change is we use console.warn instead of console.error,
             * and do nothing when 'console' is not supported.
             * This really simplifies the code.
             * ---
             * Similar to invariant but only logs a warning if the condition is not met.
             * This can be used to log issues in development environments in critical
             * paths. Removing the logging code for production environments will keep the
             * same logic and follow the same code paths.
             */

            var lowPriorityWarning = function() {};

            {
              var printWarning = function(format) {
                for (
                  var _len = arguments.length,
                    args = Array(_len > 1 ? _len - 1 : 0),
                    _key = 1;
                  _key < _len;
                  _key++
                ) {
                  args[_key - 1] = arguments[_key];
                }

                var argIndex = 0;
                var message =
                  "Warning: " +
                  format.replace(/%s/g, function() {
                    return args[argIndex++];
                  });
                if (typeof console !== "undefined") {
                  console.warn(message);
                }
                try {
                  // --- Welcome to debugging React ---
                  // This error was thrown as a convenience so that you can use this stack
                  // to find the callsite that caused this warning to fire.
                  throw new Error(message);
                } catch (x) {}
              };

              lowPriorityWarning = function(condition, format) {
                if (format === undefined) {
                  throw new Error(
                    "`lowPriorityWarning(condition, format, ...args)` requires a warning " +
                      "message argument",
                  );
                }
                if (!condition) {
                  for (
                    var _len2 = arguments.length,
                      args = Array(_len2 > 2 ? _len2 - 2 : 0),
                      _key2 = 2;
                    _key2 < _len2;
                    _key2++
                  ) {
                    args[_key2 - 2] = arguments[_key2];
                  }

                  printWarning.apply(undefined, [format].concat(args));
                }
              };
            }

            var lowPriorityWarning$1 = lowPriorityWarning;

            function typeOf(object) {
              if (typeof object === "object" && object !== null) {
                var $$typeof = object.$$typeof;
                switch ($$typeof) {
                  case REACT_ELEMENT_TYPE:
                    var type = object.type;

                    switch (type) {
                      case REACT_ASYNC_MODE_TYPE:
                      case REACT_CONCURRENT_MODE_TYPE:
                      case REACT_FRAGMENT_TYPE:
                      case REACT_PROFILER_TYPE:
                      case REACT_STRICT_MODE_TYPE:
                      case REACT_SUSPENSE_TYPE:
                        return type;
                      default:
                        var $$typeofType = type && type.$$typeof;

                        switch ($$typeofType) {
                          case REACT_CONTEXT_TYPE:
                          case REACT_FORWARD_REF_TYPE:
                          case REACT_PROVIDER_TYPE:
                            return $$typeofType;
                          default:
                            return $$typeof;
                        }
                    }
                  case REACT_LAZY_TYPE:
                  case REACT_MEMO_TYPE:
                  case REACT_PORTAL_TYPE:
                    return $$typeof;
                }
              }

              return undefined;
            }

            // AsyncMode is deprecated along with isAsyncMode
            var AsyncMode = REACT_ASYNC_MODE_TYPE;
            var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
            var ContextConsumer = REACT_CONTEXT_TYPE;
            var ContextProvider = REACT_PROVIDER_TYPE;
            var Element = REACT_ELEMENT_TYPE;
            var ForwardRef = REACT_FORWARD_REF_TYPE;
            var Fragment = REACT_FRAGMENT_TYPE;
            var Lazy = REACT_LAZY_TYPE;
            var Memo = REACT_MEMO_TYPE;
            var Portal = REACT_PORTAL_TYPE;
            var Profiler = REACT_PROFILER_TYPE;
            var StrictMode = REACT_STRICT_MODE_TYPE;
            var Suspense = REACT_SUSPENSE_TYPE;

            var hasWarnedAboutDeprecatedIsAsyncMode = false;

            // AsyncMode should be deprecated
            function isAsyncMode(object) {
              {
                if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                  hasWarnedAboutDeprecatedIsAsyncMode = true;
                  lowPriorityWarning$1(
                    false,
                    "The ReactIs.isAsyncMode() alias has been deprecated, " +
                      "and will be removed in React 17+. Update your code to use " +
                      "ReactIs.isConcurrentMode() instead. It has the exact same API.",
                  );
                }
              }
              return (
                isConcurrentMode(object) ||
                typeOf(object) === REACT_ASYNC_MODE_TYPE
              );
            }
            function isConcurrentMode(object) {
              return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
            }
            function isContextConsumer(object) {
              return typeOf(object) === REACT_CONTEXT_TYPE;
            }
            function isContextProvider(object) {
              return typeOf(object) === REACT_PROVIDER_TYPE;
            }
            function isElement(object) {
              return (
                typeof object === "object" &&
                object !== null &&
                object.$$typeof === REACT_ELEMENT_TYPE
              );
            }
            function isForwardRef(object) {
              return typeOf(object) === REACT_FORWARD_REF_TYPE;
            }
            function isFragment(object) {
              return typeOf(object) === REACT_FRAGMENT_TYPE;
            }
            function isLazy(object) {
              return typeOf(object) === REACT_LAZY_TYPE;
            }
            function isMemo(object) {
              return typeOf(object) === REACT_MEMO_TYPE;
            }
            function isPortal(object) {
              return typeOf(object) === REACT_PORTAL_TYPE;
            }
            function isProfiler(object) {
              return typeOf(object) === REACT_PROFILER_TYPE;
            }
            function isStrictMode(object) {
              return typeOf(object) === REACT_STRICT_MODE_TYPE;
            }
            function isSuspense(object) {
              return typeOf(object) === REACT_SUSPENSE_TYPE;
            }

            exports.typeOf = typeOf;
            exports.AsyncMode = AsyncMode;
            exports.ConcurrentMode = ConcurrentMode;
            exports.ContextConsumer = ContextConsumer;
            exports.ContextProvider = ContextProvider;
            exports.Element = Element;
            exports.ForwardRef = ForwardRef;
            exports.Fragment = Fragment;
            exports.Lazy = Lazy;
            exports.Memo = Memo;
            exports.Portal = Portal;
            exports.Profiler = Profiler;
            exports.StrictMode = StrictMode;
            exports.Suspense = Suspense;
            exports.isValidElementType = isValidElementType;
            exports.isAsyncMode = isAsyncMode;
            exports.isConcurrentMode = isConcurrentMode;
            exports.isContextConsumer = isContextConsumer;
            exports.isContextProvider = isContextProvider;
            exports.isElement = isElement;
            exports.isForwardRef = isForwardRef;
            exports.isFragment = isFragment;
            exports.isLazy = isLazy;
            exports.isMemo = isMemo;
            exports.isPortal = isPortal;
            exports.isProfiler = isProfiler;
            exports.isStrictMode = isStrictMode;
            exports.isSuspense = isSuspense;
          })();
        }

        /***/
      },

    /***/ "./node_modules/react-is/index.js":
      /*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        if (false) {
        } else {
          module.exports = __webpack_require__(
            /*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js",
          );
        }

        /***/
      },

    /***/ "./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js":
      /*!****************************************************************************!*\
  !*** ./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js ***!
  \****************************************************************************/
      /*! exports provided: polyfill */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "polyfill",
          function() {
            return polyfill;
          },
        );
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        function componentWillMount() {
          // Call this.constructor.gDSFP to support sub-classes.
          var state = this.constructor.getDerivedStateFromProps(
            this.props,
            this.state,
          );
          if (state !== null && state !== undefined) {
            this.setState(state);
          }
        }

        function componentWillReceiveProps(nextProps) {
          // Call this.constructor.gDSFP to support sub-classes.
          // Use the setState() updater to ensure state isn't stale in certain edge cases.
          function updater(prevState) {
            var state = this.constructor.getDerivedStateFromProps(
              nextProps,
              prevState,
            );
            return state !== null && state !== undefined ? state : null;
          }
          // Binding "this" is important for shallow renderer support.
          this.setState(updater.bind(this));
        }

        function componentWillUpdate(nextProps, nextState) {
          try {
            var prevProps = this.props;
            var prevState = this.state;
            this.props = nextProps;
            this.state = nextState;
            this.__reactInternalSnapshotFlag = true;
            this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(
              prevProps,
              prevState,
            );
          } finally {
            this.props = prevProps;
            this.state = prevState;
          }
        }

        // React may warn about cWM/cWRP/cWU methods being deprecated.
        // Add a flag to suppress these warnings for this special case.
        componentWillMount.__suppressDeprecationWarning = true;
        componentWillReceiveProps.__suppressDeprecationWarning = true;
        componentWillUpdate.__suppressDeprecationWarning = true;

        function polyfill(Component) {
          var prototype = Component.prototype;

          if (!prototype || !prototype.isReactComponent) {
            throw new Error("Can only polyfill class components");
          }

          if (
            typeof Component.getDerivedStateFromProps !== "function" &&
            typeof prototype.getSnapshotBeforeUpdate !== "function"
          ) {
            return Component;
          }

          // If new component APIs are defined, "unsafe" lifecycles won't be called.
          // Error if any of these lifecycles are present,
          // Because they would work differently between older and newer (16.3+) versions of React.
          var foundWillMountName = null;
          var foundWillReceivePropsName = null;
          var foundWillUpdateName = null;
          if (typeof prototype.componentWillMount === "function") {
            foundWillMountName = "componentWillMount";
          } else if (
            typeof prototype.UNSAFE_componentWillMount === "function"
          ) {
            foundWillMountName = "UNSAFE_componentWillMount";
          }
          if (typeof prototype.componentWillReceiveProps === "function") {
            foundWillReceivePropsName = "componentWillReceiveProps";
          } else if (
            typeof prototype.UNSAFE_componentWillReceiveProps === "function"
          ) {
            foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
          }
          if (typeof prototype.componentWillUpdate === "function") {
            foundWillUpdateName = "componentWillUpdate";
          } else if (
            typeof prototype.UNSAFE_componentWillUpdate === "function"
          ) {
            foundWillUpdateName = "UNSAFE_componentWillUpdate";
          }
          if (
            foundWillMountName !== null ||
            foundWillReceivePropsName !== null ||
            foundWillUpdateName !== null
          ) {
            var componentName = Component.displayName || Component.name;
            var newApiName =
              typeof Component.getDerivedStateFromProps === "function"
                ? "getDerivedStateFromProps()"
                : "getSnapshotBeforeUpdate()";

            throw Error(
              "Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n" +
                componentName +
                " uses " +
                newApiName +
                " but also contains the following legacy lifecycles:" +
                (foundWillMountName !== null
                  ? "\n  " + foundWillMountName
                  : "") +
                (foundWillReceivePropsName !== null
                  ? "\n  " + foundWillReceivePropsName
                  : "") +
                (foundWillUpdateName !== null
                  ? "\n  " + foundWillUpdateName
                  : "") +
                "\n\nThe above lifecycles should be removed. Learn more about this warning here:\n" +
                "https://fb.me/react-async-component-lifecycle-hooks",
            );
          }

          // React <= 16.2 does not support static getDerivedStateFromProps.
          // As a workaround, use cWM and cWRP to invoke the new static lifecycle.
          // Newer versions of React will ignore these lifecycles if gDSFP exists.
          if (typeof Component.getDerivedStateFromProps === "function") {
            prototype.componentWillMount = componentWillMount;
            prototype.componentWillReceiveProps = componentWillReceiveProps;
          }

          // React <= 16.2 does not support getSnapshotBeforeUpdate.
          // As a workaround, use cWU to invoke the new lifecycle.
          // Newer versions of React will ignore that lifecycle if gSBU exists.
          if (typeof prototype.getSnapshotBeforeUpdate === "function") {
            if (typeof prototype.componentDidUpdate !== "function") {
              throw new Error(
                "Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype",
              );
            }

            prototype.componentWillUpdate = componentWillUpdate;

            var componentDidUpdate = prototype.componentDidUpdate;

            prototype.componentDidUpdate = function componentDidUpdatePolyfill(
              prevProps,
              prevState,
              maybeSnapshot,
            ) {
              // 16.3+ will not execute our will-update method;
              // It will pass a snapshot value to did-update though.
              // Older versions will require our polyfilled will-update value.
              // We need to handle both cases, but can't just check for the presence of "maybeSnapshot",
              // Because for <= 15.x versions this might be a "prevContext" object.
              // We also can't just check "__reactInternalSnapshot",
              // Because get-snapshot might return a falsy value.
              // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.
              var snapshot = this.__reactInternalSnapshotFlag
                ? this.__reactInternalSnapshot
                : maybeSnapshot;

              componentDidUpdate.call(this, prevProps, prevState, snapshot);
            };
          }

          return Component;
        }

        /***/
      },

    /***/ "./node_modules/react-lottie/dist/index.js":
      /*!*************************************************!*\
  !*** ./node_modules/react-lottie/dist/index.js ***!
  \*************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends2 = __webpack_require__(
          /*! babel-runtime/helpers/extends */ "./node_modules/babel-runtime/helpers/extends.js",
        );

        var _extends3 = _interopRequireDefault(_extends2);

        var _getPrototypeOf = __webpack_require__(
          /*! babel-runtime/core-js/object/get-prototype-of */ "./node_modules/babel-runtime/core-js/object/get-prototype-of.js",
        );

        var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

        var _classCallCheck2 = __webpack_require__(
          /*! babel-runtime/helpers/classCallCheck */ "./node_modules/babel-runtime/helpers/classCallCheck.js",
        );

        var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

        var _createClass2 = __webpack_require__(
          /*! babel-runtime/helpers/createClass */ "./node_modules/babel-runtime/helpers/createClass.js",
        );

        var _createClass3 = _interopRequireDefault(_createClass2);

        var _possibleConstructorReturn2 = __webpack_require__(
          /*! babel-runtime/helpers/possibleConstructorReturn */ "./node_modules/babel-runtime/helpers/possibleConstructorReturn.js",
        );

        var _possibleConstructorReturn3 = _interopRequireDefault(
          _possibleConstructorReturn2,
        );

        var _inherits2 = __webpack_require__(
          /*! babel-runtime/helpers/inherits */ "./node_modules/babel-runtime/helpers/inherits.js",
        );

        var _inherits3 = _interopRequireDefault(_inherits2);

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _react2 = _interopRequireDefault(_react);

        var _propTypes = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _lottieWeb = __webpack_require__(
          /*! lottie-web */ "./node_modules/lottie-web/build/player/lottie.js",
        );

        var _lottieWeb2 = _interopRequireDefault(_lottieWeb);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var Lottie = (function(_React$Component) {
          (0, _inherits3.default)(Lottie, _React$Component);

          function Lottie() {
            var _ref;

            var _temp, _this, _ret;

            (0, _classCallCheck3.default)(this, Lottie);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = (0,
              _possibleConstructorReturn3.default)(
                this,
                (_ref =
                  Lottie.__proto__ ||
                  (0, _getPrototypeOf2.default)(Lottie)).call.apply(
                  _ref,
                  [this].concat(args),
                ),
              )),
              _this)),
              (_this.handleClickToPause = function() {
                // The pause() method is for handling pausing by passing a prop isPaused
                // This method is for handling the ability to pause by clicking on the animation
                if (_this.anim.isPaused) {
                  _this.anim.play();
                } else {
                  _this.anim.pause();
                }
              }),
              _temp)),
              (0, _possibleConstructorReturn3.default)(_this, _ret)
            );
          }

          (0, _createClass3.default)(Lottie, [
            {
              key: "componentDidMount",
              value: function componentDidMount() {
                var _props = this.props,
                  options = _props.options,
                  eventListeners = _props.eventListeners;
                var loop = options.loop,
                  autoplay = options.autoplay,
                  animationData = options.animationData,
                  rendererSettings = options.rendererSettings,
                  segments = options.segments;

                this.options = {
                  container: this.el,
                  renderer: "svg",
                  loop: loop !== false,
                  autoplay: autoplay !== false,
                  segments: segments !== false,
                  animationData: animationData,
                  rendererSettings: rendererSettings,
                };

                this.options = (0, _extends3.default)(
                  {},
                  this.options,
                  options,
                );

                this.anim = _lottieWeb2.default.loadAnimation(this.options);
                this.registerEvents(eventListeners);
              },
            },
            {
              key: "componentWillUpdate",
              value: function componentWillUpdate(nextProps /* , nextState */) {
                /* Recreate the animation handle if the data is changed */
                if (
                  this.options.animationData !== nextProps.options.animationData
                ) {
                  this.deRegisterEvents(this.props.eventListeners);
                  this.destroy();
                  this.options = (0, _extends3.default)(
                    {},
                    this.options,
                    nextProps.options,
                  );
                  this.anim = _lottieWeb2.default.loadAnimation(this.options);
                  this.registerEvents(nextProps.eventListeners);
                }
              },
            },
            {
              key: "componentDidUpdate",
              value: function componentDidUpdate() {
                if (this.props.isStopped) {
                  this.stop();
                } else if (this.props.segments) {
                  this.playSegments();
                } else {
                  this.play();
                }

                this.pause();
                this.setSpeed();
                this.setDirection();
              },
            },
            {
              key: "componentWillUnmount",
              value: function componentWillUnmount() {
                this.deRegisterEvents(this.props.eventListeners);
                this.destroy();
                this.options.animationData = null;
                this.anim = null;
              },
            },
            {
              key: "setSpeed",
              value: function setSpeed() {
                this.anim.setSpeed(this.props.speed);
              },
            },
            {
              key: "setDirection",
              value: function setDirection() {
                this.anim.setDirection(this.props.direction);
              },
            },
            {
              key: "play",
              value: function play() {
                this.anim.play();
              },
            },
            {
              key: "playSegments",
              value: function playSegments() {
                this.anim.playSegments(this.props.segments);
              },
            },
            {
              key: "stop",
              value: function stop() {
                this.anim.stop();
              },
            },
            {
              key: "pause",
              value: function pause() {
                if (this.props.isPaused && !this.anim.isPaused) {
                  this.anim.pause();
                } else if (!this.props.isPaused && this.anim.isPaused) {
                  this.anim.pause();
                }
              },
            },
            {
              key: "destroy",
              value: function destroy() {
                this.anim.destroy();
              },
            },
            {
              key: "registerEvents",
              value: function registerEvents(eventListeners) {
                var _this2 = this;

                eventListeners.forEach(function(eventListener) {
                  _this2.anim.addEventListener(
                    eventListener.eventName,
                    eventListener.callback,
                  );
                });
              },
            },
            {
              key: "deRegisterEvents",
              value: function deRegisterEvents(eventListeners) {
                var _this3 = this;

                eventListeners.forEach(function(eventListener) {
                  _this3.anim.removeEventListener(
                    eventListener.eventName,
                    eventListener.callback,
                  );
                });
              },
            },
            {
              key: "render",
              value: function render() {
                var _this4 = this;

                var _props2 = this.props,
                  width = _props2.width,
                  height = _props2.height,
                  ariaRole = _props2.ariaRole,
                  ariaLabel = _props2.ariaLabel,
                  isClickToPauseDisabled = _props2.isClickToPauseDisabled,
                  title = _props2.title;

                var getSize = function getSize(initial) {
                  var size = void 0;

                  if (typeof initial === "number") {
                    size = initial + "px";
                  } else {
                    size = initial || "100%";
                  }

                  return size;
                };

                var lottieStyles = (0, _extends3.default)(
                  {
                    width: getSize(width),
                    height: getSize(height),
                    overflow: "hidden",
                    margin: "0 auto",
                    outline: "none",
                  },
                  this.props.style,
                );

                var onClickHandler = isClickToPauseDisabled
                  ? function() {
                      return null;
                    }
                  : this.handleClickToPause;

                return (
                  // Bug with eslint rules https://github.com/airbnb/javascript/issues/1374
                  // eslint-disable-next-line jsx-a11y/no-static-element-interactions
                  _react2.default.createElement("div", {
                    ref: function ref(c) {
                      _this4.el = c;
                    },
                    style: lottieStyles,
                    onClick: onClickHandler,
                    title: title,
                    role: ariaRole,
                    "aria-label": ariaLabel,
                    tabIndex: "0",
                  })
                );
              },
            },
          ]);
          return Lottie;
        })(_react2.default.Component);

        exports.default = Lottie;

        Lottie.propTypes = {
          eventListeners: _propTypes2.default.arrayOf(
            _propTypes2.default.object,
          ),
          options: _propTypes2.default.object.isRequired,
          height: _propTypes2.default.oneOfType([
            _propTypes2.default.string,
            _propTypes2.default.number,
          ]),
          width: _propTypes2.default.oneOfType([
            _propTypes2.default.string,
            _propTypes2.default.number,
          ]),
          isStopped: _propTypes2.default.bool,
          isPaused: _propTypes2.default.bool,
          speed: _propTypes2.default.number,
          segments: _propTypes2.default.arrayOf(_propTypes2.default.number),
          direction: _propTypes2.default.number,
          ariaRole: _propTypes2.default.string,
          ariaLabel: _propTypes2.default.string,
          isClickToPauseDisabled: _propTypes2.default.bool,
          title: _propTypes2.default.string,
        };

        Lottie.defaultProps = {
          eventListeners: [],
          isStopped: false,
          isPaused: false,
          speed: 1,
          ariaRole: "button",
          ariaLabel: "animation",
          isClickToPauseDisabled: false,
          title: "",
        };

        /***/
      },

    /***/ "./node_modules/react-minimalist-portal/lib/portal.js":
      /*!************************************************************!*\
  !*** ./node_modules/react-minimalist-portal/lib/portal.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _propTypes = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _reactDom = __webpack_require__(
          /*! react-dom */ "./node_modules/react-dom/index.js",
        );

        var _reactDom2 = _interopRequireDefault(_reactDom);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var useCreatePortal =
          typeof _reactDom2.default.createPortal === "function";
        var isBrowser = typeof window !== "undefined";

        var Portal = (function(_Component) {
          _inherits(Portal, _Component);

          function Portal() {
            _classCallCheck(this, Portal);

            return _possibleConstructorReturn(
              this,
              (Portal.__proto__ || Object.getPrototypeOf(Portal)).apply(
                this,
                arguments,
              ),
            );
          }

          _createClass(Portal, [
            {
              key: "componentWillMount",
              value: function componentWillMount() {
                if (isBrowser) {
                  if (!this.props.container) {
                    this.container = document.createElement("div");
                    document.body.appendChild(this.container);
                  } else {
                    this.container = this.props.container;
                  }
                  this.renderLayer();
                }
              },
            },
            {
              key: "componentDidUpdate",
              value: function componentDidUpdate() {
                this.renderLayer();
              },
            },
            {
              key: "componentWillUnmount",
              value: function componentWillUnmount() {
                if (!useCreatePortal) {
                  _reactDom2.default.unmountComponentAtNode(this.container);
                }
                if (!this.props.container) {
                  document.body.removeChild(this.container);
                }
              },
            },
            {
              key: "renderLayer",
              value: function renderLayer() {
                if (!useCreatePortal) {
                  _reactDom2.default.unstable_renderSubtreeIntoContainer(
                    this,
                    this.props.children,
                    this.container,
                  );
                }
              },
            },
            {
              key: "render",
              value: function render() {
                if (useCreatePortal) {
                  return _reactDom2.default.createPortal(
                    this.props.children,
                    this.container,
                  );
                }
                return null;
              },
            },
          ]);

          return Portal;
        })(_react.Component);

        Portal.propTypes = {
          children: _propTypes2.default.node, // eslint-disable-line
          container: _propTypes2.default.object, // eslint-disable-line
        };

        exports.default = Portal;

        /***/
      },

    /***/ "./node_modules/react-responsive-modal/lib/index.es.js":
      /*!*************************************************************!*\
  !*** ./node_modules/react-responsive-modal/lib/index.es.js ***!
  \*************************************************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_0__,
        );
        /* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );
        /* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/ __webpack_require__.n(
          prop_types__WEBPACK_IMPORTED_MODULE_1__,
        );
        /* harmony import */ var react_lifecycles_compat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! react-lifecycles-compat */ "./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js",
        );
        /* harmony import */ var react_minimalist_portal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! react-minimalist-portal */ "./node_modules/react-minimalist-portal/lib/portal.js",
        );
        /* harmony import */ var react_minimalist_portal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/ __webpack_require__.n(
          react_minimalist_portal__WEBPACK_IMPORTED_MODULE_3__,
        );
        /* harmony import */ var react_transition_group_CSSTransition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! react-transition-group/CSSTransition */ "./node_modules/react-transition-group/CSSTransition.js",
        );
        /* harmony import */ var react_transition_group_CSSTransition__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/ __webpack_require__.n(
          react_transition_group_CSSTransition__WEBPACK_IMPORTED_MODULE_4__,
        );
        /* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! classnames */ "./node_modules/classnames/index.js",
        );
        /* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/ __webpack_require__.n(
          classnames__WEBPACK_IMPORTED_MODULE_5__,
        );
        /* harmony import */ var no_scroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! no-scroll */ "./node_modules/no-scroll/index.js",
        );
        /* harmony import */ var no_scroll__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          no_scroll__WEBPACK_IMPORTED_MODULE_6__,
        );
        /* harmony import */ var focus_trap_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! focus-trap-react */ "./node_modules/focus-trap-react/dist/focus-trap-react.js",
        );
        /* harmony import */ var focus_trap_react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          focus_trap_react__WEBPACK_IMPORTED_MODULE_7__,
        );

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _defineProperties(target, props) {
          for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
          }
        }

        function _createClass(Constructor, protoProps, staticProps) {
          if (protoProps) _defineProperties(Constructor.prototype, protoProps);
          if (staticProps) _defineProperties(Constructor, staticProps);
          return Constructor;
        }

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }

          return obj;
        }

        function _objectSpread(target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i] != null ? arguments[i] : {};
            var ownKeys = Object.keys(source);

            if (typeof Object.getOwnPropertySymbols === "function") {
              ownKeys = ownKeys.concat(
                Object.getOwnPropertySymbols(source).filter(function(sym) {
                  return Object.getOwnPropertyDescriptor(
                    source,
                    sym,
                  ).enumerable;
                }),
              );
            }

            ownKeys.forEach(function(key) {
              _defineProperty(target, key, source[key]);
            });
          }

          return target;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function",
            );
          }

          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass) _setPrototypeOf(subClass, superClass);
        }

        function _getPrototypeOf(o) {
          _getPrototypeOf = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function _getPrototypeOf(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
              };
          return _getPrototypeOf(o);
        }

        function _setPrototypeOf(o, p) {
          _setPrototypeOf =
            Object.setPrototypeOf ||
            function _setPrototypeOf(o, p) {
              o.__proto__ = p;
              return o;
            };

          return _setPrototypeOf(o, p);
        }

        function _assertThisInitialized(self) {
          if (self === void 0) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }

          return self;
        }

        function _possibleConstructorReturn(self, call) {
          if (
            call &&
            (typeof call === "object" || typeof call === "function")
          ) {
            return call;
          }

          return _assertThisInitialized(self);
        }

        var CloseIcon = function CloseIcon(_ref) {
          var classes = _ref.classes,
            classNames = _ref.classNames,
            styles = _ref.styles,
            closeIconSize = _ref.closeIconSize,
            closeIconSvgPath = _ref.closeIconSvgPath,
            onClickCloseIcon = _ref.onClickCloseIcon,
            id = _ref.id;
          return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
            "button",
            {
              className: classnames__WEBPACK_IMPORTED_MODULE_5___default()(
                classes.closeButton,
                classNames.closeButton,
              ),
              style: styles.closeButton,
              onClick: onClickCloseIcon,
              id: id,
            },
            react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
              "svg",
              {
                className: classnames__WEBPACK_IMPORTED_MODULE_5___default()(
                  classes.closeIcon,
                  classNames.closeIcon,
                ),
                style: styles.closeIcon,
                xmlns: "http://www.w3.org/2000/svg",
                width: closeIconSize,
                height: closeIconSize,
                viewBox: "0 0 36 36",
              },
              closeIconSvgPath,
            ),
          );
        };

        CloseIcon.propTypes = {
          classNames:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,
          styles:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,
          classes:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object.isRequired,
          closeIconSize:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number.isRequired,
          closeIconSvgPath:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node.isRequired,
          onClickCloseIcon:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
          id: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
        };
        CloseIcon.defaultProps = {
          id: null,
        };

        var _modals = [];
        /**
         * Handle the order of the modals.
         * Inspired by the material-ui implementation.
         */

        var modalManager = {
          /**
           * Return the modals array
           */
          modals: function modals() {
            return _modals;
          },

          /**
           * Register a new modal
           */
          add: function add(modal) {
            if (_modals.indexOf(modal) === -1) {
              _modals.push(modal);
            }
          },

          /**
           * Remove a modal
           */
          remove: function remove(modal) {
            var index = _modals.indexOf(modal);

            if (index !== -1) {
              _modals.splice(index, 1);
            }
          },

          /**
           * Check if the modal is the first one on the screen
           */
          isTopModal: function isTopModal(modal) {
            return !!_modals.length && _modals[_modals.length - 1] === modal;
          },
        };

        function styleInject(css, ref) {
          if (ref === void 0) ref = {};
          var insertAt = ref.insertAt;

          if (!css || typeof document === "undefined") {
            return;
          }

          var head = document.head || document.getElementsByTagName("head")[0];
          var style = document.createElement("style");
          style.type = "text/css";

          if (insertAt === "top") {
            if (head.firstChild) {
              head.insertBefore(style, head.firstChild);
            } else {
              head.appendChild(style);
            }
          } else {
            head.appendChild(style);
          }

          if (style.styleSheet) {
            style.styleSheet.cssText = css;
          } else {
            style.appendChild(document.createTextNode(css));
          }
        }

        var css =
          ".styles_overlay__CLSq- {\n  background: rgba(0, 0, 0, 0.75);\n  display: flex;\n  align-items: flex-start;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow-y: auto;\n  overflow-x: hidden;\n  z-index: 1000;\n  padding: 1.2rem;\n}\n.styles_overlayCenter__YHoO7 {\n  align-items: center;\n}\n.styles_modal__gNwvD {\n  max-width: 800px;\n  position: relative;\n  padding: 1.2rem;\n  background: #ffffff;\n  background-clip: padding-box;\n  box-shadow: 0 12px 15px 0 rgba(0, 0, 0, 0.25);\n  margin: auto;\n}\n.styles_closeButton__20ID4 {\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  border: none;\n  padding: 0;\n  background-color: transparent;\n  display: flex;\n}\n.styles_closeIcon__1QwbI {\n}\n.styles_transitionEnter__3j_-a {\n  opacity: 0.01;\n}\n.styles_transitionEnterActive___eQs7 {\n  opacity: 1;\n  transition: opacity 500ms cubic-bezier(0.23, 1, 0.32, 1);\n}\n.styles_transitionExit__1KmEf {\n  opacity: 1;\n}\n.styles_transitionExitActive__1nQXw {\n  opacity: 0.01;\n  transition: opacity 500ms cubic-bezier(0.23, 1, 0.32, 1);\n}\n";
        var cssClasses = {
          overlay: "styles_overlay__CLSq-",
          overlayCenter: "styles_overlayCenter__YHoO7",
          modal: "styles_modal__gNwvD",
          closeButton: "styles_closeButton__20ID4",
          closeIcon: "styles_closeIcon__1QwbI",
          transitionEnter: "styles_transitionEnter__3j_-a",
          transitionEnterActive: "styles_transitionEnterActive___eQs7",
          transitionExit: "styles_transitionExit__1KmEf",
          transitionExitActive: "styles_transitionExitActive__1nQXw",
        };
        styleInject(css, { insertAt: "top" });

        var Modal =
          /*#__PURE__*/
          (function(_Component) {
            _inherits(Modal, _Component);

            function Modal() {
              var _getPrototypeOf2;

              var _this;

              _classCallCheck(this, Modal);

              for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              _this = _possibleConstructorReturn(
                this,
                (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(
                  _getPrototypeOf2,
                  [this].concat(args),
                ),
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "shouldClose",
                null,
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "state",
                {
                  showPortal: _this.props.open,
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleOpen",
                function() {
                  modalManager.add(
                    _assertThisInitialized(_assertThisInitialized(_this)),
                  );

                  if (_this.props.blockScroll) {
                    Modal.blockScroll();
                  }

                  document.addEventListener("keydown", _this.handleKeydown);
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleClose",
                function() {
                  modalManager.remove(
                    _assertThisInitialized(_assertThisInitialized(_this)),
                  );

                  if (_this.props.blockScroll) {
                    _this.unblockScroll();
                  }

                  document.removeEventListener("keydown", _this.handleKeydown);
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleClickOverlay",
                function(event) {
                  if (_this.shouldClose === null) {
                    _this.shouldClose = true;
                  }

                  if (!_this.shouldClose) {
                    _this.shouldClose = null;
                    return;
                  }

                  if (_this.props.onOverlayClick) {
                    _this.props.onOverlayClick(event);
                  }

                  if (_this.props.closeOnOverlayClick) {
                    _this.props.onClose(event);
                  }

                  _this.shouldClose = null;
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleClickCloseIcon",
                function(event) {
                  _this.props.onClose(event);
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleKeydown",
                function(event) {
                  // Only the last modal need to be escaped when pressing the esc key
                  if (
                    event.keyCode !== 27 ||
                    !modalManager.isTopModal(
                      _assertThisInitialized(_assertThisInitialized(_this)),
                    )
                  ) {
                    return;
                  }

                  if (_this.props.onEscKeyDown) {
                    _this.props.onEscKeyDown(event);
                  }

                  if (_this.props.closeOnEsc) {
                    _this.props.onClose(event);
                  }
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleModalEvent",
                function() {
                  _this.shouldClose = false;
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleEntered",
                function() {
                  if (_this.props.onEntered) {
                    _this.props.onEntered();
                  }
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "handleExited",
                function() {
                  if (_this.props.onExited) {
                    _this.props.onExited();
                  }

                  _this.setState({
                    showPortal: false,
                  });

                  if (_this.props.blockScroll) {
                    _this.unblockScroll();
                  }
                },
              );

              _defineProperty(
                _assertThisInitialized(_assertThisInitialized(_this)),
                "unblockScroll",
                function() {
                  // Restore the scroll only if there is no modal on the screen
                  if (modalManager.modals().length === 0) {
                    no_scroll__WEBPACK_IMPORTED_MODULE_6___default.a.off();
                  }
                },
              );

              return _this;
            }

            _createClass(
              Modal,
              [
                {
                  key: "componentDidMount",
                  value: function componentDidMount() {
                    // Block scroll when initial prop is open
                    if (this.props.open) {
                      this.handleOpen();
                    }
                  },
                },
                {
                  key: "componentDidUpdate",
                  value: function componentDidUpdate(prevProps, prevState) {
                    if (prevState.showPortal && !this.state.showPortal) {
                      this.handleClose();
                    } else if (!prevProps.open && this.props.open) {
                      this.handleOpen();
                    }
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function componentWillUnmount() {
                    if (this.props.open) {
                      this.handleClose();
                    }
                  },
                },
                {
                  key: "render",
                  value: function render() {
                    var _this$props = this.props,
                      open = _this$props.open,
                      center = _this$props.center,
                      classes = _this$props.classes,
                      classNames = _this$props.classNames,
                      styles = _this$props.styles,
                      showCloseIcon = _this$props.showCloseIcon,
                      closeIconSize = _this$props.closeIconSize,
                      closeIconSvgPath = _this$props.closeIconSvgPath,
                      animationDuration = _this$props.animationDuration,
                      container = _this$props.container,
                      focusTrapped = _this$props.focusTrapped,
                      focusTrapOptions = _this$props.focusTrapOptions,
                      overlayId = _this$props.overlayId,
                      modalId = _this$props.modalId,
                      closeIconId = _this$props.closeIconId;
                    var showPortal = this.state.showPortal;

                    if (!showPortal) {
                      return null;
                    }

                    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                      react_minimalist_portal__WEBPACK_IMPORTED_MODULE_3___default.a,
                      {
                        container: container,
                      },
                      react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                        react_transition_group_CSSTransition__WEBPACK_IMPORTED_MODULE_4___default.a,
                        {
                          in: open,
                          appear: true,
                          classNames: {
                            appear:
                              classNames.transitionEnter ||
                              classes.transitionEnter,
                            appearActive:
                              classNames.transitionEnterActive ||
                              classes.transitionEnterActive,
                            enter:
                              classNames.transitionEnter ||
                              classes.transitionEnter,
                            enterActive:
                              classNames.transitionEnterActive ||
                              classes.transitionEnterActive,
                            exit:
                              classNames.transitionExit ||
                              classes.transitionExit,
                            exitActive:
                              classNames.transitionExitActive ||
                              classes.transitionExitActive,
                          },
                          timeout: animationDuration,
                          onEntered: this.handleEntered,
                          onExited: this.handleExited,
                        },
                        react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                          "div",
                          {
                            className: classnames__WEBPACK_IMPORTED_MODULE_5___default()(
                              classes.overlay,
                              center ? classes.overlayCenter : null,
                              classNames.overlay,
                            ),
                            onClick: this.handleClickOverlay,
                            style: styles.overlay,
                            id: overlayId,
                          },
                          focusTrapped
                            ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                                "div",
                                {
                                  className: classnames__WEBPACK_IMPORTED_MODULE_5___default()(
                                    classes.modal,
                                    classNames.modal,
                                  ),
                                  style: styles.modal,
                                  onMouseDown: this.handleModalEvent,
                                  onMouseUp: this.handleModalEvent,
                                  onClick: this.handleModalEvent,
                                  id: modalId,
                                },
                                react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                                  focus_trap_react__WEBPACK_IMPORTED_MODULE_7___default.a,
                                  {
                                    focusTrapOptions: _objectSpread(
                                      {},
                                      {
                                        clickOutsideDeactivates: true,
                                      },
                                      focusTrapOptions,
                                    ),
                                  },
                                  this.props.children,
                                  showCloseIcon &&
                                    react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                                      CloseIcon,
                                      {
                                        classes: classes,
                                        classNames: classNames,
                                        styles: styles,
                                        closeIconSize: closeIconSize,
                                        closeIconSvgPath: closeIconSvgPath,
                                        onClickCloseIcon: this
                                          .handleClickCloseIcon,
                                        id: closeIconId,
                                      },
                                    ),
                                ),
                              )
                            : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                                "div",
                                {
                                  className: classnames__WEBPACK_IMPORTED_MODULE_5___default()(
                                    classes.modal,
                                    classNames.modal,
                                  ),
                                  style: styles.modal,
                                  onMouseDown: this.handleModalEvent,
                                  onMouseUp: this.handleModalEvent,
                                  onClick: this.handleModalEvent,
                                  id: modalId,
                                },
                                this.props.children,
                                showCloseIcon &&
                                  react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
                                    CloseIcon,
                                    {
                                      classes: classes,
                                      classNames: classNames,
                                      styles: styles,
                                      closeIconSize: closeIconSize,
                                      closeIconSvgPath: closeIconSvgPath,
                                      onClickCloseIcon: this
                                        .handleClickCloseIcon,
                                      id: closeIconId,
                                    },
                                  ),
                              ),
                        ),
                      ),
                    );
                  },
                },
              ],
              [
                {
                  key: "blockScroll",
                  value: function blockScroll() {
                    no_scroll__WEBPACK_IMPORTED_MODULE_6___default.a.on();
                  },
                },
                {
                  key: "getDerivedStateFromProps",
                  value: function getDerivedStateFromProps(
                    nextProps,
                    prevState,
                  ) {
                    if (!prevState.showPortal && nextProps.open) {
                      return {
                        showPortal: true,
                      };
                    }

                    return null;
                  },
                },
              ],
            );

            return Modal;
          })(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);

        Modal.propTypes = {
          /**
           * Is the modal closable when user press esc key.
           */
          closeOnEsc: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

          /**
           * Is the modal closable when user click on overlay.
           */
          closeOnOverlayClick:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

          /**
           * Callback fired when the Modal is open and the animation is finished.
           */
          onEntered: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

          /**
           * Callback fired when the Modal has exited and the animation is finished.
           */
          onExited: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

          /**
           * Callback fired when the Modal is requested to be closed by a click on the overlay or when user press esc key.
           */
          onClose:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,

          /**
           * Callback fired when the escape key is pressed.
           */
          onEscKeyDown: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

          /**
           * Callback fired when the overlay is clicked.
           */
          onOverlayClick:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,

          /**
           * Control if the modal is open or not.
           */
          open:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool.isRequired,

          /**
           * An object containing classNames to style the modal, can have properties 'overlay' (classname for overlay div), 'modal' (classname for modal content div), 'closeButton' (classname for the button that contain the close icon), 'closeIcon' (classname for close icon svg). You can customize the transition with 'transitionEnter', 'transitionEnterActive', 'transitionExit', 'transitionExitActive'
           */
          classNames: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

          /**
           * An object containing the styles objects to style the modal, can have properties 'overlay', 'modal', 'closeButton', 'closeIcon'.
           */
          styles: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

          /**
           * The content of the modal.
           */
          children: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node,

          /**
           * @internal
           */
          classes: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

          /**
           * Should the dialog be centered.
           */
          center: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

          /**
           * Show the close icon.
           */
          showCloseIcon: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

          /**
           * Close icon size.
           */
          closeIconSize:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,

          /**
           * A valid svg path to show as icon.
           */
          closeIconSvgPath:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.node,

          /**
           * Animation duration in milliseconds.
           */
          animationDuration:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,

          /**
           * You can specify a container prop which should be of type `Element`. The portal will be rendered inside that element. The default behavior will create a div node and render it at the at the end of document.body.
           */
          container: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,
          // eslint-disable-line

          /**
           * Whether to block scrolling when dialog is open
           */
          blockScroll: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

          /**
           * When the modal is open, trap focus within it
           */
          focusTrapped: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,

          /**
           * Options to be passed to the focus trap, details available at https://github.com/davidtheclark/focus-trap#focustrap--createfocustrapelement-createoptions
           */
          focusTrapOptions:
            prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.object,

          /**
           * id attribute for overlay
           */
          overlayId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

          /**
           * id attribute for modal
           */
          modalId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,

          /**
           * id attribute for close icon
           */
          closeIconId: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
        };
        Modal.defaultProps = {
          classes: cssClasses,
          closeOnEsc: true,
          closeOnOverlayClick: true,
          onEntered: null,
          onExited: null,
          onEscKeyDown: null,
          onOverlayClick: null,
          showCloseIcon: true,
          closeIconSize: 28,
          closeIconSvgPath: react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(
            "path",
            {
              d:
                "M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z",
            },
          ),
          classNames: {},
          styles: {},
          children: null,
          center: false,
          animationDuration: 500,
          blockScroll: true,
          focusTrapped: false,
          focusTrapOptions: {},
          overlayId: null,
          modalId: null,
          closeIconId: null,
        };
        Object(
          react_lifecycles_compat__WEBPACK_IMPORTED_MODULE_2__["polyfill"],
        )(Modal);

        /* harmony default export */ __webpack_exports__["default"] = Modal;
        //# sourceMappingURL=index.es.js.map

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/components/Button.js":
      /*!****************************************************************!*\
  !*** ./node_modules/react-scroll/modules/components/Button.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _react2 = _interopRequireDefault(_react);

        var _scrollLink = __webpack_require__(
          /*! ../mixins/scroll-link */ "./node_modules/react-scroll/modules/mixins/scroll-link.js",
        );

        var _scrollLink2 = _interopRequireDefault(_scrollLink);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var ButtonElement = (function(_React$Component) {
          _inherits(ButtonElement, _React$Component);

          function ButtonElement() {
            _classCallCheck(this, ButtonElement);

            return _possibleConstructorReturn(
              this,
              (
                ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)
              ).apply(this, arguments),
            );
          }

          _createClass(ButtonElement, [
            {
              key: "render",
              value: function render() {
                return _react2.default.createElement(
                  "input",
                  this.props,
                  this.props.children,
                );
              },
            },
          ]);

          return ButtonElement;
        })(_react2.default.Component);

        exports.default = (0, _scrollLink2.default)(ButtonElement);

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/components/Element.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/react-scroll/modules/components/Element.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _react2 = _interopRequireDefault(_react);

        var _scrollElement = __webpack_require__(
          /*! ../mixins/scroll-element */ "./node_modules/react-scroll/modules/mixins/scroll-element.js",
        );

        var _scrollElement2 = _interopRequireDefault(_scrollElement);

        var _propTypes = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var ElementWrapper = (function(_React$Component) {
          _inherits(ElementWrapper, _React$Component);

          function ElementWrapper() {
            _classCallCheck(this, ElementWrapper);

            return _possibleConstructorReturn(
              this,
              (
                ElementWrapper.__proto__ ||
                Object.getPrototypeOf(ElementWrapper)
              ).apply(this, arguments),
            );
          }

          _createClass(ElementWrapper, [
            {
              key: "render",
              value: function render() {
                var _this2 = this;

                // Remove `parentBindings` from props
                var newProps = _extends({}, this.props);
                if (newProps.parentBindings) {
                  delete newProps.parentBindings;
                }

                return _react2.default.createElement(
                  "div",
                  _extends({}, newProps, {
                    ref: function ref(el) {
                      _this2.props.parentBindings.domNode = el;
                    },
                  }),
                  this.props.children,
                );
              },
            },
          ]);

          return ElementWrapper;
        })(_react2.default.Component);

        ElementWrapper.propTypes = {
          name: _propTypes2.default.string,
          id: _propTypes2.default.string,
        };

        exports.default = (0, _scrollElement2.default)(ElementWrapper);

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/components/Link.js":
      /*!**************************************************************!*\
  !*** ./node_modules/react-scroll/modules/components/Link.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _react2 = _interopRequireDefault(_react);

        var _scrollLink = __webpack_require__(
          /*! ../mixins/scroll-link */ "./node_modules/react-scroll/modules/mixins/scroll-link.js",
        );

        var _scrollLink2 = _interopRequireDefault(_scrollLink);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var LinkElement = (function(_React$Component) {
          _inherits(LinkElement, _React$Component);

          function LinkElement() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, LinkElement);

            for (
              var _len = arguments.length, args = Array(_len), _key = 0;
              _key < _len;
              _key++
            ) {
              args[_key] = arguments[_key];
            }

            return (
              (_ret = ((_temp = ((_this = _possibleConstructorReturn(
                this,
                (_ref =
                  LinkElement.__proto__ ||
                  Object.getPrototypeOf(LinkElement)).call.apply(
                  _ref,
                  [this].concat(args),
                ),
              )),
              _this)),
              (_this.render = function() {
                return _react2.default.createElement(
                  "a",
                  _this.props,
                  _this.props.children,
                );
              }),
              _temp)),
              _possibleConstructorReturn(_this, _ret)
            );
          }

          return LinkElement;
        })(_react2.default.Component);

        exports.default = (0, _scrollLink2.default)(LinkElement);

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/index.js":
      /*!****************************************************!*\
  !*** ./node_modules/react-scroll/modules/index.js ***!
  \****************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.Helpers = exports.ScrollElement = exports.ScrollLink = exports.animateScroll = exports.scrollSpy = exports.Events = exports.scroller = exports.Element = exports.Button = exports.Link = undefined;

        var _Link = __webpack_require__(
          /*! ./components/Link.js */ "./node_modules/react-scroll/modules/components/Link.js",
        );

        var _Link2 = _interopRequireDefault(_Link);

        var _Button = __webpack_require__(
          /*! ./components/Button.js */ "./node_modules/react-scroll/modules/components/Button.js",
        );

        var _Button2 = _interopRequireDefault(_Button);

        var _Element = __webpack_require__(
          /*! ./components/Element.js */ "./node_modules/react-scroll/modules/components/Element.js",
        );

        var _Element2 = _interopRequireDefault(_Element);

        var _scroller = __webpack_require__(
          /*! ./mixins/scroller.js */ "./node_modules/react-scroll/modules/mixins/scroller.js",
        );

        var _scroller2 = _interopRequireDefault(_scroller);

        var _scrollEvents = __webpack_require__(
          /*! ./mixins/scroll-events.js */ "./node_modules/react-scroll/modules/mixins/scroll-events.js",
        );

        var _scrollEvents2 = _interopRequireDefault(_scrollEvents);

        var _scrollSpy = __webpack_require__(
          /*! ./mixins/scroll-spy.js */ "./node_modules/react-scroll/modules/mixins/scroll-spy.js",
        );

        var _scrollSpy2 = _interopRequireDefault(_scrollSpy);

        var _animateScroll = __webpack_require__(
          /*! ./mixins/animate-scroll.js */ "./node_modules/react-scroll/modules/mixins/animate-scroll.js",
        );

        var _animateScroll2 = _interopRequireDefault(_animateScroll);

        var _scrollLink = __webpack_require__(
          /*! ./mixins/scroll-link.js */ "./node_modules/react-scroll/modules/mixins/scroll-link.js",
        );

        var _scrollLink2 = _interopRequireDefault(_scrollLink);

        var _scrollElement = __webpack_require__(
          /*! ./mixins/scroll-element.js */ "./node_modules/react-scroll/modules/mixins/scroll-element.js",
        );

        var _scrollElement2 = _interopRequireDefault(_scrollElement);

        var _Helpers = __webpack_require__(
          /*! ./mixins/Helpers.js */ "./node_modules/react-scroll/modules/mixins/Helpers.js",
        );

        var _Helpers2 = _interopRequireDefault(_Helpers);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        exports.Link = _Link2.default;
        exports.Button = _Button2.default;
        exports.Element = _Element2.default;
        exports.scroller = _scroller2.default;
        exports.Events = _scrollEvents2.default;
        exports.scrollSpy = _scrollSpy2.default;
        exports.animateScroll = _animateScroll2.default;
        exports.ScrollLink = _scrollLink2.default;
        exports.ScrollElement = _scrollElement2.default;
        exports.Helpers = _Helpers2.default;
        exports.default = {
          Link: _Link2.default,
          Button: _Button2.default,
          Element: _Element2.default,
          scroller: _scroller2.default,
          Events: _scrollEvents2.default,
          scrollSpy: _scrollSpy2.default,
          animateScroll: _animateScroll2.default,
          ScrollLink: _scrollLink2.default,
          ScrollElement: _scrollElement2.default,
          Helpers: _Helpers2.default,
        };

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/Helpers.js":
      /*!*************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/Helpers.js ***!
  \*************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        /* DEPRECATED */

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var React = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        var ReactDOM = __webpack_require__(
          /*! react-dom */ "./node_modules/react-dom/index.js",
        );

        var utils = __webpack_require__(
          /*! ./utils */ "./node_modules/react-scroll/modules/mixins/utils.js",
        );
        var scrollSpy = __webpack_require__(
          /*! ./scroll-spy */ "./node_modules/react-scroll/modules/mixins/scroll-spy.js",
        );
        var defaultScroller = __webpack_require__(
          /*! ./scroller */ "./node_modules/react-scroll/modules/mixins/scroller.js",
        );
        var PropTypes = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );
        var scrollHash = __webpack_require__(
          /*! ./scroll-hash */ "./node_modules/react-scroll/modules/mixins/scroll-hash.js",
        );

        var protoTypes = {
          to: PropTypes.string.isRequired,
          containerId: PropTypes.string,
          container: PropTypes.object,
          activeClass: PropTypes.string,
          spy: PropTypes.bool,
          smooth: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),
          offset: PropTypes.number,
          delay: PropTypes.number,
          isDynamic: PropTypes.bool,
          onClick: PropTypes.func,
          duration: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),
          absolute: PropTypes.bool,
          onSetActive: PropTypes.func,
          onSetInactive: PropTypes.func,
          ignoreCancelEvents: PropTypes.bool,
          hashSpy: PropTypes.bool,
        };

        var Helpers = {
          Scroll: function Scroll(Component, customScroller) {
            console.warn("Helpers.Scroll is deprecated since v1.7.0");

            var scroller = customScroller || defaultScroller;

            var Scroll = (function(_React$Component) {
              _inherits(Scroll, _React$Component);

              function Scroll(props) {
                _classCallCheck(this, Scroll);

                var _this = _possibleConstructorReturn(
                  this,
                  (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(
                    this,
                    props,
                  ),
                );

                _initialiseProps.call(_this);

                _this.state = {
                  active: false,
                };
                return _this;
              }

              _createClass(Scroll, [
                {
                  key: "getScrollSpyContainer",
                  value: function getScrollSpyContainer() {
                    var containerId = this.props.containerId;
                    var container = this.props.container;

                    if (containerId) {
                      return document.getElementById(containerId);
                    }

                    if (container && container.nodeType) {
                      return container;
                    }

                    return document;
                  },
                },
                {
                  key: "componentDidMount",
                  value: function componentDidMount() {
                    if (this.props.spy || this.props.hashSpy) {
                      var scrollSpyContainer = this.getScrollSpyContainer();

                      if (!scrollSpy.isMounted(scrollSpyContainer)) {
                        scrollSpy.mount(scrollSpyContainer);
                      }

                      if (this.props.hashSpy) {
                        if (!scrollHash.isMounted()) {
                          scrollHash.mount(scroller);
                        }
                        scrollHash.mapContainer(
                          this.props.to,
                          scrollSpyContainer,
                        );
                      }

                      if (this.props.spy) {
                        scrollSpy.addStateHandler(this.stateHandler);
                      }

                      scrollSpy.addSpyHandler(
                        this.spyHandler,
                        scrollSpyContainer,
                      );

                      this.setState({
                        container: scrollSpyContainer,
                      });
                    }
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function componentWillUnmount() {
                    scrollSpy.unmount(this.stateHandler, this.spyHandler);
                  },
                },
                {
                  key: "render",
                  value: function render() {
                    var className = "";

                    if (this.state && this.state.active) {
                      className = (
                        (this.props.className || "") +
                        " " +
                        (this.props.activeClass || "active")
                      ).trim();
                    } else {
                      className = this.props.className;
                    }

                    var props = _extends({}, this.props);

                    for (var prop in protoTypes) {
                      if (props.hasOwnProperty(prop)) {
                        delete props[prop];
                      }
                    }

                    props.className = className;
                    props.onClick = this.handleClick;

                    return React.createElement(Component, props);
                  },
                },
              ]);

              return Scroll;
            })(React.Component);

            var _initialiseProps = function _initialiseProps() {
              var _this2 = this;

              this.scrollTo = function(to, props) {
                scroller.scrollTo(to, _extends({}, _this2.state, props));
              };

              this.handleClick = function(event) {
                /*
                 * give the posibility to override onClick
                 */

                if (_this2.props.onClick) {
                  _this2.props.onClick(event);
                }

                /*
                 * dont bubble the navigation
                 */

                if (event.stopPropagation) event.stopPropagation();
                if (event.preventDefault) event.preventDefault();

                /*
                 * do the magic!
                 */
                _this2.scrollTo(_this2.props.to, _this2.props);
              };

              this.stateHandler = function() {
                if (scroller.getActiveLink() !== _this2.props.to) {
                  if (
                    _this2.state !== null &&
                    _this2.state.active &&
                    _this2.props.onSetInactive
                  ) {
                    _this2.props.onSetInactive();
                  }
                  _this2.setState({ active: false });
                }
              };

              this.spyHandler = function(y) {
                var scrollSpyContainer = _this2.getScrollSpyContainer();

                if (scrollHash.isMounted() && !scrollHash.isInitialized()) {
                  return;
                }

                var to = _this2.props.to;
                var element = null;
                var elemTopBound = 0;
                var elemBottomBound = 0;
                var containerTop = 0;

                if (scrollSpyContainer.getBoundingClientRect) {
                  var containerCords = scrollSpyContainer.getBoundingClientRect();
                  containerTop = containerCords.top;
                }

                if (!element || _this2.props.isDynamic) {
                  element = scroller.get(to);
                  if (!element) {
                    return;
                  }

                  var cords = element.getBoundingClientRect();
                  elemTopBound = cords.top - containerTop + y;
                  elemBottomBound = elemTopBound + cords.height;
                }

                var offsetY = y - _this2.props.offset;
                var isInside =
                  offsetY >= Math.floor(elemTopBound) &&
                  offsetY < Math.floor(elemBottomBound);
                var isOutside =
                  offsetY < Math.floor(elemTopBound) ||
                  offsetY >= Math.floor(elemBottomBound);
                var activeLink = scroller.getActiveLink();

                if (isOutside) {
                  if (to === activeLink) {
                    scroller.setActiveLink(void 0);
                  }

                  if (_this2.props.hashSpy && scrollHash.getHash() === to) {
                    scrollHash.changeHash();
                  }

                  if (_this2.props.spy && _this2.state.active) {
                    _this2.setState({ active: false });
                    _this2.props.onSetInactive && _this2.props.onSetInactive();
                  }

                  return scrollSpy.updateStates();
                }

                if (isInside && activeLink !== to) {
                  scroller.setActiveLink(to);

                  _this2.props.hashSpy && scrollHash.changeHash(to);

                  if (_this2.props.spy) {
                    _this2.setState({ active: true });
                    _this2.props.onSetActive && _this2.props.onSetActive(to);
                  }
                  return scrollSpy.updateStates();
                }
              };
            };

            Scroll.propTypes = protoTypes;

            Scroll.defaultProps = { offset: 0 };

            return Scroll;
          },
          Element: function Element(Component) {
            console.warn("Helpers.Element is deprecated since v1.7.0");

            var Element = (function(_React$Component2) {
              _inherits(Element, _React$Component2);

              function Element(props) {
                _classCallCheck(this, Element);

                var _this3 = _possibleConstructorReturn(
                  this,
                  (Element.__proto__ || Object.getPrototypeOf(Element)).call(
                    this,
                    props,
                  ),
                );

                _this3.childBindings = {
                  domNode: null,
                };
                return _this3;
              }

              _createClass(Element, [
                {
                  key: "componentDidMount",
                  value: function componentDidMount() {
                    if (typeof window === "undefined") {
                      return false;
                    }
                    this.registerElems(this.props.name);
                  },
                },
                {
                  key: "componentWillReceiveProps",
                  value: function componentWillReceiveProps(nextProps) {
                    if (this.props.name !== nextProps.name) {
                      this.registerElems(nextProps.name);
                    }
                  },
                },
                {
                  key: "componentWillUnmount",
                  value: function componentWillUnmount() {
                    if (typeof window === "undefined") {
                      return false;
                    }
                    defaultScroller.unregister(this.props.name);
                  },
                },
                {
                  key: "registerElems",
                  value: function registerElems(name) {
                    defaultScroller.register(name, this.childBindings.domNode);
                  },
                },
                {
                  key: "render",
                  value: function render() {
                    return React.createElement(
                      Component,
                      _extends({}, this.props, {
                        parentBindings: this.childBindings,
                      }),
                    );
                  },
                },
              ]);

              return Element;
            })(React.Component);

            Element.propTypes = {
              name: PropTypes.string,
              id: PropTypes.string,
            };

            return Element;
          },
        };

        module.exports = Helpers;

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/animate-scroll.js":
      /*!********************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/animate-scroll.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _utils = __webpack_require__(
          /*! ./utils */ "./node_modules/react-scroll/modules/mixins/utils.js",
        );

        var _utils2 = _interopRequireDefault(_utils);

        var _smooth = __webpack_require__(
          /*! ./smooth */ "./node_modules/react-scroll/modules/mixins/smooth.js",
        );

        var _smooth2 = _interopRequireDefault(_smooth);

        var _cancelEvents = __webpack_require__(
          /*! ./cancel-events */ "./node_modules/react-scroll/modules/mixins/cancel-events.js",
        );

        var _cancelEvents2 = _interopRequireDefault(_cancelEvents);

        var _scrollEvents = __webpack_require__(
          /*! ./scroll-events */ "./node_modules/react-scroll/modules/mixins/scroll-events.js",
        );

        var _scrollEvents2 = _interopRequireDefault(_scrollEvents);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /*
         * Gets the easing type from the smooth prop within options.
         */
        var getAnimationType = function getAnimationType(options) {
          return (
            _smooth2.default[options.smooth] || _smooth2.default.defaultEasing
          );
        };
        /*
         * Function helper
         */
        var functionWrapper = function functionWrapper(value) {
          return typeof value === "function"
            ? value
            : function() {
                return value;
              };
        };
        /*
         * Wraps window properties to allow server side rendering
         */
        var currentWindowProperties = function currentWindowProperties() {
          if (typeof window !== "undefined") {
            return (
              window.requestAnimationFrame || window.webkitRequestAnimationFrame
            );
          }
        };

        /*
         * Helper function to never extend 60fps on the webpage.
         */
        var requestAnimationFrameHelper = (function() {
          return (
            currentWindowProperties() ||
            function(callback, element, delay) {
              window.setTimeout(
                callback,
                delay || 1000 / 60,
                new Date().getTime(),
              );
            }
          );
        })();

        var makeData = function makeData() {
          return {
            currentPositionY: 0,
            startPositionY: 0,
            targetPositionY: 0,
            progress: 0,
            duration: 0,
            cancel: false,

            target: null,
            containerElement: null,
            to: null,
            start: null,
            deltaTop: null,
            percent: null,
            delayTimeout: null,
          };
        };

        var currentPositionY = function currentPositionY(options) {
          var containerElement = options.data.containerElement;
          if (
            containerElement &&
            containerElement !== document &&
            containerElement !== document.body
          ) {
            return containerElement.scrollTop;
          } else {
            var supportPageOffset = window.pageXOffset !== undefined;
            var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
            return supportPageOffset
              ? window.pageYOffset
              : isCSS1Compat
              ? document.documentElement.scrollTop
              : document.body.scrollTop;
          }
        };

        var scrollContainerHeight = function scrollContainerHeight(options) {
          var containerElement = options.data.containerElement;
          if (
            containerElement &&
            containerElement !== document &&
            containerElement !== document.body
          ) {
            return Math.max(
              containerElement.scrollHeight,
              containerElement.offsetHeight,
              containerElement.clientHeight,
            );
          } else {
            var body = document.body;
            var html = document.documentElement;

            return Math.max(
              body.scrollHeight,
              body.offsetHeight,
              html.clientHeight,
              html.scrollHeight,
              html.offsetHeight,
            );
          }
        };

        var animateScroll = function animateScroll(easing, options, timestamp) {
          var data = options.data;

          // Cancel on specific events
          if (!options.ignoreCancelEvents && data.cancel) {
            if (_scrollEvents2.default.registered["end"]) {
              _scrollEvents2.default.registered["end"](
                data.to,
                data.target,
                data.currentPositionY,
              );
            }
            return;
          }

          data.deltaTop = Math.round(
            data.targetPositionY - data.startPositionY,
          );

          if (data.start === null) {
            data.start = timestamp;
          }

          data.progress = timestamp - data.start;

          data.percent =
            data.progress >= data.duration
              ? 1
              : easing(data.progress / data.duration);

          data.currentPositionY =
            data.startPositionY + Math.ceil(data.deltaTop * data.percent);

          if (
            data.containerElement &&
            data.containerElement !== document &&
            data.containerElement !== document.body
          ) {
            data.containerElement.scrollTop = data.currentPositionY;
          } else {
            window.scrollTo(0, data.currentPositionY);
          }

          if (data.percent < 1) {
            var easedAnimate = animateScroll.bind(null, easing, options);
            requestAnimationFrameHelper.call(window, easedAnimate);
            return;
          }

          if (_scrollEvents2.default.registered["end"]) {
            _scrollEvents2.default.registered["end"](
              data.to,
              data.target,
              data.currentPositionY,
            );
          }
        };

        var setContainer = function setContainer(options) {
          options.data.containerElement = !options
            ? null
            : options.containerId
            ? document.getElementById(options.containerId)
            : options.container && options.container.nodeType
            ? options.container
            : document;
        };

        var animateTopScroll = function animateTopScroll(
          y,
          options,
          to,
          target,
        ) {
          options.data = options.data || makeData();

          window.clearTimeout(options.data.delayTimeout);

          _cancelEvents2.default.subscribe(function() {
            options.data.cancel = true;
          });

          setContainer(options);

          options.data.start = null;
          options.data.cancel = false;
          options.data.startPositionY = currentPositionY(options);
          options.data.targetPositionY = options.absolute
            ? y
            : y + options.data.startPositionY;

          if (options.data.startPositionY === options.data.targetPositionY) {
            if (_scrollEvents2.default.registered["end"]) {
              _scrollEvents2.default.registered["end"](
                options.data.to,
                options.data.target,
                options.data.currentPositionY,
              );
            }
            return;
          }

          options.data.deltaTop = Math.round(
            options.data.targetPositionY - options.data.startPositionY,
          );

          options.data.duration = functionWrapper(options.duration)(
            options.data.deltaTop,
          );
          options.data.duration = isNaN(parseFloat(options.data.duration))
            ? 1000
            : parseFloat(options.data.duration);
          options.data.to = to;
          options.data.target = target;

          var easing = getAnimationType(options);
          var easedAnimate = animateScroll.bind(null, easing, options);

          if (options && options.delay > 0) {
            options.data.delayTimeout = window.setTimeout(function() {
              requestAnimationFrameHelper.call(window, easedAnimate);
            }, options.delay);
            return;
          }

          requestAnimationFrameHelper.call(window, easedAnimate);
        };

        var proceedOptions = function proceedOptions(options) {
          options = _extends({}, options);
          options.data = options.data || makeData();
          options.absolute = true;
          return options;
        };

        var scrollToTop = function scrollToTop(options) {
          animateTopScroll(0, proceedOptions(options));
        };

        var scrollTo = function scrollTo(toY, options) {
          animateTopScroll(toY, proceedOptions(options));
        };

        var scrollToBottom = function scrollToBottom(options) {
          options = proceedOptions(options);
          setContainer(options);
          animateTopScroll(scrollContainerHeight(options), options);
        };

        var scrollMore = function scrollMore(toY, options) {
          options = proceedOptions(options);
          setContainer(options);
          animateTopScroll(currentPositionY(options) + toY, options);
        };

        exports.default = {
          animateTopScroll: animateTopScroll,
          getAnimationType: getAnimationType,
          scrollToTop: scrollToTop,
          scrollToBottom: scrollToBottom,
          scrollTo: scrollTo,
          scrollMore: scrollMore,
        };

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/cancel-events.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/cancel-events.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _passiveEventListeners = __webpack_require__(
          /*! ./passive-event-listeners */ "./node_modules/react-scroll/modules/mixins/passive-event-listeners.js",
        );

        var events = ["mousedown", "mousewheel", "touchmove", "keydown"];

        exports.default = {
          subscribe: function subscribe(cancelEvent) {
            return (
              typeof document !== "undefined" &&
              events.forEach(function(event) {
                return (0,
                _passiveEventListeners.addPassiveEventListener)(document, event, cancelEvent);
              })
            );
          },
        };

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/passive-event-listeners.js":
      /*!*****************************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/passive-event-listeners.js ***!
  \*****************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        /*
         * Tell the browser that the event listener won't prevent a scroll.
         * Allowing the browser to continue scrolling without having to
         * to wait for the listener to return.
         */
        var addPassiveEventListener = (exports.addPassiveEventListener = function addPassiveEventListener(
          target,
          eventName,
          listener,
        ) {
          var supportsPassiveOption = (function() {
            var supportsPassiveOption = false;
            try {
              var opts = Object.defineProperty({}, "passive", {
                get: function get() {
                  supportsPassiveOption = true;
                },
              });
              window.addEventListener("test", null, opts);
            } catch (e) {}
            return supportsPassiveOption;
          })();
          target.addEventListener(
            eventName,
            listener,
            supportsPassiveOption ? { passive: true } : false,
          );
        });

        var removePassiveEventListener = (exports.removePassiveEventListener = function removePassiveEventListener(
          target,
          eventName,
          listener,
        ) {
          target.removeEventListener(eventName, listener);
        });

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/scroll-element.js":
      /*!********************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/scroll-element.js ***!
  \********************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _react2 = _interopRequireDefault(_react);

        var _reactDom = __webpack_require__(
          /*! react-dom */ "./node_modules/react-dom/index.js",
        );

        var _reactDom2 = _interopRequireDefault(_reactDom);

        var _scroller = __webpack_require__(
          /*! ./scroller */ "./node_modules/react-scroll/modules/mixins/scroller.js",
        );

        var _scroller2 = _interopRequireDefault(_scroller);

        var _propTypes = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );

        var _propTypes2 = _interopRequireDefault(_propTypes);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        exports.default = function(Component) {
          var Element = (function(_React$Component) {
            _inherits(Element, _React$Component);

            function Element(props) {
              _classCallCheck(this, Element);

              var _this = _possibleConstructorReturn(
                this,
                (Element.__proto__ || Object.getPrototypeOf(Element)).call(
                  this,
                  props,
                ),
              );

              _this.childBindings = {
                domNode: null,
              };
              return _this;
            }

            _createClass(Element, [
              {
                key: "componentDidMount",
                value: function componentDidMount() {
                  if (typeof window === "undefined") {
                    return false;
                  }
                  this.registerElems(this.props.name);
                },
              },
              {
                key: "componentWillReceiveProps",
                value: function componentWillReceiveProps(nextProps) {
                  if (this.props.name !== nextProps.name) {
                    this.registerElems(nextProps.name);
                  }
                },
              },
              {
                key: "componentWillUnmount",
                value: function componentWillUnmount() {
                  if (typeof window === "undefined") {
                    return false;
                  }
                  _scroller2.default.unregister(this.props.name);
                },
              },
              {
                key: "registerElems",
                value: function registerElems(name) {
                  _scroller2.default.register(name, this.childBindings.domNode);
                },
              },
              {
                key: "render",
                value: function render() {
                  return _react2.default.createElement(
                    Component,
                    _extends({}, this.props, {
                      parentBindings: this.childBindings,
                    }),
                  );
                },
              },
            ]);

            return Element;
          })(_react2.default.Component);

          Element.propTypes = {
            name: _propTypes2.default.string,
            id: _propTypes2.default.string,
          };

          return Element;
        };

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/scroll-events.js":
      /*!*******************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/scroll-events.js ***!
  \*******************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var Events = {
          registered: {},
          scrollEvent: {
            register: function register(evtName, callback) {
              Events.registered[evtName] = callback;
            },
            remove: function remove(evtName) {
              Events.registered[evtName] = null;
            },
          },
        };

        exports.default = Events;

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/scroll-hash.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/scroll-hash.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _passiveEventListeners = __webpack_require__(
          /*! ./passive-event-listeners */ "./node_modules/react-scroll/modules/mixins/passive-event-listeners.js",
        );

        var _utils = __webpack_require__(
          /*! ./utils */ "./node_modules/react-scroll/modules/mixins/utils.js",
        );

        var _utils2 = _interopRequireDefault(_utils);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var scrollHash = {
          mountFlag: false,
          initialized: false,
          scroller: null,
          containers: {},

          mount: function mount(scroller) {
            this.scroller = scroller;

            this.handleHashChange = this.handleHashChange.bind(this);
            window.addEventListener("hashchange", this.handleHashChange);

            this.initStateFromHash();
            this.mountFlag = true;
          },
          mapContainer: function mapContainer(to, container) {
            this.containers[to] = container;
          },
          isMounted: function isMounted() {
            return this.mountFlag;
          },
          isInitialized: function isInitialized() {
            return this.initialized;
          },
          initStateFromHash: function initStateFromHash() {
            var _this = this;

            var hash = this.getHash();
            if (hash) {
              window.setTimeout(function() {
                _this.scrollTo(hash, true);
                _this.initialized = true;
              }, 10);
            } else {
              this.initialized = true;
            }
          },
          scrollTo: function scrollTo(to, isInit) {
            var scroller = this.scroller;
            var element = scroller.get(to);
            if (element && (isInit || to !== scroller.getActiveLink())) {
              var container = this.containers[to] || document;
              scroller.scrollTo(to, { container: container });
            }
          },
          getHash: function getHash() {
            return _utils2.default.getHash();
          },
          changeHash: function changeHash(to) {
            if (this.isInitialized() && _utils2.default.getHash() !== to) {
              _utils2.default.pushHash(to);
            }
          },
          handleHashChange: function handleHashChange() {
            this.scrollTo(this.getHash());
          },
          unmount: function unmount() {
            this.scroller = null;
            this.containers = null;
            window.removeEventListener("hashchange", this.handleHashChange);
          },
        };

        exports.default = scrollHash;

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/scroll-link.js":
      /*!*****************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/scroll-link.js ***!
  \*****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function() {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function(Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        var _react = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );

        var _react2 = _interopRequireDefault(_react);

        var _reactDom = __webpack_require__(
          /*! react-dom */ "./node_modules/react-dom/index.js",
        );

        var _reactDom2 = _interopRequireDefault(_reactDom);

        var _utils = __webpack_require__(
          /*! ./utils */ "./node_modules/react-scroll/modules/mixins/utils.js",
        );

        var _utils2 = _interopRequireDefault(_utils);

        var _scrollSpy = __webpack_require__(
          /*! ./scroll-spy */ "./node_modules/react-scroll/modules/mixins/scroll-spy.js",
        );

        var _scrollSpy2 = _interopRequireDefault(_scrollSpy);

        var _scroller = __webpack_require__(
          /*! ./scroller */ "./node_modules/react-scroll/modules/mixins/scroller.js",
        );

        var _scroller2 = _interopRequireDefault(_scroller);

        var _propTypes = __webpack_require__(
          /*! prop-types */ "./node_modules/prop-types/index.js",
        );

        var _propTypes2 = _interopRequireDefault(_propTypes);

        var _scrollHash = __webpack_require__(
          /*! ./scroll-hash */ "./node_modules/react-scroll/modules/mixins/scroll-hash.js",
        );

        var _scrollHash2 = _interopRequireDefault(_scrollHash);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called",
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass,
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            },
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var protoTypes = {
          to: _propTypes2.default.string.isRequired,
          containerId: _propTypes2.default.string,
          container: _propTypes2.default.object,
          activeClass: _propTypes2.default.string,
          spy: _propTypes2.default.bool,
          smooth: _propTypes2.default.oneOfType([
            _propTypes2.default.bool,
            _propTypes2.default.string,
          ]),
          offset: _propTypes2.default.number,
          delay: _propTypes2.default.number,
          isDynamic: _propTypes2.default.bool,
          onClick: _propTypes2.default.func,
          duration: _propTypes2.default.oneOfType([
            _propTypes2.default.number,
            _propTypes2.default.func,
          ]),
          absolute: _propTypes2.default.bool,
          onSetActive: _propTypes2.default.func,
          onSetInactive: _propTypes2.default.func,
          ignoreCancelEvents: _propTypes2.default.bool,
          hashSpy: _propTypes2.default.bool,
        };

        exports.default = function(Component, customScroller) {
          var scroller = customScroller || _scroller2.default;

          var Link = (function(_React$PureComponent) {
            _inherits(Link, _React$PureComponent);

            function Link(props) {
              _classCallCheck(this, Link);

              var _this = _possibleConstructorReturn(
                this,
                (Link.__proto__ || Object.getPrototypeOf(Link)).call(
                  this,
                  props,
                ),
              );

              _initialiseProps.call(_this);

              _this.state = {
                active: false,
              };
              return _this;
            }

            _createClass(Link, [
              {
                key: "getScrollSpyContainer",
                value: function getScrollSpyContainer() {
                  var containerId = this.props.containerId;
                  var container = this.props.container;

                  if (containerId && !container) {
                    return document.getElementById(containerId);
                  }

                  if (container && container.nodeType) {
                    return container;
                  }

                  return document;
                },
              },
              {
                key: "componentDidMount",
                value: function componentDidMount() {
                  if (this.props.spy || this.props.hashSpy) {
                    var scrollSpyContainer = this.getScrollSpyContainer();

                    if (!_scrollSpy2.default.isMounted(scrollSpyContainer)) {
                      _scrollSpy2.default.mount(scrollSpyContainer);
                    }

                    if (this.props.hashSpy) {
                      if (!_scrollHash2.default.isMounted()) {
                        _scrollHash2.default.mount(scroller);
                      }
                      _scrollHash2.default.mapContainer(
                        this.props.to,
                        scrollSpyContainer,
                      );
                    }

                    _scrollSpy2.default.addSpyHandler(
                      this.spyHandler,
                      scrollSpyContainer,
                    );

                    this.setState({
                      container: scrollSpyContainer,
                    });
                  }
                },
              },
              {
                key: "componentWillUnmount",
                value: function componentWillUnmount() {
                  _scrollSpy2.default.unmount(
                    this.stateHandler,
                    this.spyHandler,
                  );
                },
              },
              {
                key: "render",
                value: function render() {
                  var className = "";

                  if (this.state && this.state.active) {
                    className = (
                      (this.props.className || "") +
                      " " +
                      (this.props.activeClass || "active")
                    ).trim();
                  } else {
                    className = this.props.className;
                  }

                  var props = _extends({}, this.props);

                  for (var prop in protoTypes) {
                    if (props.hasOwnProperty(prop)) {
                      delete props[prop];
                    }
                  }

                  props.className = className;
                  props.onClick = this.handleClick;

                  return _react2.default.createElement(Component, props);
                },
              },
            ]);

            return Link;
          })(_react2.default.PureComponent);

          var _initialiseProps = function _initialiseProps() {
            var _this2 = this;

            this.scrollTo = function(to, props) {
              scroller.scrollTo(to, _extends({}, _this2.state, props));
            };

            this.handleClick = function(event) {
              /*
               * give the posibility to override onClick
               */

              if (_this2.props.onClick) {
                _this2.props.onClick(event);
              }

              /*
               * dont bubble the navigation
               */

              if (event.stopPropagation) event.stopPropagation();
              if (event.preventDefault) event.preventDefault();

              /*
               * do the magic!
               */
              _this2.scrollTo(_this2.props.to, _this2.props);
            };

            this.spyHandler = function(y) {
              var scrollSpyContainer = _this2.getScrollSpyContainer();

              if (
                _scrollHash2.default.isMounted() &&
                !_scrollHash2.default.isInitialized()
              ) {
                return;
              }

              var to = _this2.props.to;
              var element = null;
              var elemTopBound = 0;
              var elemBottomBound = 0;
              var containerTop = 0;

              if (scrollSpyContainer.getBoundingClientRect) {
                var containerCords = scrollSpyContainer.getBoundingClientRect();
                containerTop = containerCords.top;
              }

              if (!element || _this2.props.isDynamic) {
                element = scroller.get(to);
                if (!element) {
                  return;
                }

                var cords = element.getBoundingClientRect();
                elemTopBound = cords.top - containerTop + y;
                elemBottomBound = elemTopBound + cords.height;
              }

              var offsetY = y - _this2.props.offset;
              var isInside =
                offsetY >= Math.floor(elemTopBound) &&
                offsetY < Math.floor(elemBottomBound);
              var isOutside =
                offsetY < Math.floor(elemTopBound) ||
                offsetY >= Math.floor(elemBottomBound);
              var activeLink = scroller.getActiveLink();

              if (isOutside) {
                if (to === activeLink) {
                  scroller.setActiveLink(void 0);
                }

                if (
                  _this2.props.hashSpy &&
                  _scrollHash2.default.getHash() === to
                ) {
                  _scrollHash2.default.changeHash();
                }

                if (_this2.props.spy && _this2.state.active) {
                  _this2.setState({ active: false });
                  _this2.props.onSetInactive &&
                    _this2.props.onSetInactive(to, element);
                }
              }

              if (
                isInside &&
                (activeLink !== to || _this2.state.active === false)
              ) {
                scroller.setActiveLink(to);

                _this2.props.hashSpy && _scrollHash2.default.changeHash(to);

                if (_this2.props.spy) {
                  _this2.setState({ active: true });
                  _this2.props.onSetActive &&
                    _this2.props.onSetActive(to, element);
                }
              }
            };
          };

          Link.propTypes = protoTypes;

          Link.defaultProps = { offset: 0 };

          return Link;
        };

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/scroll-spy.js":
      /*!****************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/scroll-spy.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _lodash = __webpack_require__(
          /*! lodash.throttle */ "./node_modules/lodash.throttle/index.js",
        );

        var _lodash2 = _interopRequireDefault(_lodash);

        var _passiveEventListeners = __webpack_require__(
          /*! ./passive-event-listeners */ "./node_modules/react-scroll/modules/mixins/passive-event-listeners.js",
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // The eventHandler will execute at a rate of 15fps
        var eventThrottler = function eventThrottler(eventHandler) {
          return (0, _lodash2.default)(eventHandler, 66);
        };

        var scrollSpy = {
          spyCallbacks: [],
          spySetState: [],
          scrollSpyContainers: [],

          mount: function mount(scrollSpyContainer) {
            if (scrollSpyContainer) {
              var eventHandler = eventThrottler(function(event) {
                scrollSpy.scrollHandler(scrollSpyContainer);
              });
              scrollSpy.scrollSpyContainers.push(scrollSpyContainer);
              (0, _passiveEventListeners.addPassiveEventListener)(
                scrollSpyContainer,
                "scroll",
                eventHandler,
              );
            }
          },
          isMounted: function isMounted(scrollSpyContainer) {
            return (
              scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer) !== -1
            );
          },
          currentPositionY: function currentPositionY(scrollSpyContainer) {
            if (scrollSpyContainer === document) {
              var supportPageOffset = window.pageXOffset !== undefined;
              var isCSS1Compat = (document.compatMode || "") === "CSS1Compat";
              return supportPageOffset
                ? window.pageYOffset
                : isCSS1Compat
                ? document.documentElement.scrollTop
                : document.body.scrollTop;
            } else {
              return scrollSpyContainer.scrollTop;
            }
          },
          scrollHandler: function scrollHandler(scrollSpyContainer) {
            var callbacks =
              scrollSpy.scrollSpyContainers[
                scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)
              ].spyCallbacks || [];
            callbacks.forEach(function(c) {
              return c(scrollSpy.currentPositionY(scrollSpyContainer));
            });
          },
          addStateHandler: function addStateHandler(handler) {
            scrollSpy.spySetState.push(handler);
          },
          addSpyHandler: function addSpyHandler(handler, scrollSpyContainer) {
            var container =
              scrollSpy.scrollSpyContainers[
                scrollSpy.scrollSpyContainers.indexOf(scrollSpyContainer)
              ];

            if (!container.spyCallbacks) {
              container.spyCallbacks = [];
            }

            container.spyCallbacks.push(handler);

            handler(scrollSpy.currentPositionY(scrollSpyContainer));
          },
          updateStates: function updateStates() {
            scrollSpy.spySetState.forEach(function(s) {
              return s();
            });
          },
          unmount: function unmount(stateHandler, spyHandler) {
            scrollSpy.scrollSpyContainers.forEach(function(c) {
              return (
                c.spyCallbacks &&
                c.spyCallbacks.length &&
                c.spyCallbacks.splice(c.spyCallbacks.indexOf(spyHandler), 1)
              );
            });

            if (scrollSpy.spySetState && scrollSpy.spySetState.length) {
              scrollSpy.spySetState.splice(
                scrollSpy.spySetState.indexOf(stateHandler),
                1,
              );
            }

            document.removeEventListener("scroll", scrollSpy.scrollHandler);
          },

          update: function update() {
            return scrollSpy.scrollSpyContainers.forEach(function(c) {
              return scrollSpy.scrollHandler(c);
            });
          },
        };

        exports.default = scrollSpy;

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/scroller.js":
      /*!**************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/scroller.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });

        var _extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _utils = __webpack_require__(
          /*! ./utils */ "./node_modules/react-scroll/modules/mixins/utils.js",
        );

        var _utils2 = _interopRequireDefault(_utils);

        var _animateScroll = __webpack_require__(
          /*! ./animate-scroll */ "./node_modules/react-scroll/modules/mixins/animate-scroll.js",
        );

        var _animateScroll2 = _interopRequireDefault(_animateScroll);

        var _scrollEvents = __webpack_require__(
          /*! ./scroll-events */ "./node_modules/react-scroll/modules/mixins/scroll-events.js",
        );

        var _scrollEvents2 = _interopRequireDefault(_scrollEvents);

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var __mapped = {};
        var __activeLink = void 0;

        exports.default = {
          unmount: function unmount() {
            __mapped = {};
          },

          register: function register(name, element) {
            __mapped[name] = element;
          },

          unregister: function unregister(name) {
            delete __mapped[name];
          },

          get: function get(name) {
            return (
              __mapped[name] ||
              document.getElementById(name) ||
              document.getElementsByName(name)[0] ||
              document.getElementsByClassName(name)[0]
            );
          },

          setActiveLink: function setActiveLink(link) {
            return (__activeLink = link);
          },

          getActiveLink: function getActiveLink() {
            return __activeLink;
          },

          scrollTo: function scrollTo(to, props) {
            var target = this.get(to);

            if (!target) {
              console.warn("target Element not found");
              return;
            }

            props = _extends({}, props, { absolute: false });

            var containerId = props.containerId;
            var container = props.container;

            var containerElement = void 0;
            if (containerId) {
              containerElement = document.getElementById(containerId);
            } else if (container && container.nodeType) {
              containerElement = container;
            } else {
              containerElement = document;
            }

            if (_scrollEvents2.default.registered.begin) {
              _scrollEvents2.default.registered.begin(to, target);
            }

            props.absolute = true;

            var scrollOffset =
              _utils2.default.scrollOffset(containerElement, target) +
              (props.offset || 0);

            /*
             * if animate is not provided just scroll into the view
             */
            if (!props.smooth) {
              if (containerElement === document) {
                window.scrollTo(0, scrollOffset);
              } else {
                containerElement.scrollTop = scrollOffset;
              }

              if (_scrollEvents2.default.registered["end"]) {
                _scrollEvents2.default.registered["end"](to, target);
              }

              return;
            }

            /*
             * Animate scrolling
             */

            _animateScroll2.default.animateTopScroll(
              scrollOffset,
              props,
              to,
              target,
            );
          },
        };

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/smooth.js":
      /*!************************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/smooth.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = {
          /*
           * https://github.com/oblador/angular-scroll (duScrollDefaultEasing)
           */
          defaultEasing: function defaultEasing(x) {
            if (x < 0.5) {
              return Math.pow(x * 2, 2) / 2;
            }
            return 1 - Math.pow((1 - x) * 2, 2) / 2;
          },
          /*
           * https://gist.github.com/gre/1650294
           */
          // no easing, no acceleration
          linear: function linear(x) {
            return x;
          },
          // accelerating from zero velocity
          easeInQuad: function easeInQuad(x) {
            return x * x;
          },
          // decelerating to zero velocity
          easeOutQuad: function easeOutQuad(x) {
            return x * (2 - x);
          },
          // acceleration until halfway, then deceleration
          easeInOutQuad: function easeInOutQuad(x) {
            return x < 0.5 ? 2 * x * x : -1 + (4 - 2 * x) * x;
          },
          // accelerating from zero velocity
          easeInCubic: function easeInCubic(x) {
            return x * x * x;
          },
          // decelerating to zero velocity π
          easeOutCubic: function easeOutCubic(x) {
            return --x * x * x + 1;
          },
          // acceleration until halfway, then deceleration
          easeInOutCubic: function easeInOutCubic(x) {
            return x < 0.5
              ? 4 * x * x * x
              : (x - 1) * (2 * x - 2) * (2 * x - 2) + 1;
          },
          // accelerating from zero velocity
          easeInQuart: function easeInQuart(x) {
            return x * x * x * x;
          },
          // decelerating to zero velocity
          easeOutQuart: function easeOutQuart(x) {
            return 1 - --x * x * x * x;
          },
          // acceleration until halfway, then deceleration
          easeInOutQuart: function easeInOutQuart(x) {
            return x < 0.5 ? 8 * x * x * x * x : 1 - 8 * --x * x * x * x;
          },
          // accelerating from zero velocity
          easeInQuint: function easeInQuint(x) {
            return x * x * x * x * x;
          },
          // decelerating to zero velocity
          easeOutQuint: function easeOutQuint(x) {
            return 1 + --x * x * x * x * x;
          },
          // acceleration until halfway, then deceleration
          easeInOutQuint: function easeInOutQuint(x) {
            return x < 0.5
              ? 16 * x * x * x * x * x
              : 1 + 16 * --x * x * x * x * x;
          },
        };

        /***/
      },

    /***/ "./node_modules/react-scroll/modules/mixins/utils.js":
      /*!***********************************************************!*\
  !*** ./node_modules/react-scroll/modules/mixins/utils.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        var pushHash = function pushHash(hash) {
          hash = hash ? (hash.indexOf("#") === 0 ? hash : "#" + hash) : "";

          if (history.pushState) {
            var loc = window.location;
            history.pushState(
              null,
              null,
              hash
                ? loc.pathname + loc.search + hash
                : // remove hash
                  loc.pathname + loc.search,
            );
          } else {
            location.hash = hash;
          }
        };

        var getHash = function getHash() {
          return window.location.hash.replace(/^#/, "");
        };

        var filterElementInContainer = function filterElementInContainer(
          container,
        ) {
          return function(element) {
            return container.contains
              ? container != element && container.contains(element)
              : !!(container.compareDocumentPosition(element) & 16);
          };
        };

        var scrollOffset = function scrollOffset(c, t) {
          return c === document
            ? t.getBoundingClientRect().top +
                (window.scrollY || window.pageYOffset)
            : getComputedStyle(c).position !== "static"
            ? t.offsetTop
            : t.getBoundingClientRect().top + c.scrollTop;
        };

        exports.default = {
          pushHash: pushHash,
          getHash: getHash,
          filterElementInContainer: filterElementInContainer,
          scrollOffset: scrollOffset,
        };

        /***/
      },

    /***/ "./node_modules/react-transition-group/CSSTransition.js":
      /*!**************************************************************!*\
  !*** ./node_modules/react-transition-group/CSSTransition.js ***!
  \**************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;
        exports.default = void 0;

        var PropTypes = _interopRequireWildcard(
          __webpack_require__(
            /*! prop-types */ "./node_modules/prop-types/index.js",
          ),
        );

        var _addClass = _interopRequireDefault(
          __webpack_require__(
            /*! dom-helpers/class/addClass */ "./node_modules/dom-helpers/class/addClass.js",
          ),
        );

        var _removeClass = _interopRequireDefault(
          __webpack_require__(
            /*! dom-helpers/class/removeClass */ "./node_modules/dom-helpers/class/removeClass.js",
          ),
        );

        var _react = _interopRequireDefault(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        var _Transition = _interopRequireDefault(
          __webpack_require__(
            /*! ./Transition */ "./node_modules/react-transition-group/Transition.js",
          ),
        );

        var _PropTypes = __webpack_require__(
          /*! ./utils/PropTypes */ "./node_modules/react-transition-group/utils/PropTypes.js",
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  var desc =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(obj, key)
                      : {};
                  if (desc.get || desc.set) {
                    Object.defineProperty(newObj, key, desc);
                  } else {
                    newObj[key] = obj[key];
                  }
                }
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        function _extends() {
          _extends =
            Object.assign ||
            function(target) {
              for (var i = 1; i < arguments.length; i++) {
                var source = arguments[i];
                for (var key in source) {
                  if (Object.prototype.hasOwnProperty.call(source, key)) {
                    target[key] = source[key];
                  }
                }
              }
              return target;
            };
          return _extends.apply(this, arguments);
        }

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        var addClass = function addClass(node, classes) {
          return (
            node &&
            classes &&
            classes.split(" ").forEach(function(c) {
              return (0, _addClass.default)(node, c);
            })
          );
        };

        var removeClass = function removeClass(node, classes) {
          return (
            node &&
            classes &&
            classes.split(" ").forEach(function(c) {
              return (0, _removeClass.default)(node, c);
            })
          );
        };
        /**
         * A transition component inspired by the excellent
         * [ng-animate](http://www.nganimate.org/) library, you should use it if you're
         * using CSS transitions or animations. It's built upon the
         * [`Transition`](https://reactcommunity.org/react-transition-group/transition)
         * component, so it inherits all of its props.
         *
         * `CSSTransition` applies a pair of class names during the `appear`, `enter`,
         * and `exit` states of the transition. The first class is applied and then a
         * second `*-active` class in order to activate the CSSS transition. After the
         * transition, matching `*-done` class names are applied to persist the
         * transition state.
         *
         * ```jsx
         * function App() {
         *   const [inProp, setInProp] = useState(false);
         *   return (
         *     <div>
         *       <CSSTransition in={inProp} timeout={200} classNames="my-node">
         *         <div>
         *           {"I'll receive my-node-* classes"}
         *         </div>
         *       </CSSTransition>
         *       <button type="button" onClick={() => setInProp(true)}>
         *         Click to Enter
         *       </button>
         *     </div>
         *   );
         * }
         * ```
         *
         * When the `in` prop is set to `true`, the child component will first receive
         * the class `example-enter`, then the `example-enter-active` will be added in
         * the next tick. `CSSTransition` [forces a
         * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)
         * between before adding the `example-enter-active`. This is an important trick
         * because it allows us to transition between `example-enter` and
         * `example-enter-active` even though they were added immediately one after
         * another. Most notably, this is what makes it possible for us to animate
         * _appearance_.
         *
         * ```css
         * .my-node-enter {
         *   opacity: 0;
         * }
         * .my-node-enter-active {
         *   opacity: 1;
         *   transition: opacity 200ms;
         * }
         * .my-node-exit {
         *   opacity: 1;
         * }
         * .my-node-exit-active {
         *   opacity: 0;
         *   transition: opacity: 200ms;
         * }
         * ```
         *
         * `*-active` classes represent which styles you want to animate **to**.
         */

        var CSSTransition =
          /*#__PURE__*/
          (function(_React$Component) {
            _inheritsLoose(CSSTransition, _React$Component);

            function CSSTransition() {
              var _this;

              for (
                var _len = arguments.length, args = new Array(_len), _key = 0;
                _key < _len;
                _key++
              ) {
                args[_key] = arguments[_key];
              }

              _this =
                _React$Component.call.apply(
                  _React$Component,
                  [this].concat(args),
                ) || this;

              _this.onEnter = function(node, appearing) {
                var _this$getClassNames = _this.getClassNames(
                    appearing ? "appear" : "enter",
                  ),
                  className = _this$getClassNames.className;

                _this.removeClasses(node, "exit");

                addClass(node, className);

                if (_this.props.onEnter) {
                  _this.props.onEnter(node, appearing);
                }
              };

              _this.onEntering = function(node, appearing) {
                var _this$getClassNames2 = _this.getClassNames(
                    appearing ? "appear" : "enter",
                  ),
                  activeClassName = _this$getClassNames2.activeClassName;

                _this.reflowAndAddClass(node, activeClassName);

                if (_this.props.onEntering) {
                  _this.props.onEntering(node, appearing);
                }
              };

              _this.onEntered = function(node, appearing) {
                var appearClassName = _this.getClassNames("appear")
                  .doneClassName;

                var enterClassName = _this.getClassNames("enter").doneClassName;

                var doneClassName = appearing
                  ? appearClassName + " " + enterClassName
                  : enterClassName;

                _this.removeClasses(node, appearing ? "appear" : "enter");

                addClass(node, doneClassName);

                if (_this.props.onEntered) {
                  _this.props.onEntered(node, appearing);
                }
              };

              _this.onExit = function(node) {
                var _this$getClassNames3 = _this.getClassNames("exit"),
                  className = _this$getClassNames3.className;

                _this.removeClasses(node, "appear");

                _this.removeClasses(node, "enter");

                addClass(node, className);

                if (_this.props.onExit) {
                  _this.props.onExit(node);
                }
              };

              _this.onExiting = function(node) {
                var _this$getClassNames4 = _this.getClassNames("exit"),
                  activeClassName = _this$getClassNames4.activeClassName;

                _this.reflowAndAddClass(node, activeClassName);

                if (_this.props.onExiting) {
                  _this.props.onExiting(node);
                }
              };

              _this.onExited = function(node) {
                var _this$getClassNames5 = _this.getClassNames("exit"),
                  doneClassName = _this$getClassNames5.doneClassName;

                _this.removeClasses(node, "exit");

                addClass(node, doneClassName);

                if (_this.props.onExited) {
                  _this.props.onExited(node);
                }
              };

              _this.getClassNames = function(type) {
                var classNames = _this.props.classNames;
                var isStringClassNames = typeof classNames === "string";
                var prefix =
                  isStringClassNames && classNames ? classNames + "-" : "";
                var className = isStringClassNames
                  ? prefix + type
                  : classNames[type];
                var activeClassName = isStringClassNames
                  ? className + "-active"
                  : classNames[type + "Active"];
                var doneClassName = isStringClassNames
                  ? className + "-done"
                  : classNames[type + "Done"];
                return {
                  className: className,
                  activeClassName: activeClassName,
                  doneClassName: doneClassName,
                };
              };

              return _this;
            }

            var _proto = CSSTransition.prototype;

            _proto.removeClasses = function removeClasses(node, type) {
              var _this$getClassNames6 = this.getClassNames(type),
                className = _this$getClassNames6.className,
                activeClassName = _this$getClassNames6.activeClassName,
                doneClassName = _this$getClassNames6.doneClassName;

              className && removeClass(node, className);
              activeClassName && removeClass(node, activeClassName);
              doneClassName && removeClass(node, doneClassName);
            };

            _proto.reflowAndAddClass = function reflowAndAddClass(
              node,
              className,
            ) {
              // This is for to force a repaint,
              // which is necessary in order to transition styles when adding a class name.
              if (className) {
                /* eslint-disable no-unused-expressions */
                node && node.scrollTop;
                /* eslint-enable no-unused-expressions */

                addClass(node, className);
              }
            };

            _proto.render = function render() {
              var props = _extends({}, this.props);

              delete props.classNames;
              return _react.default.createElement(
                _Transition.default,
                _extends({}, props, {
                  onEnter: this.onEnter,
                  onEntered: this.onEntered,
                  onEntering: this.onEntering,
                  onExit: this.onExit,
                  onExiting: this.onExiting,
                  onExited: this.onExited,
                }),
              );
            };

            return CSSTransition;
          })(_react.default.Component);

        CSSTransition.defaultProps = {
          classNames: "",
        };
        CSSTransition.propTypes = true
          ? _extends({}, _Transition.default.propTypes, {
              /**
               * The animation classNames applied to the component as it enters, exits or
               * has finished the transition. A single name can be provided and it will be
               * suffixed for each stage: e.g.
               *
               * `classNames="fade"` applies `fade-enter`, `fade-enter-active`,
               * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,
               * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.
               *
               * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.
               * This allows you to define different behavior for when appearing is done and
               * when regular entering is done, using selectors like
               * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an
               * epic entrance animation when element first appears in the DOM using
               * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
               * simply use `fade-enter-done` for defining both cases.
               *
               * Each individual classNames can also be specified independently like:
               *
               * ```js
               * classNames={{
               *  appear: 'my-appear',
               *  appearActive: 'my-active-appear',
               *  appearDone: 'my-done-appear',
               *  enter: 'my-enter',
               *  enterActive: 'my-active-enter',
               *  enterDone: 'my-done-enter',
               *  exit: 'my-exit',
               *  exitActive: 'my-active-exit',
               *  exitDone: 'my-done-exit',
               * }}
               * ```
               *
               * If you want to set these classes using CSS Modules:
               *
               * ```js
               * import styles from './styles.css';
               * ```
               *
               * you might want to use camelCase in your CSS file, that way could simply
               * spread them instead of listing them one by one:
               *
               * ```js
               * classNames={{ ...styles }}
               * ```
               *
               * @type {string | {
               *  appear?: string,
               *  appearActive?: string,
               *  appearDone?: string,
               *  enter?: string,
               *  enterActive?: string,
               *  enterDone?: string,
               *  exit?: string,
               *  exitActive?: string,
               *  exitDone?: string,
               * }}
               */
              classNames: _PropTypes.classNamesShape,

              /**
               * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
               * applied.
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEnter: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'enter-active' or
               * 'appear-active' class is applied.
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEntering: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'enter' or
               * 'appear' classes are **removed** and the `done` class is added to the DOM node.
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEntered: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'exit' class is
               * applied.
               *
               * @type Function(node: HtmlElement)
               */
              onExit: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
               *
               * @type Function(node: HtmlElement)
               */
              onExiting: PropTypes.func,

              /**
               * A `<Transition>` callback fired immediately after the 'exit' classes
               * are **removed** and the `exit-done` class is added to the DOM node.
               *
               * @type Function(node: HtmlElement)
               */
              onExited: PropTypes.func,
            })
          : undefined;
        var _default = CSSTransition;
        exports.default = _default;
        module.exports = exports["default"];

        /***/
      },

    /***/ "./node_modules/react-transition-group/Transition.js":
      /*!***********************************************************!*\
  !*** ./node_modules/react-transition-group/Transition.js ***!
  \***********************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;
        exports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;

        var PropTypes = _interopRequireWildcard(
          __webpack_require__(
            /*! prop-types */ "./node_modules/prop-types/index.js",
          ),
        );

        var _react = _interopRequireDefault(
          __webpack_require__(/*! react */ "./node_modules/react/index.js"),
        );

        var _reactDom = _interopRequireDefault(
          __webpack_require__(
            /*! react-dom */ "./node_modules/react-dom/index.js",
          ),
        );

        var _reactLifecyclesCompat = __webpack_require__(
          /*! react-lifecycles-compat */ "./node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js",
        );

        var _PropTypes = __webpack_require__(
          /*! ./utils/PropTypes */ "./node_modules/react-transition-group/utils/PropTypes.js",
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function _interopRequireWildcard(obj) {
          if (obj && obj.__esModule) {
            return obj;
          } else {
            var newObj = {};
            if (obj != null) {
              for (var key in obj) {
                if (Object.prototype.hasOwnProperty.call(obj, key)) {
                  var desc =
                    Object.defineProperty && Object.getOwnPropertyDescriptor
                      ? Object.getOwnPropertyDescriptor(obj, key)
                      : {};
                  if (desc.get || desc.set) {
                    Object.defineProperty(newObj, key, desc);
                  } else {
                    newObj[key] = obj[key];
                  }
                }
              }
            }
            newObj.default = obj;
            return newObj;
          }
        }

        function _objectWithoutPropertiesLoose(source, excluded) {
          if (source == null) return {};
          var target = {};
          var sourceKeys = Object.keys(source);
          var key, i;
          for (i = 0; i < sourceKeys.length; i++) {
            key = sourceKeys[i];
            if (excluded.indexOf(key) >= 0) continue;
            target[key] = source[key];
          }
          return target;
        }

        function _inheritsLoose(subClass, superClass) {
          subClass.prototype = Object.create(superClass.prototype);
          subClass.prototype.constructor = subClass;
          subClass.__proto__ = superClass;
        }

        var UNMOUNTED = "unmounted";
        exports.UNMOUNTED = UNMOUNTED;
        var EXITED = "exited";
        exports.EXITED = EXITED;
        var ENTERING = "entering";
        exports.ENTERING = ENTERING;
        var ENTERED = "entered";
        exports.ENTERED = ENTERED;
        var EXITING = "exiting";
        /**
         * The Transition component lets you describe a transition from one component
         * state to another _over time_ with a simple declarative API. Most commonly
         * it's used to animate the mounting and unmounting of a component, but can also
         * be used to describe in-place transition states as well.
         *
         * ---
         *
         * **Note**: `Transition` is a platform-agnostic base component. If you're using
         * transitions in CSS, you'll probably want to use
         * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
         * instead. It inherits all the features of `Transition`, but contains
         * additional features necessary to play nice with CSS transitions (hence the
         * name of the component).
         *
         * ---
         *
         * By default the `Transition` component does not alter the behavior of the
         * component it renders, it only tracks "enter" and "exit" states for the
         * components. It's up to you to give meaning and effect to those states. For
         * example we can add styles to a component when it enters or exits:
         *
         * ```jsx
         * import { Transition } from 'react-transition-group';
         *
         * const duration = 300;
         *
         * const defaultStyle = {
         *   transition: `opacity ${duration}ms ease-in-out`,
         *   opacity: 0,
         * }
         *
         * const transitionStyles = {
         *   entering: { opacity: 0 },
         *   entered:  { opacity: 1 },
         * };
         *
         * const Fade = ({ in: inProp }) => (
         *   <Transition in={inProp} timeout={duration}>
         *     {state => (
         *       <div style={{
         *         ...defaultStyle,
         *         ...transitionStyles[state]
         *       }}>
         *         I'm a fade Transition!
         *       </div>
         *     )}
         *   </Transition>
         * );
         * ```
         *
         * There are 4 main states a Transition can be in:
         *  - `'entering'`
         *  - `'entered'`
         *  - `'exiting'`
         *  - `'exited'`
         *
         * Transition state is toggled via the `in` prop. When `true` the component
         * begins the "Enter" stage. During this stage, the component will shift from
         * its current transition state, to `'entering'` for the duration of the
         * transition and then to the `'entered'` stage once it's complete. Let's take
         * the following example (we'll use the
         * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
         *
         * ```jsx
         * function App() {
         *   const [inProp, setInProp] = useState(false);
         *   return (
         *     <div>
         *       <Transition in={inProp} timeout={500}>
         *         {state => (
         *           // ...
         *         )}
         *       </Transition>
         *       <button onClick={() => setInProp(true)}>
         *         Click to Enter
         *       </button>
         *     </div>
         *   );
         * }
         * ```
         *
         * When the button is clicked the component will shift to the `'entering'` state
         * and stay there for 500ms (the value of `timeout`) before it finally switches
         * to `'entered'`.
         *
         * When `in` is `false` the same thing happens except the state moves from
         * `'exiting'` to `'exited'`.
         */

        exports.EXITING = EXITING;

        var Transition =
          /*#__PURE__*/
          (function(_React$Component) {
            _inheritsLoose(Transition, _React$Component);

            function Transition(props, context) {
              var _this;

              _this = _React$Component.call(this, props, context) || this;
              var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears

              var appear =
                parentGroup && !parentGroup.isMounting
                  ? props.enter
                  : props.appear;
              var initialStatus;
              _this.appearStatus = null;

              if (props.in) {
                if (appear) {
                  initialStatus = EXITED;
                  _this.appearStatus = ENTERING;
                } else {
                  initialStatus = ENTERED;
                }
              } else {
                if (props.unmountOnExit || props.mountOnEnter) {
                  initialStatus = UNMOUNTED;
                } else {
                  initialStatus = EXITED;
                }
              }

              _this.state = {
                status: initialStatus,
              };
              _this.nextCallback = null;
              return _this;
            }

            var _proto = Transition.prototype;

            _proto.getChildContext = function getChildContext() {
              return {
                transitionGroup: null, // allows for nested Transitions
              };
            };

            Transition.getDerivedStateFromProps = function getDerivedStateFromProps(
              _ref,
              prevState,
            ) {
              var nextIn = _ref.in;

              if (nextIn && prevState.status === UNMOUNTED) {
                return {
                  status: EXITED,
                };
              }

              return null;
            }; // getSnapshotBeforeUpdate(prevProps) {
            //   let nextStatus = null
            //   if (prevProps !== this.props) {
            //     const { status } = this.state
            //     if (this.props.in) {
            //       if (status !== ENTERING && status !== ENTERED) {
            //         nextStatus = ENTERING
            //       }
            //     } else {
            //       if (status === ENTERING || status === ENTERED) {
            //         nextStatus = EXITING
            //       }
            //     }
            //   }
            //   return { nextStatus }
            // }

            _proto.componentDidMount = function componentDidMount() {
              this.updateStatus(true, this.appearStatus);
            };

            _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
              var nextStatus = null;

              if (prevProps !== this.props) {
                var status = this.state.status;

                if (this.props.in) {
                  if (status !== ENTERING && status !== ENTERED) {
                    nextStatus = ENTERING;
                  }
                } else {
                  if (status === ENTERING || status === ENTERED) {
                    nextStatus = EXITING;
                  }
                }
              }

              this.updateStatus(false, nextStatus);
            };

            _proto.componentWillUnmount = function componentWillUnmount() {
              this.cancelNextCallback();
            };

            _proto.getTimeouts = function getTimeouts() {
              var timeout = this.props.timeout;
              var exit, enter, appear;
              exit = enter = appear = timeout;

              if (timeout != null && typeof timeout !== "number") {
                exit = timeout.exit;
                enter = timeout.enter; // TODO: remove fallback for next major

                appear = timeout.appear !== undefined ? timeout.appear : enter;
              }

              return {
                exit: exit,
                enter: enter,
                appear: appear,
              };
            };

            _proto.updateStatus = function updateStatus(mounting, nextStatus) {
              if (mounting === void 0) {
                mounting = false;
              }

              if (nextStatus !== null) {
                // nextStatus will always be ENTERING or EXITING.
                this.cancelNextCallback();

                var node = _reactDom.default.findDOMNode(this);

                if (nextStatus === ENTERING) {
                  this.performEnter(node, mounting);
                } else {
                  this.performExit(node);
                }
              } else if (
                this.props.unmountOnExit &&
                this.state.status === EXITED
              ) {
                this.setState({
                  status: UNMOUNTED,
                });
              }
            };

            _proto.performEnter = function performEnter(node, mounting) {
              var _this2 = this;

              var enter = this.props.enter;
              var appearing = this.context.transitionGroup
                ? this.context.transitionGroup.isMounting
                : mounting;
              var timeouts = this.getTimeouts();
              var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED
              // if we are mounting and running this it means appear _must_ be set

              if (!mounting && !enter) {
                this.safeSetState(
                  {
                    status: ENTERED,
                  },
                  function() {
                    _this2.props.onEntered(node);
                  },
                );
                return;
              }

              this.props.onEnter(node, appearing);
              this.safeSetState(
                {
                  status: ENTERING,
                },
                function() {
                  _this2.props.onEntering(node, appearing);

                  _this2.onTransitionEnd(node, enterTimeout, function() {
                    _this2.safeSetState(
                      {
                        status: ENTERED,
                      },
                      function() {
                        _this2.props.onEntered(node, appearing);
                      },
                    );
                  });
                },
              );
            };

            _proto.performExit = function performExit(node) {
              var _this3 = this;

              var exit = this.props.exit;
              var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED

              if (!exit) {
                this.safeSetState(
                  {
                    status: EXITED,
                  },
                  function() {
                    _this3.props.onExited(node);
                  },
                );
                return;
              }

              this.props.onExit(node);
              this.safeSetState(
                {
                  status: EXITING,
                },
                function() {
                  _this3.props.onExiting(node);

                  _this3.onTransitionEnd(node, timeouts.exit, function() {
                    _this3.safeSetState(
                      {
                        status: EXITED,
                      },
                      function() {
                        _this3.props.onExited(node);
                      },
                    );
                  });
                },
              );
            };

            _proto.cancelNextCallback = function cancelNextCallback() {
              if (this.nextCallback !== null) {
                this.nextCallback.cancel();
                this.nextCallback = null;
              }
            };

            _proto.safeSetState = function safeSetState(nextState, callback) {
              // This shouldn't be necessary, but there are weird race conditions with
              // setState callbacks and unmounting in testing, so always make sure that
              // we can cancel any pending setState callbacks after we unmount.
              callback = this.setNextCallback(callback);
              this.setState(nextState, callback);
            };

            _proto.setNextCallback = function setNextCallback(callback) {
              var _this4 = this;

              var active = true;

              this.nextCallback = function(event) {
                if (active) {
                  active = false;
                  _this4.nextCallback = null;
                  callback(event);
                }
              };

              this.nextCallback.cancel = function() {
                active = false;
              };

              return this.nextCallback;
            };

            _proto.onTransitionEnd = function onTransitionEnd(
              node,
              timeout,
              handler,
            ) {
              this.setNextCallback(handler);
              var doesNotHaveTimeoutOrListener =
                timeout == null && !this.props.addEndListener;

              if (!node || doesNotHaveTimeoutOrListener) {
                setTimeout(this.nextCallback, 0);
                return;
              }

              if (this.props.addEndListener) {
                this.props.addEndListener(node, this.nextCallback);
              }

              if (timeout != null) {
                setTimeout(this.nextCallback, timeout);
              }
            };

            _proto.render = function render() {
              var status = this.state.status;

              if (status === UNMOUNTED) {
                return null;
              }

              var _this$props = this.props,
                children = _this$props.children,
                childProps = _objectWithoutPropertiesLoose(_this$props, [
                  "children",
                ]); // filter props for Transtition

              delete childProps.in;
              delete childProps.mountOnEnter;
              delete childProps.unmountOnExit;
              delete childProps.appear;
              delete childProps.enter;
              delete childProps.exit;
              delete childProps.timeout;
              delete childProps.addEndListener;
              delete childProps.onEnter;
              delete childProps.onEntering;
              delete childProps.onEntered;
              delete childProps.onExit;
              delete childProps.onExiting;
              delete childProps.onExited;

              if (typeof children === "function") {
                return children(status, childProps);
              }

              var child = _react.default.Children.only(children);

              return _react.default.cloneElement(child, childProps);
            };

            return Transition;
          })(_react.default.Component);

        Transition.contextTypes = {
          transitionGroup: PropTypes.object,
        };
        Transition.childContextTypes = {
          transitionGroup: function transitionGroup() {},
        };
        Transition.propTypes = true
          ? {
              /**
               * A `function` child can be used instead of a React element. This function is
               * called with the current transition status (`'entering'`, `'entered'`,
               * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context
               * specific props to a component.
               *
               * ```jsx
               * <Transition in={this.state.in} timeout={150}>
               *   {state => (
               *     <MyComponent className={`fade fade-${state}`} />
               *   )}
               * </Transition>
               * ```
               */
              children: PropTypes.oneOfType([
                PropTypes.func.isRequired,
                PropTypes.element.isRequired,
              ]).isRequired,

              /**
               * Show the component; triggers the enter or exit states
               */
              in: PropTypes.bool,

              /**
               * By default the child component is mounted immediately along with
               * the parent `Transition` component. If you want to "lazy mount" the component on the
               * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
               * mounted, even on "exited", unless you also specify `unmountOnExit`.
               */
              mountOnEnter: PropTypes.bool,

              /**
               * By default the child component stays mounted after it reaches the `'exited'` state.
               * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
               */
              unmountOnExit: PropTypes.bool,

              /**
               * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.
               * If you want to transition on the first mount set `appear` to `true`, and the
               * component will transition in as soon as the `<Transition>` mounts.
               *
               * > Note: there are no specific "appear" states. `appear` only adds an additional `enter` transition.
               */
              appear: PropTypes.bool,

              /**
               * Enable or disable enter transitions.
               */
              enter: PropTypes.bool,

              /**
               * Enable or disable exit transitions.
               */
              exit: PropTypes.bool,

              /**
               * The duration of the transition, in milliseconds.
               * Required unless `addEndListener` is provided.
               *
               * You may specify a single timeout for all transitions:
               *
               * ```jsx
               * timeout={500}
               * ```
               *
               * or individually:
               *
               * ```jsx
               * timeout={{
               *  appear: 500,
               *  enter: 300,
               *  exit: 500,
               * }}
               * ```
               *
               * - `appear` defaults to the value of `enter`
               * - `enter` defaults to `0`
               * - `exit` defaults to `0`
               *
               * @type {number | { enter?: number, exit?: number, appear?: number }}
               */
              timeout: function timeout(props) {
                var pt = _PropTypes.timeoutsShape;
                if (!props.addEndListener) pt = pt.isRequired;

                for (
                  var _len = arguments.length,
                    args = new Array(_len > 1 ? _len - 1 : 0),
                    _key = 1;
                  _key < _len;
                  _key++
                ) {
                  args[_key - 1] = arguments[_key];
                }

                return pt.apply(void 0, [props].concat(args));
              },

              /**
               * Add a custom transition end trigger. Called with the transitioning
               * DOM node and a `done` callback. Allows for more fine grained transition end
               * logic. **Note:** Timeouts are still used as a fallback if provided.
               *
               * ```jsx
               * addEndListener={(node, done) => {
               *   // use the css transitionend event to mark the finish of a transition
               *   node.addEventListener('transitionend', done, false);
               * }}
               * ```
               */
              addEndListener: PropTypes.func,

              /**
               * Callback fired before the "entering" status is applied. An extra parameter
               * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
               *
               * @type Function(node: HtmlElement, isAppearing: bool) -> void
               */
              onEnter: PropTypes.func,

              /**
               * Callback fired after the "entering" status is applied. An extra parameter
               * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
               *
               * @type Function(node: HtmlElement, isAppearing: bool)
               */
              onEntering: PropTypes.func,

              /**
               * Callback fired after the "entered" status is applied. An extra parameter
               * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
               *
               * @type Function(node: HtmlElement, isAppearing: bool) -> void
               */
              onEntered: PropTypes.func,

              /**
               * Callback fired before the "exiting" status is applied.
               *
               * @type Function(node: HtmlElement) -> void
               */
              onExit: PropTypes.func,

              /**
               * Callback fired after the "exiting" status is applied.
               *
               * @type Function(node: HtmlElement) -> void
               */
              onExiting: PropTypes.func,

              /**
               * Callback fired after the "exited" status is applied.
               *
               * @type Function(node: HtmlElement) -> void
               */
              onExited: PropTypes.func, // Name the function so it is clearer in the documentation
            }
          : undefined;

        function noop() {}

        Transition.defaultProps = {
          in: false,
          mountOnEnter: false,
          unmountOnExit: false,
          appear: false,
          enter: true,
          exit: true,
          onEnter: noop,
          onEntering: noop,
          onEntered: noop,
          onExit: noop,
          onExiting: noop,
          onExited: noop,
        };
        Transition.UNMOUNTED = 0;
        Transition.EXITED = 1;
        Transition.ENTERING = 2;
        Transition.ENTERED = 3;
        Transition.EXITING = 4;

        var _default = (0, _reactLifecyclesCompat.polyfill)(Transition);

        exports.default = _default;

        /***/
      },

    /***/ "./node_modules/react-transition-group/utils/PropTypes.js":
      /*!****************************************************************!*\
  !*** ./node_modules/react-transition-group/utils/PropTypes.js ***!
  \****************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        exports.__esModule = true;
        exports.classNamesShape = exports.timeoutsShape = void 0;

        var _propTypes = _interopRequireDefault(
          __webpack_require__(
            /*! prop-types */ "./node_modules/prop-types/index.js",
          ),
        );

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var timeoutsShape = true
          ? _propTypes.default.oneOfType([
              _propTypes.default.number,
              _propTypes.default.shape({
                enter: _propTypes.default.number,
                exit: _propTypes.default.number,
                appear: _propTypes.default.number,
              }).isRequired,
            ])
          : undefined;
        exports.timeoutsShape = timeoutsShape;
        var classNamesShape = true
          ? _propTypes.default.oneOfType([
              _propTypes.default.string,
              _propTypes.default.shape({
                enter: _propTypes.default.string,
                exit: _propTypes.default.string,
                active: _propTypes.default.string,
              }),
              _propTypes.default.shape({
                enter: _propTypes.default.string,
                enterDone: _propTypes.default.string,
                enterActive: _propTypes.default.string,
                exit: _propTypes.default.string,
                exitDone: _propTypes.default.string,
                exitActive: _propTypes.default.string,
              }),
            ])
          : undefined;
        exports.classNamesShape = classNamesShape;

        /***/
      },

    /***/ "./node_modules/react/index.js":
      /*!*******************************************************************************************!*\
  !*** delegated ./node_modules/react/index.js from dll-reference dll_829b10deddf10e1653a8 ***!
  \*******************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_829b10deddf10e1653a8 */ "dll-reference dll_829b10deddf10e1653a8",
        )("./node_modules/react/index.js");

        /***/
      },

    /***/ "./node_modules/regenerator-runtime/runtime-module.js":
      /*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        // This method of obtaining a reference to the global object needs to be
        // kept identical to the way it is obtained in runtime.js
        var g =
          (function() {
            return this || (typeof self === "object" && self);
          })() || Function("return this")();

        // Use `getOwnPropertyNames` because not all browsers support calling
        // `hasOwnProperty` on the global `self` object in a worker. See #183.
        var hadRuntime =
          g.regeneratorRuntime &&
          Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

        // Save the old regeneratorRuntime in case it needs to be restored later.
        var oldRuntime = hadRuntime && g.regeneratorRuntime;

        // Force reevalutation of runtime.js.
        g.regeneratorRuntime = undefined;

        module.exports = __webpack_require__(
          /*! ./runtime */ "./node_modules/regenerator-runtime/runtime.js",
        );

        if (hadRuntime) {
          // Restore the original runtime.
          g.regeneratorRuntime = oldRuntime;
        } else {
          // Remove the global property added by runtime.js.
          try {
            delete g.regeneratorRuntime;
          } catch (e) {
            g.regeneratorRuntime = undefined;
          }
        }

        /***/
      },

    /***/ "./node_modules/regenerator-runtime/runtime.js":
      /*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */

        !(function(global) {
          "use strict";

          var Op = Object.prototype;
          var hasOwn = Op.hasOwnProperty;
          var undefined; // More compressible than void 0.
          var $Symbol = typeof Symbol === "function" ? Symbol : {};
          var iteratorSymbol = $Symbol.iterator || "@@iterator";
          var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
          var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

          var inModule = typeof module === "object";
          var runtime = global.regeneratorRuntime;
          if (runtime) {
            if (inModule) {
              // If regeneratorRuntime is defined globally and we're in a module,
              // make the exports object identical to regeneratorRuntime.
              module.exports = runtime;
            }
            // Don't bother evaluating the rest of this file if the runtime was
            // already defined globally.
            return;
          }

          // Define the runtime globally (as expected by generated code) as either
          // module.exports (if we're in a module) or a new, empty object.
          runtime = global.regeneratorRuntime = inModule ? module.exports : {};

          function wrap(innerFn, outerFn, self, tryLocsList) {
            // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
            var protoGenerator =
              outerFn && outerFn.prototype instanceof Generator
                ? outerFn
                : Generator;
            var generator = Object.create(protoGenerator.prototype);
            var context = new Context(tryLocsList || []);

            // The ._invoke method unifies the implementations of the .next,
            // .throw, and .return methods.
            generator._invoke = makeInvokeMethod(innerFn, self, context);

            return generator;
          }
          runtime.wrap = wrap;

          // Try/catch helper to minimize deoptimizations. Returns a completion
          // record like context.tryEntries[i].completion. This interface could
          // have been (and was previously) designed to take a closure to be
          // invoked without arguments, but in all the cases we care about we
          // already have an existing method we want to call, so there's no need
          // to create a new function object. We can even get away with assuming
          // the method takes exactly one argument, since that happens to be true
          // in every case, so we don't have to touch the arguments object. The
          // only additional allocation required is the completion record, which
          // has a stable shape and so hopefully should be cheap to allocate.
          function tryCatch(fn, obj, arg) {
            try {
              return { type: "normal", arg: fn.call(obj, arg) };
            } catch (err) {
              return { type: "throw", arg: err };
            }
          }

          var GenStateSuspendedStart = "suspendedStart";
          var GenStateSuspendedYield = "suspendedYield";
          var GenStateExecuting = "executing";
          var GenStateCompleted = "completed";

          // Returning this object from the innerFn has the same effect as
          // breaking out of the dispatch switch statement.
          var ContinueSentinel = {};

          // Dummy constructor functions that we use as the .constructor and
          // .constructor.prototype properties for functions that return Generator
          // objects. For full spec compliance, you may wish to configure your
          // minifier not to mangle the names of these two functions.
          function Generator() {}
          function GeneratorFunction() {}
          function GeneratorFunctionPrototype() {}

          // This is a polyfill for %IteratorPrototype% for environments that
          // don't natively support it.
          var IteratorPrototype = {};
          IteratorPrototype[iteratorSymbol] = function() {
            return this;
          };

          var getProto = Object.getPrototypeOf;
          var NativeIteratorPrototype =
            getProto && getProto(getProto(values([])));
          if (
            NativeIteratorPrototype &&
            NativeIteratorPrototype !== Op &&
            hasOwn.call(NativeIteratorPrototype, iteratorSymbol)
          ) {
            // This environment has a native %IteratorPrototype%; use it instead
            // of the polyfill.
            IteratorPrototype = NativeIteratorPrototype;
          }

          var Gp = (GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(
            IteratorPrototype,
          ));
          GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
          GeneratorFunctionPrototype.constructor = GeneratorFunction;
          GeneratorFunctionPrototype[
            toStringTagSymbol
          ] = GeneratorFunction.displayName = "GeneratorFunction";

          // Helper for defining the .next, .throw, and .return methods of the
          // Iterator interface in terms of a single ._invoke method.
          function defineIteratorMethods(prototype) {
            ["next", "throw", "return"].forEach(function(method) {
              prototype[method] = function(arg) {
                return this._invoke(method, arg);
              };
            });
          }

          runtime.isGeneratorFunction = function(genFun) {
            var ctor = typeof genFun === "function" && genFun.constructor;
            return ctor
              ? ctor === GeneratorFunction ||
                  // For the native GeneratorFunction constructor, the best we can
                  // do is to check its .name property.
                  (ctor.displayName || ctor.name) === "GeneratorFunction"
              : false;
          };

          runtime.mark = function(genFun) {
            if (Object.setPrototypeOf) {
              Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
            } else {
              genFun.__proto__ = GeneratorFunctionPrototype;
              if (!(toStringTagSymbol in genFun)) {
                genFun[toStringTagSymbol] = "GeneratorFunction";
              }
            }
            genFun.prototype = Object.create(Gp);
            return genFun;
          };

          // Within the body of any async function, `await x` is transformed to
          // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
          // `hasOwn.call(value, "__await")` to determine if the yielded value is
          // meant to be awaited.
          runtime.awrap = function(arg) {
            return { __await: arg };
          };

          function AsyncIterator(generator) {
            function invoke(method, arg, resolve, reject) {
              var record = tryCatch(generator[method], generator, arg);
              if (record.type === "throw") {
                reject(record.arg);
              } else {
                var result = record.arg;
                var value = result.value;
                if (
                  value &&
                  typeof value === "object" &&
                  hasOwn.call(value, "__await")
                ) {
                  return Promise.resolve(value.__await).then(
                    function(value) {
                      invoke("next", value, resolve, reject);
                    },
                    function(err) {
                      invoke("throw", err, resolve, reject);
                    },
                  );
                }

                return Promise.resolve(value).then(
                  function(unwrapped) {
                    // When a yielded Promise is resolved, its final value becomes
                    // the .value of the Promise<{value,done}> result for the
                    // current iteration.
                    result.value = unwrapped;
                    resolve(result);
                  },
                  function(error) {
                    // If a rejected Promise was yielded, throw the rejection back
                    // into the async generator function so it can be handled there.
                    return invoke("throw", error, resolve, reject);
                  },
                );
              }
            }

            var previousPromise;

            function enqueue(method, arg) {
              function callInvokeWithMethodAndArg() {
                return new Promise(function(resolve, reject) {
                  invoke(method, arg, resolve, reject);
                });
              }

              return (previousPromise =
                // If enqueue has been called before, then we want to wait until
                // all previous Promises have been resolved before calling invoke,
                // so that results are always delivered in the correct order. If
                // enqueue has not been called before, then it is important to
                // call invoke immediately, without waiting on a callback to fire,
                // so that the async generator function has the opportunity to do
                // any necessary setup in a predictable way. This predictability
                // is why the Promise constructor synchronously invokes its
                // executor callback, and why async functions synchronously
                // execute code before the first await. Since we implement simple
                // async functions in terms of async generators, it is especially
                // important to get this right, even though it requires care.
                previousPromise
                  ? previousPromise.then(
                      callInvokeWithMethodAndArg,
                      // Avoid propagating failures to Promises returned by later
                      // invocations of the iterator.
                      callInvokeWithMethodAndArg,
                    )
                  : callInvokeWithMethodAndArg());
            }

            // Define the unified helper method that is used to implement .next,
            // .throw, and .return (see defineIteratorMethods).
            this._invoke = enqueue;
          }

          defineIteratorMethods(AsyncIterator.prototype);
          AsyncIterator.prototype[asyncIteratorSymbol] = function() {
            return this;
          };
          runtime.AsyncIterator = AsyncIterator;

          // Note that simple async functions are implemented on top of
          // AsyncIterator objects; they just return a Promise for the value of
          // the final result produced by the iterator.
          runtime.async = function(innerFn, outerFn, self, tryLocsList) {
            var iter = new AsyncIterator(
              wrap(innerFn, outerFn, self, tryLocsList),
            );

            return runtime.isGeneratorFunction(outerFn)
              ? iter // If outerFn is a generator, return the full iterator.
              : iter.next().then(function(result) {
                  return result.done ? result.value : iter.next();
                });
          };

          function makeInvokeMethod(innerFn, self, context) {
            var state = GenStateSuspendedStart;

            return function invoke(method, arg) {
              if (state === GenStateExecuting) {
                throw new Error("Generator is already running");
              }

              if (state === GenStateCompleted) {
                if (method === "throw") {
                  throw arg;
                }

                // Be forgiving, per 25.3.3.3.3 of the spec:
                // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
                return doneResult();
              }

              context.method = method;
              context.arg = arg;

              while (true) {
                var delegate = context.delegate;
                if (delegate) {
                  var delegateResult = maybeInvokeDelegate(delegate, context);
                  if (delegateResult) {
                    if (delegateResult === ContinueSentinel) continue;
                    return delegateResult;
                  }
                }

                if (context.method === "next") {
                  // Setting context._sent for legacy support of Babel's
                  // function.sent implementation.
                  context.sent = context._sent = context.arg;
                } else if (context.method === "throw") {
                  if (state === GenStateSuspendedStart) {
                    state = GenStateCompleted;
                    throw context.arg;
                  }

                  context.dispatchException(context.arg);
                } else if (context.method === "return") {
                  context.abrupt("return", context.arg);
                }

                state = GenStateExecuting;

                var record = tryCatch(innerFn, self, context);
                if (record.type === "normal") {
                  // If an exception is thrown from innerFn, we leave state ===
                  // GenStateExecuting and loop back for another invocation.
                  state = context.done
                    ? GenStateCompleted
                    : GenStateSuspendedYield;

                  if (record.arg === ContinueSentinel) {
                    continue;
                  }

                  return {
                    value: record.arg,
                    done: context.done,
                  };
                } else if (record.type === "throw") {
                  state = GenStateCompleted;
                  // Dispatch the exception by looping back around to the
                  // context.dispatchException(context.arg) call above.
                  context.method = "throw";
                  context.arg = record.arg;
                }
              }
            };
          }

          // Call delegate.iterator[context.method](context.arg) and handle the
          // result, either by returning a { value, done } result from the
          // delegate iterator, or by modifying context.method and context.arg,
          // setting context.delegate to null, and returning the ContinueSentinel.
          function maybeInvokeDelegate(delegate, context) {
            var method = delegate.iterator[context.method];
            if (method === undefined) {
              // A .throw or .return when the delegate iterator has no .throw
              // method always terminates the yield* loop.
              context.delegate = null;

              if (context.method === "throw") {
                if (delegate.iterator.return) {
                  // If the delegate iterator has a return method, give it a
                  // chance to clean up.
                  context.method = "return";
                  context.arg = undefined;
                  maybeInvokeDelegate(delegate, context);

                  if (context.method === "throw") {
                    // If maybeInvokeDelegate(context) changed context.method from
                    // "return" to "throw", let that override the TypeError below.
                    return ContinueSentinel;
                  }
                }

                context.method = "throw";
                context.arg = new TypeError(
                  "The iterator does not provide a 'throw' method",
                );
              }

              return ContinueSentinel;
            }

            var record = tryCatch(method, delegate.iterator, context.arg);

            if (record.type === "throw") {
              context.method = "throw";
              context.arg = record.arg;
              context.delegate = null;
              return ContinueSentinel;
            }

            var info = record.arg;

            if (!info) {
              context.method = "throw";
              context.arg = new TypeError("iterator result is not an object");
              context.delegate = null;
              return ContinueSentinel;
            }

            if (info.done) {
              // Assign the result of the finished delegate to the temporary
              // variable specified by delegate.resultName (see delegateYield).
              context[delegate.resultName] = info.value;

              // Resume execution at the desired location (see delegateYield).
              context.next = delegate.nextLoc;

              // If context.method was "throw" but the delegate handled the
              // exception, let the outer generator proceed normally. If
              // context.method was "next", forget context.arg since it has been
              // "consumed" by the delegate iterator. If context.method was
              // "return", allow the original .return call to continue in the
              // outer generator.
              if (context.method !== "return") {
                context.method = "next";
                context.arg = undefined;
              }
            } else {
              // Re-yield the result returned by the delegate method.
              return info;
            }

            // The delegate iterator is finished, so forget it and continue with
            // the outer generator.
            context.delegate = null;
            return ContinueSentinel;
          }

          // Define Generator.prototype.{next,throw,return} in terms of the
          // unified ._invoke helper method.
          defineIteratorMethods(Gp);

          Gp[toStringTagSymbol] = "Generator";

          // A Generator should always return itself as the iterator object when the
          // @@iterator function is called on it. Some browsers' implementations of the
          // iterator prototype chain incorrectly implement this, causing the Generator
          // object to not be returned from this call. This ensures that doesn't happen.
          // See https://github.com/facebook/regenerator/issues/274 for more details.
          Gp[iteratorSymbol] = function() {
            return this;
          };

          Gp.toString = function() {
            return "[object Generator]";
          };

          function pushTryEntry(locs) {
            var entry = { tryLoc: locs[0] };

            if (1 in locs) {
              entry.catchLoc = locs[1];
            }

            if (2 in locs) {
              entry.finallyLoc = locs[2];
              entry.afterLoc = locs[3];
            }

            this.tryEntries.push(entry);
          }

          function resetTryEntry(entry) {
            var record = entry.completion || {};
            record.type = "normal";
            delete record.arg;
            entry.completion = record;
          }

          function Context(tryLocsList) {
            // The root entry object (effectively a try statement without a catch
            // or a finally block) gives us a place to store values thrown from
            // locations where there is no enclosing try statement.
            this.tryEntries = [{ tryLoc: "root" }];
            tryLocsList.forEach(pushTryEntry, this);
            this.reset(true);
          }

          runtime.keys = function(object) {
            var keys = [];
            for (var key in object) {
              keys.push(key);
            }
            keys.reverse();

            // Rather than returning an object with a next method, we keep
            // things simple and return the next function itself.
            return function next() {
              while (keys.length) {
                var key = keys.pop();
                if (key in object) {
                  next.value = key;
                  next.done = false;
                  return next;
                }
              }

              // To avoid creating an additional object, we just hang the .value
              // and .done properties off the next function object itself. This
              // also ensures that the minifier will not anonymize the function.
              next.done = true;
              return next;
            };
          };

          function values(iterable) {
            if (iterable) {
              var iteratorMethod = iterable[iteratorSymbol];
              if (iteratorMethod) {
                return iteratorMethod.call(iterable);
              }

              if (typeof iterable.next === "function") {
                return iterable;
              }

              if (!isNaN(iterable.length)) {
                var i = -1,
                  next = function next() {
                    while (++i < iterable.length) {
                      if (hasOwn.call(iterable, i)) {
                        next.value = iterable[i];
                        next.done = false;
                        return next;
                      }
                    }

                    next.value = undefined;
                    next.done = true;

                    return next;
                  };

                return (next.next = next);
              }
            }

            // Return an iterator with no values.
            return { next: doneResult };
          }
          runtime.values = values;

          function doneResult() {
            return { value: undefined, done: true };
          }

          Context.prototype = {
            constructor: Context,

            reset: function(skipTempReset) {
              this.prev = 0;
              this.next = 0;
              // Resetting context._sent for legacy support of Babel's
              // function.sent implementation.
              this.sent = this._sent = undefined;
              this.done = false;
              this.delegate = null;

              this.method = "next";
              this.arg = undefined;

              this.tryEntries.forEach(resetTryEntry);

              if (!skipTempReset) {
                for (var name in this) {
                  // Not sure about the optimal order of these conditions:
                  if (
                    name.charAt(0) === "t" &&
                    hasOwn.call(this, name) &&
                    !isNaN(+name.slice(1))
                  ) {
                    this[name] = undefined;
                  }
                }
              }
            },

            stop: function() {
              this.done = true;

              var rootEntry = this.tryEntries[0];
              var rootRecord = rootEntry.completion;
              if (rootRecord.type === "throw") {
                throw rootRecord.arg;
              }

              return this.rval;
            },

            dispatchException: function(exception) {
              if (this.done) {
                throw exception;
              }

              var context = this;
              function handle(loc, caught) {
                record.type = "throw";
                record.arg = exception;
                context.next = loc;

                if (caught) {
                  // If the dispatched exception was caught by a catch block,
                  // then let that catch block handle the exception normally.
                  context.method = "next";
                  context.arg = undefined;
                }

                return !!caught;
              }

              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                var record = entry.completion;

                if (entry.tryLoc === "root") {
                  // Exception thrown outside of any try block that could handle
                  // it, so set the completion value of the entire function to
                  // throw the exception.
                  return handle("end");
                }

                if (entry.tryLoc <= this.prev) {
                  var hasCatch = hasOwn.call(entry, "catchLoc");
                  var hasFinally = hasOwn.call(entry, "finallyLoc");

                  if (hasCatch && hasFinally) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    } else if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else if (hasCatch) {
                    if (this.prev < entry.catchLoc) {
                      return handle(entry.catchLoc, true);
                    }
                  } else if (hasFinally) {
                    if (this.prev < entry.finallyLoc) {
                      return handle(entry.finallyLoc);
                    }
                  } else {
                    throw new Error("try statement without catch or finally");
                  }
                }
              }
            },

            abrupt: function(type, arg) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (
                  entry.tryLoc <= this.prev &&
                  hasOwn.call(entry, "finallyLoc") &&
                  this.prev < entry.finallyLoc
                ) {
                  var finallyEntry = entry;
                  break;
                }
              }

              if (
                finallyEntry &&
                (type === "break" || type === "continue") &&
                finallyEntry.tryLoc <= arg &&
                arg <= finallyEntry.finallyLoc
              ) {
                // Ignore the finally entry if control is not jumping to a
                // location outside the try/catch block.
                finallyEntry = null;
              }

              var record = finallyEntry ? finallyEntry.completion : {};
              record.type = type;
              record.arg = arg;

              if (finallyEntry) {
                this.method = "next";
                this.next = finallyEntry.finallyLoc;
                return ContinueSentinel;
              }

              return this.complete(record);
            },

            complete: function(record, afterLoc) {
              if (record.type === "throw") {
                throw record.arg;
              }

              if (record.type === "break" || record.type === "continue") {
                this.next = record.arg;
              } else if (record.type === "return") {
                this.rval = this.arg = record.arg;
                this.method = "return";
                this.next = "end";
              } else if (record.type === "normal" && afterLoc) {
                this.next = afterLoc;
              }

              return ContinueSentinel;
            },

            finish: function(finallyLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) {
                  this.complete(entry.completion, entry.afterLoc);
                  resetTryEntry(entry);
                  return ContinueSentinel;
                }
              }
            },

            catch: function(tryLoc) {
              for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                  var record = entry.completion;
                  if (record.type === "throw") {
                    var thrown = record.arg;
                    resetTryEntry(entry);
                  }
                  return thrown;
                }
              }

              // The context.catch method must only be called with a location
              // argument that corresponds to a known catch block.
              throw new Error("illegal catch attempt");
            },

            delegateYield: function(iterable, resultName, nextLoc) {
              this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc,
              };

              if (this.method === "next") {
                // Deliberately forget the last sent value so that we don't
                // accidentally pass it on to the delegate.
                this.arg = undefined;
              }

              return ContinueSentinel;
            },
          };
        })(
          // In sloppy mode, unbound `this` refers to the global object, fallback to
          // Function constructor if we're in global strict mode. That is sadly a form
          // of indirect eval which violates Content Security Policy.
          (function() {
            return this || (typeof self === "object" && self);
          })() || Function("return this")(),
        );

        /***/
      },

    /***/ "./node_modules/shallowequal/index.js":
      /*!********************************************!*\
  !*** ./node_modules/shallowequal/index.js ***!
  \********************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        //

        module.exports = function shallowEqual(
          objA,
          objB,
          compare,
          compareContext,
        ) {
          var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

          if (ret !== void 0) {
            return !!ret;
          }

          if (objA === objB) {
            return true;
          }

          if (
            typeof objA !== "object" ||
            !objA ||
            typeof objB !== "object" ||
            !objB
          ) {
            return false;
          }

          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);

          if (keysA.length !== keysB.length) {
            return false;
          }

          var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

          // Test for A's keys different from B.
          for (var idx = 0; idx < keysA.length; idx++) {
            var key = keysA[idx];

            if (!bHasOwnProperty(key)) {
              return false;
            }

            var valueA = objA[key];
            var valueB = objB[key];

            ret = compare
              ? compare.call(compareContext, valueA, valueB, key)
              : void 0;

            if (ret === false || (ret === void 0 && valueA !== valueB)) {
              return false;
            }
          }

          return true;
        };

        /***/
      },

    /***/ "./node_modules/tabbable/index.js":
      /*!****************************************!*\
  !*** ./node_modules/tabbable/index.js ***!
  \****************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        var candidateSelectors = [
          "input",
          "select",
          "textarea",
          "a[href]",
          "button",
          "[tabindex]",
          "audio[controls]",
          "video[controls]",
          '[contenteditable]:not([contenteditable="false"])',
        ];
        var candidateSelector = candidateSelectors.join(",");

        var matches =
          typeof Element === "undefined"
            ? function() {}
            : Element.prototype.matches ||
              Element.prototype.msMatchesSelector ||
              Element.prototype.webkitMatchesSelector;

        function tabbable(el, options) {
          options = options || {};

          var elementDocument = el.ownerDocument || el;
          var regularTabbables = [];
          var orderedTabbables = [];

          var untouchabilityChecker = new UntouchabilityChecker(
            elementDocument,
          );
          var candidates = el.querySelectorAll(candidateSelector);

          if (options.includeContainer) {
            if (matches.call(el, candidateSelector)) {
              candidates = Array.prototype.slice.apply(candidates);
              candidates.unshift(el);
            }
          }

          var i, candidate, candidateTabindex;
          for (i = 0; i < candidates.length; i++) {
            candidate = candidates[i];

            if (
              !isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)
            )
              continue;

            candidateTabindex = getTabindex(candidate);
            if (candidateTabindex === 0) {
              regularTabbables.push(candidate);
            } else {
              orderedTabbables.push({
                documentOrder: i,
                tabIndex: candidateTabindex,
                node: candidate,
              });
            }
          }

          var tabbableNodes = orderedTabbables
            .sort(sortOrderedTabbables)
            .map(function(a) {
              return a.node;
            })
            .concat(regularTabbables);

          return tabbableNodes;
        }

        tabbable.isTabbable = isTabbable;
        tabbable.isFocusable = isFocusable;

        function isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {
          if (
            !isNodeMatchingSelectorFocusable(node, untouchabilityChecker) ||
            isNonTabbableRadio(node) ||
            getTabindex(node) < 0
          ) {
            return false;
          }
          return true;
        }

        function isTabbable(node, untouchabilityChecker) {
          if (!node) throw new Error("No node provided");
          if (matches.call(node, candidateSelector) === false) return false;
          return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);
        }

        function isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {
          untouchabilityChecker =
            untouchabilityChecker ||
            new UntouchabilityChecker(node.ownerDocument || node);
          if (
            node.disabled ||
            isHiddenInput(node) ||
            untouchabilityChecker.isUntouchable(node)
          ) {
            return false;
          }
          return true;
        }

        var focusableCandidateSelector = candidateSelectors
          .concat("iframe")
          .join(",");
        function isFocusable(node, untouchabilityChecker) {
          if (!node) throw new Error("No node provided");
          if (matches.call(node, focusableCandidateSelector) === false)
            return false;
          return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);
        }

        function getTabindex(node) {
          var tabindexAttr = parseInt(node.getAttribute("tabindex"), 10);
          if (!isNaN(tabindexAttr)) return tabindexAttr;
          // Browsers do not return `tabIndex` correctly for contentEditable nodes;
          // so if they don't have a tabindex attribute specifically set, assume it's 0.
          if (isContentEditable(node)) return 0;
          return node.tabIndex;
        }

        function sortOrderedTabbables(a, b) {
          return a.tabIndex === b.tabIndex
            ? a.documentOrder - b.documentOrder
            : a.tabIndex - b.tabIndex;
        }

        // Array.prototype.find not available in IE.
        function find(list, predicate) {
          for (var i = 0, length = list.length; i < length; i++) {
            if (predicate(list[i])) return list[i];
          }
        }

        function isContentEditable(node) {
          return node.contentEditable === "true";
        }

        function isInput(node) {
          return node.tagName === "INPUT";
        }

        function isHiddenInput(node) {
          return isInput(node) && node.type === "hidden";
        }

        function isRadio(node) {
          return isInput(node) && node.type === "radio";
        }

        function isNonTabbableRadio(node) {
          return isRadio(node) && !isTabbableRadio(node);
        }

        function getCheckedRadio(nodes) {
          for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
              return nodes[i];
            }
          }
        }

        function isTabbableRadio(node) {
          if (!node.name) return true;
          // This won't account for the edge case where you have radio groups with the same
          // in separate forms on the same page.
          var radioSet = node.ownerDocument.querySelectorAll(
            'input[type="radio"][name="' + node.name + '"]',
          );
          var checked = getCheckedRadio(radioSet);
          return !checked || checked === node;
        }

        // An element is "untouchable" if *it or one of its ancestors* has
        // `visibility: hidden` or `display: none`.
        function UntouchabilityChecker(elementDocument) {
          this.doc = elementDocument;
          // Node cache must be refreshed on every check, in case
          // the content of the element has changed. The cache contains tuples
          // mapping nodes to their boolean result.
          this.cache = [];
        }

        // getComputedStyle accurately reflects `visibility: hidden` of ancestors
        // but not `display: none`, so we need to recursively check parents.
        UntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(
          node,
          nodeComputedStyle,
        ) {
          if (node.nodeType !== Node.ELEMENT_NODE) return false;

          // Search for a cached result.
          var cached = find(this.cache, function(item) {
            return item === node;
          });
          if (cached) return cached[1];

          nodeComputedStyle =
            nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);

          var result = false;

          if (nodeComputedStyle.display === "none") {
            result = true;
          } else if (node.parentNode) {
            result = this.hasDisplayNone(node.parentNode);
          }

          this.cache.push([node, result]);

          return result;
        };

        UntouchabilityChecker.prototype.isUntouchable = function isUntouchable(
          node,
        ) {
          if (node === this.doc.documentElement) return false;
          var computedStyle = this.doc.defaultView.getComputedStyle(node);
          if (this.hasDisplayNone(node, computedStyle)) return true;
          return computedStyle.visibility === "hidden";
        };

        module.exports = tabbable;

        /***/
      },

    /***/ "./node_modules/url/url.js":
      /*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";
        // Copyright Joyent, Inc. and other Node contributors.
        //
        // Permission is hereby granted, free of charge, to any person obtaining a
        // copy of this software and associated documentation files (the
        // "Software"), to deal in the Software without restriction, including
        // without limitation the rights to use, copy, modify, merge, publish,
        // distribute, sublicense, and/or sell copies of the Software, and to permit
        // persons to whom the Software is furnished to do so, subject to the
        // following conditions:
        //
        // The above copyright notice and this permission notice shall be included
        // in all copies or substantial portions of the Software.
        //
        // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
        // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
        // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
        // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
        // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
        // USE OR OTHER DEALINGS IN THE SOFTWARE.

        var punycode = __webpack_require__(
          /*! punycode */ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js",
        );
        var util = __webpack_require__(
          /*! ./util */ "./node_modules/url/util.js",
        );

        exports.parse = urlParse;
        exports.resolve = urlResolve;
        exports.resolveObject = urlResolveObject;
        exports.format = urlFormat;

        exports.Url = Url;

        function Url() {
          this.protocol = null;
          this.slashes = null;
          this.auth = null;
          this.host = null;
          this.port = null;
          this.hostname = null;
          this.hash = null;
          this.search = null;
          this.query = null;
          this.pathname = null;
          this.path = null;
          this.href = null;
        }

        // Reference: RFC 3986, RFC 1808, RFC 2396

        // define these here so at least they only have to be
        // compiled once on the first module load.
        var protocolPattern = /^([a-z0-9.+-]+:)/i,
          portPattern = /:[0-9]*$/,
          // Special case for a simple path URL
          simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
          // RFC 2396: characters reserved for delimiting URLs.
          // We actually just auto-escape these.
          delims = ["<", ">", '"', "`", " ", "\r", "\n", "\t"],
          // RFC 2396: characters not allowed for various reasons.
          unwise = ["{", "}", "|", "\\", "^", "`"].concat(delims),
          // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
          autoEscape = ["'"].concat(unwise),
          // Characters that are never ever allowed in a hostname.
          // Note that any invalid chars are also handled, but these
          // are the ones that are *expected* to be seen, so we fast-path
          // them.
          nonHostChars = ["%", "/", "?", ";", "#"].concat(autoEscape),
          hostEndingChars = ["/", "?", "#"],
          hostnameMaxLen = 255,
          hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
          hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
          // protocols that can allow "unsafe" and "unwise" chars.
          unsafeProtocol = {
            javascript: true,
            "javascript:": true,
          },
          // protocols that never have a hostname.
          hostlessProtocol = {
            javascript: true,
            "javascript:": true,
          },
          // protocols that always contain a // bit.
          slashedProtocol = {
            http: true,
            https: true,
            ftp: true,
            gopher: true,
            file: true,
            "http:": true,
            "https:": true,
            "ftp:": true,
            "gopher:": true,
            "file:": true,
          },
          querystring = __webpack_require__(
            /*! querystring */ "./node_modules/querystring-es3/index.js",
          );

        function urlParse(url, parseQueryString, slashesDenoteHost) {
          if (url && util.isObject(url) && url instanceof Url) return url;

          var u = new Url();
          u.parse(url, parseQueryString, slashesDenoteHost);
          return u;
        }

        Url.prototype.parse = function(
          url,
          parseQueryString,
          slashesDenoteHost,
        ) {
          if (!util.isString(url)) {
            throw new TypeError(
              "Parameter 'url' must be a string, not " + typeof url,
            );
          }

          // Copy chrome, IE, opera backslash-handling behavior.
          // Back slashes before the query string get converted to forward slashes
          // See: https://code.google.com/p/chromium/issues/detail?id=25916
          var queryIndex = url.indexOf("?"),
            splitter =
              queryIndex !== -1 && queryIndex < url.indexOf("#") ? "?" : "#",
            uSplit = url.split(splitter),
            slashRegex = /\\/g;
          uSplit[0] = uSplit[0].replace(slashRegex, "/");
          url = uSplit.join(splitter);

          var rest = url;

          // trim before proceeding.
          // This is to support parse stuff like "  http://foo.com  \n"
          rest = rest.trim();

          if (!slashesDenoteHost && url.split("#").length === 1) {
            // Try fast path regexp
            var simplePath = simplePathPattern.exec(rest);
            if (simplePath) {
              this.path = rest;
              this.href = rest;
              this.pathname = simplePath[1];
              if (simplePath[2]) {
                this.search = simplePath[2];
                if (parseQueryString) {
                  this.query = querystring.parse(this.search.substr(1));
                } else {
                  this.query = this.search.substr(1);
                }
              } else if (parseQueryString) {
                this.search = "";
                this.query = {};
              }
              return this;
            }
          }

          var proto = protocolPattern.exec(rest);
          if (proto) {
            proto = proto[0];
            var lowerProto = proto.toLowerCase();
            this.protocol = lowerProto;
            rest = rest.substr(proto.length);
          }

          // figure out if it's got a host
          // user@server is *always* interpreted as a hostname, and url
          // resolution will treat //foo/bar as host=foo,path=bar because that's
          // how the browser resolves relative URLs.
          if (
            slashesDenoteHost ||
            proto ||
            rest.match(/^\/\/[^@\/]+@[^@\/]+/)
          ) {
            var slashes = rest.substr(0, 2) === "//";
            if (slashes && !(proto && hostlessProtocol[proto])) {
              rest = rest.substr(2);
              this.slashes = true;
            }
          }

          if (
            !hostlessProtocol[proto] &&
            (slashes || (proto && !slashedProtocol[proto]))
          ) {
            // there's a hostname.
            // the first instance of /, ?, ;, or # ends the host.
            //
            // If there is an @ in the hostname, then non-host chars *are* allowed
            // to the left of the last @ sign, unless some host-ending character
            // comes *before* the @-sign.
            // URLs are obnoxious.
            //
            // ex:
            // http://a@b@c/ => user:a@b host:c
            // http://a@b?@c => user:a host:c path:/?@c

            // v0.12 TODO(isaacs): This is not quite how Chrome does things.
            // Review our test case against browsers more comprehensively.

            // find the first instance of any hostEndingChars
            var hostEnd = -1;
            for (var i = 0; i < hostEndingChars.length; i++) {
              var hec = rest.indexOf(hostEndingChars[i]);
              if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                hostEnd = hec;
            }

            // at this point, either we have an explicit point where the
            // auth portion cannot go past, or the last @ char is the decider.
            var auth, atSign;
            if (hostEnd === -1) {
              // atSign can be anywhere.
              atSign = rest.lastIndexOf("@");
            } else {
              // atSign must be in auth portion.
              // http://a@b/c@d => host:b auth:a path:/c@d
              atSign = rest.lastIndexOf("@", hostEnd);
            }

            // Now we have a portion which is definitely the auth.
            // Pull that off.
            if (atSign !== -1) {
              auth = rest.slice(0, atSign);
              rest = rest.slice(atSign + 1);
              this.auth = decodeURIComponent(auth);
            }

            // the host is the remaining to the left of the first non-host char
            hostEnd = -1;
            for (var i = 0; i < nonHostChars.length; i++) {
              var hec = rest.indexOf(nonHostChars[i]);
              if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
                hostEnd = hec;
            }
            // if we still have not hit it, then the entire thing is a host.
            if (hostEnd === -1) hostEnd = rest.length;

            this.host = rest.slice(0, hostEnd);
            rest = rest.slice(hostEnd);

            // pull out port.
            this.parseHost();

            // we've indicated that there is a hostname,
            // so even if it's empty, it has to be present.
            this.hostname = this.hostname || "";

            // if hostname begins with [ and ends with ]
            // assume that it's an IPv6 address.
            var ipv6Hostname =
              this.hostname[0] === "[" &&
              this.hostname[this.hostname.length - 1] === "]";

            // validate a little.
            if (!ipv6Hostname) {
              var hostparts = this.hostname.split(/\./);
              for (var i = 0, l = hostparts.length; i < l; i++) {
                var part = hostparts[i];
                if (!part) continue;
                if (!part.match(hostnamePartPattern)) {
                  var newpart = "";
                  for (var j = 0, k = part.length; j < k; j++) {
                    if (part.charCodeAt(j) > 127) {
                      // we replace non-ASCII char with a temporary placeholder
                      // we need this to make sure size of hostname is not
                      // broken by replacing non-ASCII by nothing
                      newpart += "x";
                    } else {
                      newpart += part[j];
                    }
                  }
                  // we test again with ASCII char only
                  if (!newpart.match(hostnamePartPattern)) {
                    var validParts = hostparts.slice(0, i);
                    var notHost = hostparts.slice(i + 1);
                    var bit = part.match(hostnamePartStart);
                    if (bit) {
                      validParts.push(bit[1]);
                      notHost.unshift(bit[2]);
                    }
                    if (notHost.length) {
                      rest = "/" + notHost.join(".") + rest;
                    }
                    this.hostname = validParts.join(".");
                    break;
                  }
                }
              }
            }

            if (this.hostname.length > hostnameMaxLen) {
              this.hostname = "";
            } else {
              // hostnames are always lower case.
              this.hostname = this.hostname.toLowerCase();
            }

            if (!ipv6Hostname) {
              // IDNA Support: Returns a punycoded representation of "domain".
              // It only converts parts of the domain name that
              // have non-ASCII characters, i.e. it doesn't matter if
              // you call it with a domain that already is ASCII-only.
              this.hostname = punycode.toASCII(this.hostname);
            }

            var p = this.port ? ":" + this.port : "";
            var h = this.hostname || "";
            this.host = h + p;
            this.href += this.host;

            // strip [ and ] from the hostname
            // the host field still retains them, though
            if (ipv6Hostname) {
              this.hostname = this.hostname.substr(1, this.hostname.length - 2);
              if (rest[0] !== "/") {
                rest = "/" + rest;
              }
            }
          }

          // now rest is set to the post-host stuff.
          // chop off any delim chars.
          if (!unsafeProtocol[lowerProto]) {
            // First, make 100% sure that any "autoEscape" chars get
            // escaped, even if encodeURIComponent doesn't think they
            // need to be.
            for (var i = 0, l = autoEscape.length; i < l; i++) {
              var ae = autoEscape[i];
              if (rest.indexOf(ae) === -1) continue;
              var esc = encodeURIComponent(ae);
              if (esc === ae) {
                esc = escape(ae);
              }
              rest = rest.split(ae).join(esc);
            }
          }

          // chop off from the tail first.
          var hash = rest.indexOf("#");
          if (hash !== -1) {
            // got a fragment string.
            this.hash = rest.substr(hash);
            rest = rest.slice(0, hash);
          }
          var qm = rest.indexOf("?");
          if (qm !== -1) {
            this.search = rest.substr(qm);
            this.query = rest.substr(qm + 1);
            if (parseQueryString) {
              this.query = querystring.parse(this.query);
            }
            rest = rest.slice(0, qm);
          } else if (parseQueryString) {
            // no query string, but parseQueryString still requested
            this.search = "";
            this.query = {};
          }
          if (rest) this.pathname = rest;
          if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
            this.pathname = "/";
          }

          //to support http.request
          if (this.pathname || this.search) {
            var p = this.pathname || "";
            var s = this.search || "";
            this.path = p + s;
          }

          // finally, reconstruct the href based on what has been validated.
          this.href = this.format();
          return this;
        };

        // format a parsed object into a url string
        function urlFormat(obj) {
          // ensure it's an object, and not a string url.
          // If it's an obj, this is a no-op.
          // this way, you can call url_format() on strings
          // to clean up potentially wonky urls.
          if (util.isString(obj)) obj = urlParse(obj);
          if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
          return obj.format();
        }

        Url.prototype.format = function() {
          var auth = this.auth || "";
          if (auth) {
            auth = encodeURIComponent(auth);
            auth = auth.replace(/%3A/i, ":");
            auth += "@";
          }

          var protocol = this.protocol || "",
            pathname = this.pathname || "",
            hash = this.hash || "",
            host = false,
            query = "";

          if (this.host) {
            host = auth + this.host;
          } else if (this.hostname) {
            host =
              auth +
              (this.hostname.indexOf(":") === -1
                ? this.hostname
                : "[" + this.hostname + "]");
            if (this.port) {
              host += ":" + this.port;
            }
          }

          if (
            this.query &&
            util.isObject(this.query) &&
            Object.keys(this.query).length
          ) {
            query = querystring.stringify(this.query);
          }

          var search = this.search || (query && "?" + query) || "";

          if (protocol && protocol.substr(-1) !== ":") protocol += ":";

          // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
          // unless they had them to begin with.
          if (
            this.slashes ||
            ((!protocol || slashedProtocol[protocol]) && host !== false)
          ) {
            host = "//" + (host || "");
            if (pathname && pathname.charAt(0) !== "/")
              pathname = "/" + pathname;
          } else if (!host) {
            host = "";
          }

          if (hash && hash.charAt(0) !== "#") hash = "#" + hash;
          if (search && search.charAt(0) !== "?") search = "?" + search;

          pathname = pathname.replace(/[?#]/g, function(match) {
            return encodeURIComponent(match);
          });
          search = search.replace("#", "%23");

          return protocol + host + pathname + search + hash;
        };

        function urlResolve(source, relative) {
          return urlParse(source, false, true).resolve(relative);
        }

        Url.prototype.resolve = function(relative) {
          return this.resolveObject(urlParse(relative, false, true)).format();
        };

        function urlResolveObject(source, relative) {
          if (!source) return relative;
          return urlParse(source, false, true).resolveObject(relative);
        }

        Url.prototype.resolveObject = function(relative) {
          if (util.isString(relative)) {
            var rel = new Url();
            rel.parse(relative, false, true);
            relative = rel;
          }

          var result = new Url();
          var tkeys = Object.keys(this);
          for (var tk = 0; tk < tkeys.length; tk++) {
            var tkey = tkeys[tk];
            result[tkey] = this[tkey];
          }

          // hash is always overridden, no matter what.
          // even href="" will remove it.
          result.hash = relative.hash;

          // if the relative url is empty, then there's nothing left to do here.
          if (relative.href === "") {
            result.href = result.format();
            return result;
          }

          // hrefs like //foo/bar always cut to the protocol.
          if (relative.slashes && !relative.protocol) {
            // take everything except the protocol from relative
            var rkeys = Object.keys(relative);
            for (var rk = 0; rk < rkeys.length; rk++) {
              var rkey = rkeys[rk];
              if (rkey !== "protocol") result[rkey] = relative[rkey];
            }

            //urlParse appends trailing / to urls like http://www.example.com
            if (
              slashedProtocol[result.protocol] &&
              result.hostname &&
              !result.pathname
            ) {
              result.path = result.pathname = "/";
            }

            result.href = result.format();
            return result;
          }

          if (relative.protocol && relative.protocol !== result.protocol) {
            // if it's a known url protocol, then changing
            // the protocol does weird things
            // first, if it's not file:, then we MUST have a host,
            // and if there was a path
            // to begin with, then we MUST have a path.
            // if it is file:, then the host is dropped,
            // because that's known to be hostless.
            // anything else is assumed to be absolute.
            if (!slashedProtocol[relative.protocol]) {
              var keys = Object.keys(relative);
              for (var v = 0; v < keys.length; v++) {
                var k = keys[v];
                result[k] = relative[k];
              }
              result.href = result.format();
              return result;
            }

            result.protocol = relative.protocol;
            if (!relative.host && !hostlessProtocol[relative.protocol]) {
              var relPath = (relative.pathname || "").split("/");
              while (relPath.length && !(relative.host = relPath.shift()));
              if (!relative.host) relative.host = "";
              if (!relative.hostname) relative.hostname = "";
              if (relPath[0] !== "") relPath.unshift("");
              if (relPath.length < 2) relPath.unshift("");
              result.pathname = relPath.join("/");
            } else {
              result.pathname = relative.pathname;
            }
            result.search = relative.search;
            result.query = relative.query;
            result.host = relative.host || "";
            result.auth = relative.auth;
            result.hostname = relative.hostname || relative.host;
            result.port = relative.port;
            // to support http.request
            if (result.pathname || result.search) {
              var p = result.pathname || "";
              var s = result.search || "";
              result.path = p + s;
            }
            result.slashes = result.slashes || relative.slashes;
            result.href = result.format();
            return result;
          }

          var isSourceAbs =
              result.pathname && result.pathname.charAt(0) === "/",
            isRelAbs =
              relative.host ||
              (relative.pathname && relative.pathname.charAt(0) === "/"),
            mustEndAbs =
              isRelAbs || isSourceAbs || (result.host && relative.pathname),
            removeAllDots = mustEndAbs,
            srcPath = (result.pathname && result.pathname.split("/")) || [],
            relPath = (relative.pathname && relative.pathname.split("/")) || [],
            psychotic = result.protocol && !slashedProtocol[result.protocol];

          // if the url is a non-slashed url, then relative
          // links like ../.. should be able
          // to crawl up to the hostname, as well.  This is strange.
          // result.protocol has already been set by now.
          // Later on, put the first path part into the host field.
          if (psychotic) {
            result.hostname = "";
            result.port = null;
            if (result.host) {
              if (srcPath[0] === "") srcPath[0] = result.host;
              else srcPath.unshift(result.host);
            }
            result.host = "";
            if (relative.protocol) {
              relative.hostname = null;
              relative.port = null;
              if (relative.host) {
                if (relPath[0] === "") relPath[0] = relative.host;
                else relPath.unshift(relative.host);
              }
              relative.host = null;
            }
            mustEndAbs = mustEndAbs && (relPath[0] === "" || srcPath[0] === "");
          }

          if (isRelAbs) {
            // it's absolute.
            result.host =
              relative.host || relative.host === ""
                ? relative.host
                : result.host;
            result.hostname =
              relative.hostname || relative.hostname === ""
                ? relative.hostname
                : result.hostname;
            result.search = relative.search;
            result.query = relative.query;
            srcPath = relPath;
            // fall through to the dot-handling below.
          } else if (relPath.length) {
            // it's relative
            // throw away the existing file, and take the new path instead.
            if (!srcPath) srcPath = [];
            srcPath.pop();
            srcPath = srcPath.concat(relPath);
            result.search = relative.search;
            result.query = relative.query;
          } else if (!util.isNullOrUndefined(relative.search)) {
            // just pull out the search.
            // like href='?foo'.
            // Put this after the other two cases because it simplifies the booleans
            if (psychotic) {
              result.hostname = result.host = srcPath.shift();
              //occationaly the auth can get stuck only in host
              //this especially happens in cases like
              //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
              var authInHost =
                result.host && result.host.indexOf("@") > 0
                  ? result.host.split("@")
                  : false;
              if (authInHost) {
                result.auth = authInHost.shift();
                result.host = result.hostname = authInHost.shift();
              }
            }
            result.search = relative.search;
            result.query = relative.query;
            //to support http.request
            if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
              result.path =
                (result.pathname ? result.pathname : "") +
                (result.search ? result.search : "");
            }
            result.href = result.format();
            return result;
          }

          if (!srcPath.length) {
            // no path at all.  easy.
            // we've already handled the other stuff above.
            result.pathname = null;
            //to support http.request
            if (result.search) {
              result.path = "/" + result.search;
            } else {
              result.path = null;
            }
            result.href = result.format();
            return result;
          }

          // if a url ENDs in . or .., then it must get a trailing slash.
          // however, if it ends in anything else non-slashy,
          // then it must NOT get a trailing slash.
          var last = srcPath.slice(-1)[0];
          var hasTrailingSlash =
            ((result.host || relative.host || srcPath.length > 1) &&
              (last === "." || last === "..")) ||
            last === "";

          // strip single dots, resolve double dots to parent dir
          // if the path tries to go above the root, `up` ends up > 0
          var up = 0;
          for (var i = srcPath.length; i >= 0; i--) {
            last = srcPath[i];
            if (last === ".") {
              srcPath.splice(i, 1);
            } else if (last === "..") {
              srcPath.splice(i, 1);
              up++;
            } else if (up) {
              srcPath.splice(i, 1);
              up--;
            }
          }

          // if the path is allowed to go above the root, restore leading ..s
          if (!mustEndAbs && !removeAllDots) {
            for (; up--; up) {
              srcPath.unshift("..");
            }
          }

          if (
            mustEndAbs &&
            srcPath[0] !== "" &&
            (!srcPath[0] || srcPath[0].charAt(0) !== "/")
          ) {
            srcPath.unshift("");
          }

          if (hasTrailingSlash && srcPath.join("/").substr(-1) !== "/") {
            srcPath.push("");
          }

          var isAbsolute =
            srcPath[0] === "" || (srcPath[0] && srcPath[0].charAt(0) === "/");

          // put the host back
          if (psychotic) {
            result.hostname = result.host = isAbsolute
              ? ""
              : srcPath.length
              ? srcPath.shift()
              : "";
            //occationaly the auth can get stuck only in host
            //this especially happens in cases like
            //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
            var authInHost =
              result.host && result.host.indexOf("@") > 0
                ? result.host.split("@")
                : false;
            if (authInHost) {
              result.auth = authInHost.shift();
              result.host = result.hostname = authInHost.shift();
            }
          }

          mustEndAbs = mustEndAbs || (result.host && srcPath.length);

          if (mustEndAbs && !isAbsolute) {
            srcPath.unshift("");
          }

          if (!srcPath.length) {
            result.pathname = null;
            result.path = null;
          } else {
            result.pathname = srcPath.join("/");
          }

          //to support request.http
          if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
            result.path =
              (result.pathname ? result.pathname : "") +
              (result.search ? result.search : "");
          }
          result.auth = relative.auth || result.auth;
          result.slashes = result.slashes || relative.slashes;
          result.href = result.format();
          return result;
        };

        Url.prototype.parseHost = function() {
          var host = this.host;
          var port = portPattern.exec(host);
          if (port) {
            port = port[0];
            if (port !== ":") {
              this.port = port.substr(1);
            }
            host = host.substr(0, host.length - port.length);
          }
          if (host) this.hostname = host;
        };

        /***/
      },

    /***/ "./node_modules/url/util.js":
      /*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        "use strict";

        module.exports = {
          isString: function(arg) {
            return typeof arg === "string";
          },
          isObject: function(arg) {
            return typeof arg === "object" && arg !== null;
          },
          isNull: function(arg) {
            return arg === null;
          },
          isNullOrUndefined: function(arg) {
            return arg == null;
          },
        };

        /***/
      },

    /***/ "./node_modules/webpack/buildin/global.js":
      /*!******************************************************************************************************!*\
  !*** delegated ./node_modules/webpack/buildin/global.js from dll-reference dll_829b10deddf10e1653a8 ***!
  \******************************************************************************************************/
      /*! no static exports found */
      /***/ function(module, exports, __webpack_require__) {
        module.exports = __webpack_require__(
          /*! dll-reference dll_829b10deddf10e1653a8 */ "dll-reference dll_829b10deddf10e1653a8",
        )("./node_modules/webpack/buildin/global.js");

        /***/
      },

    /***/ "./node_modules/webpack/buildin/module.js":
      /*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = function(module) {
          if (!module.webpackPolyfill) {
            module.deprecate = function() {};
            module.paths = [];
            // module.parent = undefined by default
            if (!module.children) module.children = [];
            Object.defineProperty(module, "loaded", {
              enumerable: true,
              get: function() {
                return module.l;
              },
            });
            Object.defineProperty(module, "id", {
              enumerable: true,
              get: function() {
                return module.i;
              },
            });
            module.webpackPolyfill = 1;
          }
          return module;
        };

        /***/
      },

    /***/ "./node_modules/xtend/immutable.js":
      /*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = extend;

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        function extend() {
          var target = {};

          for (var i = 0; i < arguments.length; i++) {
            var source = arguments[i];

            for (var key in source) {
              if (hasOwnProperty.call(source, key)) {
                target[key] = source[key];
              }
            }
          }

          return target;
        }

        /***/
      },

    /***/ "./pages/_app.tsx":
      /*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
      /*! exports provided: default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "default",
          function() {
            return GiveCryptoApp;
          },
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/classCallCheck */ "./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/createClass */ "./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/possibleConstructorReturn */ "./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/getPrototypeOf */ "./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js",
        );
        /* harmony import */ var _babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
          /*! @babel/runtime-corejs2/helpers/esm/inherits */ "./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js",
        );
        /* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
          /*! next/app */ "./node_modules/next/app.js",
        );
        /* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/ __webpack_require__.n(
          next_app__WEBPACK_IMPORTED_MODULE_6__,
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
          /*! react */ "./node_modules/react/index.js",
        );
        /* harmony import */ var react__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/ __webpack_require__.n(
          react__WEBPACK_IMPORTED_MODULE_7__,
        );
        /* harmony import */ var _components_Navigation_Navigation__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
          /*! ../components/Navigation/Navigation */ "./components/Navigation/Navigation.tsx",
        );
        /* harmony import */ var _components_Footer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
          /*! ../components/Footer */ "./components/Footer.tsx",
        );
        /* harmony import */ var _styles_index_css__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
          /*! ../styles/index.css */ "./styles/index.css",
        );
        /* harmony import */ var _styles_index_css__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/ __webpack_require__.n(
          _styles_index_css__WEBPACK_IMPORTED_MODULE_10__,
        );
        /* harmony import */ var _utils_setupFonts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
          /*! ../utils/setupFonts */ "./utils/setupFonts.tsx",
        );

        var _jsxFileName = "/Users/jklb/dev/givecrypto/website/pages/_app.tsx";

        var GiveCryptoApp =
          /*#__PURE__*/
          (function(_App) {
            Object(
              _babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__[
                "default"
              ],
            )(GiveCryptoApp, _App);

            function GiveCryptoApp() {
              Object(
                _babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__[
                  "default"
                ],
              )(this, GiveCryptoApp);

              return Object(
                _babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__[
                  "default"
                ],
              )(
                this,
                Object(
                  _babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__[
                    "default"
                  ],
                )(GiveCryptoApp).apply(this, arguments),
              );
            }

            Object(
              _babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__[
                "default"
              ],
            )(GiveCryptoApp, [
              {
                key: "render",
                value: function render() {
                  var _this$props = this.props,
                    Component = _this$props.Component,
                    pageProps = _this$props.pageProps,
                    router = _this$props.router;
                  var theme = "default";

                  if (router) {
                    theme = router.pathname === "/donate" ? "light" : "default";
                  }

                  return react__WEBPACK_IMPORTED_MODULE_7__["createElement"](
                    next_app__WEBPACK_IMPORTED_MODULE_6__["Container"],
                    {
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 18,
                      },
                      __self: this,
                    },
                    react__WEBPACK_IMPORTED_MODULE_7__["createElement"](
                      _components_Navigation_Navigation__WEBPACK_IMPORTED_MODULE_8__[
                        "default"
                      ],
                      {
                        theme: theme,
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 19,
                        },
                        __self: this,
                      },
                    ),
                    react__WEBPACK_IMPORTED_MODULE_7__["createElement"](
                      Component,
                      Object(
                        _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[
                          "default"
                        ],
                      )({}, pageProps, {
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 20,
                        },
                        __self: this,
                      }),
                    ),
                    react__WEBPACK_IMPORTED_MODULE_7__["createElement"](
                      _components_Footer__WEBPACK_IMPORTED_MODULE_9__[
                        "default"
                      ],
                      {
                        __source: {
                          fileName: _jsxFileName,
                          lineNumber: 21,
                        },
                        __self: this,
                      },
                    ),
                  );
                },
              },
            ]);

            return GiveCryptoApp;
          })(next_app__WEBPACK_IMPORTED_MODULE_6___default.a);

        /***/
      },

    /***/ "./utils/Scale.tsx":
      /*!*************************!*\
  !*** ./utils/Scale.tsx ***!
  \*************************/
      /*! exports provided: Interval, Step, default */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Interval",
          function() {
            return Interval;
          },
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "Step",
          function() {
            return Step;
          },
        );
        /* harmony import */ var natural_scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! natural-scale */ "./node_modules/natural-scale/dist/index.js",
        );
        /* harmony import */ var natural_scale__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          natural_scale__WEBPACK_IMPORTED_MODULE_0__,
        );

        var Interval =
          natural_scale__WEBPACK_IMPORTED_MODULE_0__["Ratio"].MINOR_SEVENTH;
        var Step = Object(natural_scale__WEBPACK_IMPORTED_MODULE_0__["Scale"])({
          interval: Interval,
          unit: "rem",
        });
        /* harmony default export */ __webpack_exports__["default"] = {
          Step: Step,
          Interval: Interval,
        };

        /***/
      },

    /***/ "./utils/setupFonts.tsx":
      /*!******************************!*\
  !*** ./utils/setupFonts.tsx ***!
  \******************************/
      /*! no exports provided */
      /***/ function(module, __webpack_exports__, __webpack_require__) {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        /* harmony import */ var glamor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
          /*! glamor */ "./node_modules/glamor/lib/index.js",
        );
        /* harmony import */ var glamor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/ __webpack_require__.n(
          glamor__WEBPACK_IMPORTED_MODULE_0__,
        );
        // Mono

        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "normal",
          fontWeight: 200,
          src:
            "url('/static/fonts/Apercu-Mono.woff2') format('woff2'), url('/static/fonts/Apercu-Mono.woff') format('woff')",
        }); // Normal

        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "normal",
          fontWeight: 400,
          src:
            "url('/static/fonts/Apercu-Light.woff2') format('woff2'), url('/static/fonts/Apercu-Light.woff') format('woff')",
        });
        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "normal",
          fontWeight: 500,
          src:
            "url('/static/fonts/Apercu-Regular.woff2') format('woff2'), url('/static/fonts/Apercu-Regular.woff') format('woff')",
        });
        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "normal",
          fontWeight: 700,
          src:
            "url('/static/fonts/Apercu-Medium.woff2') format('woff2'), url('/static/fonts/Apercu-Medium.woff') format('woff')",
        });
        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "normal",
          fontWeight: 900,
          src:
            "url('/static/fonts/Apercu-Bold.woff2') format('woff2'), url('/static/fonts/Apercu-Bold.woff') format('woff')",
        }); // Italic

        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "italic",
          fontWeight: 500,
          src:
            "url('/static/fonts/Apercu-Italic.woff2') format('woff2'), url('/static/fonts/Apercu-Italic.woff') format('woff')",
        });
        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "italic",
          fontWeight: 700,
          src:
            "url('/static/fonts/Apercu-MediumItalic.woff2') format('woff2'), url('/static/fonts/Apercu-MediumItalic.woff') format('woff')",
        });
        glamor__WEBPACK_IMPORTED_MODULE_0__["css"].global("@font-face", {
          fontFamily: "Apercu",
          fontStyle: "italic",
          fontWeight: 900,
          src:
            "url('/static/fonts/Apercu-BoldItalic.woff2') format('woff2'), url('/static/fonts/Apercu-BoldItalic.woff') format('woff')",
        });

        /***/
      },

    /***/ "dll-reference dll_829b10deddf10e1653a8":
      /*!*******************************************!*\
  !*** external "dll_829b10deddf10e1653a8" ***!
  \*******************************************/
      /*! no static exports found */
      /***/ function(module, exports) {
        module.exports = dll_829b10deddf10e1653a8;

        /***/
      },
  },
  [
    [
      "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?page=%2F_app&absolutePagePath=private-next-pages%2F_app.tsx!./",
      "static/runtime/webpack.js",
      "styles",
    ],
  ],
]);
//# sourceMappingURL=_app.js.map
