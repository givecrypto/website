{"version":3,"file":"static/webpack/static/development/pages/report.js.a518154f2e841eb1e85c.hot-update.js","sources":["webpack:///./components/Metrics/Income/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport chroma from \"chroma-js\";\nimport { RadialChart } from \"react-vis\";\nimport { colors, shadows } from \"../../../design-system\";\nimport List from \"../components/List\";\nimport {\n  income,\n  totalParticipants,\n} from \"../../../content/ambassadors-report/metrics\";\nimport { isNil } from \"lodash\";\nimport Heading from \"../../../components/Heading\";\n\ninterface Props {}\nconst Income: React.FC<Props> = () => {\n  const [highlightId, setHighlightId]: any = React.useState(null);\n  // Hold on to any timers\n  const timers = [];\n\n  const dataWithColors = (data: any) =>\n    React.useMemo(() => {\n      // Get the color for each item\n      const getColor = (index: number) => {\n        const colorScale = chroma\n          .scale([colors.green, colors.greenDark])\n          .mode(\"rgb\")\n          .colors(data.length);\n\n        if (isNil(highlightId)) {\n          return colorScale[index];\n        } else {\n          return index === data.findIndex(a => a.label === highlightId)\n            ? chroma.mix(colorScale[index], colors.coldWater).css()\n            : colorScale[index];\n        }\n      };\n\n      // Return the item and inject the correct color\n      return data.slice().map((item: any, index: number) => ({\n        ...item,\n        color: getColor(index),\n      }));\n    }, [highlightId]);\n\n  const listItems = dataWithColors(income)\n    .slice()\n    .map((item, i) => ({\n      id: `${i}`,\n      color: item.color,\n      category: item.label,\n      label: `${Math.floor((item.angle * totalParticipants) / 100)} Recipients`,\n      value: item.subLabel,\n    }));\n\n  const handleHighlightChange = (label?: string) => {\n    timers.map(clearTimeout);\n    timers.push(\n      setTimeout(() => {\n        setHighlightId(label);\n      }, 10),\n    );\n  };\n\n  return (\n    <div className=\"pv3\">\n      <Heading>Income</Heading>\n      <div className=\"flex flex-wrap items-center mb4\">\n        <div className=\"w-40 pv4\">\n          <div className=\"flex items-center justify-between\">\n            <RadialChart\n              colorType=\"literal\"\n              data={dataWithColors(income)}\n              width={300}\n              height={300}\n              innerRadius={85}\n              radius={120}\n              animation\n              style={{\n                boxShadow: shadows.card,\n              }}\n              onValueMouseOver={(v: any) => {\n                handleHighlightChange(\n                  income.find(item => item.label === v.label).label,\n                );\n              }}\n              onSeriesMouseOut={() => {\n                handleHighlightChange();\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"w-60\">\n          <List\n            items={listItems}\n            highlightId={highlightId}\n            onHighlight={handleHighlightChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Income;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AAvBA;AACA;AAwBA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AACA;AAOA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}