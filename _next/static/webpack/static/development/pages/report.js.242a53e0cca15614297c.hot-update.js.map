{"version":3,"file":"static/webpack/static/development/pages/report.js.242a53e0cca15614297c.hot-update.js","sources":["webpack:///./components/Metrics/Gender/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { RadialChart, Hint } from \"react-vis\";\nimport chroma from \"chroma-js\";\nimport { colors } from \"../../../design-system\";\nimport { isEmpty } from \"lodash\";\nimport Tip from \"../../../components/Tip\";\nimport Heading from \"../../../components/Heading\";\nimport Legend from \"./Legend\";\nimport {\n  totalParticipants,\n  gender,\n} from \"../../../content/ambassadors-report/metrics\";\n\ninterface Props {}\nconst Gender: React.FC<Props> = () => {\n  const [value, setValue]: any = React.useState({});\n\n  const dataWithColors = (data: any) => {\n    React.useMemo(() => {\n      // Get the color for each item\n      const getColor = (index: number) => {\n        const colorScale = chroma\n          .scale([colors.blue, colors.blueDark])\n          .mode(\"rgb\")\n          .colors(data.length);\n\n        return colorScale[index];\n      };\n\n      // Return the item and inject the correct color\n      return data.slice().map((item: any, index: number) => ({\n        ...item,\n        color: getColor(index),\n      }));\n    }, []);\n  };\n\n  const data = dataWithColors(gender);\n  console.log(data);\n\n  return (\n    <div>\n      <Heading>Gender</Heading>\n      <RadialChart\n        labelsRadiusMultiplier={0.85}\n        innerRadius={60}\n        radius={120}\n        data={data}\n        width={300}\n        height={300}\n        onValueMouseOver={(v: any) => {\n          setValue({\n            data: v,\n            title: gender.find(item => item.label === v.label).label,\n            metrics: [\n              {\n                label: \"Total\",\n                value: Math.floor(\n                  totalParticipants *\n                    (gender.find(item => item.label === v.label).angle * 0.01),\n                ),\n              },\n              {\n                label: \"Percentage\",\n                value: `${gender.find(item => item.label === v.label).angle}%`,\n              },\n            ],\n          });\n        }}\n        onSeriesMouseOut={() => setValue({})}\n      >\n        {!isEmpty(value) && (\n          <Hint value={value.data}>\n            <Tip title={value.title} metrics={value.metrics} />\n          </Hint>\n        )}\n      </RadialChart>\n      <Legend highlight={value.title} data={data} />\n    </div>\n  );\n};\n\nexport default Gender;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAJA;AAQA;AACA;AAAA;AAAA;AAFA;AAXA;AAiBA;AACA;AAAA;AAAA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}