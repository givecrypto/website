{"version":3,"file":"static/webpack/static/development/pages/report.js.b4c6a091be3f686044b1.hot-update.js","sources":["webpack:///./components/Metrics/Age/index.tsx","webpack:///./components/Metrics/Education/index.tsx","webpack:///./components/Metrics/Gender/index.tsx","webpack:///./components/Metrics/Income/index.tsx","webpack:///./components/Metrics/components/Heading.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  YAxis,\n  XAxis,\n  VerticalGridLines,\n  XYPlot,\n  HorizontalBarSeries,\n} from \"react-vis\";\nimport { colors } from \"../../../design-system\";\nimport { age } from \"../../../content/ambassadors-report/metrics\";\nimport useMeasure from \"../../../utils/useMeasure\";\nimport Heading from \"../components/Heading\";\n\ninterface Props {}\n\nconst Age: React.FC<Props> = () => {\n  const ref = React.useRef();\n  const { width } = useMeasure(ref);\n\n  return (\n    <div ref={ref} className=\"pv3\">\n      <Heading>Age</Heading>\n      <XYPlot\n        yType=\"ordinal\"\n        height={275}\n        width={width}\n        xDistance={100}\n        style={{\n          overflow: \"visible\",\n        }}\n      >\n        <VerticalGridLines />\n        <XAxis />\n        <YAxis />\n        <HorizontalBarSeries\n          animation={{ damping: 14, stiffness: 100 }}\n          barWidth={0.6}\n          data={age}\n          style={{}}\n          color={colors.yellow}\n        />\n      </XYPlot>\n    </div>\n  );\n};\n\nexport default Age;\n","import * as React from \"react\";\nimport Heading from \"../components/Heading\";\n\ninterface Props {}\n\nconst Education: React.FC<Props> = () => {\n  return (\n    <div>\n      <Heading>Education</Heading>\n    </div>\n  );\n};\n\nexport default Education;\n","import * as React from \"react\";\nimport { RadialChart, Hint } from \"react-vis\";\nimport chroma from \"chroma-js\";\nimport { colors } from \"../../../design-system\";\nimport { isEmpty } from \"lodash\";\nimport Tip from \"../../../components/Tip\";\nimport Heading from \"../components/Heading\";\nimport Legend from \"./Legend\";\nimport {\n  totalParticipants,\n  gender,\n} from \"../../../content/ambassadors-report/metrics\";\n\ninterface Props {}\nconst Gender: React.FC<Props> = () => {\n  const [value, setValue]: any = React.useState({});\n\n  const dataWithColors = (data: any) =>\n    React.useMemo(() => {\n      // Get the color for each item\n      const getColor = (index: number) => {\n        const colorScale = chroma\n          .scale([colors.coldWater, colors.green, colors.yellow])\n          .mode(\"rgb\")\n          .colors(data.length);\n\n        return colorScale[index];\n      };\n\n      // Return the item and inject the correct color\n      return data.slice().map((item: any, index: number) => ({\n        ...item,\n        color: getColor(index),\n      }));\n    }, []);\n\n  const data = dataWithColors(gender);\n\n  return (\n    <div>\n      <Heading>Gender</Heading>\n      <div className=\"flex justify-center mt4 mb5\">\n        <RadialChart\n          colorType=\"literal\"\n          innerRadius={85}\n          radius={120}\n          data={data}\n          width={300}\n          height={300}\n          onValueMouseOver={(v: any) => {\n            setValue({\n              data: v,\n              title: gender.find(item => item.label === v.label).label,\n              metrics: [\n                {\n                  label: \"Total\",\n                  value: Math.floor(\n                    totalParticipants *\n                      (gender.find(item => item.label === v.label).angle *\n                        0.01),\n                  ),\n                },\n                {\n                  label: \"Percentage\",\n                  value: `${\n                    gender.find(item => item.label === v.label).angle\n                  }%`,\n                },\n              ],\n            });\n          }}\n          onSeriesMouseOut={() => setValue({})}\n        >\n          {!isEmpty(value) && (\n            <Hint value={value.data}>\n              <Tip title={value.title} metrics={value.metrics} />\n            </Hint>\n          )}\n        </RadialChart>\n      </div>\n      <Legend highlight={value.title} data={data} />\n    </div>\n  );\n};\n\nexport default Gender;\n","import * as React from \"react\";\nimport chroma from \"chroma-js\";\nimport { RadialChart } from \"react-vis\";\nimport { colors, shadows } from \"../../../design-system\";\nimport List from \"../components/List\";\nimport {\n  income,\n  totalParticipants,\n} from \"../../../content/ambassadors-report/metrics\";\nimport { isNil } from \"lodash\";\nimport Heading from \"../components/Heading\";\n\ninterface Props {}\nconst Income: React.FC<Props> = () => {\n  const [highlightId, setHighlightId]: any = React.useState(null);\n  // Hold on to any timers\n  const timers = [];\n\n  const dataWithColors = (data: any) =>\n    React.useMemo(() => {\n      // Get the color for each item\n      const getColor = (index: number) => {\n        const colorScale = chroma\n          .scale([colors.green, colors.greenDark])\n          .mode(\"rgb\")\n          .colors(data.length);\n\n        if (isNil(highlightId)) {\n          return colorScale[index];\n        } else {\n          return index === data.findIndex(a => a.label === highlightId)\n            ? chroma.mix(colorScale[index], colors.coldWater).css()\n            : colorScale[index];\n        }\n      };\n\n      // Return the item and inject the correct color\n      return data.slice().map((item: any, index: number) => ({\n        ...item,\n        color: getColor(index),\n      }));\n    }, [highlightId]);\n\n  const listItems = dataWithColors(income)\n    .slice()\n    .map((item, i) => ({\n      id: `${i}`,\n      color: item.color,\n      category: item.label,\n      label: `${Math.floor((item.angle * totalParticipants) / 100)} Recipients`,\n      value: item.subLabel,\n    }));\n\n  const handleHighlightChange = (label?: string) => {\n    timers.map(clearTimeout);\n    timers.push(\n      setTimeout(() => {\n        setHighlightId(label);\n      }, 10),\n    );\n  };\n\n  return (\n    <div className=\"pv3\">\n      <Heading>Income</Heading>\n      <div className=\"flex flex-wrap items-center mb4\">\n        <div className=\"w-40 pv4\">\n          <div className=\"flex items-center justify-between\">\n            <RadialChart\n              colorType=\"literal\"\n              data={dataWithColors(income)}\n              width={300}\n              height={300}\n              innerRadius={85}\n              radius={120}\n              animation\n              style={{\n                boxShadow: shadows.card,\n              }}\n              onValueMouseOver={(v: any) => {\n                handleHighlightChange(\n                  income.find(item => item.label === v.label).label,\n                );\n              }}\n              onSeriesMouseOut={() => {\n                handleHighlightChange();\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"w-60\">\n          <List\n            items={listItems}\n            highlightId={highlightId}\n            onHighlight={handleHighlightChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Income;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { colors } from \"../../../design-system\";\n\ninterface Props {}\n\nconst H2 = styled.h2({\n  fontSize: \"1rem\",\n  color: colors.coldWater,\n});\n\nconst Heading: React.FunctionComponent<Props> = props => {\n  return <H2 {...props} />;\n};\n\nexport default Heading;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;AC9CA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AAjBA;AACA;AAkBA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAJA;AASA;AACA;AACA;AAAA;AAHA;AAZA;AAoBA;AACA;AAAA;AAAA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AAvBA;AACA;AAwBA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AACA;AAOA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}