{"version":3,"file":"static/webpack/static/development/pages/report.js.d218116713050f14b6ce.hot-update.js","sources":["webpack:///./components/Metrics/Income/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport chroma from \"chroma-js\";\nimport { RadialChart, Hint } from \"react-vis\";\nimport { colors } from \"../../../design-system\";\nimport { isEmpty } from \"lodash\";\nimport {\n  totalParticipants,\n  income,\n} from \"../../../content/ambassadors-report/metrics\";\nimport Tip from \"../../../components/Tip\";\n\n// Brighten/darken every other item\nconst colorRange = income.map((_, i) =>\n  chroma(colors.green)\n    [i % 2 == 0 ? \"darken\" : \"brighten\"](0.3 * i)\n    .css(),\n);\n\ninterface Props {}\nconst Income: React.FC<Props> = () => {\n  const [value, setValue]: any = React.useState({});\n\n  return (\n    <div>\n      <p>Income Metrics</p>\n      <div className=\"flex flex-wrap\">\n        <div className=\"w-50\">\n          <RadialChart\n            colorRange={colorRange}\n            data={income}\n            width={300}\n            height={300}\n            innerRadius={90}\n            radius={120}\n            showLabels\n            labelsStyle={{\n              fill: colors.coldWater,\n            }}\n            onValueMouseOver={(v: any) => {\n              setValue({\n                data: v,\n                title: income.find(item => item.label === v.label).label,\n                metrics: [\n                  {\n                    label: \"Total\",\n                    value: Math.floor(\n                      totalParticipants *\n                        (income.find(item => item.label === v.label).angle *\n                          0.01),\n                    ),\n                  },\n                  {\n                    label: \"Percentage\",\n                    value: `${\n                      income.find(item => item.label === v.label).angle\n                    }%`,\n                  },\n                ],\n              });\n            }}\n            onSeriesMouseOut={(v: any) => setValue({})}\n          >\n            {!isEmpty(value) && (\n              <Hint value={value.data}>\n                <Tip title={value.title} metrics={value.metrics} />\n              </Hint>\n            )}\n          </RadialChart>\n          <div>\n            <p>list</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Income;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAJA;AASA;AACA;AACA;AAAA;AAHA;AAZA;AAoBA;AACA;AAAA;AAAA;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;A","sourceRoot":""}