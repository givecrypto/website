{"version":3,"file":"static/webpack/static/development/pages/report.js.f6a47d35f2ef14579c09.hot-update.js","sources":["webpack:///./components/Metrics/Income/index.tsx","webpack:///./components/Metrics/components/List.tsx","webpack:///./components/Metrics/components/Swatch.tsx"],"sourcesContent":["import * as React from \"react\";\nimport chroma from \"chroma-js\";\nimport { RadialChart } from \"react-vis\";\nimport { colors, shadows } from \"../../../design-system\";\nimport List from \"../components/List\";\nimport {\n  income,\n  totalParticipants,\n} from \"../../../content/ambassadors-report/metrics\";\nimport { isNil } from \"lodash\";\nimport Heading from \"../../../components/Heading\";\n\ninterface Props {}\nconst Income: React.FC<Props> = () => {\n  const [highlightId, setHighlightId]: any = React.useState(null);\n  // Hold on to any timers\n  const timers = [];\n\n  const dataWithColors = (data: any) =>\n    React.useMemo(() => {\n      // Get the color for each item\n      const getColor = (index: number) => {\n        const colorScale = chroma\n          .scale([colors.green, colors.greenDark])\n          .mode(\"rgb\")\n          .colors(data.length);\n\n        if (isNil(highlightId)) {\n          return colorScale[index];\n        } else {\n          return index === data.findIndex(a => a.label === highlightId)\n            ? chroma.mix(colorScale[index], colors.coldWater).css()\n            : colorScale[index];\n        }\n      };\n\n      // Return the item and inject the correct color\n      return data.slice().map((item: any, index: number) => ({\n        ...item,\n        color: getColor(index),\n      }));\n    }, [highlightId]);\n\n  const listItems = dataWithColors(income)\n    .slice()\n    .map((item, i) => ({\n      id: `${i}`,\n      color: item.color,\n      category: item.label,\n      label: `${Math.floor((item.angle * totalParticipants) / 100)} Recipients`,\n      value: item.subLabel,\n    }));\n\n  const handleHighlightChange = (label?: string) => {\n    timers.map(clearTimeout);\n    timers.push(\n      setTimeout(() => {\n        setHighlightId(label);\n      }, 10),\n    );\n  };\n\n  return (\n    <div className=\"pv3\">\n      <Heading>Income</Heading>\n      <div className=\"flex flex-wrap items-center mb4\">\n        <div className=\"w-40 pv4\">\n          <div className=\"flex items-center justify-center\">\n            <RadialChart\n              colorType=\"literal\"\n              data={dataWithColors(income)}\n              width={300}\n              height={300}\n              innerRadius={85}\n              radius={120}\n              animation\n              style={{\n                boxShadow: shadows.card,\n              }}\n              onValueMouseOver={(v: any) => {\n                handleHighlightChange(\n                  income.find(item => item.label === v.label).label,\n                );\n              }}\n              onSeriesMouseOut={() => {\n                handleHighlightChange();\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"w-60\">\n          <List\n            items={listItems}\n            highlightId={highlightId}\n            onHighlight={handleHighlightChange}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Income;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { colors, shadows } from \"../../../design-system\";\nimport Swatch from \"./Swatch\";\n\ninterface Item {\n  id: string;\n  color: string;\n  category: string;\n  label: string;\n  value: string;\n}\n\ninterface ItemProps {\n  item: Item;\n  highlightId: string;\n  onMouseOver: () => void | null;\n  onMouseOut: () => void | null;\n}\n\nconst ListItemContainer = styled.div(({ fade }: any) => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"space-between\",\n  alignItems: \"center\",\n  padding: \"0 1.2rem\",\n  transition: \"all 200ms ease\",\n  borderBottom: `1px solid ${colors.greyLightest}`,\n  \"&:last-child\": {\n    borderBottom: \"none\",\n  },\n  \"> *\": {\n    transition: \"all 200ms ease\",\n    opacity: fade ? 0.4 : 1,\n  },\n}));\nconst Left = styled.div({\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n});\nconst Right = styled.div({\n  display: \"flex\",\n  flexDirection: \"row\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  minWidth: \"40%\",\n  \"&:last-child\": {\n    textAlign: \"right\",\n  },\n});\n\nconst Category = styled.h3({\n  fontWeight: 500,\n  fontSize: \"0.9rem\",\n  color: colors.greyDark,\n  marginLeft: 10,\n});\nconst Label = styled.h4({\n  fontWeight: \"normal\",\n  fontSize: \"0.9rem\",\n  color: colors.grey,\n  marginLeft: 30,\n  padding: 0,\n  minWidth: 45,\n});\n\nconst ListItem: React.FC<ItemProps> = ({ item, highlightId, ...rest }) => {\n  return (\n    <ListItemContainer\n      fade={highlightId && highlightId !== item.category}\n      {...rest}\n    >\n      <Left>\n        <Swatch color={item.color} />\n        <Category>{item.category}</Category>\n      </Left>\n      <Right>\n        <Label>{item.label}</Label>\n        <Label>{item.value}</Label>\n      </Right>\n    </ListItemContainer>\n  );\n};\n\nconst ListContainer = styled.section({\n  display: \"flex\",\n  flexDirection: \"column\",\n  border: `1px solid ${colors.greyLightest}`,\n  borderRadius: 8,\n  boxShadow: shadows.card,\n});\n\ninterface Props {\n  items: Item[];\n  highlightId: string;\n  onHighlight: (label?: string) => void | null;\n}\nconst List: React.FC<Props> = ({ items, highlightId, onHighlight }) => {\n  return (\n    <ListContainer>\n      {items.map(item => {\n        console.log(item);\n        return (\n          <ListItem\n            item={item}\n            highlightId={highlightId}\n            onMouseOver={() => onHighlight(item.category)}\n            onMouseOut={() => onHighlight()}\n          />\n        );\n      })}\n    </ListContainer>\n  );\n};\n\nexport default List;\n","import * as React from \"react\";\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n  color: string;\n}\n\nconst Div = styled.div(({ color }: any) => ({\n  width: 15,\n  height: 15,\n  margin: 0,\n  padding: 0,\n  borderRadius: 4,\n  backgroundColor: color,\n  transition: \"background 200ms ease\",\n}));\n\nconst Swatch: React.FunctionComponent<Props> = props => {\n  return <Div {...props} />;\n};\n\nexport default Swatch;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAAA;AAIA;AAvBA;AACA;AAwBA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AACA;AAOA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtGA;AACA;AACA;AACA;AAiBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAXA;AAAA;AAgBA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AANA;AAWA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAYA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpHA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}